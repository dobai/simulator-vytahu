DEBUGPOR                                                                                                      PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    
                =1    41    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    42    i8255INA        equ     080h
  0081          =1    43    i8255INB        equ     081h
  0082          =1    44    i8255INC        equ     082h
  0083          =1    45    i8255INCW       equ     083h
  00C0          =1    46    i8255OUTA       equ     0c0h
  00C1          =1    47    i8255OUTB       equ     0c1h
  00C2          =1    48    i8255OUTC       equ     0c2h
  00C3          =1    49    i8255OUTCW      equ     0c3h
                =1    50    
                =1    51    ; bitovo adresovatelne bunky
                =1    52    ;               data    20h    ; toto vyuziva emulator
  0021          =1    53    INPORTB         data    21h    ; nutne kvoli emulatoru!!! 
  0022          =1    54    INPORTC         data    22h
  0023          =1    55    OUTPORTA        data    23h
  0024          =1    56    OUTPORTB        data    24h
  0025          =1    57    OUTPORTC        data    25h
  0026          =1    58    INPORTBold      data    26h
DEBUGPOR                                                                                                      PAGE 2

  0027          =1    59    CTRLREG         data    27h
  0028          =1    60    INPORTA         data    28h
                =1    61    ;               data    29h
  002A          =1    62    ERRFLOOR_U      data    2Ah
  002B          =1    63    ERRFLOOR_D      data    2Bh
  002C          =1    64    T_F                       data    2Ch
  002D          =1    65    T2_C                    data      2Dh      ;toto tu nemusi byt, netreba mi bitovo adresovate
                                                                               lne
  002E          =1    66    T0_C            data      2Eh
                =1    67    ;               data    2Fh  
                =1    68    ; general purpose RAM (including STACK)
  0030          =1    69    POSITION        data    30h
  0031          =1    70    LOWEST          data    31h
  0032          =1    71    HIGHEST         data    32h
  0033          =1    72    STOPTIMER       data    33h
  0034          =1    73    OUTPORTBold     data    34h
  0035          =1    74    ERRF1_C         data    35h
  0036          =1    75    ERRF2_C         data    36h
  0037          =1    76    ERRF3_C         data    37h
  0038          =1    77    ERRF4_C         data    38h
  0039          =1    78    ERRF12_C        data    39h
  003A          =1    79    ERRF23_C        data    3Ah
  003B          =1    80    ERRF34_C        data    3Bh
  003C          =1    81    G                           data    3Ch
  003D          =1    82    D1                  data    3Dh
  003E          =1    83    D2              data    3Eh
  003F          =1    84    ERRSKRH_C       data    3Fh
  0040          =1    85    ERRSKRD_C       data    40h 
  0041          =1    86    ERRSIG          data    41h
                =1    87       
  0042          =1    88    MSG_LEN                     data          42h
  0043          =1    89    MSG_PTR_L                   data          43h
  0044          =1    90    MSG_PTR_H                   data          44h
  0045          =1    91    MSG_PTR_REC               data    45h
                =1    92    
                =1    93                 
                =1    94    
                =1    95    
                =1    96    ;                       50h - vyssie - stack!
                =1    97    
                =1    98    
                =1    99    
  0060          =1   100    T0_F                    bit         T_F.0
  0062          =1   101    T2_F                    bit         T_F.2
  0061          =1   102    S_RI                          bit                 T_F.1
  0063          =1   103    TRE             bit     T_F.3
                =1   104    
  0051          =1   105    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1   106    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1   107    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1   108    ERRF4_U         bit     ERRFLOOR_U.4  
                =1   109    
  0052          =1   110    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1   111    ERRF23_U        bit     ERRFLOOR_U.3
  0054          =1   112    ERRF34_U        bit     ERRFLOOR_U.4   
                =1   113    
  0059          =1   114    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1   115    ERRF2_D         bit     ERRFLOOR_D.2
DEBUGPOR                                                                                                      PAGE 3

  005B          =1   116    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1   117    ERRF4_D         bit     ERRFLOOR_D.4   
                =1   118    
  0059          =1   119    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1   120    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1   121    ERRF34_D        bit     ERRFLOOR_D.3
                =1   122    
  0040          =1   123    STOPNOT         bit     INPORTA.0
  0041          =1   124    PKI1            bit     INPORTA.1
  0042          =1   125    PKI2            bit     INPORTA.2
  0043          =1   126    PKI3            bit     INPORTA.3
  0044          =1   127    PKI4            bit     INPORTA.4
  0045          =1   128    DOORCLSD        bit     INPORTA.5 
                =1   129    
  0009          =1   130    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   131    MB2             bit     INPORTB.2
  000B          =1   132    SKRH            bit     INPORTB.3
  000C          =1   133    SKRD            bit     INPORTB.4
  000D          =1   134    DP              bit     INPORTB.5
  000E          =1   135    DPZK            bit     INPORTB.6
  000F          =1   136    DPK             bit     INPORTB.7
                =1   137    
  0031          =1   138    MB1old          bit     INPORTBold.1
  0032          =1   139    MB2old          bit     INPORTBold.2
  0033          =1   140    SKRHold         bit     INPORTBold.3
  0034          =1   141    SKRDold         bit     INPORTBold.4
                =1   142    
  0010          =1   143    PI1             bit     INPORTC.0
  0011          =1   144    PI2D            bit     INPORTC.1
  0012          =1   145    PI2U            bit     INPORTC.2
  0013          =1   146    PI3D            bit     INPORTC.3
  0014          =1   147    PI3U            bit     INPORTC.4
  0015          =1   148    PI4             bit     INPORTC.5
                =1   149    
  0018          =1   150    KS              bit     OUTPORTA.0
  0019          =1   151    PKO1            bit     OUTPORTA.1
  001A          =1   152    PKO2            bit     OUTPORTA.2
  001B          =1   153    PKO3            bit     OUTPORTA.3
  001C          =1   154    PKO4            bit     OUTPORTA.4
                =1   155    
  0020          =1   156    UP              bit     OUTPORTB.0
  0021          =1   157    DOWN            bit     OUTPORTB.1
  0022          =1   158    FAST            bit     OUTPORTB.2
  0023          =1   159    SLOW            bit     OUTPORTB.3
  0024          =1   160    FLED1           bit     OUTPORTB.4
  0025          =1   161    FLED2           bit     OUTPORTB.5
  0026          =1   162    FLED3           bit     OUTPORTB.6
  0027          =1   163    FLED4           bit     OUTPORTB.7
                =1   164    
  0028          =1   165    PO1U            bit     OUTPORTC.0
  0028          =1   166    PO1D            bit     OUTPORTC.0
  0028          =1   167    PO1             bit     OUTPORTC.0
  0029          =1   168    PO2D            bit     OUTPORTC.1
  002A          =1   169    PO2U            bit     OUTPORTC.2
  002B          =1   170    PO3D            bit     OUTPORTC.3
  002C          =1   171    PO3U            bit     OUTPORTC.4
  002D          =1   172    PO4             bit     OUTPORTC.5
  002D          =1   173    PO4U            bit     OUTPORTC.5
DEBUGPOR                                                                                                      PAGE 4

  002D          =1   174    PO4D            bit     OUTPORTC.5
  002E          =1   175    LEDD            bit     OUTPORTC.6
  002F          =1   176    LEDU            bit     OUTPORTC.7
                =1   177    
  0038          =1   178    STOPPED         bit     CTRLREG.0
  0039          =1   179    DOORCLSDold     bit     CTRLREG.1
  003A          =1   180    UPold           bit     CTRLREG.2
  003B          =1   181    DOWNold         bit     CTRLREG.3
  003C          =1   182    FASTold         bit     CTRLREG.4
  003D          =1   183    SLOWold         bit     CTRLREG.5
                =1   184    
  00B6          =1   185    WRNOT           bit     0B6h        ; p3.6
  00B7          =1   186    RDNOT           bit     0B7h        ; p3.7
                =1   187    
                =1   188    ; bitove masky
                =1   189    ; 8255OUT 
                =1   190    ; port A
  0001          =1   191    bmKS              equ    00000001b
  0002          =1   192    bmPKO1            equ    00000010b
  0004          =1   193    bmPKO2            equ    00000100b
  0008          =1   194    bmPKO3            equ    00001000b
  0010          =1   195    bmPKO4            equ    00010000b
                =1   196    
                =1   197    ; port B
  0001          =1   198    bmUP              equ    00000001b
  0002          =1   199    bmDOWN            equ    00000010b
  0004          =1   200    bmFAST            equ    00000100b
  0008          =1   201    bmSLOW            equ    00001000b
  0010          =1   202    bmFLED1           equ    00010000b
  0020          =1   203    bmFLED2           equ    00100000b
  0040          =1   204    bmFLED3           equ    01000000b
  0080          =1   205    bmFLED4           equ    10000000b
                =1   206    
                =1   207    ; port C
  0001          =1   208    bmPO1             equ    00000001b
  0002          =1   209    bmPO2D            equ    00000010b
  0004          =1   210    bmPO2U            equ    00000100b
  0008          =1   211    bmPO3D            equ    00001000b
  0010          =1   212    bmPO3U            equ    00010000b
  0020          =1   213    bmPO4             equ    00100000b
  0040          =1   214    bmLEDD            equ    01000000b
  0080          =1   215    bmLEDU            equ    10000000b
                =1   216    
                =1   217    ; 8255IN
                =1   218    ; port A
  0001          =1   219    bmSTOP            equ    00000001b
  0002          =1   220    bmPKI1            equ    00000010b
  0004          =1   221    bmPKI2            equ    00000100b
  0008          =1   222    bmPKI3            equ    00001000b
  0010          =1   223    bmPKI4            equ    00010000b
  0020          =1   224    bmDOORCLSD        equ    00100000b
                =1   225    
                =1   226    ; port B
  0002          =1   227    bmMB1I            equ    00000010b
  0004          =1   228    bmMB2I            equ    00000100b
  0008          =1   229    bmSKRHI           equ    00001000b
  0010          =1   230    bmSKRHD           equ    00010000b
  0020          =1   231    bmDPI             equ    00100000b
DEBUGPOR                                                                                                      PAGE 5

  0040          =1   232    bmDPZKI           equ    01000000b
  0080          =1   233    bmDPKI            equ    10000000b
                =1   234    
                =1   235    ; port C
  0001          =1   236    bmPI1             equ    00000001b
  0002          =1   237    bmPI2D            equ    00000010b
  0004          =1   238    bmPI2U            equ    00000100b
  0008          =1   239    bmPI3D            equ    00001000b
  0010          =1   240    bmPI3U            equ    00010000b
  0020          =1   241    bmPI4             equ    00100000b
                =1   242    
                =1   243    $include (macroLib.inc)
                =1   244    ;*******************************************************************************
                =1   245    ;   Sofrverovy breakpoint
                =1   246    ;-------------------------------------------------------------------------------
                =1   247    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   248    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   249    ;     nastaveny na hodnotu <INT1>
                =1   250    ;
                =1   251    ;     Emulator -> Configuration -> Single step interrupt
                =1   252    ;
                =1   253    _BP_    MACRO 
                =1   254            clr     P3.3
                =1   255            setb    EX1
                =1   256            nop
                =1   257    ENDM
                =1   258    
                =1   259    
                =1   260    ;*******************************************************************************
                =1   261    ;   CFCSS - kontrolne instrukcie
                =1   262    ;-------------------------------------------------------------------------------
                =1   263    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   264    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   265    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   266    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   267    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   268    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   269    ;
                =1   270    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   271            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   272            IF (Dx <> -1)
                =1   273                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   274                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   275            ENDIF    
                =1   276            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   277            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   278            IF (D1val <> -1)
                =1   279                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   280            ELSE
                =1   281                mov         D1, #32        ;; Nastavenie priznaku <D1> na hodnotu mimo rozsahu 
                                                                               
                =1   282            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   283            IF (D2val <> -1)
                =1   284                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   285            ELSE
                =1   286                mov         D2, #32        ;; Nastavenie priznaku <D2> na hodnotu mimo rozsahu 
                                                                               
DEBUGPOR                                                                                                      PAGE 6

                =1   287            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   288            mov       A, #s
                =1   289            lcall     PRINTCHAR        ;; Vypis aktualneho <s> na seriovu linku
                =1   290    ENDM
                =1   291    
                =1   292    
                =1   293    ;*******************************************************************************
                =1   294    ;   Instrukcie pre casovace a pocitadla
                =1   295    ;-------------------------------------------------------------------------------
                =1   296    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   297    ;     priznak <T2_F>    
                =1   298    ;
                =1   299    TIMER2  MACRO  VAL
                =1   300               mov           T2_C, #VAL                              ;; 3 sekundy
                =1   301                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   302                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   303    ENDM
                =1   304    
                =1   305    
                =1   306    
                =1   307    
                =1   308    ;*******************************************************************************
                =1   309    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   310    ;-------------------------------------------------------------------------------
                =1   311    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   312    ;
                =1   313    
                =1   314    ; Long jump if zero
                =1   315    LJZ     MACRO   NAVESTIE
                =1   316            jnz     $+5
                =1   317            ljmp    NAVESTIE
                =1   318            nop
                =1   319    ENDM
                =1   320    
                =1   321    ; Long jump if not zero
                =1   322    LJNZ    MACRO   NAVESTIE
                =1   323            jz      $+5
                =1   324            ljmp    NAVESTIE
                =1   325            nop
                =1   326    ENDM
                =1   327    
                =1   328    ; Long jump if bit set
                =1   329    LJB     MACRO   TESTBIT, NAVESTIE
                =1   330            jnb     TESTBIT, $+6
                =1   331            ljmp    NAVESTIE
                =1   332            nop
                =1   333    ENDM
                =1   334    
                =1   335    ; Long jump if bit not set
                =1   336    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   337            jb      TESTBIT, $+6
                =1   338            ljmp    NAVESTIE
                =1   339            nop
                =1   340    ENDM
                =1   341    
                =1   342    ; Compare & long jump if not equal
DEBUGPOR                                                                                                      PAGE 7

                =1   343    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   344            cjne    OP1, OP2, $+6
                =1   345            jmp     $+6
                =1   346            ljmp    NAVESTIE
                =1   347            nop
                =1   348    ENDM
                =1   349    
                =1   350    ; Long call if bit set
                =1   351    LCALLB  MACRO   TESTBIT, NAVESTIE
                =1   352            jnb     TESTBIT, $+6
                =1   353            lcall   NAVESTIE
                =1   354            nop
                =1   355    ENDM
                =1   356    
                =1   357    ;*******************************************************************************
                =1   358    ;   Modifikacie instrukcii x51
                =1   359    ;-------------------------------------------------------------------------------
                =1   360    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   361    ;
                =1   362    
                =1   363    ;Logical and (bit operands)
                =1   364    ANLB   MACRO   BIT1, BIT2
                =1   365            mov   C, BIT1
                =1   366            anl   C, /BIT2
                =1   367            mov   BIT1, C
                =1   368    ENDM
                =1   369    
                =1   370    ; Compare & long jump if equal
                =1   371    LCJE     MACRO   OP1, OP2, NAVESTIE
                =1   372            cjne    OP1, OP2, $+7
                =1   373            jmp    NAVESTIE
                =1   374            nop
                =1   375    ENDM
                =1   376    
                =1   377    
                =1   378    ;*******************************************************************************
                =1   379    ;   Privolavace, signalizácia polohy a smeru kabiny
                =1   380    ;-------------------------------------------------------------------------------
                =1   381    ;
                =1   382    ;   Signalizacia polohy kabiny
                =1   383    ;
                =1   384    ;     Signalizuje polohu kabiny na signalizacnom paneli.  
                =1   385    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   386    ;     Vykonane zmeny sa zapisu na porty     
                =1   387    ;
                =1   388    POLOHA_LED  MACRO  POLOHA
                =1   389            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   390            setb    FLED&POLOHA
                =1   391            lcall   WRITEPORTS
                =1   392    ENDM
                =1   393    
                =1   394    ;   Zrusenie volby vybraneho poschodia
                =1   395    ;
                =1   396    ;     Zrusi volbu vybraneho poschodia <POSCH>. Volba   
                =1   397    ;     sa zrusi v kabine ako aj v oboch smeroch na poschodi.
                =1   398    ;
                =1   399    ZRUS_POSCH  MACRO POSCH
DEBUGPOR                                                                                                      PAGE 8

                =1   400            clr     PKO&POSCH       ;; vynulovanie volby poschodia na ktorom stojim
                =1   401            clr     PO&POSCH&U      ;;
                =1   402            clr     PO&POSCH&D      ;;
                =1   403            lcall   WRITEPORTS
                =1   404    ENDM
                =1   405    
                =1   406    ;   Rozsvietenie kabinoveho svetla a smerovej signalizacie 
                =1   407    ;
                =1   408    ;     Rozsvieti kabinove svetlo a obe sibky smerovej
                =1   409    ;     signalizacie ak sa v kabine nachadza obsluhyschopna
                =1   410    ;     osoba. V opacnom pripade svetlo a signalizaciu
                =1   411    ;     zhasne.
                =1   412    ;
                =1   413    KABINOVE_SVETLO MACRO
                =1   414            mov      C, DP          ;; Ak je nieko v kabine,
                =1   415            orl      C, DPZK        ;;
                =1   416            orl      C, DPK         ;;
                =1   417            mov      KS, C          ;;   - v kabine zapalime svetlo. Ak nie, bude zhasnute.
                =1   418            mov      LEDU, C        ;;   - Rozsvietime signalizaciu do oboch smerov. Ak nie, zha
                                                                               sneme.
                =1   419            mov      LEDD, C        ;;
                =1   420            lcall   WRITEPORTS      ;;
                =1   421    ENDM
                =1   422    
                =1   423    ;   Rozsvieti obe smerove LED diody (signalizacia, ze kabina stoji)
                =1   424    ;
                =1   425    ROZSVIET_SMER_LED MACRO
                =1   426            setb    LEDU            ;
                =1   427            setb    LEDD            ;
                =1   428            lcall   WRITEPORTS      ;
                =1   429    ENDM
                =1   430    
                =1   431    ;   Zistenie, ci obsluhyschopna osoba zvolila poschodie
                =1   432    ;      
                =1   433    ;     Zistenie, či obsluhyschopna osoba v kabine vytahu 
                =1   434    ;     stlacila niektoru z volieb poschodi v kabine.
                =1   435    ;     V pripade, ze v kabine sa nachadza obsluhyschopna 
                =1   436    ;     osoba a volba zatial nebola uskutocnena, skoci sa 
                =1   437    ;     na <NAVESTIE>      
                =1   438    ;        
                =1   439    JE_VYBRATE_POSCHODIE MACRO NAVESTIE
                =1   440            mov      C, DP         ;; Ak sa nachadza v kabine osoba, 
                =1   441            orl      C, DPZK        ;;
                =1   442            orl      C, DPK         ;;
                =1   443            jnc      $+8            ;;
                =1   444            mov      A, INPORTA     ;;
                =1   445            anl      A, #00011110b  ;; ...a nie je vybrata ziadna volba (v kabine)
                =1   446            jz       NAVESTIE       ;; skoc na navestie
                =1   447    ENDM
                =1   448    
                =1   449    
                =1   450    ;*******************************************************************************
                =1   451    ;   Rychlost a smer pohybu motora
                =1   452    ;-------------------------------------------------------------------------------
                =1   453    ;
                =1   454    ;   Nastavenie smeru pohybu motora - hore
                =1   455    SET_UP MACRO
                =1   456            setb     UP
DEBUGPOR                                                                                                      PAGE 9

                =1   457            clr      DOWN
                =1   458            setb     LEDU
                =1   459            clr      LEDD 
                =1   460    ENDM
                =1   461    
                =1   462    ;   Nastavenie smeru pohybu motora - dole
                =1   463    SET_DOWN MACRO
                =1   464            clr     UP
                =1   465            setb    DOWN
                =1   466            clr     LEDU
                =1   467            setb    LEDD 
                =1   468    ENDM
                =1   469    
                =1   470    ;   Nastavenie rychlosti pohybu motora - rychlo
                =1   471    SET_FAST MACRO
                =1   472            setb     FAST
                =1   473            clr      SLOW
                =1   474            setb     KS      
                =1   475    ENDM
                =1   476    
                =1   477    ;   Nastavenie smeru pohybu motora - hore
                =1   478    SET_SLOW MACRO
                =1   479            setb     SLOW
                =1   480            clr      FAST
                =1   481            setb     KS
                =1   482    ENDM
                =1   483     
                =1   484      
                     485                       
                     486    
                     487    ; Definicie registrov pre Keil uVision
  00C8               488    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00C9               489    T2MOD  DATA  0C9H  ;TIMER 2 MODE
  00CA               490    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               491    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               492    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               493    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               494    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
  00A6               495    WDTRST DATA  0A6H  ;Watchdog timer
                     496    
                     497    
  0000               498    COUNT    SET    0
                     499    
                     500    ;*******************************************************************************
                     501    ;   Oznacenie poruchoveho poschodia 
                     502    ;-------------------------------------------------------------------------------
                     503    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     504    ;
                     505    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     506                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     507                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     508            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
DEBUGPOR                                                                                                      PAGE 10

                     509            COUNT    SET    COUNT+1                   
                     510            
                     511            jb      TESTBIT, ENDD&LABEL
                     512            jnb     PKI&POSCH, $+7
                     513            clr     FAST
                     514            setb    SLOW
                     515            setb    STOPPED         
                     516            setb    FLOORBIT&_U
                     517            setb    FLOORBIT&_D
                     518            inc     FLOORBIT&_C
                     519                    clr     PKO&POSCH                               ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     520            clr     PO&POSCH&U            
                     521            clr     PO&POSCH&D              
                     522                    lcall   WRITEPORTS
                     523            ljmp    NAVESTIE
                     524    ENDD&LABEL:
                     525            nop
                     526    ENDM
                     527    
                     528    ;*******************************************************************************
                     529    ;   Odstranenie oznacenia poruchoveho poschodia 
                     530    ;-------------------------------------------------------------------------------
                     531    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     532    ;
                     533    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     534            clr    FLOORBIT&_U
                     535            clr    FLOORBIT&_D
                     536            nop
                     537    ENDM
                     538    
                     539    ;*******************************************************************************
                     540    ;   Osetrenie zakmitov clonky
                     541    ;-------------------------------------------------------------------------------
                     542    ;        
                     543    ;
                     544    ZAKMITC MACRO   TYPCLONKY
                     545            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     546            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     547            jnb     TYPCLONKY, $-3  ; 
                     548            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     549    ENDM
                     550    
                     551    ZASTAV  MACRO  C_POSCH, SMER
                     552                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     553            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     554            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     555            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     556            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     557            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     558            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     559            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
DEBUGPOR                                                                                                      PAGE 11

                     560            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     561            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     562    ENDM
                     563    
                     564    NAJNIZSIE  MACRO
                     565            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     566            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     567            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     568    
                     569            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     570            ANLB    ACC.2, ERRF2_D  ; |
                     571            ANLB    ACC.3, ERRF2_D  ; |
                     572            ANLB    ACC.4, ERRF3_D  ; |
                     573            ;ANLB    ACC.5, ERRF3_D  ; |
                     574    
                     575            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     576     ; LL1: 
                     577            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     578            clr     C               ; Inak shiftnem o 2
                     579            rlc     A               ;
                     580            clr     C               ;
                     581            rlc     A               ;
                     582            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     583    ; LL2:
                     584            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     585    ENDM
                     586    
                     587    NAJVYSSIE  MACRO
                     588            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     589            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     590            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     591            
                     592            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     593            ANLB    ACC.3, ERRF2_U  ; |
                     594            ANLB    ACC.4, ERRF3_U  ; |
                     595            ANLB    ACC.5, ERRF3_U  ; |
                     596            ;ANLB    ACC.6, ERRF4_U  ; |
                     597            
                     598            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     599     ; LL1: 
                     600            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     601            clr     C               ; Inak shiftnem o 2
                     602            rrc     A               ;
                     603            clr     C               ;
                     604            rrc     A               ;
DEBUGPOR                                                                                                      PAGE 12

                     605            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     606    ; LL2:
                     607            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     608            clr     C               ;
                     609            subb    A, R0           ;
                     610    ENDM
                     611    
                     612    VYSSIE_KABINA  MACRO  POSCH
                     613            mov     A, INPORTA
                     614            anl     A, #00011110b
                     615            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     616            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     617            xrl     B, #0FFH
                     618            anl     A, B
                     619            clr     C
                     620            rrc     A
                     621    ;LL1    
                     622            mov     R0, #&POSCH
                     623            clr     C
                     624            rrc     A
                     625            djnz    R0, $-2;LL1
                     626    ENDM
                     627    
                     628    NIZSIE_KABINA  MACRO  POSCH
                     629            mov     A, #5
                     630            clr     C
                     631            subb    A, #&POSCH
                     632            mov     R0, A
                     633            mov     A, INPORTA
                     634            anl     A, #00011110b
                     635            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     636            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     637            xrl     B, #0FFH
                     638            anl     A, B
                     639            clr     C
                     640            rlc     A
                     641            clr     C
                     642            rlc     A
                     643            clr     C
                     644            rlc     A
                     645    ;LL1   
                     646            clr     C
                     647            rlc     A
                     648            djnz    R0, $-2;LL1
                     649    ENDM
                     650    
                     651    
                     652    
                     653    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               654    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     655                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     656                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
  0014               657    TIMER0CONST     equ     20      ; pouziva sa pri Timer0, ktory sluzi na rozblikanie LEDiek p
                                                                               ri poruche. Hodnota 20 je 1 sekunda (1=50
                                                                               ms)
                     658    ;osetrenie vektorov preruseni
DEBUGPOR                                                                                                      PAGE 13

0000                 659            org     0000h           ; adresa odkial startuje program po resete
0000 020033          660            ljmp    START           ; skok na zaciatok kodu programu
                     661            
000B                 662            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 02104E          663            ljmp    INT_TIMER0      ; pre casovac T0
                     664            
                     665            ;org      0023h           ; v tejto casti pamati je vektor prerusenia
                     666            ;           ljmp          SERIAL_INT              ; seriovej linky 
                     667        
002B                 668            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 021220          669                        ljmp    INT_TIMER2      ; pre casovac T2   
                     670                  
0033                 671            org     0033h           ; od tejto adresy sa zacina kod programu
                     672            
0033                 673    START:
0033                 674    RESET:  
                     675            ; riadiace signaly do pasivnej urovne 
0033 D2B6            676            setb    WRNOT
0035 D2B7            677            setb    RDNOT
0037 753300          678            mov     STOPTIMER, #0
003A 758150          679            mov     SP, #STACK
                     680    
                     681            ; pockame si na inicializaciu obvodov 8255  
003D 7900            682            mov     R1, #0 
003F 7AFF            683            mov     R2, #0ffh
0041 D9FE            684            djnz    R1, $
0043 DAFC            685            djnz    R2, $-2
                     686            
                     687            ; teraz ich mozeme nastavit
0045 75809B          688            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          689            mov     p2, #i8255INCW
004B C2B6            690            clr     WRNOT
004D 00              691            nop
004E 00              692            nop
004F 00              693            nop
0050 00              694            nop
0051 D2B6            695            setb    WRNOT
0053 758080          696            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          697            mov     p2, #i8255OUTCW
0059 C2B6            698            clr     WRNOT
005B 00              699            nop
005C 00              700            nop
005D 00              701            nop
005E 00              702            nop
005F D2B6            703            setb    WRNOT
                     704            
                     705            ; nastavenie preruseni 
0061 C28E            706            clr     TR1                 ; zastavi sa citac T1
0063 759852          707            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     708                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     709                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     710                                        ; RI=0 (prijimaci register - nebol prijaty znak)
                     711            ;mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu                    
                                                                                            <<< 
0066 758921          712            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     713                                        ; T1: mod 1 - 16 bitove pocitadlo
DEBUGPOR                                                                                                      PAGE 14

                     714                                        ; GATE=0 (programove riadenie casovaca)
                     715                                        ; C/T#=0 interne hodiny/12
                     716                                        ; T0: mod 1 - 16 bitove pocitadlo
                     717                                        ; GATE=0 (programove riadenie casovaca)
                     718                                        ; C/T#=0 interne hodiny/12
0069 758740          719            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006C 758B00          720            mov     TL1, #000h          ; inicializacia casovaca T1
006F 758DFA          721            mov     TH1, #0FAh          ; 
0072 758A00          722            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h            
                                                                                    <<<
0075 758C4C          723            mov     TH0, #04Ch                                      ;                           
                                                                                                                        
                                                                                   <<<
0078 75C800          724                        mov           T2CON,  #0                        ; Auto-reload mod
007B 75CA00          725                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
                                                                               592/12*1 = 0,9216 MHz
007E 75CB4C          726                        mov           RCAP2H, #4Ch;             ; (50ms)
0081 D2AD            727                        setb          ET2                                           ; Enable Tim
                                                                               er2 interrupt
                     728            
                     729            
                     730            
0083 D28C            731            setb    TR0                 ;                                                       
                                                                                            <<<
0085 C2A9            732            clr     ET0
0087 D28E            733            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     734            
                     735            
                     736            
                     737    
                     738    
                     739            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
0089 752800          740            mov     INPORTA, #0
008C 75211E          741            mov     INPORTB, #01eh      ; vsetky clonky pasivne
008F 752200          742            mov     INPORTC, #0
0092 75231E          743            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
0095 7524F0          744            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
0098 7525FF          745            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
009B D218            746            setb    KS
009D C238            747            clr     STOPPED
009F 1211A9          748            call    WRITEPORTS          ; zapis novu informaciu
                     749    
00A2 752300          750            mov     OUTPORTA, #0
00A5 752400          751            mov     OUTPORTB, #0
00A8 752500          752            mov     OUTPORTC, #0
00AB 1211A9          753            call    WRITEPORTS          ; zapis novu informaciu
                     754            
                     755            ;----------------------------------------------------
00AE 901281          756            mov     DPTR, #STR_RESET    ; vypis info 
00B1 121205          757            lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     758            
                     759 +1         TIMER2  200
00B4 752DC8          760 +1            mov           T2_C, #200                              
00B7 C262            761 +1                  clr       T2_F                                  
00B9 D2CA            762 +1                  setb      TR2                                             
DEBUGPOR                                                                                                      PAGE 15

00BB 3062FD          764            jnb               T2_F, $                               ; Uz presiel cas?
                     765            
00BE C221            766            clr     DOWN                ; ZASTAVIME KABINU
00C0 C222            767            clr     FAST                ; a rychlo
00C2 C223            768            clr     SLOW                ;                           
00C4 C220            769            clr     UP                  ;
00C6 1211A9          770            lcall   WRITEPORTS          ; zapis informaciu 
00C9 90126E          771            mov     DPTR, #STR_WDT      ; vypis info 
00CC 121205          772            lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
00CF 75A61E          773            mov     WDTRST, #01Eh
00D2 75A6E1          774            mov     WDTRST, #0E1h
                     775            
                     776            ;-----------------------------------------------------------------------------nekone
                                                                               cna slucka
                     777            ;jmp     $
                     778            ;-----------------------------------------------------------------------------
                     779            
                     780            ;----------------------------------------------------
                     781    
00D5 752800          782            mov     INPORTA, #0
00D8 752100          783            mov     INPORTB, #0         
00DB 752200          784            mov     INPORTC, #0
00DE 12113C          785            call    READPORTS           ; prvotne nacitanie udajov
                     786            
00E1 752A00          787            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00E4 752B00          788            mov     ERRFLOOR_D, #0h      
                     789    
                     790            
00E7 901247          791            mov     DPTR, #STR_INIT         ; vypis info 
00EA 1211E4          792            lcall   DISPSTR                 ; o inicializacii
                     793            
                     794                   
00ED                 795    CALIB:
                     796            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     797            ;setb    TR0
00ED 12113C          798            lcall   READPORTS                   ; precitaj, co je na portoch
00F0 300C13          799            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00F3 D221            800            setb    DOWN                        ; inak pod dole
00F5 D222            801            setb    FAST                        ; a rychlo
00F7 C223            802            clr     SLOW                        ;
00F9 C220            803            clr     UP                
00FB 1211A9          804            lcall   WRITEPORTS                  ; zapis informaciu 
00FE                 805    CALIBLOOP:
00FE 12113C          806            lcall   READPORTS                   ; 
0101 300C02          807            jnb     SKRD, CALIBEND              ; ak sme dole, konci
0104 80F8            808            jmp     CALIBLOOP
0106                 809    CALIBEND:                              
0106 C222            810            clr     FAST                        ; zastavime v tomto smere
0108 C221            811            clr     DOWN                        ;
010A D223            812            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
010C D220            813            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
010E 1211A9          814            lcall   WRITEPORTS 
0111                 815    CALIBEND2:
0111 12113C          816            lcall   READPORTS                   ; 
0114 2009FA          817            jb      MB1, CALIBEND2              ; 
0117 C223            818            clr     SLOW                        ; A teraz sme uz naozaj spravne
DEBUGPOR                                                                                                      PAGE 16

0119 C220            819            clr     UP                          ; 
011B D224            820            setb    FLED1
011D 1211A9          821            lcall   WRITEPORTS                  ; zapis informaciu
                     822            ;clr     TR0
                     823            ;_BP_
0120 901247          824            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
0123 1211E4          825            lcall   DISPSTR                     ;
0126                 826    MAIN:
                     827    
                     828    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     829    ; ****************************************************************************
                     830    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     831    ; ----------------------------------------------------------------------------
                     832    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     833    ; ----------------------------------------------------------------------------
                     834    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     835    ; ****************************************************************************
                     836    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                     837    ; ----------------------------------------------------------------------------
                     838    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     839    ; ----------------------------------------------------------------------------
                     840    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     841    ; ****************************************************************************
                     842    ; POSITION
                     843    ; ****************************************************************************
                     844    
                     845    
                     846    
                     847            ;mov     R5, #0
                     848            ;mov     R6, #20
0126 D2A9            849            setb    ET0;
                     850            
                     851            ;Inicializacia priznakov (CFCSS)
0128 753C1E          852            mov             G, #30
012B 753D00          853                        mov         D1, #0
012E 753E00          854            mov             D2, #0
0131 901418          855            mov   DPTR, #STR_CFC_START         ; vypis info 
0134 1211E4          856            lcall DISPSTR         ;
                     857                          
                     858    
                     859    
                     860    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     861    
0137                 862    FLOOR1:
                     863            ;--------------------------
                     864 +1         CFCSS     29, 3, -1, -1, D1
0137 633C03          865 +1         xrl             G,  #3             
                     866 +1         IF (D1 <> -1)
013A E53D            867 +1             mov   A,  D1         
013C 623C            868 +1             xrl   G,  A          
                     869 +1         ENDIF    
013E E53C            870 +1         mov   A,  G              
                     871 +2         LCJNE A,  #29, CFCERR     
0140 B41D03          872 +2         cjne    A, #29, $+6
0143 020149          873 +2         jmp     $+6
0146 02101C          874 +2         ljmp    CFCERR
0149 00              875 +2         nop
DEBUGPOR                                                                                                      PAGE 17

                     876 +1         IF (-1 <> -1)
                     877 +1             mov         D1, #-1     
                     878 +1         ELSE
014A 753D20          879 +1             mov         D1, #32        
                     880 +1         ENDIF                    
                     881 +1         IF (-1 <> -1)
                     882 +1             mov         D2, #-1     
                     883 +1         ELSE
014D 753E20          884 +1             mov         D2, #32        
                     885 +1         ENDIF                    
0150 741D            886 +1         mov       A, #29
0152 121237          887 +1         lcall     PRINTCHAR        
                     889            ;--------------------------
                     890 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0155 53240F          891 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0158 D224            892 +1         setb    FLED1
015A 1211A9          893 +1         lcall   WRITEPORTS
015D C238            895            clr     STOPPED
                     896 +1         TIMER2  60              ; (Timer - 3s)
015F 752D3C          897 +1            mov           T2_C, #60                              
0162 C262            898 +1                  clr       T2_F                                  
0164 D2CA            899 +1                  setb      TR2                                             
                     901 +1         ROZSVIET_SMER_LED
0166 D22F            902 +1         setb    LEDU            ;
0168 D22E            903 +1         setb    LEDD            ;
016A 1211A9          904 +1         lcall   WRITEPORTS      ;
016D 12113C          906    F1S:    lcall   READPORTS       ; nacitanie dat
                     907 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0170 200A03          908 +1         jb      MB2, $+6
0173 021002          909 +1         ljmp    ERRFLOOR
0176 00              910 +1         nop
                     912 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0177 200B03          913 +1         jb      SKRH, $+6
017A 021002          914 +1         ljmp    ERRFLOOR
017D 00              915 +1         nop
                     917 +1         ZRUS_POSCH 1
017E C219            918 +1         clr     PKO1       
0180 C228            919 +1         clr     PO1U      
0182 C228            920 +1         clr     PO1D      
0184 1211A9          921 +1         lcall   WRITEPORTS
0187 3062E3          923            jnb                T2_F, F1S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                     924 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
018A A20D            925 +1         mov      C, DP          
018C 720E            926 +1         orl      C, DPZK        
018E 720F            927 +1         orl      C, DPK         
0190 9218            928 +1         mov      KS, C          
0192 922F            929 +1         mov      LEDU, C        
0194 922E            930 +1         mov      LEDD, C        
0196 1211A9          931 +1         lcall   WRITEPORTS      
0199 200FD1          933            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
019C 3045CE          934            jnb     DOORCLSD, F1S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                     935 +1         JE_VYBRATE_POSCHODIE F1S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
019F A20D            936 +1         mov      C, DP         
DEBUGPOR                                                                                                      PAGE 18

01A1 720E            937 +1         orl      C, DPZK        
01A3 720F            938 +1         orl      C, DPK         
01A5 5006            939 +1         jnc      $+8            
01A7 E528            940 +1         mov      A, INPORTA     
01A9 541E            941 +1         anl      A, #00011110b  
01AB 60C0            942 +1         jz       F1S       
01AD                 944    F1C:        
01AD E528            945            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
01AF 852AF0          946            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
01B2 53F00C          947            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
01B5 63F0FF          948            xrl     B, #0FFH        ; | |
01B8 55F0            949            anl     A, B            ; | |
01BA 541C            950            anl     A, #00011100b   ; |
01BC 701A            951            jnz     F1OK            ; ak ano, podme na to
01BE E522            952            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
01C0 543E            953            anl     A, #00111110b   ;
                     954            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                     955 +1         ANLB    ACC.2, ERRF2_U  ; |
01C2 A2E2            956 +1         mov   C, ACC.2
01C4 B052            957 +1         anl   C, /ERRF2_U
01C6 92E2            958 +1         mov   ACC.2, C
                     960 +1         ANLB    ACC.3, ERRF3_U  ; |
01C8 A2E3            961 +1         mov   C, ACC.3
01CA B053            962 +1         anl   C, /ERRF3_U
01CC 92E3            963 +1         mov   ACC.3, C
                     965 +1         ANLB    ACC.4, ERRF3_U  ; |
01CE A2E4            966 +1         mov   C, ACC.4
01D0 B053            967 +1         anl   C, /ERRF3_U
01D2 92E4            968 +1         mov   ACC.4, C
                     970            ;ANLB    ACC.5, ERRF4_U  ; |
01D4 7002            971            jnz     F1OK            ; ak ano, podme na to
01D6 8095            972            jmp     F1S             ; Nemam sa kde hnut, opakujem
                     973 +1 F1OK:   SET_UP                  ; rychly pohyb hore
01D8 D220            974 +1         setb     UP
01DA C221            975 +1         clr      DOWN
01DC D22F            976 +1         setb     LEDU
01DE C22E            977 +1         clr      LEDD 
                     979 +1         SET_FAST                ; 
01E0 D222            980 +1         setb     FAST
01E2 C223            981 +1         clr      SLOW
01E4 D218            982 +1         setb     KS      
01E6 1211A9          984            lcall   WRITEPORTS      ; 
01E9 0201EC          985            jmp     UP1             ; prejdi do stavu UP1
                     986            
                     987            
01EC                 988    UP1:
                     989            ;--------------------------
                     990 +1         CFCSS     20, 9, 27, -1, -1
01EC 633C09          991 +1         xrl             G,  #9             
                     992 +1         IF (-1 <> -1)
                     993 +1             mov   A,  -1         
                     994 +1             xrl   G,  A          
                     995 +1         ENDIF    
01EF E53C            996 +1         mov   A,  G              
                     997 +2         LCJNE A,  #20, CFCERR     
01F1 B41403          998 +2         cjne    A, #20, $+6
DEBUGPOR                                                                                                      PAGE 19

01F4 0201FA          999 +2         jmp     $+6
01F7 02101C         1000 +2         ljmp    CFCERR
01FA 00             1001 +2         nop
                    1002 +1         IF (27 <> -1)
01FB 753D1B         1003 +1             mov         D1, #27     
                    1004 +1         ELSE
                    1005 +1             mov         D1, #32        
                    1006 +1         ENDIF                    
                    1007 +1         IF (-1 <> -1)
                    1008 +1             mov         D2, #-1     
                    1009 +1         ELSE
01FE 753E20         1010 +1             mov         D2, #32        
                    1011 +1         ENDIF                    
0201 7414           1012 +1         mov       A, #20
0203 121237         1013 +1         lcall     PRINTCHAR        
                    1015            ;--------------------------
                    1016 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0206 53240F         1017 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0209 D224           1018 +1         setb    FLED1
020B 1211A9         1019 +1         lcall   WRITEPORTS
                    1021 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
020E 121094         1022 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0211 12113C         1023 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0214 3009FA         1024 +1         jnb     MB1, $-3  ; 
0217 121094         1025 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
021A 12113C         1027    UP1A:   lcall   READPORTS       ; nacitanie dat
                    1028 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
021D 200B03         1029 +1         jb      SKRH, $+6
0220 020FE9         1030 +1         ljmp    ERR_SKRH
0223 00             1031 +1         nop
                    1033 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1034 +1                                                                                             
                                                                                                                 
                    1035 +1                                                                                             
                                                                                                                 
                    1036 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001              1037 +1         COUNT    SET    COUNT+1                   
                    1038 +1         
0224 20091B         1039 +1         jb      MB1, ENDD0
0227 304204         1040 +1         jnb     PKI2, $+7
022A C222           1041 +1         clr     FAST
022C D223           1042 +1         setb    SLOW
022E D238           1043 +1         setb    STOPPED         
0230 D252           1044 +1         setb    ERRF12_U
0232 D259           1045 +1         setb    ERRF12_D
0234 0539           1046 +1         inc     ERRF12_C
0236 C21A           1047 +1                 clr     PKO2                               
0238 C22A           1048 +1         clr     PO2U            
023A C229           1049 +1         clr     PO2D              
023C 1211A9         1050 +1                 lcall   WRITEPORTS
023F 020534         1051 +1         ljmp    UP2
0242                1052 +1 ENDD0:
0242 00             1053 +1         nop
0243 200AD4         1055            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
DEBUGPOR                                                                                                      PAGE 20

                    1056 +1         CLR_FLOOR_ERR   ERRF12
0246 C252           1057 +1         clr    ERRF12_U
0248 C259           1058 +1         clr    ERRF12_D
024A 00             1059 +1         nop
                    1061 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
024B 121094         1062 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
024E 12113C         1063 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0251 300AFA         1064 +1         jnb     MB2, $-3  ; 
0254 121094         1065 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1067            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0257 1211A9         1068            lcall   WRITEPORTS      ;
025A 02025D         1069            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                    1070            
                    1071            
025D                1072    UP1_MB2:
                    1073            ;--------------------------
                    1074 +1         CFCSS     2, 22, 13, -1, -1
025D 633C16         1075 +1         xrl             G,  #22             
                    1076 +1         IF (-1 <> -1)
                    1077 +1             mov   A,  -1         
                    1078 +1             xrl   G,  A          
                    1079 +1         ENDIF    
0260 E53C           1080 +1         mov   A,  G              
                    1081 +2         LCJNE A,  #2, CFCERR     
0262 B40203         1082 +2         cjne    A, #2, $+6
0265 02026B         1083 +2         jmp     $+6
0268 02101C         1084 +2         ljmp    CFCERR
026B 00             1085 +2         nop
                    1086 +1         IF (13 <> -1)
026C 753D0D         1087 +1             mov         D1, #13     
                    1088 +1         ELSE
                    1089 +1             mov         D1, #32        
                    1090 +1         ENDIF                    
                    1091 +1         IF (-1 <> -1)
                    1092 +1             mov         D2, #-1     
                    1093 +1         ELSE
026F 753E20         1094 +1             mov         D2, #32        
                    1095 +1         ENDIF                    
0272 7402           1096 +1         mov       A, #2
0274 121237         1097 +1         lcall     PRINTCHAR        
                    1099            ;--------------------------
                    1100 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
0277 121094         1101 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
027A 12113C         1102 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
027D 300AFA         1103 +1         jnb     MB2, $-3  ; 
0280 121094         1104 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0283 12113C         1106    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                    1107 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0286 200B03         1108 +1         jb      SKRH, $+6
0289 020FE9         1109 +1         ljmp    ERR_SKRH
028C 00             1110 +1         nop
                    1112            ; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na zastavovaciu) <<<
                    1113 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
                    1114 +1                                                                                             
                                                                                                                 
                    1115 +1                                                                                             
DEBUGPOR                                                                                                      PAGE 21

                                                                                                                 
                    1116 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002              1117 +1         COUNT    SET    COUNT+1                   
                    1118 +1         
028D 20091B         1119 +1         jb      MB1, ENDD1
0290 304204         1120 +1         jnb     PKI2, $+7
0293 C222           1121 +1         clr     FAST
0295 D223           1122 +1         setb    SLOW
0297 D238           1123 +1         setb    STOPPED         
0299 D252           1124 +1         setb    ERRF12_U
029B D259           1125 +1         setb    ERRF12_D
029D 0539           1126 +1         inc     ERRF12_C
029F C21A           1127 +1                 clr     PKO2                               
02A1 C22A           1128 +1         clr     PO2U            
02A3 C229           1129 +1         clr     PO2D              
02A5 1211A9         1130 +1                 lcall   WRITEPORTS
02A8 020534         1131 +1         ljmp    UP2
02AB                1132 +1 ENDD1:
02AB 00             1133 +1         nop
02AC 200AD4         1135            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                    1136 +1         CLR_FLOOR_ERR   ERRF12   
02AF C252           1137 +1         clr    ERRF12_U
02B1 C259           1138 +1         clr    ERRF12_D
02B3 00             1139 +1         nop
                    1141            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
02B4 1211A9         1142            lcall   WRITEPORTS      ;   
                    1143 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
02B7 121094         1144 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
02BA 12113C         1145 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
02BD 300AFA         1146 +1         jnb     MB2, $-3  ; 
02C0 121094         1147 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1149    
02C3                1150    UP1_MB2_CFC:     
                    1151            ;--------------------------
                    1152 +1         CFCSS     12, 14, -1, -1, -1
02C3 633C0E         1153 +1         xrl             G,  #14             
                    1154 +1         IF (-1 <> -1)
                    1155 +1             mov   A,  -1         
                    1156 +1             xrl   G,  A          
                    1157 +1         ENDIF    
02C6 E53C           1158 +1         mov   A,  G              
                    1159 +2         LCJNE A,  #12, CFCERR     
02C8 B40C03         1160 +2         cjne    A, #12, $+6
02CB 0202D1         1161 +2         jmp     $+6
02CE 02101C         1162 +2         ljmp    CFCERR
02D1 00             1163 +2         nop
                    1164 +1         IF (-1 <> -1)
                    1165 +1             mov         D1, #-1     
                    1166 +1         ELSE
02D2 753D20         1167 +1             mov         D1, #32        
                    1168 +1         ENDIF                    
                    1169 +1         IF (-1 <> -1)
                    1170 +1             mov         D2, #-1     
                    1171 +1         ELSE
02D5 753E20         1172 +1             mov         D2, #32        
                    1173 +1         ENDIF                    
02D8 740C           1174 +1         mov       A, #12
DEBUGPOR                                                                                                      PAGE 22

02DA 121237         1175 +1         lcall     PRINTCHAR        
                    1177            ;--------------------------
                    1178 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    1179 +1                                         
02DD C3             1180 +1         clr     C                       
02DE 7400           1181 +1         mov     A, #0h                  
02E0 7212           1182 +1         orl     C, PI2U      
02E2 B00E           1183 +1         anl     C, /DPZK                
02E4 7242           1184 +1         orl     C, PKI2          
02E6 B052           1185 +1         anl     C, /ERRF2_U 
02E8 720F           1186 +1         orl     C, DPK                  
02EA 7238           1187 +1         orl     C, STOPPED              
02EC 3400           1188 +1         addc    A, #0h                  
02EE 704B           1190            jnz     U1_MB2C       ;-; Ak ano, zastav
                    1191 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
02F0 E522           1192 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
02F2 33             1193 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
02F3 547E           1194 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1195 +1         
                    1196 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1197 +2         ANLB    ACC.3, ERRF2_U  ; |
02F5 A2E3           1198 +2         mov   C, ACC.3
02F7 B052           1199 +2         anl   C, /ERRF2_U
02F9 92E3           1200 +2         mov   ACC.3, C
                    1201 +2         ANLB    ACC.4, ERRF3_U  ; |
02FB A2E4           1202 +2         mov   C, ACC.4
02FD B053           1203 +2         anl   C, /ERRF3_U
02FF 92E4           1204 +2         mov   ACC.4, C
                    1205 +2         ANLB    ACC.5, ERRF3_U  ; |
0301 A2E5           1206 +2         mov   C, ACC.5
0303 B053           1207 +2         anl   C, /ERRF3_U
0305 92E5           1208 +2         mov   ACC.5, C
                    1209 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1210 +1         
0307 7805           1211 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1212 +1  ; LL1: 
0309 6006           1213 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
030B C3             1214 +1         clr     C               ; Inak shiftnem o 2
030C 13             1215 +1         rrc     A               ;
030D C3             1216 +1         clr     C               ;
030E 13             1217 +1         rrc     A               ;
030F D8F8           1218 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1219 +1 ; LL2:
0311 7405           1220 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
0313 C3             1221 +1         clr     C               ;
0314 98             1222 +1         subb    A, R0           ;
                    1224 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
0315 B40203         1225 +1         cjne    A, #2, $+6
0318 02031E         1226 +1         jmp     $+6
031B 020345         1227 +1         ljmp    UP1_MB1
031E 00             1228 +1         nop
DEBUGPOR                                                                                                      PAGE 23

                    1230 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
031F E528           1231 +1         mov     A, INPORTA
0321 541E           1232 +1         anl     A, #00011110b
0323 852AF0         1233 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
0326 53F00C         1234 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0329 63F0FF         1235 +1         xrl     B, #0FFH
032C 55F0           1236 +1         anl     A, B
032E C3             1237 +1         clr     C
032F 13             1238 +1         rrc     A
                    1239 +1 ;LL1    
0330 7802           1240 +1         mov     R0, #2
0332 C3             1241 +1         clr     C
0333 13             1242 +1         rrc     A
0334 D8FC           1243 +1         djnz    R0, $-2;LL1
0336 6003           1245            jz      U1_MB2C         ; |   ak neni zastavujem         
0338 020345         1246            jmp     UP1_MB1          ; |   inak nezastavim        
033B D223           1247    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
033D C222           1248            clr     FAST            ; 
033F 1211A9         1249            lcall   WRITEPORTS      ;         
0342 02039A         1250            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1251            
                    1252            
0345                1253    UP1_MB1:
                    1254            ;--------------------------
                    1255 +1         CFCSS     6, 10, 9, 14, -1
0345 633C0A         1256 +1         xrl             G,  #10             
                    1257 +1         IF (-1 <> -1)
                    1258 +1             mov   A,  -1         
                    1259 +1             xrl   G,  A          
                    1260 +1         ENDIF    
0348 E53C           1261 +1         mov   A,  G              
                    1262 +2         LCJNE A,  #6, CFCERR     
034A B40603         1263 +2         cjne    A, #6, $+6
034D 020353         1264 +2         jmp     $+6
0350 02101C         1265 +2         ljmp    CFCERR
0353 00             1266 +2         nop
                    1267 +1         IF (9 <> -1)
0354 753D09         1268 +1             mov         D1, #9     
                    1269 +1         ELSE
                    1270 +1             mov         D1, #32        
                    1271 +1         ENDIF                    
                    1272 +1         IF (14 <> -1)
0357 753E0E         1273 +1             mov         D2, #14     
                    1274 +1         ELSE
                    1275 +1             mov         D2, #32        
                    1276 +1         ENDIF                    
035A 7406           1277 +1         mov       A, #6
035C 121237         1278 +1         lcall     PRINTCHAR        
                    1280            ;--------------------------
                    1281 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
035F 121094         1282 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0362 12113C         1283 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0365 300AFA         1284 +1         jnb     MB2, $-3  ; 
0368 121094         1285 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
036B 12113C         1287    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
DEBUGPOR                                                                                                      PAGE 24

                    1288 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
036E 200B03         1289 +1         jb      SKRH, $+6
0371 020FE9         1290 +1         ljmp    ERR_SKRH
0374 00             1291 +1         nop
                    1293 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1294 +1                                                                                             
                                                                                                                 
                    1295 +1                                                                                             
                                                                                                                 
                    1296 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1297 +1         COUNT    SET    COUNT+1                   
                    1298 +1         
0375 200A1B         1299 +1         jb      MB2, ENDD2
0378 304204         1300 +1         jnb     PKI2, $+7
037B C222           1301 +1         clr     FAST
037D D223           1302 +1         setb    SLOW
037F D238           1303 +1         setb    STOPPED         
0381 D252           1304 +1         setb    ERRF2_U
0383 D25A           1305 +1         setb    ERRF2_D
0385 0536           1306 +1         inc     ERRF2_C
0387 C21A           1307 +1                 clr     PKO2                               
0389 C22A           1308 +1         clr     PO2U            
038B C229           1309 +1         clr     PO2D              
038D 1211A9         1310 +1                 lcall   WRITEPORTS
0390 0205A9         1311 +1         ljmp    UP2_MB2
0393                1312 +1 ENDD2:
0393 00             1313 +1         nop
0394 2009D4         1315            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
0397 020534         1316            ljmp    UP2             ; |   inak nezastavim        
                    1317    
039A                1318    UP1_STOP:
                    1319            ;--------------------------
                    1320 +1         CFCSS     28, 16, 9, 20, -1
039A 633C10         1321 +1         xrl             G,  #16             
                    1322 +1         IF (-1 <> -1)
                    1323 +1             mov   A,  -1         
                    1324 +1             xrl   G,  A          
                    1325 +1         ENDIF    
039D E53C           1326 +1         mov   A,  G              
                    1327 +2         LCJNE A,  #28, CFCERR     
039F B41C03         1328 +2         cjne    A, #28, $+6
03A2 0203A8         1329 +2         jmp     $+6
03A5 02101C         1330 +2         ljmp    CFCERR
03A8 00             1331 +2         nop
                    1332 +1         IF (9 <> -1)
03A9 753D09         1333 +1             mov         D1, #9     
                    1334 +1         ELSE
                    1335 +1             mov         D1, #32        
                    1336 +1         ENDIF                    
                    1337 +1         IF (20 <> -1)
03AC 753E14         1338 +1             mov         D2, #20     
                    1339 +1         ELSE
                    1340 +1             mov         D2, #32        
                    1341 +1         ENDIF                    
03AF 741C           1342 +1         mov       A, #28
03B1 121237         1343 +1         lcall     PRINTCHAR        
                    1345            ;--------------------------
DEBUGPOR                                                                                                      PAGE 25

03B4 12113C         1346    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1347 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
03B7 200B03         1348 +1         jb      SKRH, $+6
03BA 020FE9         1349 +1         ljmp    ERR_SKRH
03BD 00             1350 +1         nop
                    1352 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1353 +1                                                                                             
                                                                                                                 
                    1354 +1                                                                                             
                                                                                                                 
                    1355 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1356 +1         COUNT    SET    COUNT+1                   
                    1357 +1         
03BE 200A1B         1358 +1         jb      MB2, ENDD3
03C1 304204         1359 +1         jnb     PKI2, $+7
03C4 C222           1360 +1         clr     FAST
03C6 D223           1361 +1         setb    SLOW
03C8 D238           1362 +1         setb    STOPPED         
03CA D252           1363 +1         setb    ERRF2_U
03CC D25A           1364 +1         setb    ERRF2_D
03CE 0536           1365 +1         inc     ERRF2_C
03D0 C21A           1366 +1                 clr     PKO2                               
03D2 C22A           1367 +1         clr     PO2U            
03D4 C229           1368 +1         clr     PO2D              
03D6 1211A9         1369 +1                 lcall   WRITEPORTS
03D9 0205A9         1370 +1         ljmp    UP2_MB2
03DC                1371 +1 ENDD3:
03DC 00             1372 +1         nop
03DD 2009D4         1374            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
03E0 C220           1375            clr     UP              ; zastav motor
03E2 D23A           1376            setb    UPOld           ;       (a zalohuj) 
03E4 C23B           1377            clr     DOWNOld         ;       (a zalohuj)
03E6 C222           1378            clr     FAST            ; 
03E8 1211A9         1379            lcall   WRITEPORTS      ; 
                    1380            ;---  Porucha 1 ---
                    1381            ;ljmp     UP2_MB2_PORUCHA1
                    1382            ;---  ---  ---  ---
03EB 0203EE         1383            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1384    
                    1385    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1386    
03EE                1387    FLOOR2:
                    1388            ;--------------------------
                    1389 +1         CFCSS     15, 26, 0, 30, D1
03EE 633C1A         1390 +1         xrl             G,  #26             
                    1391 +1         IF (D1 <> -1)
03F1 E53D           1392 +1             mov   A,  D1         
03F3 623C           1393 +1             xrl   G,  A          
                    1394 +1         ENDIF    
03F5 E53C           1395 +1         mov   A,  G              
                    1396 +2         LCJNE A,  #15, CFCERR     
03F7 B40F03         1397 +2         cjne    A, #15, $+6
03FA 020400         1398 +2         jmp     $+6
03FD 02101C         1399 +2         ljmp    CFCERR
0400 00             1400 +2         nop
                    1401 +1         IF (0 <> -1)
DEBUGPOR                                                                                                      PAGE 26

0401 753D00         1402 +1             mov         D1, #0     
                    1403 +1         ELSE
                    1404 +1             mov         D1, #32        
                    1405 +1         ENDIF                    
                    1406 +1         IF (30 <> -1)
0404 753E1E         1407 +1             mov         D2, #30     
                    1408 +1         ELSE
                    1409 +1             mov         D2, #32        
                    1410 +1         ENDIF                    
0407 740F           1411 +1         mov       A, #15
0409 121237         1412 +1         lcall     PRINTCHAR        
                    1414            ;--------------------------
                    1415 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
040C 53240F         1416 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
040F D225           1417 +1         setb    FLED2
0411 1211A9         1418 +1         lcall   WRITEPORTS
0414 C238           1420            clr     STOPPED
                    1421 +1         TIMER2  60              ; (Timer - 3s)
0416 752D3C         1422 +1            mov           T2_C, #60                              
0419 C262           1423 +1                  clr       T2_F                                  
041B D2CA           1424 +1                  setb      TR2                                             
                    1426 +1         ROZSVIET_SMER_LED
041D D22F           1427 +1         setb    LEDU            ;
041F D22E           1428 +1         setb    LEDD            ;
0421 1211A9         1429 +1         lcall   WRITEPORTS      ;
0424 12113C         1431    F2S:    lcall   READPORTS     ;-; nacitanie dat
                    1432 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0427 200A03         1433 +1         jb      MB2, $+6
042A 021002         1434 +1         ljmp    ERRFLOOR
042D 00             1435 +1         nop
                    1437 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
042E 200B03         1438 +1         jb      SKRH, $+6
0431 021002         1439 +1         ljmp    ERRFLOOR
0434 00             1440 +1         nop
                    1442 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0435 200C03         1443 +1         jb      SKRD, $+6
0438 021002         1444 +1         ljmp    ERRFLOOR
043B 00             1445 +1         nop
                    1447 +1         ZRUS_POSCH 2
043C C21A           1448 +1         clr     PKO2       
043E C22A           1449 +1         clr     PO2U      
0440 C229           1450 +1         clr     PO2D      
0442 1211A9         1451 +1         lcall   WRITEPORTS
0445 3062DC         1453            jnb                T2_F, F2S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    1454 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0448 A20D           1455 +1         mov      C, DP          
044A 720E           1456 +1         orl      C, DPZK        
044C 720F           1457 +1         orl      C, DPK         
044E 9218           1458 +1         mov      KS, C          
0450 922F           1459 +1         mov      LEDU, C        
0452 922E           1460 +1         mov      LEDD, C        
0454 1211A9         1461 +1         lcall   WRITEPORTS      
0457 200FCA         1463            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
045A 3045C7         1464            jnb     DOORCLSD, F2S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
DEBUGPOR                                                                                                      PAGE 27

                    1465 +1         JE_VYBRATE_POSCHODIE F2S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
045D A20D           1466 +1         mov      C, DP         
045F 720E           1467 +1         orl      C, DPZK        
0461 720F           1468 +1         orl      C, DPK         
0463 5006           1469 +1         jnc      $+8            
0465 E528           1470 +1         mov      A, INPORTA     
0467 541E           1471 +1         anl      A, #00011110b  
0469 60B9           1472 +1         jz       F2S       
                    1474            ;clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
                    1475            ;clr     PO2U            ;
                    1476            ;clr     PO2D            ;
                    1477            ;lcall   WRITEPORTS      ;
                    1478            ;jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1479            ;_BP_
046B 782A           1480            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
046D 79F8           1481            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
046F 7AF8           1482            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
0471 203A0A         1483            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
0474 E9             1484            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
0475 F4             1485            cpl     A               ;       |
0476 F9             1486            mov     R1, A           ;       |
0477 EA             1487            mov     A, R2           ;       A znegujeme aj masku sachty
0478 F4             1488            cpl     A               ;       |
0479 FA             1489            mov     R2, A           ;       |  
047A E8             1490            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
047B 6401           1491            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
047D F8             1492            mov     R0, A           ;       |  
047E                1493    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
047E E528           1494            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0480 86F0           1495            mov     B, @R0          ;  | Maskujem chybne poschodia
0482 53F00C         1496            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0485 63F0FF         1497            xrl     B, #0FFH        ;  |
0488 55F0           1498            anl     A, B            ;  |
048A 541A           1499            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
048C 59             1500            anl     A, R1           ;  | 
                    1501 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
048D 6003           1502 +1         jz      $+5
048F 020506         1503 +1         ljmp    F2
0492 00             1504 +1         nop
                    1506                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0493 E528           1507            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0495 86F0           1508            mov     B, @R0          ;  | Maskujem chybne poschodia
0497 53F00C         1509            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
049A 63F0FF         1510            xrl     B, #0FFH        ;  | |
049D 55F0           1511            anl     A, B            ;  | |
049F 541A           1512            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
04A1 7021           1513            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
04A3 E522           1514            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
DEBUGPOR                                                                                                      PAGE 28

04A5 5439           1515            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
04A7 5A             1516            anl     A, R2           ;  |   
04A8 86F0           1517            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1518            ;ANLB    ACC.0, B.1      ;  | 
                    1519 +1         ANLB    ACC.1, B.2      ;  | 
04AA A2E1           1520 +1         mov   C, ACC.1
04AC B0F2           1521 +1         anl   C, /B.2
04AE 92E1           1522 +1         mov   ACC.1, C
                    1524 +1         ANLB    ACC.2, B.2      ;  |
04B0 A2E2           1525 +1         mov   C, ACC.2
04B2 B0F2           1526 +1         anl   C, /B.2
04B4 92E2           1527 +1         mov   ACC.2, C
                    1529 +1         ANLB    ACC.3, B.3      ;  |
04B6 A2E3           1530 +1         mov   C, ACC.3
04B8 B0F3           1531 +1         anl   C, /B.3
04BA 92E3           1532 +1         mov   ACC.3, C
                    1534 +1         ANLB    ACC.4, B.3      ;  |
04BC A2E4           1535 +1         mov   C, ACC.4
04BE B0F3           1536 +1         anl   C, /B.3
04C0 92E4           1537 +1         mov   ACC.4, C
                    1539            ;ANLB    ACC.5, B.4      ;  |
04C2 7042           1540            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1541            ; Pohyb v opacnom smere (nevieme v ktorom)
04C4 E8             1542    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
04C5 6401           1543            xrl     A, #01h         ;  |
04C7 F8             1544            mov     R0, A           ;  |
04C8 B23A           1545            cpl     UPOld           ;  Znegujem stary posun
04CA B23B           1546            cpl     DOWNOld         ;  |
04CC E9             1547            mov     A, R1           ;  Znegujeme masky
04CD F4             1548            cpl     A               ;  |
04CE F9             1549            mov     R1, A           ;  |
04CF EA             1550            mov     A, R2           ;  |
04D0 F4             1551            cpl     A               ;  |
04D1 FA             1552            mov     R2, A           ;  |               
04D2 E528           1553            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
04D4 86F0           1554            mov     B, @R0          ;  | Maskujem chybne poschodia
04D6 53F00C         1555            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04D9 63F0FF         1556            xrl     B, #0FFH        ;  | |
04DC 55F0           1557            anl     A, B            ;  | |
04DE 541A           1558            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
04E0 59             1559            anl     A, R1           ;  | 
04E1 7023           1560            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04E3 E522           1561            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
04E5 5439           1562            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
04E7 5A             1563            anl     A, R2           ;  | 
04E8 86F0           1564            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1565            ;ANLB    ACC.0, B.1      ;  | 
                    1566 +1         ANLB    ACC.1, B.2      ;  | 
04EA A2E1           1567 +1         mov   C, ACC.1
04EC B0F2           1568 +1         anl   C, /B.2
04EE 92E1           1569 +1         mov   ACC.1, C
                    1571 +1         ANLB    ACC.2, B.2      ;  |
04F0 A2E2           1572 +1         mov   C, ACC.2
04F2 B0F2           1573 +1         anl   C, /B.2
DEBUGPOR                                                                                                      PAGE 29

04F4 92E2           1574 +1         mov   ACC.2, C
                    1576 +1         ANLB    ACC.3, B.3      ;  |
04F6 A2E3           1577 +1         mov   C, ACC.3
04F8 B0F3           1578 +1         anl   C, /B.3
04FA 92E3           1579 +1         mov   ACC.3, C
                    1581 +1         ANLB    ACC.4, B.3      ;  |
04FC A2E4           1582 +1         mov   C, ACC.4
04FE B0F3           1583 +1         anl   C, /B.3
0500 92E4           1584 +1         mov   ACC.4, C
                    1586            ;ANLB    ACC.5, B.4      ;  |
0502 7002           1587            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0504 8124           1588            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
0506 203A03         1589    F2:     jb      UPOld, F2UP     ;   
0509 020520         1590            jmp     F2DOWN          ;
                    1591 +1 F2UP:   SET_UP                  ; rychly pohyb hore
050C D220           1592 +1         setb     UP
050E C221           1593 +1         clr      DOWN
0510 D22F           1594 +1         setb     LEDU
0512 C22E           1595 +1         clr      LEDD 
                    1597 +1         SET_FAST                ; 
0514 D222           1598 +1         setb     FAST
0516 C223           1599 +1         clr      SLOW
0518 D218           1600 +1         setb     KS      
051A 1211A9         1602            lcall   WRITEPORTS      ;   
051D 020534         1603            jmp     UP2           ;-; prejdi do stavu UP2    
                    1604 +1 F2DOWN: SET_DOWN                  ; rychly pohyb dole
0520 C220           1605 +1         clr     UP
0522 D221           1606 +1         setb    DOWN
0524 C22F           1607 +1         clr     LEDU
0526 D22E           1608 +1         setb    LEDD 
                    1610 +1         SET_FAST                ; 
0528 D222           1611 +1         setb     FAST
052A C223           1612 +1         clr      SLOW
052C D218           1613 +1         setb     KS      
052E 1211A9         1615            lcall   WRITEPORTS      ; 
0531 02073E         1616            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1617            
                    1618                
0534                1619    UP2:
                    1620            ;--------------------------
                    1621 +1         CFCSS     8, 7, 18, 0, D1
0534 633C07         1622 +1         xrl             G,  #7             
                    1623 +1         IF (D1 <> -1)
0537 E53D           1624 +1             mov   A,  D1         
0539 623C           1625 +1             xrl   G,  A          
                    1626 +1         ENDIF    
053B E53C           1627 +1         mov   A,  G              
                    1628 +2         LCJNE A,  #8, CFCERR     
053D B40803         1629 +2         cjne    A, #8, $+6
0540 020546         1630 +2         jmp     $+6
0543 02101C         1631 +2         ljmp    CFCERR
0546 00             1632 +2         nop
                    1633 +1         IF (18 <> -1)
0547 753D12         1634 +1             mov         D1, #18     
                    1635 +1         ELSE
                    1636 +1             mov         D1, #32        
                    1637 +1         ENDIF                    
                    1638 +1         IF (0 <> -1)
DEBUGPOR                                                                                                      PAGE 30

054A 753E00         1639 +1             mov         D2, #0     
                    1640 +1         ELSE
                    1641 +1             mov         D2, #32        
                    1642 +1         ENDIF                    
054D 7408           1643 +1         mov       A, #8
054F 121237         1644 +1         lcall     PRINTCHAR        
                    1646            ;--------------------------
                    1647 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0552 53240F         1648 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0555 D225           1649 +1         setb    FLED2
0557 1211A9         1650 +1         lcall   WRITEPORTS
                    1652 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
055A 121094         1653 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
055D 12113C         1654 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0560 3009FA         1655 +1         jnb     MB1, $-3  ; 
0563 121094         1656 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0566 12113C         1658    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1659 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0569 200B03         1660 +1         jb      SKRH, $+6
056C 020FE9         1661 +1         ljmp    ERR_SKRH
056F 00             1662 +1         nop
                    1664 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1665 +1                                                                                             
                                                                                                                 
                    1666 +1                                                                                             
                                                                                                                 
                    1667 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1668 +1         COUNT    SET    COUNT+1                   
                    1669 +1         
0570 20091B         1670 +1         jb      MB1, ENDD4
0573 304304         1671 +1         jnb     PKI3, $+7
0576 C222           1672 +1         clr     FAST
0578 D223           1673 +1         setb    SLOW
057A D238           1674 +1         setb    STOPPED         
057C D253           1675 +1         setb    ERRF23_U
057E D25A           1676 +1         setb    ERRF23_D
0580 053A           1677 +1         inc     ERRF23_C
0582 C21B           1678 +1                 clr     PKO3                               
0584 C22C           1679 +1         clr     PO3U            
0586 C22B           1680 +1         clr     PO3D              
0588 1211A9         1681 +1                 lcall   WRITEPORTS
058B 0209C9         1682 +1         ljmp    UP3
058E                1683 +1 ENDD4:
058E 00             1684 +1         nop
058F 200AD4         1686            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1687 +1         CLR_FLOOR_ERR   ERRF23
0592 C253           1688 +1         clr    ERRF23_U
0594 C25A           1689 +1         clr    ERRF23_D
0596 00             1690 +1         nop
                    1692 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0597 121094         1693 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
059A 12113C         1694 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
059D 300AFA         1695 +1         jnb     MB2, $-3  ; 
05A0 121094         1696 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
DEBUGPOR                                                                                                      PAGE 31

                                                                               zliezli)
                    1698            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
05A3 1211A9         1699            lcall   WRITEPORTS      ;
05A6 0205A9         1700            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1701            
                    1702            
05A9                1703    UP2_MB2:
                    1704            ;--------------------------
                    1705 +1         CFCSS     18, 26, 8, -1, D2
05A9 633C1A         1706 +1         xrl             G,  #26             
                    1707 +1         IF (D2 <> -1)
05AC E53E           1708 +1             mov   A,  D2         
05AE 623C           1709 +1             xrl   G,  A          
                    1710 +1         ENDIF    
05B0 E53C           1711 +1         mov   A,  G              
                    1712 +2         LCJNE A,  #18, CFCERR     
05B2 B41203         1713 +2         cjne    A, #18, $+6
05B5 0205BB         1714 +2         jmp     $+6
05B8 02101C         1715 +2         ljmp    CFCERR
05BB 00             1716 +2         nop
                    1717 +1         IF (8 <> -1)
05BC 753D08         1718 +1             mov         D1, #8     
                    1719 +1         ELSE
                    1720 +1             mov         D1, #32        
                    1721 +1         ENDIF                    
                    1722 +1         IF (-1 <> -1)
                    1723 +1             mov         D2, #-1     
                    1724 +1         ELSE
05BF 753E20         1725 +1             mov         D2, #32        
                    1726 +1         ENDIF                    
05C2 7412           1727 +1         mov       A, #18
05C4 121237         1728 +1         lcall     PRINTCHAR        
                    1730            ;--------------------------
                    1731 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
05C7 121094         1732 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05CA 12113C         1733 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05CD 300AFA         1734 +1         jnb     MB2, $-3  ; 
05D0 121094         1735 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
05D3 12113C         1737    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1738 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
05D6 200B03         1739 +1         jb      SKRH, $+6
05D9 020FE9         1740 +1         ljmp    ERR_SKRH
05DC 00             1741 +1         nop
                    1743 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT ; >>> CHYBA, Vypadla spomalovacia clonka
                                                                                (narazil som na zastavovaciu) <<<
                    1744 +1                                                                                             
                                                                                                                 
                    1745 +1                                                                                             
                                                                                                                 
                    1746 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1747 +1         COUNT    SET    COUNT+1                   
                    1748 +1         
05DD 20091B         1749 +1         jb      MB1, ENDD5
05E0 304304         1750 +1         jnb     PKI3, $+7
05E3 C222           1751 +1         clr     FAST
05E5 D223           1752 +1         setb    SLOW
05E7 D238           1753 +1         setb    STOPPED         
DEBUGPOR                                                                                                      PAGE 32

05E9 D253           1754 +1         setb    ERRF23_U
05EB D25A           1755 +1         setb    ERRF23_D
05ED 053A           1756 +1         inc     ERRF23_C
05EF C21B           1757 +1                 clr     PKO3                               
05F1 C22C           1758 +1         clr     PO3U            
05F3 C22B           1759 +1         clr     PO3D              
05F5 1211A9         1760 +1                 lcall   WRITEPORTS
05F8 0209C9         1761 +1         ljmp    UP3
05FB                1762 +1 ENDD5:
05FB 00             1763 +1         nop
05FC 200AD4         1765            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku? 
                    1766    ;----  Miesto chybneho skoku - porucha 1 ----        
05FF                1767    UP2_MB2_PORUCHA1: 
                    1768    ;---- ---- ---- ---- ---- ---- ---- 
                    1769 +1         CLR_FLOOR_ERR   ERRF23       
05FF C253           1770 +1         clr    ERRF23_U
0601 C25A           1771 +1         clr    ERRF23_D
0603 00             1772 +1         nop
                    1774            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0604 1211A9         1775            lcall   WRITEPORTS      ;
                    1776 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0607 121094         1777 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
060A 12113C         1778 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
060D 300AFA         1779 +1         jnb     MB2, $-3  ; 
0610 121094         1780 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1782            
0613                1783    UP2_MB2_CFC:     
                    1784            ;--------------------------
                    1785 +1         CFCSS     1, 19, -1, -1, -1
0613 633C13         1786 +1         xrl             G,  #19             
                    1787 +1         IF (-1 <> -1)
                    1788 +1             mov   A,  -1         
                    1789 +1             xrl   G,  A          
                    1790 +1         ENDIF    
0616 E53C           1791 +1         mov   A,  G              
                    1792 +2         LCJNE A,  #1, CFCERR     
0618 B40103         1793 +2         cjne    A, #1, $+6
061B 020621         1794 +2         jmp     $+6
061E 02101C         1795 +2         ljmp    CFCERR
0621 00             1796 +2         nop
                    1797 +1         IF (-1 <> -1)
                    1798 +1             mov         D1, #-1     
                    1799 +1         ELSE
0622 753D20         1800 +1             mov         D1, #32        
                    1801 +1         ENDIF                    
                    1802 +1         IF (-1 <> -1)
                    1803 +1             mov         D2, #-1     
                    1804 +1         ELSE
0625 753E20         1805 +1             mov         D2, #32        
                    1806 +1         ENDIF                    
0628 7401           1807 +1         mov       A, #1
062A 121237         1808 +1         lcall     PRINTCHAR        
                    1810            ;--------------------------        
                    1811 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1812 +1                                         
062D C3             1813 +1         clr     C                       
DEBUGPOR                                                                                                      PAGE 33

062E 7400           1814 +1         mov     A, #0h                  
0630 7214           1815 +1         orl     C, PI3U      
0632 B00E           1816 +1         anl     C, /DPZK                
0634 7243           1817 +1         orl     C, PKI3          
0636 B053           1818 +1         anl     C, /ERRF3_U 
0638 720F           1819 +1         orl     C, DPK                  
063A 7238           1820 +1         orl     C, STOPPED              
063C 3400           1821 +1         addc    A, #0h                  
063E 704B           1823            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1824 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0640 E522           1825 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0642 33             1826 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0643 547E           1827 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1828 +1         
                    1829 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1830 +2         ANLB    ACC.3, ERRF2_U  ; |
0645 A2E3           1831 +2         mov   C, ACC.3
0647 B052           1832 +2         anl   C, /ERRF2_U
0649 92E3           1833 +2         mov   ACC.3, C
                    1834 +2         ANLB    ACC.4, ERRF3_U  ; |
064B A2E4           1835 +2         mov   C, ACC.4
064D B053           1836 +2         anl   C, /ERRF3_U
064F 92E4           1837 +2         mov   ACC.4, C
                    1838 +2         ANLB    ACC.5, ERRF3_U  ; |
0651 A2E5           1839 +2         mov   C, ACC.5
0653 B053           1840 +2         anl   C, /ERRF3_U
0655 92E5           1841 +2         mov   ACC.5, C
                    1842 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1843 +1         
0657 7805           1844 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1845 +1  ; LL1: 
0659 6006           1846 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
065B C3             1847 +1         clr     C               ; Inak shiftnem o 2
065C 13             1848 +1         rrc     A               ;
065D C3             1849 +1         clr     C               ;
065E 13             1850 +1         rrc     A               ;
065F D8F8           1851 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1852 +1 ; LL2:
0661 7405           1853 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
0663 C3             1854 +1         clr     C               ;
0664 98             1855 +1         subb    A, R0           ;
                    1857 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
0665 B40303         1858 +1         cjne    A, #3, $+6
0668 02066E         1859 +1         jmp     $+6
066B 020695         1860 +1         ljmp    UP2_MB1
066E 00             1861 +1         nop
                    1863 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
066F E528           1864 +1         mov     A, INPORTA
0671 541E           1865 +1         anl     A, #00011110b
0673 852AF0         1866 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
DEBUGPOR                                                                                                      PAGE 34

0676 53F00C         1867 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0679 63F0FF         1868 +1         xrl     B, #0FFH
067C 55F0           1869 +1         anl     A, B
067E C3             1870 +1         clr     C
067F 13             1871 +1         rrc     A
                    1872 +1 ;LL1    
0680 7803           1873 +1         mov     R0, #3
0682 C3             1874 +1         clr     C
0683 13             1875 +1         rrc     A
0684 D8FC           1876 +1         djnz    R0, $-2;LL1
0686 6003           1878            jz      U2_MB2C         ; |   ak neni zastavujem  
0688 020695         1879            ljmp    UP2_MB1         ; |   inak nezastavim
068B D223           1880    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
068D C222           1881            clr     FAST            ; 
068F 1211A9         1882            lcall   WRITEPORTS      ;
0692 0206EA         1883            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    1884          
0695                1885    UP2_MB1:
                    1886            ;--------------------------
                    1887 +1         CFCSS     26, 27, 0, 17, -1
0695 633C1B         1888 +1         xrl             G,  #27             
                    1889 +1         IF (-1 <> -1)
                    1890 +1             mov   A,  -1         
                    1891 +1             xrl   G,  A          
                    1892 +1         ENDIF    
0698 E53C           1893 +1         mov   A,  G              
                    1894 +2         LCJNE A,  #26, CFCERR     
069A B41A03         1895 +2         cjne    A, #26, $+6
069D 0206A3         1896 +2         jmp     $+6
06A0 02101C         1897 +2         ljmp    CFCERR
06A3 00             1898 +2         nop
                    1899 +1         IF (0 <> -1)
06A4 753D00         1900 +1             mov         D1, #0     
                    1901 +1         ELSE
                    1902 +1             mov         D1, #32        
                    1903 +1         ENDIF                    
                    1904 +1         IF (17 <> -1)
06A7 753E11         1905 +1             mov         D2, #17     
                    1906 +1         ELSE
                    1907 +1             mov         D2, #32        
                    1908 +1         ENDIF                    
06AA 741A           1909 +1         mov       A, #26
06AC 121237         1910 +1         lcall     PRINTCHAR        
                    1912            ;--------------------------
                    1913 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
06AF 121094         1914 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
06B2 12113C         1915 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06B5 300AFA         1916 +1         jnb     MB2, $-3  ; 
06B8 121094         1917 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
06BB 12113C         1919    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    1920 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
06BE 200B03         1921 +1         jb      SKRH, $+6
06C1 020FE9         1922 +1         ljmp    ERR_SKRH
06C4 00             1923 +1         nop
                    1925 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia cl
                                                                               onka (narazil som na spomalovaciu) <<<
                    1926 +1                                                                                             
DEBUGPOR                                                                                                      PAGE 35

                                                                                                                 
                    1927 +1                                                                                             
                                                                                                                 
                    1928 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              1929 +1         COUNT    SET    COUNT+1                   
                    1930 +1         
06C5 200A1B         1931 +1         jb      MB2, ENDD6
06C8 304304         1932 +1         jnb     PKI3, $+7
06CB C222           1933 +1         clr     FAST
06CD D223           1934 +1         setb    SLOW
06CF D238           1935 +1         setb    STOPPED         
06D1 D253           1936 +1         setb    ERRF3_U
06D3 D25B           1937 +1         setb    ERRF3_D
06D5 0537           1938 +1         inc     ERRF3_C
06D7 C21B           1939 +1                 clr     PKO3                               
06D9 C22C           1940 +1         clr     PO3U            
06DB C22B           1941 +1         clr     PO3D              
06DD 1211A9         1942 +1                 lcall   WRITEPORTS
06E0 020A51         1943 +1         ljmp    UP3_MB2
06E3                1944 +1 ENDD6:
06E3 00             1945 +1         nop
06E4 2009D4         1947            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
06E7 0209C9         1948            ljmp    UP3             ; 
                    1949    
                    1950    
06EA                1951    UP2_STOP:
                    1952            ;--------------------------
                    1953 +1         CFCSS     4, 5, 9, 15, -1
06EA 633C05         1954 +1         xrl             G,  #5             
                    1955 +1         IF (-1 <> -1)
                    1956 +1             mov   A,  -1         
                    1957 +1             xrl   G,  A          
                    1958 +1         ENDIF    
06ED E53C           1959 +1         mov   A,  G              
                    1960 +2         LCJNE A,  #4, CFCERR     
06EF B40403         1961 +2         cjne    A, #4, $+6
06F2 0206F8         1962 +2         jmp     $+6
06F5 02101C         1963 +2         ljmp    CFCERR
06F8 00             1964 +2         nop
                    1965 +1         IF (9 <> -1)
06F9 753D09         1966 +1             mov         D1, #9     
                    1967 +1         ELSE
                    1968 +1             mov         D1, #32        
                    1969 +1         ENDIF                    
                    1970 +1         IF (15 <> -1)
06FC 753E0F         1971 +1             mov         D2, #15     
                    1972 +1         ELSE
                    1973 +1             mov         D2, #32        
                    1974 +1         ENDIF                    
06FF 7404           1975 +1         mov       A, #4
0701 121237         1976 +1         lcall     PRINTCHAR        
                    1978            ;--------------------------
0704                1979    UP2_STOP_C:
0704 12113C         1980            lcall   READPORTS       ; nacitanie dat
                    1981 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0707 200B03         1982 +1         jb      SKRH, $+6
070A 020FE9         1983 +1         ljmp    ERR_SKRH
070D 00             1984 +1         nop
DEBUGPOR                                                                                                      PAGE 36

                    1986 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1987 +1                                                                                             
                                                                                                                 
                    1988 +1                                                                                             
                                                                                                                 
                    1989 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              1990 +1         COUNT    SET    COUNT+1                   
                    1991 +1         
070E 200A1B         1992 +1         jb      MB2, ENDD7
0711 304304         1993 +1         jnb     PKI3, $+7
0714 C222           1994 +1         clr     FAST
0716 D223           1995 +1         setb    SLOW
0718 D238           1996 +1         setb    STOPPED         
071A D253           1997 +1         setb    ERRF3_U
071C D25B           1998 +1         setb    ERRF3_D
071E 0537           1999 +1         inc     ERRF3_C
0720 C21B           2000 +1                 clr     PKO3                               
0722 C22C           2001 +1         clr     PO3U            
0724 C22B           2002 +1         clr     PO3D              
0726 1211A9         2003 +1                 lcall   WRITEPORTS
0729 020A51         2004 +1         ljmp    UP3_MB2
072C                2005 +1 ENDD7:
072C 00             2006 +1         nop
072D 2009D4         2008            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?  
                    2009            ;---  Porucha 2 ---
                    2010            ;ljmp     FLOOR3
                    2011            ;---  ---  ---  ---   
0730 C220           2012            clr     UP              ; zastav motor
0732 D23A           2013            setb    UPOld           ;       (a zalohuj)
0734 C23B           2014            clr     DOWNOld         ;       (a zalohuj)
0736 C222           2015            clr     FAST            ; 
0738 1211A9         2016            lcall   WRITEPORTS      ; 
073B 020883         2017            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    2018            
073E                2019    DOWN2:
                    2020            ;--------------------------
                    2021 +1         CFCSS     24, 9, 6, 9, D2
073E 633C09         2022 +1         xrl             G,  #9             
                    2023 +1         IF (D2 <> -1)
0741 E53E           2024 +1             mov   A,  D2         
0743 623C           2025 +1             xrl   G,  A          
                    2026 +1         ENDIF    
0745 E53C           2027 +1         mov   A,  G              
                    2028 +2         LCJNE A,  #24, CFCERR     
0747 B41803         2029 +2         cjne    A, #24, $+6
074A 020750         2030 +2         jmp     $+6
074D 02101C         2031 +2         ljmp    CFCERR
0750 00             2032 +2         nop
                    2033 +1         IF (6 <> -1)
0751 753D06         2034 +1             mov         D1, #6     
                    2035 +1         ELSE
                    2036 +1             mov         D1, #32        
                    2037 +1         ENDIF                    
                    2038 +1         IF (9 <> -1)
0754 753E09         2039 +1             mov         D2, #9     
                    2040 +1         ELSE
                    2041 +1             mov         D2, #32        
DEBUGPOR                                                                                                      PAGE 37

                    2042 +1         ENDIF                    
0757 7418           2043 +1         mov       A, #24
0759 121237         2044 +1         lcall     PRINTCHAR        
                    2046            ;--------------------------
                    2047 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
075C 53240F         2048 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
075F D225           2049 +1         setb    FLED2
0761 1211A9         2050 +1         lcall   WRITEPORTS
                    2052 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0764 121094         2053 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0767 12113C         2054 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
076A 3009FA         2055 +1         jnb     MB1, $-3  ; 
076D 121094         2056 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0770 12113C         2058    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    2059 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0773 200C03         2060 +1         jb      SKRD, $+6
0776 020FD0         2061 +1         ljmp    ERR_SKRD
0779 00             2062 +1         nop
                    2064 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2065 +1                                                                                             
                                                                                                                 
                    2066 +1                                                                                             
                                                                                                                 
                    2067 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              2068 +1         COUNT    SET    COUNT+1                   
                    2069 +1         
077A 20091B         2070 +1         jb      MB1, ENDD8
077D 304104         2071 +1         jnb     PKI1, $+7
0780 C222           2072 +1         clr     FAST
0782 D223           2073 +1         setb    SLOW
0784 D238           2074 +1         setb    STOPPED         
0786 D252           2075 +1         setb    ERRF12_U
0788 D259           2076 +1         setb    ERRF12_D
078A 0539           2077 +1         inc     ERRF12_C
078C C219           2078 +1                 clr     PKO1                               
078E C228           2079 +1         clr     PO1U            
0790 C228           2080 +1         clr     PO1D              
0792 1211A9         2081 +1                 lcall   WRITEPORTS
0795 02079C         2082 +1         ljmp    DOWN2ERR
0798                2083 +1 ENDD8:
0798 00             2084 +1         nop
0799 0207AB         2086            jmp     DOWN2ERR_CONTINUE
079C                2087    DOWN2ERR:
079C C221           2088            clr     DOWN            ; zastav motor
079E D23B           2089            setb    DOWNOld         ;       (a zalohuj)
                    2090    ;----  Miesto chybneho skoku - porucha 3  ----        
07A0                2091    DOWN2_PORUCHA3: 
                    2092    ;---- ---- ---- ---- ---- ---- ---- ---- ----
07A0 C23A           2093            clr     UPOld           ;       (a zalohuj)
07A2 C222           2094            clr     FAST            ; 
07A4 C223           2095            clr     SLOW            ;
07A6 1211A9         2096            lcall   WRITEPORTS      ; 
07A9 2137           2097            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
DEBUGPOR                                                                                                      PAGE 38

07AB                2098    DOWN2ERR_CONTINUE:
07AB 200AC2         2099            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    2100 +1         CLR_FLOOR_ERR   ERRF12
07AE C252           2101 +1         clr    ERRF12_U
07B0 C259           2102 +1         clr    ERRF12_D
07B2 00             2103 +1         nop
                    2105 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
07B3 121094         2106 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07B6 12113C         2107 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07B9 300AFA         2108 +1         jnb     MB2, $-3  ; 
07BC 121094         2109 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2111            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
07BF 1211A9         2112            lcall   WRITEPORTS      ;
07C2 0207C5         2113            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    2114    
                    2115    
07C5                2116    DOWN2_MB2:
                    2117            ;--------------------------
                    2118 +1         CFCSS     31, 14, 1, -1, D2
07C5 633C0E         2119 +1         xrl             G,  #14             
                    2120 +1         IF (D2 <> -1)
07C8 E53E           2121 +1             mov   A,  D2         
07CA 623C           2122 +1             xrl   G,  A          
                    2123 +1         ENDIF    
07CC E53C           2124 +1         mov   A,  G              
                    2125 +2         LCJNE A,  #31, CFCERR     
07CE B41F03         2126 +2         cjne    A, #31, $+6
07D1 0207D7         2127 +2         jmp     $+6
07D4 02101C         2128 +2         ljmp    CFCERR
07D7 00             2129 +2         nop
                    2130 +1         IF (1 <> -1)
07D8 753D01         2131 +1             mov         D1, #1     
                    2132 +1         ELSE
                    2133 +1             mov         D1, #32        
                    2134 +1         ENDIF                    
                    2135 +1         IF (-1 <> -1)
                    2136 +1             mov         D2, #-1     
                    2137 +1         ELSE
07DB 753E20         2138 +1             mov         D2, #32        
                    2139 +1         ENDIF                    
07DE 741F           2140 +1         mov       A, #31
07E0 121237         2141 +1         lcall     PRINTCHAR        
                    2143            ;--------------------------
                    2144 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
07E3 121094         2145 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07E6 12113C         2146 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07E9 300AFA         2147 +1         jnb     MB2, $-3  ; 
07EC 121094         2148 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
07EF                2150    DOWN2_MB2A:
07EF 12113C         2151            lcall   READPORTS       ; nacitanie dat
                    2152 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
07F2 200C03         2153 +1         jb      SKRD, $+6
07F5 020FD0         2154 +1         ljmp    ERR_SKRD
07F8 00             2155 +1         nop
                    2157 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT ; >>> CHYBA, Vypadla spomalovac
                                                                               ia clonka (narazil som na zastavovaciu) <
DEBUGPOR                                                                                                      PAGE 39

                                                                               <<
                    2158 +1                                                                                             
                                                                                                                 
                    2159 +1                                                                                             
                                                                                                                 
                    2160 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              2161 +1         COUNT    SET    COUNT+1                   
                    2162 +1         
07F9 20091B         2163 +1         jb      MB1, ENDD9
07FC 304104         2164 +1         jnb     PKI1, $+7
07FF C222           2165 +1         clr     FAST
0801 D223           2166 +1         setb    SLOW
0803 D238           2167 +1         setb    STOPPED         
0805 D252           2168 +1         setb    ERRF12_U
0807 D259           2169 +1         setb    ERRF12_D
0809 0539           2170 +1         inc     ERRF12_C
080B C219           2171 +1                 clr     PKO1                               
080D C228           2172 +1         clr     PO1U            
080F C228           2173 +1         clr     PO1D              
0811 1211A9         2174 +1                 lcall   WRITEPORTS
0814 02081B         2175 +1         ljmp    DOWN2_MB2ERR
0817                2176 +1 ENDD9:
0817 00             2177 +1         nop
0818 02082B         2179            jmp     DOWN2_MB2ERR_CONTINUE
081B                2180    DOWN2_MB2ERR:
081B C221           2181            clr     DOWN            ; zastav motor
081D D23B           2182            setb    DOWNOld         ;       (a zalohuj)
081F C23A           2183            clr     UPOld           ;       (a zalohuj)
0821 C222           2184            clr     FAST            ; 
0823 C223           2185            clr     SLOW            ;
0825 1211A9         2186            lcall   WRITEPORTS      ; 
0828 020137         2187            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
082B                2188    DOWN2_MB2ERR_CONTINUE:
082B 200AC1         2189            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2190 +1         CLR_FLOOR_ERR   ERRF12      
082E C252           2191 +1         clr    ERRF12_U
0830 C259           2192 +1         clr    ERRF12_D
0832 00             2193 +1         nop
                    2195            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0833 1211A9         2196            lcall   WRITEPORTS      ;
                    2197 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0836 121094         2198 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0839 12113C         2199 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
083C 300AFA         2200 +1         jnb     MB2, $-3  ; 
083F 121094         2201 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2203    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2204    ;        anl     A, #00000010b ;-;
                    2205    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
0842 D223           2206            setb    SLOW            ;       Ak ano, spomalme
0844 C222           2207            clr     FAST            ; 
0846 1211A9         2208            lcall   WRITEPORTS      ;
0849 02084C         2209            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
084C                2210    DOWN2_MB1:    
                    2211            ;--------------------------
                    2212 +1         CFCSS     14, 17, 16, -1, -1
084C 633C11         2213 +1         xrl             G,  #17             
                    2214 +1         IF (-1 <> -1)
DEBUGPOR                                                                                                      PAGE 40

                    2215 +1             mov   A,  -1         
                    2216 +1             xrl   G,  A          
                    2217 +1         ENDIF    
084F E53C           2218 +1         mov   A,  G              
                    2219 +2         LCJNE A,  #14, CFCERR     
0851 B40E03         2220 +2         cjne    A, #14, $+6
0854 02085A         2221 +2         jmp     $+6
0857 02101C         2222 +2         ljmp    CFCERR
085A 00             2223 +2         nop
                    2224 +1         IF (16 <> -1)
085B 753D10         2225 +1             mov         D1, #16     
                    2226 +1         ELSE
                    2227 +1             mov         D1, #32        
                    2228 +1         ENDIF                    
                    2229 +1         IF (-1 <> -1)
                    2230 +1             mov         D2, #-1     
                    2231 +1         ELSE
085E 753E20         2232 +1             mov         D2, #32        
                    2233 +1         ENDIF                    
0861 740E           2234 +1         mov       A, #14
0863 121237         2235 +1         lcall     PRINTCHAR        
                    2237            ;--------------------------
0866 12113C         2238    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
0869 300907         2239            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
086C 200CF7         2240            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
086F D259           2241            setb    ERRF1_D
0871 0535           2242            inc     ERRF1_C
                    2243    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
0873 C238           2244    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
0875 C221           2245            clr     DOWN            ; zastav motor
0877 D23B           2246            setb    DOWNOld         ;       (a zalohuj)
0879 C23A           2247            clr     UPOld           ;       (a zalohuj)
087B C222           2248            clr     FAST            ; 
087D 1211A9         2249            lcall   WRITEPORTS      ; 
0880 020137         2250            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    2251    
                    2252    
                    2253    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    2254    
0883                2255    FLOOR3:
                    2256            ;--------------------------
                    2257 +1         CFCSS     10, 7, 16, 19, D1
0883 633C07         2258 +1         xrl             G,  #7             
                    2259 +1         IF (D1 <> -1)
0886 E53D           2260 +1             mov   A,  D1         
0888 623C           2261 +1             xrl   G,  A          
                    2262 +1         ENDIF    
088A E53C           2263 +1         mov   A,  G              
                    2264 +2         LCJNE A,  #10, CFCERR     
088C B40A03         2265 +2         cjne    A, #10, $+6
088F 020895         2266 +2         jmp     $+6
0892 02101C         2267 +2         ljmp    CFCERR
0895 00             2268 +2         nop
                    2269 +1         IF (16 <> -1)
0896 753D10         2270 +1             mov         D1, #16     
DEBUGPOR                                                                                                      PAGE 41

                    2271 +1         ELSE
                    2272 +1             mov         D1, #32        
                    2273 +1         ENDIF                    
                    2274 +1         IF (19 <> -1)
0899 753E13         2275 +1             mov         D2, #19     
                    2276 +1         ELSE
                    2277 +1             mov         D2, #32        
                    2278 +1         ENDIF                    
089C 740A           2279 +1         mov       A, #10
089E 121237         2280 +1         lcall     PRINTCHAR        
                    2282            ;--------------------------
                    2283 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
08A1 53240F         2284 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
08A4 D226           2285 +1         setb    FLED3
08A6 1211A9         2286 +1         lcall   WRITEPORTS
08A9 C238           2288            clr     STOPPED
                    2289 +1         TIMER2  60              ; (Timer - 3s)
08AB 752D3C         2290 +1            mov           T2_C, #60                              
08AE C262           2291 +1                  clr       T2_F                                  
08B0 D2CA           2292 +1                  setb      TR2                                             
                    2294 +1         ROZSVIET_SMER_LED
08B2 D22F           2295 +1         setb    LEDU            ;
08B4 D22E           2296 +1         setb    LEDD            ;
08B6 1211A9         2297 +1         lcall   WRITEPORTS      ;
08B9 12113C         2299    F3S:    lcall   READPORTS     ;-; nacitanie dat
                    2300 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08BC 200A03         2301 +1         jb      MB2, $+6
08BF 021002         2302 +1         ljmp    ERRFLOOR
08C2 00             2303 +1         nop
                    2305 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08C3 200B03         2306 +1         jb      SKRH, $+6
08C6 021002         2307 +1         ljmp    ERRFLOOR
08C9 00             2308 +1         nop
                    2310 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08CA 200C03         2311 +1         jb      SKRD, $+6
08CD 021002         2312 +1         ljmp    ERRFLOOR
08D0 00             2313 +1         nop
                    2315 +1         ZRUS_POSCH 3
08D1 C21B           2316 +1         clr     PKO3       
08D3 C22C           2317 +1         clr     PO3U      
08D5 C22B           2318 +1         clr     PO3D      
08D7 1211A9         2319 +1         lcall   WRITEPORTS
08DA 3062DC         2321            jnb                T2_F, F3S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    2322 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
08DD A20D           2323 +1         mov      C, DP          
08DF 720E           2324 +1         orl      C, DPZK        
08E1 720F           2325 +1         orl      C, DPK         
08E3 9218           2326 +1         mov      KS, C          
08E5 922F           2327 +1         mov      LEDU, C        
08E7 922E           2328 +1         mov      LEDD, C        
08E9 1211A9         2329 +1         lcall   WRITEPORTS      
08EC 200FCA         2331            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
08EF 3045C7         2332            jnb     DOORCLSD, F3S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    2333 +1         JE_VYBRATE_POSCHODIE F3S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
DEBUGPOR                                                                                                      PAGE 42

                                                                                nejdeme dalej.          
08F2 A20D           2334 +1         mov      C, DP         
08F4 720E           2335 +1         orl      C, DPZK        
08F6 720F           2336 +1         orl      C, DPK         
08F8 5006           2337 +1         jnc      $+8            
08FA E528           2338 +1         mov      A, INPORTA     
08FC 541E           2339 +1         anl      A, #00011110b  
08FE 60B9           2340 +1         jz       F3S       
                    2342            ;clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
                    2343            ;clr     PO3U            ;
                    2344            ;clr     PO3D            ;
                    2345            ;lcall   WRITEPORTS      ;
                    2346            ;jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0900 782A           2347            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
0902 79F0           2348            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
0904 7AE0           2349            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
0906 203A0A         2350            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
0909 E9             2351            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
090A F4             2352            cpl     A               ;       |
090B F9             2353            mov     R1, A           ;       |
090C EA             2354            mov     A, R2           ;       A znegujeme aj masku sachty
090D F4             2355            cpl     A               ;       |
090E FA             2356            mov     R2, A           ;       |     
090F E8             2357            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
0910 6401           2358            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
0912 F8             2359            mov     R0, A           ;       |    
0913                2360    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
0913 E528           2361            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0915 86F0           2362            mov     B, @R0          ;  | Maskujem chybne poschodia
0917 53F00C         2363            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
091A 63F0FF         2364            xrl     B, #0FFH        ;  | |
091D 55F0           2365            anl     A, B            ;  | |
091F 5416           2366            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0921 59             2367            anl     A, R1           ;  | 
                    2368 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0922 6003           2369 +1         jz      $+5
0924 02099B         2370 +1         ljmp    F3
0927 00             2371 +1         nop
                    2373                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0928 E528           2374            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
092A 86F0           2375            mov     B, @R0          ;  | Maskujem chybne poschodia
092C 53F00C         2376            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
092F 63F0FF         2377            xrl     B, #0FFH        ;  | |
0932 55F0           2378            anl     A, B            ;  | |
0934 5416           2379            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
0936 7021           2380            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0938 E522           2381            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
093A 5427           2382            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
093C 5A             2383            anl     A, R2           ;  |   
DEBUGPOR                                                                                                      PAGE 43

093D 86F0           2384            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2385            ;ANLB    ACC.0, B.1      ;  | 
                    2386 +1         ANLB    ACC.1, B.2      ;  | 
093F A2E1           2387 +1         mov   C, ACC.1
0941 B0F2           2388 +1         anl   C, /B.2
0943 92E1           2389 +1         mov   ACC.1, C
                    2391 +1         ANLB    ACC.2, B.2      ;  |
0945 A2E2           2392 +1         mov   C, ACC.2
0947 B0F2           2393 +1         anl   C, /B.2
0949 92E2           2394 +1         mov   ACC.2, C
                    2396 +1         ANLB    ACC.3, B.3      ;  |
094B A2E3           2397 +1         mov   C, ACC.3
094D B0F3           2398 +1         anl   C, /B.3
094F 92E3           2399 +1         mov   ACC.3, C
                    2401 +1         ANLB    ACC.4, B.3      ;  |
0951 A2E4           2402 +1         mov   C, ACC.4
0953 B0F3           2403 +1         anl   C, /B.3
0955 92E4           2404 +1         mov   ACC.4, C
                    2406            ;ANLB    ACC.5, B.4      ;  |
0957 7042           2407            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2408            ; Pohyb v opacnom smere (nevieme v ktorom)
0959 E8             2409    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
095A 6401           2410            xrl     A, #01h         ;  |
095C F8             2411            mov     R0, A           ;  |
095D B23A           2412            cpl     UPOld           ;  Znegujem stary posun
095F B23B           2413            cpl     DOWNOld         ;  |
0961 E9             2414            mov     A, R1           ;  Znegujeme masky
0962 F4             2415            cpl     A               ;  |
0963 F9             2416            mov     R1, A           ;  |
0964 EA             2417            mov     A, R2           ;  |
0965 F4             2418            cpl     A               ;  |
0966 FA             2419            mov     R2, A           ;  |               
0967 E528           2420            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
0969 86F0           2421            mov     B, @R0          ;  | Maskujem chybne poschodia
096B 53F00C         2422            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
096E 63F0FF         2423            xrl     B, #0FFH        ;  | |
0971 55F0           2424            anl     A, B            ;  | |
0973 5416           2425            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0975 59             2426            anl     A, R1           ;  | 
0976 7023           2427            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0978 E522           2428            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
097A 5427           2429            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
097C 5A             2430            anl     A, R2           ;  | 
097D 86F0           2431            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2432            ;ANLB    ACC.0, B.1      ;  | 
                    2433 +1         ANLB    ACC.1, B.2      ;  | 
097F A2E1           2434 +1         mov   C, ACC.1
0981 B0F2           2435 +1         anl   C, /B.2
0983 92E1           2436 +1         mov   ACC.1, C
                    2438 +1         ANLB    ACC.2, B.2      ;  |
0985 A2E2           2439 +1         mov   C, ACC.2
0987 B0F2           2440 +1         anl   C, /B.2
0989 92E2           2441 +1         mov   ACC.2, C
                    2443 +1         ANLB    ACC.3, B.3      ;  |
DEBUGPOR                                                                                                      PAGE 44

098B A2E3           2444 +1         mov   C, ACC.3
098D B0F3           2445 +1         anl   C, /B.3
098F 92E3           2446 +1         mov   ACC.3, C
                    2448 +1         ANLB    ACC.4, B.3      ;  |
0991 A2E4           2449 +1         mov   C, ACC.4
0993 B0F3           2450 +1         anl   C, /B.3
0995 92E4           2451 +1         mov   ACC.4, C
                    2453            ;ANLB    ACC.5, B.4      ;  |
0997 7002           2454            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0999 01B9           2455            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
099B 203A03         2456    F3:     jb      UPOld, F3UP     ;   
099E 0209B5         2457            jmp     F3DOWN          ;
                    2458 +1 F3UP:   SET_UP                  ; rychly pohyb hore
09A1 D220           2459 +1         setb     UP
09A3 C221           2460 +1         clr      DOWN
09A5 D22F           2461 +1         setb     LEDU
09A7 C22E           2462 +1         clr      LEDD 
                    2464 +1         SET_FAST                ; 
09A9 D222           2465 +1         setb     FAST
09AB C223           2466 +1         clr      SLOW
09AD D218           2467 +1         setb     KS      
09AF 1211A9         2469            lcall   WRITEPORTS      ; 
09B2 0209C9         2470            jmp     UP3           ;-; prejdi do stavu UP2    
                    2471 +1 F3DOWN: SET_DOWN                  ; rychly pohyb dole
09B5 C220           2472 +1         clr     UP
09B7 D221           2473 +1         setb    DOWN
09B9 C22F           2474 +1         clr     LEDU
09BB D22E           2475 +1         setb    LEDD 
                    2477 +1         SET_FAST                ; 
09BD D222           2478 +1         setb     FAST
09BF C223           2479 +1         clr      SLOW
09C1 D218           2480 +1         setb     KS      
09C3 1211A9         2482            lcall   WRITEPORTS      ; 
09C6 020B1B         2483            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2484         
                    2485         
09C9                2486    UP3:
                    2487            ;--------------------------
                    2488 +1         CFCSS     11, 17, 14, 0, D1
09C9 633C11         2489 +1         xrl             G,  #17             
                    2490 +1         IF (D1 <> -1)
09CC E53D           2491 +1             mov   A,  D1         
09CE 623C           2492 +1             xrl   G,  A          
                    2493 +1         ENDIF    
09D0 E53C           2494 +1         mov   A,  G              
                    2495 +2         LCJNE A,  #11, CFCERR     
09D2 B40B03         2496 +2         cjne    A, #11, $+6
09D5 0209DB         2497 +2         jmp     $+6
09D8 02101C         2498 +2         ljmp    CFCERR
09DB 00             2499 +2         nop
                    2500 +1         IF (14 <> -1)
09DC 753D0E         2501 +1             mov         D1, #14     
                    2502 +1         ELSE
                    2503 +1             mov         D1, #32        
                    2504 +1         ENDIF                    
                    2505 +1         IF (0 <> -1)
09DF 753E00         2506 +1             mov         D2, #0     
                    2507 +1         ELSE
DEBUGPOR                                                                                                      PAGE 45

                    2508 +1             mov         D2, #32        
                    2509 +1         ENDIF                    
09E2 740B           2510 +1         mov       A, #11
09E4 121237         2511 +1         lcall     PRINTCHAR        
                    2513            ;--------------------------
                    2514 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
09E7 53240F         2515 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
09EA D226           2516 +1         setb    FLED3
09EC 1211A9         2517 +1         lcall   WRITEPORTS
                    2519 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
09EF 121094         2520 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09F2 12113C         2521 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
09F5 3009FA         2522 +1         jnb     MB1, $-3  ; 
09F8 121094         2523 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
09FB 12113C         2525    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2526 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
09FE 200B03         2527 +1         jb      SKRH, $+6
0A01 020FE9         2528 +1         ljmp    ERR_SKRH
0A04 00             2529 +1         nop
                    2531 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie 
                                                                               clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2532 +1                                                                                             
                                                                                                                 
                    2533 +1                                                                                             
                                                                                                                 
                    2534 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2535 +1         COUNT    SET    COUNT+1                   
                    2536 +1         
0A05 20091B         2537 +1         jb      MB1, ENDD10
0A08 304404         2538 +1         jnb     PKI4, $+7
0A0B C222           2539 +1         clr     FAST
0A0D D223           2540 +1         setb    SLOW
0A0F D238           2541 +1         setb    STOPPED         
0A11 D254           2542 +1         setb    ERRF34_U
0A13 D25B           2543 +1         setb    ERRF34_D
0A15 053B           2544 +1         inc     ERRF34_C
0A17 C21C           2545 +1                 clr     PKO4                               
0A19 C22D           2546 +1         clr     PO4U            
0A1B C22D           2547 +1         clr     PO4D              
0A1D 1211A9         2548 +1                 lcall   WRITEPORTS
0A20 020A27         2549 +1         ljmp    UP3ERR
0A23                2550 +1 ENDD10:
0A23 00             2551 +1         nop
0A24 020A37         2553            jmp     UP3ERR_CONTINUE
0A27                2554    UP3ERR:
0A27 C220           2555            clr     UP              ; zastav motor
0A29 D23A           2556            setb    UPOld           ;       (a zalohuj)
0A2B C23B           2557            clr     DOWNOld         ;       (a zalohuj)
0A2D C222           2558            clr     FAST            ;
0A2F C223           2559            clr     SLOW            ;
0A31 1211A9         2560            lcall   WRITEPORTS      ; 
0A34 020D21         2561            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0A37                2562    UP3ERR_CONTINUE:
0A37 200AC1         2563            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
DEBUGPOR                                                                                                      PAGE 46

                    2564 +1         CLR_FLOOR_ERR   ERRF34
0A3A C254           2565 +1         clr    ERRF34_U
0A3C C25B           2566 +1         clr    ERRF34_D
0A3E 00             2567 +1         nop
                    2569 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0A3F 121094         2570 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A42 12113C         2571 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A45 300AFA         2572 +1         jnb     MB2, $-3  ; 
0A48 121094         2573 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2575            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0A4B 1211A9         2576            lcall   WRITEPORTS      ;
0A4E 020A51         2577            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2578    
0A51                2579    UP3_MB2:
                    2580            ;--------------------------
                    2581 +1         CFCSS     3, 8, 6, -1, D2
0A51 633C08         2582 +1         xrl             G,  #8             
                    2583 +1         IF (D2 <> -1)
0A54 E53E           2584 +1             mov   A,  D2         
0A56 623C           2585 +1             xrl   G,  A          
                    2586 +1         ENDIF    
0A58 E53C           2587 +1         mov   A,  G              
                    2588 +2         LCJNE A,  #3, CFCERR     
0A5A B40303         2589 +2         cjne    A, #3, $+6
0A5D 020A63         2590 +2         jmp     $+6
0A60 02101C         2591 +2         ljmp    CFCERR
0A63 00             2592 +2         nop
                    2593 +1         IF (6 <> -1)
0A64 753D06         2594 +1             mov         D1, #6     
                    2595 +1         ELSE
                    2596 +1             mov         D1, #32        
                    2597 +1         ENDIF                    
                    2598 +1         IF (-1 <> -1)
                    2599 +1             mov         D2, #-1     
                    2600 +1         ELSE
0A67 753E20         2601 +1             mov         D2, #32        
                    2602 +1         ENDIF                    
0A6A 7403           2603 +1         mov       A, #3
0A6C 121237         2604 +1         lcall     PRINTCHAR        
                    2606            ;--------------------------
                    2607 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0A6F 121094         2608 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A72 12113C         2609 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A75 300AFA         2610 +1         jnb     MB2, $-3  ; 
0A78 121094         2611 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A7B                2613    UP3_MB2A:
0A7B 12113C         2614            lcall   READPORTS       ; nacitanie dat
                    2615 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0A7E 200B03         2616 +1         jb      SKRH, $+6
0A81 020FE9         2617 +1         ljmp    ERR_SKRH
0A84 00             2618 +1         nop
                    2620 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT ; >>> CHYBA, Vypadla spomalovacia
                                                                                clonka (narazil som na zastavovaciu) <<<
                                                                               
                    2621 +1                                                                                             
                                                                                                                 
DEBUGPOR                                                                                                      PAGE 47

                    2622 +1                                                                                             
                                                                                                                 
                    2623 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2624 +1         COUNT    SET    COUNT+1                   
                    2625 +1         
0A85 20091B         2626 +1         jb      MB1, ENDD11
0A88 304404         2627 +1         jnb     PKI4, $+7
0A8B C222           2628 +1         clr     FAST
0A8D D223           2629 +1         setb    SLOW
0A8F D238           2630 +1         setb    STOPPED         
0A91 D254           2631 +1         setb    ERRF34_U
0A93 D25B           2632 +1         setb    ERRF34_D
0A95 053B           2633 +1         inc     ERRF34_C
0A97 C21C           2634 +1                 clr     PKO4                               
0A99 C22D           2635 +1         clr     PO4U            
0A9B C22D           2636 +1         clr     PO4D              
0A9D 1211A9         2637 +1                 lcall   WRITEPORTS
0AA0 020AA7         2638 +1         ljmp    UP3_MB2ERR
0AA3                2639 +1 ENDD11:
0AA3 00             2640 +1         nop
0AA4 020AB7         2642            jmp     UP3_MB2ERR_CONTINUE
0AA7                2643    UP3_MB2ERR:
0AA7 C220           2644            clr     UP              ; zastav motor
0AA9 D23A           2645            setb    UPOld           ;       (a zalohuj)
0AAB C23B           2646            clr     DOWNOld         ;       (a zalohuj)
0AAD C222           2647            clr     FAST            ;
0AAF C223           2648            clr     SLOW            ;
0AB1 1211A9         2649            lcall   WRITEPORTS      ; 
0AB4 020D21         2650            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0AB7                2651    UP3_MB2ERR_CONTINUE:
0AB7 200AC1         2652            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2653 +1         CLR_FLOOR_ERR   ERRF34      
0ABA C254           2654 +1         clr    ERRF34_U
0ABC C25B           2655 +1         clr    ERRF34_D
0ABE 00             2656 +1         nop
                    2658            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0ABF 1211A9         2659            lcall   WRITEPORTS      ;
                    2660 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0AC2 121094         2661 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AC5 12113C         2662 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AC8 300AFA         2663 +1         jnb     MB2, $-3  ; 
0ACB 121094         2664 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2666    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2667    ;        anl     A, #00010000b ;-;
                    2668    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0ACE D223           2669            setb    SLOW            ;       Ak ano, spomalme
0AD0 C222           2670            clr     FAST            ; 
0AD2 1211A9         2671            lcall   WRITEPORTS      ;
0AD5 020AD8         2672            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2673    
                    2674    
0AD8                2675    UP3_MB1:
                    2676            ;--------------------------
                    2677 +1         CFCSS     5, 6, 0, -1, -1
0AD8 633C06         2678 +1         xrl             G,  #6             
                    2679 +1         IF (-1 <> -1)
                    2680 +1             mov   A,  -1         
DEBUGPOR                                                                                                      PAGE 48

                    2681 +1             xrl   G,  A          
                    2682 +1         ENDIF    
0ADB E53C           2683 +1         mov   A,  G              
                    2684 +2         LCJNE A,  #5, CFCERR     
0ADD B40503         2685 +2         cjne    A, #5, $+6
0AE0 020AE6         2686 +2         jmp     $+6
0AE3 02101C         2687 +2         ljmp    CFCERR
0AE6 00             2688 +2         nop
                    2689 +1         IF (0 <> -1)
0AE7 753D00         2690 +1             mov         D1, #0     
                    2691 +1         ELSE
                    2692 +1             mov         D1, #32        
                    2693 +1         ENDIF                    
                    2694 +1         IF (-1 <> -1)
                    2695 +1             mov         D2, #-1     
                    2696 +1         ELSE
0AEA 753E20         2697 +1             mov         D2, #32        
                    2698 +1         ENDIF                    
0AED 7405           2699 +1         mov       A, #5
0AEF 121237         2700 +1         lcall     PRINTCHAR        
                    2702            ;--------------------------
                    2703 +1         ZAKMITC MB2
0AF2 121094         2704 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AF5 12113C         2705 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AF8 300AFA         2706 +1         jnb     MB2, $-3  ; 
0AFB 121094         2707 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AFE 12113C         2709    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0B01 300907         2710            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0B04 200BF7         2711            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0B07 D254           2712            setb    ERRF4_U
0B09 0538           2713            inc     ERRF4_C
                    2714    ;        jmp     U3_MB1C 
                    2715    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2716    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0B0B C238           2717    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0B0D C220           2718            clr     UP              ; zastav motor
0B0F D23A           2719            setb    UPOld           ;       (a zalohuj)
0B11 C23B           2720            clr     DOWNOld         ;       (a zalohuj)
0B13 C222           2721            clr     FAST            ; 
0B15 1211A9         2722            lcall   WRITEPORTS      ; 
0B18 020D21         2723            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2724    
                    2725    
0B1B                2726    DOWN3:
                    2727            ;--------------------------
                    2728 +1         CFCSS     27, 2, 22, 10, D2
0B1B 633C02         2729 +1         xrl             G,  #2             
                    2730 +1         IF (D2 <> -1)
0B1E E53E           2731 +1             mov   A,  D2         
0B20 623C           2732 +1             xrl   G,  A          
                    2733 +1         ENDIF    
0B22 E53C           2734 +1         mov   A,  G              
                    2735 +2         LCJNE A,  #27, CFCERR     
0B24 B41B03         2736 +2         cjne    A, #27, $+6
DEBUGPOR                                                                                                      PAGE 49

0B27 020B2D         2737 +2         jmp     $+6
0B2A 02101C         2738 +2         ljmp    CFCERR
0B2D 00             2739 +2         nop
                    2740 +1         IF (22 <> -1)
0B2E 753D16         2741 +1             mov         D1, #22     
                    2742 +1         ELSE
                    2743 +1             mov         D1, #32        
                    2744 +1         ENDIF                    
                    2745 +1         IF (10 <> -1)
0B31 753E0A         2746 +1             mov         D2, #10     
                    2747 +1         ELSE
                    2748 +1             mov         D2, #32        
                    2749 +1         ENDIF                    
0B34 741B           2750 +1         mov       A, #27
0B36 121237         2751 +1         lcall     PRINTCHAR        
                    2753            ;--------------------------
                    2754 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0B39 53240F         2755 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0B3C D226           2756 +1         setb    FLED3
0B3E 1211A9         2757 +1         lcall   WRITEPORTS
                    2759 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0B41 121094         2760 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B44 12113C         2761 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B47 3009FA         2762 +1         jnb     MB1, $-3  ; 
0B4A 121094         2763 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B4D 12113C         2765    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2766 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B50 200C03         2767 +1         jb      SKRD, $+6
0B53 020FD0         2768 +1         ljmp    ERR_SKRD
0B56 00             2769 +1         nop
                    2771 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie c
                                                                               lonky (narazil som na zastavovaciu) <<<
                    2772 +1                                                                                             
                                                                                                                 
                    2773 +1                                                                                             
                                                                                                                 
                    2774 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2775 +1         COUNT    SET    COUNT+1                   
                    2776 +1         
0B57 20091B         2777 +1         jb      MB1, ENDD12
0B5A 304204         2778 +1         jnb     PKI2, $+7
0B5D C222           2779 +1         clr     FAST
0B5F D223           2780 +1         setb    SLOW
0B61 D238           2781 +1         setb    STOPPED         
0B63 D253           2782 +1         setb    ERRF23_U
0B65 D25A           2783 +1         setb    ERRF23_D
0B67 053A           2784 +1         inc     ERRF23_C
0B69 C21A           2785 +1                 clr     PKO2                               
0B6B C22A           2786 +1         clr     PO2U            
0B6D C229           2787 +1         clr     PO2D              
0B6F 1211A9         2788 +1                 lcall   WRITEPORTS
0B72 02073E         2789 +1         ljmp    DOWN2
0B75                2790 +1 ENDD12:
0B75 00             2791 +1         nop
0B76 200AD4         2793            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
DEBUGPOR                                                                                                      PAGE 50

                    2794 +1         CLR_FLOOR_ERR   ERRF23
0B79 C253           2795 +1         clr    ERRF23_U
0B7B C25A           2796 +1         clr    ERRF23_D
0B7D 00             2797 +1         nop
                    2799 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0B7E 121094         2800 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B81 12113C         2801 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B84 300AFA         2802 +1         jnb     MB2, $-3  ; 
0B87 121094         2803 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2805            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0B8A 1211A9         2806            lcall   WRITEPORTS      ;
0B8D 020B90         2807            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2808    
                    2809    
0B90                2810    DOWN3_MB2:
                    2811            ;--------------------------
                    2812 +1         CFCSS     9, 4, -1, 24, D1
0B90 633C04         2813 +1         xrl             G,  #4             
                    2814 +1         IF (D1 <> -1)
0B93 E53D           2815 +1             mov   A,  D1         
0B95 623C           2816 +1             xrl   G,  A          
                    2817 +1         ENDIF    
0B97 E53C           2818 +1         mov   A,  G              
                    2819 +2         LCJNE A,  #9, CFCERR     
0B99 B40903         2820 +2         cjne    A, #9, $+6
0B9C 020BA2         2821 +2         jmp     $+6
0B9F 02101C         2822 +2         ljmp    CFCERR
0BA2 00             2823 +2         nop
                    2824 +1         IF (-1 <> -1)
                    2825 +1             mov         D1, #-1     
                    2826 +1         ELSE
0BA3 753D20         2827 +1             mov         D1, #32        
                    2828 +1         ENDIF                    
                    2829 +1         IF (24 <> -1)
0BA6 753E18         2830 +1             mov         D2, #24     
                    2831 +1         ELSE
                    2832 +1             mov         D2, #32        
                    2833 +1         ENDIF                    
0BA9 7409           2834 +1         mov       A, #9
0BAB 121237         2835 +1         lcall     PRINTCHAR        
                    2837            ;--------------------------
                    2838 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0BAE 121094         2839 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BB1 12113C         2840 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BB4 300AFA         2841 +1         jnb     MB2, $-3  ; 
0BB7 121094         2842 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0BBA                2844    DOWN3_MB2A:
0BBA 12113C         2845            lcall   READPORTS       ; nacitanie dat
                    2846 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0BBD 200C03         2847 +1         jb      SKRD, $+6
0BC0 020FD0         2848 +1         ljmp    ERR_SKRD
0BC3 00             2849 +1         nop
                    2851 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    2852 +1                                                                                             
                                                                                                                 
DEBUGPOR                                                                                                      PAGE 51

                    2853 +1                                                                                             
                                                                                                                 
                    2854 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              2855 +1         COUNT    SET    COUNT+1                   
                    2856 +1         
0BC4 20091B         2857 +1         jb      MB1, ENDD13
0BC7 304204         2858 +1         jnb     PKI2, $+7
0BCA C222           2859 +1         clr     FAST
0BCC D223           2860 +1         setb    SLOW
0BCE D238           2861 +1         setb    STOPPED         
0BD0 D253           2862 +1         setb    ERRF23_U
0BD2 D25A           2863 +1         setb    ERRF23_D
0BD4 053A           2864 +1         inc     ERRF23_C
0BD6 C21A           2865 +1                 clr     PKO2                               
0BD8 C22A           2866 +1         clr     PO2U            
0BDA C229           2867 +1         clr     PO2D              
0BDC 1211A9         2868 +1                 lcall   WRITEPORTS
0BDF 02073E         2869 +1         ljmp    DOWN2
0BE2                2870 +1 ENDD13:
0BE2 00             2871 +1         nop
0BE3 200AD4         2873            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2874 +1         CLR_FLOOR_ERR   ERRF23      
0BE6 C253           2875 +1         clr    ERRF23_U
0BE8 C25A           2876 +1         clr    ERRF23_D
0BEA 00             2877 +1         nop
                    2879            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0BEB 1211A9         2880            lcall   WRITEPORTS      ;
                    2881 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0BEE 121094         2882 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BF1 12113C         2883 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BF4 300AFA         2884 +1         jnb     MB2, $-3  ; 
0BF7 121094         2885 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2887    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2888    ;        anl     A, #00000100b ;-;
                    2889    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0BFA                2890    DOWN3_MB2_CFC:
                    2891            ;--------------------------
                    2892 +1         CFCSS     16, 25, -1, -1, -1
0BFA 633C19         2893 +1         xrl             G,  #25             
                    2894 +1         IF (-1 <> -1)
                    2895 +1             mov   A,  -1         
                    2896 +1             xrl   G,  A          
                    2897 +1         ENDIF    
0BFD E53C           2898 +1         mov   A,  G              
                    2899 +2         LCJNE A,  #16, CFCERR     
0BFF B41003         2900 +2         cjne    A, #16, $+6
0C02 020C08         2901 +2         jmp     $+6
0C05 02101C         2902 +2         ljmp    CFCERR
0C08 00             2903 +2         nop
                    2904 +1         IF (-1 <> -1)
                    2905 +1             mov         D1, #-1     
                    2906 +1         ELSE
0C09 753D20         2907 +1             mov         D1, #32        
                    2908 +1         ENDIF                    
                    2909 +1         IF (-1 <> -1)
                    2910 +1             mov         D2, #-1     
                    2911 +1         ELSE
DEBUGPOR                                                                                                      PAGE 52

0C0C 753E20         2912 +1             mov         D2, #32        
                    2913 +1         ENDIF                    
0C0F 7410           2914 +1         mov       A, #16
0C11 121237         2915 +1         lcall     PRINTCHAR        
                    2917            ;--------------------------
                    2918 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    2919 +1                                         
0C14 C3             2920 +1         clr     C                       
0C15 7400           2921 +1         mov     A, #0h                  
0C17 7211           2922 +1         orl     C, PI2D      
0C19 B00E           2923 +1         anl     C, /DPZK                
0C1B 7242           2924 +1         orl     C, PKI2          
0C1D B05A           2925 +1         anl     C, /ERRF2_D 
0C1F 720F           2926 +1         orl     C, DPK                  
0C21 7238           2927 +1         orl     C, STOPPED              
0C23 3400           2928 +1         addc    A, #0h                  
0C25 7050           2930            jnz     D3_MB2C         ; Ak ano, zastav
                    2931 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0C27 E522           2932 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0C29 33             2933 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0C2A 547E           2934 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    2935 +1 
                    2936 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    2937 +2         ANLB    ACC.2, ERRF2_D  ; |
0C2C A2E2           2938 +2         mov   C, ACC.2
0C2E B05A           2939 +2         anl   C, /ERRF2_D
0C30 92E2           2940 +2         mov   ACC.2, C
                    2941 +2         ANLB    ACC.3, ERRF2_D  ; |
0C32 A2E3           2942 +2         mov   C, ACC.3
0C34 B05A           2943 +2         anl   C, /ERRF2_D
0C36 92E3           2944 +2         mov   ACC.3, C
                    2945 +2         ANLB    ACC.4, ERRF3_D  ; |
0C38 A2E4           2946 +2         mov   C, ACC.4
0C3A B05B           2947 +2         anl   C, /ERRF3_D
0C3C 92E4           2948 +2         mov   ACC.4, C
                    2949 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    2950 +1 
0C3E 7805           2951 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    2952 +1  ; LL1: 
0C40 6006           2953 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0C42 C3             2954 +1         clr     C               ; Inak shiftnem o 2
0C43 33             2955 +1         rlc     A               ;
0C44 C3             2956 +1         clr     C               ;
0C45 33             2957 +1         rlc     A               ;
0C46 D8F8           2958 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    2959 +1 ; LL2:
0C48 E8             2960 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    2962 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0C49 B40203         2963 +1         cjne    A, #2, $+6
0C4C 020C52         2964 +1         jmp     $+6
0C4F 020C81         2965 +1         ljmp    DOWN3_MB1
DEBUGPOR                                                                                                      PAGE 53

0C52 00             2966 +1         nop
                    2968 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0C53 7405           2969 +1         mov     A, #5
0C55 C3             2970 +1         clr     C
0C56 9402           2971 +1         subb    A, #2
0C58 F8             2972 +1         mov     R0, A
0C59 E528           2973 +1         mov     A, INPORTA
0C5B 541E           2974 +1         anl     A, #00011110b
0C5D 852BF0         2975 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0C60 53F00C         2976 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0C63 63F0FF         2977 +1         xrl     B, #0FFH
0C66 55F0           2978 +1         anl     A, B
0C68 C3             2979 +1         clr     C
0C69 33             2980 +1         rlc     A
0C6A C3             2981 +1         clr     C
0C6B 33             2982 +1         rlc     A
0C6C C3             2983 +1         clr     C
0C6D 33             2984 +1         rlc     A
                    2985 +1 ;LL1   
0C6E C3             2986 +1         clr     C
0C6F 33             2987 +1         rlc     A
0C70 D8FC           2988 +1         djnz    R0, $-2;LL1
0C72 6003           2990            jz      D3_MB2C         ; |   ak neni zastavujem                  
0C74 020C81         2991            ljmp    DOWN3_MB1       ;-; |        
0C77 D223           2992    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0C79 C222           2993            clr     FAST            ; 
0C7B 1211A9         2994            lcall   WRITEPORTS      ;
0C7E 020CCD         2995            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    2996    
                    2997    
0C81                2998    DOWN3_MB1:    
                    2999            ;--------------------------
                    3000 +1         CFCSS     17, 1, -1, 0, -1
0C81 633C01         3001 +1         xrl             G,  #1             
                    3002 +1         IF (-1 <> -1)
                    3003 +1             mov   A,  -1         
                    3004 +1             xrl   G,  A          
                    3005 +1         ENDIF    
0C84 E53C           3006 +1         mov   A,  G              
                    3007 +2         LCJNE A,  #17, CFCERR     
0C86 B41103         3008 +2         cjne    A, #17, $+6
0C89 020C8F         3009 +2         jmp     $+6
0C8C 02101C         3010 +2         ljmp    CFCERR
0C8F 00             3011 +2         nop
                    3012 +1         IF (-1 <> -1)
                    3013 +1             mov         D1, #-1     
                    3014 +1         ELSE
0C90 753D20         3015 +1             mov         D1, #32        
                    3016 +1         ENDIF                    
                    3017 +1         IF (0 <> -1)
0C93 753E00         3018 +1             mov         D2, #0     
                    3019 +1         ELSE
                    3020 +1             mov         D2, #32        
                    3021 +1         ENDIF                    
0C96 7411           3022 +1         mov       A, #17
0C98 121237         3023 +1         lcall     PRINTCHAR        
DEBUGPOR                                                                                                      PAGE 54

                    3025            ;--------------------------
0C9B 12113C         3026    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3027 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C9E 200C03         3028 +1         jb      SKRD, $+6
0CA1 020FD0         3029 +1         ljmp    ERR_SKRD
0CA4 00             3030 +1         nop
                    3032 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3033 +1                                                                                             
                                                                                                                 
                    3034 +1                                                                                             
                                                                                                                 
                    3035 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              3036 +1         COUNT    SET    COUNT+1                   
                    3037 +1         
0CA5 200A1B         3038 +1         jb      MB2, ENDD14
0CA8 304204         3039 +1         jnb     PKI2, $+7
0CAB C222           3040 +1         clr     FAST
0CAD D223           3041 +1         setb    SLOW
0CAF D238           3042 +1         setb    STOPPED         
0CB1 D252           3043 +1         setb    ERRF2_U
0CB3 D25A           3044 +1         setb    ERRF2_D
0CB5 0536           3045 +1         inc     ERRF2_C
0CB7 C21A           3046 +1                 clr     PKO2                               
0CB9 C22A           3047 +1         clr     PO2U            
0CBB C229           3048 +1         clr     PO2D              
0CBD 1211A9         3049 +1                 lcall   WRITEPORTS
0CC0 0207C5         3050 +1         ljmp    DOWN2_MB2
0CC3                3051 +1 ENDD14:
0CC3 00             3052 +1         nop
                    3054            ;---  Porucha 3 ---
0CC4 0207A0         3055            ljmp     DOWN2_PORUCHA3
                    3056            ;---  ---  ---  --- 
0CC7 2009D1         3057            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    3058    ;        CLR_FLOOR_ERR   ERRF2
                    3059    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3060    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    3061    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    3062    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3063    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    3064    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3065    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0CCA 02073E         3066            ljmp    DOWN2         ;-; |        
                    3067    ;D3_MB1C: clr     DOWN            ; zastav motor
                    3068    ;        setb    DOWNOld         ;       (a zalohuj)
                    3069    ;        clr     UPOld           ;       (a zalohuj)
                    3070    ;        clr     FAST            ; 
                    3071    ;        lcall   WRITEPORTS      ; 
                    3072    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0CCD                3073    DOWN3_STOP: 
                    3074            ;--------------------------
                    3075 +1         CFCSS     21, 5, 0, 4, -1
0CCD 633C05         3076 +1         xrl             G,  #5             
DEBUGPOR                                                                                                      PAGE 55

                    3077 +1         IF (-1 <> -1)
                    3078 +1             mov   A,  -1         
                    3079 +1             xrl   G,  A          
                    3080 +1         ENDIF    
0CD0 E53C           3081 +1         mov   A,  G              
                    3082 +2         LCJNE A,  #21, CFCERR     
0CD2 B41503         3083 +2         cjne    A, #21, $+6
0CD5 020CDB         3084 +2         jmp     $+6
0CD8 02101C         3085 +2         ljmp    CFCERR
0CDB 00             3086 +2         nop
                    3087 +1         IF (0 <> -1)
0CDC 753D00         3088 +1             mov         D1, #0     
                    3089 +1         ELSE
                    3090 +1             mov         D1, #32        
                    3091 +1         ENDIF                    
                    3092 +1         IF (4 <> -1)
0CDF 753E04         3093 +1             mov         D2, #4     
                    3094 +1         ELSE
                    3095 +1             mov         D2, #32        
                    3096 +1         ENDIF                    
0CE2 7415           3097 +1         mov       A, #21
0CE4 121237         3098 +1         lcall     PRINTCHAR        
                    3100            ;--------------------------
0CE7 12113C         3101    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3102 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0CEA 200C03         3103 +1         jb      SKRD, $+6
0CED 020FD0         3104 +1         ljmp    ERR_SKRD
0CF0 00             3105 +1         nop
                    3107 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia c
                                                                               lonka (narazil som na spomalovaciu) <<<
                    3108 +1                                                                                             
                                                                                                                 
                    3109 +1                                                                                             
                                                                                                                 
                    3110 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              3111 +1         COUNT    SET    COUNT+1                   
                    3112 +1         
0CF1 200A1B         3113 +1         jb      MB2, ENDD15
0CF4 304204         3114 +1         jnb     PKI2, $+7
0CF7 C222           3115 +1         clr     FAST
0CF9 D223           3116 +1         setb    SLOW
0CFB D238           3117 +1         setb    STOPPED         
0CFD D252           3118 +1         setb    ERRF2_U
0CFF D25A           3119 +1         setb    ERRF2_D
0D01 0536           3120 +1         inc     ERRF2_C
0D03 C21A           3121 +1                 clr     PKO2                               
0D05 C22A           3122 +1         clr     PO2U            
0D07 C229           3123 +1         clr     PO2D              
0D09 1211A9         3124 +1                 lcall   WRITEPORTS
0D0C 0207C5         3125 +1         ljmp    DOWN2_MB2
0D0F                3126 +1 ENDD15:
0D0F 00             3127 +1         nop
0D10 2009D4         3129            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    3130    ;        CLR_FLOOR_ERR   ERRF2     
0D13 C221           3131            clr     DOWN            ; zastav motor
0D15 D23B           3132            setb    DOWNOld         ;       (a zalohuj)
0D17 C23A           3133            clr     UPOld           ;       (a zalohuj)
0D19 C222           3134            clr     FAST            ; 
DEBUGPOR                                                                                                      PAGE 56

0D1B 1211A9         3135            lcall   WRITEPORTS      ; 
0D1E 0203EE         3136            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    3137    
                    3138            
                    3139    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    3140    
0D21                3141    FLOOR4:
                    3142            ;--------------------------
                    3143 +1         CFCSS     19, 22, -1, -1, D1
0D21 633C16         3144 +1         xrl             G,  #22             
                    3145 +1         IF (D1 <> -1)
0D24 E53D           3146 +1             mov   A,  D1         
0D26 623C           3147 +1             xrl   G,  A          
                    3148 +1         ENDIF    
0D28 E53C           3149 +1         mov   A,  G              
                    3150 +2         LCJNE A,  #19, CFCERR     
0D2A B41303         3151 +2         cjne    A, #19, $+6
0D2D 020D33         3152 +2         jmp     $+6
0D30 02101C         3153 +2         ljmp    CFCERR
0D33 00             3154 +2         nop
                    3155 +1         IF (-1 <> -1)
                    3156 +1             mov         D1, #-1     
                    3157 +1         ELSE
0D34 753D20         3158 +1             mov         D1, #32        
                    3159 +1         ENDIF                    
                    3160 +1         IF (-1 <> -1)
                    3161 +1             mov         D2, #-1     
                    3162 +1         ELSE
0D37 753E20         3163 +1             mov         D2, #32        
                    3164 +1         ENDIF                    
0D3A 7413           3165 +1         mov       A, #19
0D3C 121237         3166 +1         lcall     PRINTCHAR        
                    3168            ;--------------------------
                    3169 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0D3F 53240F         3170 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0D42 D227           3171 +1         setb    FLED4
0D44 1211A9         3172 +1         lcall   WRITEPORTS
0D47 C238           3174            clr     STOPPED
                    3175 +1         TIMER2  60              ; (Timer - 3s)
0D49 752D3C         3176 +1            mov           T2_C, #60                              
0D4C C262           3177 +1                  clr       T2_F                                  
0D4E D2CA           3178 +1                  setb      TR2                                             
                    3180 +1         ROZSVIET_SMER_LED
0D50 D22F           3181 +1         setb    LEDU            ;
0D52 D22E           3182 +1         setb    LEDD            ;
0D54 1211A9         3183 +1         lcall   WRITEPORTS      ;
0D57 12113C         3185    F4S:    lcall   READPORTS     ;-; nacitanie dat
                    3186 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0D5A 200A03         3187 +1         jb      MB2, $+6
0D5D 021002         3188 +1         ljmp    ERRFLOOR
0D60 00             3189 +1         nop
                    3191 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0D61 200C03         3192 +1         jb      SKRD, $+6
0D64 021002         3193 +1         ljmp    ERRFLOOR
0D67 00             3194 +1         nop
DEBUGPOR                                                                                                      PAGE 57

                    3196 +1         ZRUS_POSCH 4
0D68 C21C           3197 +1         clr     PKO4       
0D6A C22D           3198 +1         clr     PO4U      
0D6C C22D           3199 +1         clr     PO4D      
0D6E 1211A9         3200 +1         lcall   WRITEPORTS
0D71 3062E3         3202            jnb                T2_F, F4S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    3203 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0D74 A20D           3204 +1         mov      C, DP          
0D76 720E           3205 +1         orl      C, DPZK        
0D78 720F           3206 +1         orl      C, DPK         
0D7A 9218           3207 +1         mov      KS, C          
0D7C 922F           3208 +1         mov      LEDU, C        
0D7E 922E           3209 +1         mov      LEDD, C        
0D80 1211A9         3210 +1         lcall   WRITEPORTS      
0D83 200FD1         3212            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0D86 3045CE         3213            jnb     DOORCLSD, F4S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    3214 +1         JE_VYBRATE_POSCHODIE F4S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0D89 A20D           3215 +1         mov      C, DP         
0D8B 720E           3216 +1         orl      C, DPZK        
0D8D 720F           3217 +1         orl      C, DPK         
0D8F 5006           3218 +1         jnc      $+8            
0D91 E528           3219 +1         mov      A, INPORTA     
0D93 541E           3220 +1         anl      A, #00011110b  
0D95 60C0           3221 +1         jz       F4S       
                    3223            ;clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
                    3224            ;clr     PO4            ;
                    3225            ;lcall   WRITEPORTS      ;
                    3226            ;jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0D97 E528           3227            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0D99 852BF0         3228            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0D9C 53F00C         3229            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0D9F 63F0FF         3230            xrl     B, #0FFH        ; | |
0DA2 55F0           3231            anl     A, B            ; | |
0DA4 540E           3232            anl     A, #00001110b ;-;
0DA6 701A           3233            jnz     F4OK          ;-; ak ano, ideme na to
0DA8 E522           3234            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0DAA 541F           3235            anl     A, #00011111b ;-;
                    3236            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    3237 +1         ANLB    ACC.1, ERRF2_D  ; |
0DAC A2E1           3238 +1         mov   C, ACC.1
0DAE B05A           3239 +1         anl   C, /ERRF2_D
0DB0 92E1           3240 +1         mov   ACC.1, C
                    3242 +1         ANLB    ACC.2, ERRF2_D  ; |
0DB2 A2E2           3243 +1         mov   C, ACC.2
0DB4 B05A           3244 +1         anl   C, /ERRF2_D
0DB6 92E2           3245 +1         mov   ACC.2, C
                    3247 +1         ANLB    ACC.3, ERRF3_D  ; |
0DB8 A2E3           3248 +1         mov   C, ACC.3
0DBA B05B           3249 +1         anl   C, /ERRF3_D
0DBC 92E3           3250 +1         mov   ACC.3, C
                    3252            ;ANLB    ACC.4, ERRF3_D  ; |
0DBE 7002           3253            jnz     F4OK          ;-; ak ano, ideme na to
0DC0 8095           3254            jmp     F4S             ; Nemam sa kde hnut, opakujem
DEBUGPOR                                                                                                      PAGE 58

                    3255 +1 F4OK:   SET_DOWN                  ; rychly pohyb dole
0DC2 C220           3256 +1         clr     UP
0DC4 D221           3257 +1         setb    DOWN
0DC6 C22F           3258 +1         clr     LEDU
0DC8 D22E           3259 +1         setb    LEDD 
                    3261 +1         SET_FAST                ; 
0DCA D222           3262 +1         setb     FAST
0DCC C223           3263 +1         clr      SLOW
0DCE D218           3264 +1         setb     KS      
0DD0 1211A9         3266            lcall   WRITEPORTS      ; 
0DD3 020DD6         3267            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
                    3268    
                    3269    
0DD6                3270    DOWN4:
                    3271            ;--------------------------
                    3272 +1         CFCSS     22, 5, -1, 15, -1
0DD6 633C05         3273 +1         xrl             G,  #5             
                    3274 +1         IF (-1 <> -1)
                    3275 +1             mov   A,  -1         
                    3276 +1             xrl   G,  A          
                    3277 +1         ENDIF    
0DD9 E53C           3278 +1         mov   A,  G              
                    3279 +2         LCJNE A,  #22, CFCERR     
0DDB B41603         3280 +2         cjne    A, #22, $+6
0DDE 020DE4         3281 +2         jmp     $+6
0DE1 02101C         3282 +2         ljmp    CFCERR
0DE4 00             3283 +2         nop
                    3284 +1         IF (-1 <> -1)
                    3285 +1             mov         D1, #-1     
                    3286 +1         ELSE
0DE5 753D20         3287 +1             mov         D1, #32        
                    3288 +1         ENDIF                    
                    3289 +1         IF (15 <> -1)
0DE8 753E0F         3290 +1             mov         D2, #15     
                    3291 +1         ELSE
                    3292 +1             mov         D2, #32        
                    3293 +1         ENDIF                    
0DEB 7416           3294 +1         mov       A, #22
0DED 121237         3295 +1         lcall     PRINTCHAR        
                    3297            ;--------------------------
                    3298 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0DF0 53240F         3299 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0DF3 D227           3300 +1         setb    FLED4
0DF5 1211A9         3301 +1         lcall   WRITEPORTS
                    3303 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0DF8 121094         3304 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0DFB 12113C         3305 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0DFE 3009FA         3306 +1         jnb     MB1, $-3  ; 
0E01 121094         3307 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E04 12113C         3309    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    3310 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E07 200C03         3311 +1         jb      SKRD, $+6
0E0A 020FD0         3312 +1         ljmp    ERR_SKRD
0E0D 00             3313 +1         nop
                    3315 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadli 2 spomalovacie
DEBUGPOR                                                                                                      PAGE 59

                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    3316 +1                                                                                             
                                                                                                                 
                    3317 +1                                                                                             
                                                                                                                 
                    3318 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              3319 +1         COUNT    SET    COUNT+1                   
                    3320 +1         
0E0E 20091B         3321 +1         jb      MB1, ENDD16
0E11 304304         3322 +1         jnb     PKI3, $+7
0E14 C222           3323 +1         clr     FAST
0E16 D223           3324 +1         setb    SLOW
0E18 D238           3325 +1         setb    STOPPED         
0E1A D254           3326 +1         setb    ERRF34_U
0E1C D25B           3327 +1         setb    ERRF34_D
0E1E 053B           3328 +1         inc     ERRF34_C
0E20 C21B           3329 +1                 clr     PKO3                               
0E22 C22C           3330 +1         clr     PO3U            
0E24 C22B           3331 +1         clr     PO3D              
0E26 1211A9         3332 +1                 lcall   WRITEPORTS
0E29 020B1B         3333 +1         ljmp    DOWN3
0E2C                3334 +1 ENDD16:
0E2C 00             3335 +1         nop
0E2D 200AD4         3337            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    3338 +1         CLR_FLOOR_ERR   ERRF34
0E30 C254           3339 +1         clr    ERRF34_U
0E32 C25B           3340 +1         clr    ERRF34_D
0E34 00             3341 +1         nop
                    3343 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0E35 121094         3344 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E38 12113C         3345 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E3B 300AFA         3346 +1         jnb     MB2, $-3  ; 
0E3E 121094         3347 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3349            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0E41 1211A9         3350            lcall   WRITEPORTS      ;
0E44 020E47         3351            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    3352            
                    3353            
0E47                3354    DOWN4_MB2:
                    3355            ;--------------------------
                    3356 +1         CFCSS     23, 1, -1, 14, -1
0E47 633C01         3357 +1         xrl             G,  #1             
                    3358 +1         IF (-1 <> -1)
                    3359 +1             mov   A,  -1         
                    3360 +1             xrl   G,  A          
                    3361 +1         ENDIF    
0E4A E53C           3362 +1         mov   A,  G              
                    3363 +2         LCJNE A,  #23, CFCERR     
0E4C B41703         3364 +2         cjne    A, #23, $+6
0E4F 020E55         3365 +2         jmp     $+6
0E52 02101C         3366 +2         ljmp    CFCERR
0E55 00             3367 +2         nop
                    3368 +1         IF (-1 <> -1)
                    3369 +1             mov         D1, #-1     
                    3370 +1         ELSE
0E56 753D20         3371 +1             mov         D1, #32        
DEBUGPOR                                                                                                      PAGE 60

                    3372 +1         ENDIF                    
                    3373 +1         IF (14 <> -1)
0E59 753E0E         3374 +1             mov         D2, #14     
                    3375 +1         ELSE
                    3376 +1             mov         D2, #32        
                    3377 +1         ENDIF                    
0E5C 7417           3378 +1         mov       A, #23
0E5E 121237         3379 +1         lcall     PRINTCHAR        
                    3381            ;--------------------------
                    3382 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0E61 121094         3383 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E64 12113C         3384 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E67 300AFA         3385 +1         jnb     MB2, $-3  ; 
0E6A 121094         3386 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E6D                3388    DOWN4_MB2A:
0E6D 12113C         3389            lcall   READPORTS       ; nacitanie dat
                    3390 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E70 200C03         3391 +1         jb      SKRD, $+6
0E73 020FD0         3392 +1         ljmp    ERR_SKRD
0E76 00             3393 +1         nop
                    3395 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadla spomalovacia c
                                                                               lonka (narazil som na zastavovaciu) <<<
                    3396 +1                                                                                             
                                                                                                                 
                    3397 +1                                                                                             
                                                                                                                 
                    3398 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3399 +1         COUNT    SET    COUNT+1                   
                    3400 +1         
0E77 20091B         3401 +1         jb      MB1, ENDD17
0E7A 304304         3402 +1         jnb     PKI3, $+7
0E7D C222           3403 +1         clr     FAST
0E7F D223           3404 +1         setb    SLOW
0E81 D238           3405 +1         setb    STOPPED         
0E83 D254           3406 +1         setb    ERRF34_U
0E85 D25B           3407 +1         setb    ERRF34_D
0E87 053B           3408 +1         inc     ERRF34_C
0E89 C21B           3409 +1                 clr     PKO3                               
0E8B C22C           3410 +1         clr     PO3U            
0E8D C22B           3411 +1         clr     PO3D              
0E8F 1211A9         3412 +1                 lcall   WRITEPORTS
0E92 020B1B         3413 +1         ljmp    DOWN3
0E95                3414 +1 ENDD17:
0E95 00             3415 +1         nop
0E96 200AD4         3417            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3418 +1         CLR_FLOOR_ERR   ERRF34       
0E99 C254           3419 +1         clr    ERRF34_U
0E9B C25B           3420 +1         clr    ERRF34_D
0E9D 00             3421 +1         nop
                    3423            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0E9E 1211A9         3424            lcall   WRITEPORTS      ;
                    3425 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0EA1 121094         3426 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EA4 12113C         3427 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EA7 300AFA         3428 +1         jnb     MB2, $-3  ; 
0EAA 121094         3429 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
DEBUGPOR                                                                                                      PAGE 61

                    3431    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3432    ;        anl     A, #00001000b ;-;
                    3433    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0EAD                3434    DOWN4_MB2_CFC:
                    3435            ;--------------------------
                    3436 +1         CFCSS     7, 16, -1, -1, -1
0EAD 633C10         3437 +1         xrl             G,  #16             
                    3438 +1         IF (-1 <> -1)
                    3439 +1             mov   A,  -1         
                    3440 +1             xrl   G,  A          
                    3441 +1         ENDIF    
0EB0 E53C           3442 +1         mov   A,  G              
                    3443 +2         LCJNE A,  #7, CFCERR     
0EB2 B40703         3444 +2         cjne    A, #7, $+6
0EB5 020EBB         3445 +2         jmp     $+6
0EB8 02101C         3446 +2         ljmp    CFCERR
0EBB 00             3447 +2         nop
                    3448 +1         IF (-1 <> -1)
                    3449 +1             mov         D1, #-1     
                    3450 +1         ELSE
0EBC 753D20         3451 +1             mov         D1, #32        
                    3452 +1         ENDIF                    
                    3453 +1         IF (-1 <> -1)
                    3454 +1             mov         D2, #-1     
                    3455 +1         ELSE
0EBF 753E20         3456 +1             mov         D2, #32        
                    3457 +1         ENDIF                    
0EC2 7407           3458 +1         mov       A, #7
0EC4 121237         3459 +1         lcall     PRINTCHAR        
                    3461            ;--------------------------
                    3462 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3463 +1                                         
0EC7 C3             3464 +1         clr     C                       
0EC8 7400           3465 +1         mov     A, #0h                  
0ECA 7213           3466 +1         orl     C, PI3D      
0ECC B00E           3467 +1         anl     C, /DPZK                
0ECE 7243           3468 +1         orl     C, PKI3          
0ED0 B05B           3469 +1         anl     C, /ERRF3_D 
0ED2 720F           3470 +1         orl     C, DPK                  
0ED4 7238           3471 +1         orl     C, STOPPED              
0ED6 3400           3472 +1         addc    A, #0h                  
0ED8 7050           3474            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3475 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0EDA E522           3476 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0EDC 33             3477 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0EDD 547E           3478 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3479 +1 
                    3480 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3481 +2         ANLB    ACC.2, ERRF2_D  ; |
0EDF A2E2           3482 +2         mov   C, ACC.2
0EE1 B05A           3483 +2         anl   C, /ERRF2_D
0EE3 92E2           3484 +2         mov   ACC.2, C
                    3485 +2         ANLB    ACC.3, ERRF2_D  ; |
0EE5 A2E3           3486 +2         mov   C, ACC.3
DEBUGPOR                                                                                                      PAGE 62

0EE7 B05A           3487 +2         anl   C, /ERRF2_D
0EE9 92E3           3488 +2         mov   ACC.3, C
                    3489 +2         ANLB    ACC.4, ERRF3_D  ; |
0EEB A2E4           3490 +2         mov   C, ACC.4
0EED B05B           3491 +2         anl   C, /ERRF3_D
0EEF 92E4           3492 +2         mov   ACC.4, C
                    3493 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3494 +1 
0EF1 7805           3495 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3496 +1  ; LL1: 
0EF3 6006           3497 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0EF5 C3             3498 +1         clr     C               ; Inak shiftnem o 2
0EF6 33             3499 +1         rlc     A               ;
0EF7 C3             3500 +1         clr     C               ;
0EF8 33             3501 +1         rlc     A               ;
0EF9 D8F8           3502 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3503 +1 ; LL2:
0EFB E8             3504 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3506 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0EFC B40303         3507 +1         cjne    A, #3, $+6
0EFF 020F05         3508 +1         jmp     $+6
0F02 020F34         3509 +1         ljmp    DOWN4_MB1
0F05 00             3510 +1         nop
                    3512 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0F06 7405           3513 +1         mov     A, #5
0F08 C3             3514 +1         clr     C
0F09 9403           3515 +1         subb    A, #3
0F0B F8             3516 +1         mov     R0, A
0F0C E528           3517 +1         mov     A, INPORTA
0F0E 541E           3518 +1         anl     A, #00011110b
0F10 852BF0         3519 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0F13 53F00C         3520 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0F16 63F0FF         3521 +1         xrl     B, #0FFH
0F19 55F0           3522 +1         anl     A, B
0F1B C3             3523 +1         clr     C
0F1C 33             3524 +1         rlc     A
0F1D C3             3525 +1         clr     C
0F1E 33             3526 +1         rlc     A
0F1F C3             3527 +1         clr     C
0F20 33             3528 +1         rlc     A
                    3529 +1 ;LL1   
0F21 C3             3530 +1         clr     C
0F22 33             3531 +1         rlc     A
0F23 D8FC           3532 +1         djnz    R0, $-2;LL1
0F25 6003           3534            jz      D4_MB2C         ; |   ak neni zastavujem          
0F27 020F34         3535            ljmp    DOWN4_MB1       ;-; |       
0F2A D223           3536    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0F2C C222           3537            clr     FAST            ; 
0F2E 1211A9         3538            lcall   WRITEPORTS      ;
0F31 020F7D         3539            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3540            
                    3541            
0F34                3542    DOWN4_MB1:    
DEBUGPOR                                                                                                      PAGE 63

                    3543            ;--------------------------
                    3544 +1         CFCSS     25, 30, 20, 0, -1
0F34 633C1E         3545 +1         xrl             G,  #30             
                    3546 +1         IF (-1 <> -1)
                    3547 +1             mov   A,  -1         
                    3548 +1             xrl   G,  A          
                    3549 +1         ENDIF    
0F37 E53C           3550 +1         mov   A,  G              
                    3551 +2         LCJNE A,  #25, CFCERR     
0F39 B41903         3552 +2         cjne    A, #25, $+6
0F3C 020F42         3553 +2         jmp     $+6
0F3F 02101C         3554 +2         ljmp    CFCERR
0F42 00             3555 +2         nop
                    3556 +1         IF (20 <> -1)
0F43 753D14         3557 +1             mov         D1, #20     
                    3558 +1         ELSE
                    3559 +1             mov         D1, #32        
                    3560 +1         ENDIF                    
                    3561 +1         IF (0 <> -1)
0F46 753E00         3562 +1             mov         D2, #0     
                    3563 +1         ELSE
                    3564 +1             mov         D2, #32        
                    3565 +1         ENDIF                    
0F49 7419           3566 +1         mov       A, #25
0F4B 121237         3567 +1         lcall     PRINTCHAR        
                    3569            ;--------------------------
0F4E 12113C         3570    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3571 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0F51 200C03         3572 +1         jb      SKRD, $+6
0F54 020FD0         3573 +1         ljmp    ERR_SKRD
0F57 00             3574 +1         nop
                    3576 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3577 +1                                                                                             
                                                                                                                 
                    3578 +1                                                                                             
                                                                                                                 
                    3579 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3580 +1         COUNT    SET    COUNT+1                   
                    3581 +1         
0F58 200A1B         3582 +1         jb      MB2, ENDD18
0F5B 304304         3583 +1         jnb     PKI3, $+7
0F5E C222           3584 +1         clr     FAST
0F60 D223           3585 +1         setb    SLOW
0F62 D238           3586 +1         setb    STOPPED         
0F64 D253           3587 +1         setb    ERRF3_U
0F66 D25B           3588 +1         setb    ERRF3_D
0F68 0537           3589 +1         inc     ERRF3_C
0F6A C21B           3590 +1                 clr     PKO3                               
0F6C C22C           3591 +1         clr     PO3U            
0F6E C22B           3592 +1         clr     PO3D              
0F70 1211A9         3593 +1                 lcall   WRITEPORTS
0F73 020B90         3594 +1         ljmp    DOWN3_MB2
0F76                3595 +1 ENDD18:
0F76 00             3596 +1         nop
0F77 2009D4         3598            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3599    ;        CLR_FLOOR_ERR   ERRF3
DEBUGPOR                                                                                                      PAGE 64

                    3600    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3601    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3602    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3603    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3604    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3605    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3606    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
0F7A 020B1B         3607            ljmp    DOWN3         ;-; |       
                    3608    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3609    ;        setb    DOWNOld         ;       (a zalohuj)
                    3610    ;        clr     UPOld           ;       (a zalohuj)
                    3611    ;        clr     FAST            ; 
                    3612    ;        lcall   WRITEPORTS      ; 
                    3613    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3614    
                    3615                    
0F7D                3616    DOWN4_STOP:    
                    3617            ;--------------------------
                    3618 +1         CFCSS     13, 10, 0, -1, -1
0F7D 633C0A         3619 +1         xrl             G,  #10             
                    3620 +1         IF (-1 <> -1)
                    3621 +1             mov   A,  -1         
                    3622 +1             xrl   G,  A          
                    3623 +1         ENDIF    
0F80 E53C           3624 +1         mov   A,  G              
                    3625 +2         LCJNE A,  #13, CFCERR     
0F82 B40D03         3626 +2         cjne    A, #13, $+6
0F85 020F8B         3627 +2         jmp     $+6
0F88 02101C         3628 +2         ljmp    CFCERR
0F8B 00             3629 +2         nop
                    3630 +1         IF (0 <> -1)
0F8C 753D00         3631 +1             mov         D1, #0     
                    3632 +1         ELSE
                    3633 +1             mov         D1, #32        
                    3634 +1         ENDIF                    
                    3635 +1         IF (-1 <> -1)
                    3636 +1             mov         D2, #-1     
                    3637 +1         ELSE
0F8F 753E20         3638 +1             mov         D2, #32        
                    3639 +1         ENDIF                    
0F92 740D           3640 +1         mov       A, #13
0F94 121237         3641 +1         lcall     PRINTCHAR        
                    3643            ;--------------------------
0F97 12113C         3644    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3645 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0F9A 200C03         3646 +1         jb      SKRD, $+6
0F9D 020FD0         3647 +1         ljmp    ERR_SKRD
0FA0 00             3648 +1         nop
                    3650 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3651 +1                                                                                             
                                                                                                                 
                    3652 +1                                                                                             
DEBUGPOR                                                                                                      PAGE 65

                                                                                                                 
                    3653 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3654 +1         COUNT    SET    COUNT+1                   
                    3655 +1         
0FA1 200A1B         3656 +1         jb      MB2, ENDD19
0FA4 304304         3657 +1         jnb     PKI3, $+7
0FA7 C222           3658 +1         clr     FAST
0FA9 D223           3659 +1         setb    SLOW
0FAB D238           3660 +1         setb    STOPPED         
0FAD D253           3661 +1         setb    ERRF3_U
0FAF D25B           3662 +1         setb    ERRF3_D
0FB1 0537           3663 +1         inc     ERRF3_C
0FB3 C21B           3664 +1                 clr     PKO3                               
0FB5 C22C           3665 +1         clr     PO3U            
0FB7 C22B           3666 +1         clr     PO3D              
0FB9 1211A9         3667 +1                 lcall   WRITEPORTS
0FBC 020B90         3668 +1         ljmp    DOWN3_MB2
0FBF                3669 +1 ENDD19:
0FBF 00             3670 +1         nop
0FC0 2009D4         3672            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3673    ;        CLR_FLOOR_ERR   ERRF3
0FC3 C221           3674            clr     DOWN            ; zastav motor
0FC5 D23B           3675            setb    DOWNOld         ;       (a zalohuj)
0FC7 C23A           3676            clr     UPOld           ;       (a zalohuj)
0FC9 C222           3677            clr     FAST            ; 
0FCB 1211A9         3678            lcall   WRITEPORTS      ; 
0FCE 0183           3679            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3680      
                    3681      
                    3682      
                    3683    
                    3684            
0FD0                3685    ERR_SKRD:    
0FD0 C221           3686            clr     DOWN            ; zastav motor
0FD2 C222           3687            clr     FAST            ; 
0FD4 1211A9         3688            lcall   WRITEPORTS      ; 
0FD7 9013AB         3689            mov     DPTR, #STR_ERR_SKRD         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
0FDA 1211E4         3690            lcall   DISPSTR         ;
                    3691            ; Nastavenie spravneho priznaku G a D     
0FDD 753C1E         3692            mov     G, #30          ;
0FE0 753D00         3693            mov     D1, #0           ;
0FE3 753E00         3694            mov     D2, #0           ;
0FE6 020137         3695            ljmp    FLOOR1    
                    3696            
0FE9                3697    ERR_SKRH: 
0FE9 C222           3698            clr     FAST            ; zastav motor
0FEB C223           3699            clr     SLOW            ; 
0FED 1211A9         3700            lcall   WRITEPORTS      ; 
0FF0 901370         3701            mov     DPTR, #STR_ERR_SKRH         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
0FF3 1211E4         3702            lcall   DISPSTR         ;
                    3703            ; Nastavenie spravneho priznaku G a D     
0FF6 753C05         3704            mov     G, #5           ;
0FF9 753D00         3705            mov     D1, #0           ;
0FFC 753E00         3706            mov     D2, #0           ;
0FFF 020D21         3707            ljmp    FLOOR4 
                    3708            
DEBUGPOR                                                                                                      PAGE 66

1002                3709    ERRFLOOR:
1002 C222           3710            clr     FAST            ; zastav motor
1004 C223           3711            clr     SLOW            ; 
1006 1211A9         3712            lcall   WRITEPORTS      ; 
1009 9013E6         3713            mov     DPTR, #STR_ERR_FLOOR         ; vypis info o neocakavanom pohnuti sa kabiny z
                                                                                poschodia
100C 1211E4         3714            lcall   DISPSTR         ;
                    3715            ; rozblikaj vsetky LEDky
                    3716            ; pockaj kym vsetci vystupia
                    3717            ; pockaj este 3 sakundy
                    3718 +1         TIMER2  60
100F 752D3C         3719 +1            mov           T2_C, #60                              
1012 C262           3720 +1                  clr       T2_F                                  
1014 D2CA           3721 +1                  setb      TR2                                             
1016 3062FD         3723            jnb               T2_F, $                       ; 
                    3724            ;zresetuj
1019 020033         3725            ljmp     START
                    3726            
                    3727    
                    3728               
101C                3729    CFCERR:
101C C220           3730            clr     UP              ; zastav motor
101E C221           3731            clr     DOWN            ; 
1020 C222           3732            clr     FAST            ; 
1022 C223           3733            clr     SLOW            ; 
1024 1211A9         3734            lcall   WRITEPORTS      ; 
1027 901429         3735            mov     DPTR, #STR_ERR_CFC         ; vypis info o zisteni chyby toku programu
102A 1211E4         3736            lcall   DISPSTR         ;
                    3737                    
102D                3738    ENDPROG:
                    3739 +1         TIMER2  20
102D 752D14         3740 +1            mov           T2_C, #20                              
1030 C262           3741 +1                  clr       T2_F                                  
1032 D2CA           3742 +1                  setb      TR2                                             
1034 3062FD         3744            jnb     T2_F, $
1037 D218           3745            setb    KS
1039 1211A9         3746            call    WRITEPORTS     
                    3747 +1         TIMER2  20
103C 752D14         3748 +1            mov           T2_C, #20                              
103F C262           3749 +1                  clr       T2_F                                  
1041 D2CA           3750 +1                  setb      TR2                                             
1043 3062FD         3752            jnb     T2_F, $
1046 C218           3753            clr     KS
1048 1211A9         3754            call    WRITEPORTS
104B 80E0           3755            jmp     ENDPROG 
                    3756    
104D 22             3757            ret
                    3758            
                    3759            
                    3760            
                    3761    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3762    ; INT_TIMER0
                    3763    ; Obsluha prerusenia timera 0
                    3764    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
104E                3765    INT_TIMER0:
104E C0D0           3766            push    PSW
1050 C0E0           3767            push    ACC
1052 C0F0           3768            push    B
DEBUGPOR                                                                                                      PAGE 67

1054 C080           3769            push    P0
1056 C090           3770            push    P1
1058 C0A0           3771            push    P2
105A C0B0           3772            push    P3
                    3773            ;push    OUTPORTC
                    3774            
105C E52E           3775            mov     A, T0_C ;R5
105E 152E           3776            dec     T0_C    ;R5
1060 6002           3777            jz      INT_TIMER0_MAIN    
1062 8021           3778            sjmp    INT_TIMER0_END
1064                3779    INT_TIMER0_MAIN:
1064 7414           3780            mov     A, #TIMER0CONST;R6
1066 F52E           3781            mov     T0_C, A ;R5, A
1068 E52A           3782            mov     A, ERRFLOOR_U
106A 452B           3783            orl     A, ERRFLOOR_D
106C 541E           3784            anl     A, #00011110b
106E 23             3785            rl      A
106F 23             3786            rl      A
1070 23             3787            rl      A    
1071 6224           3788            xrl     OUTPORTB, A     
                    3789                          
1073 C2AF           3790            clr    EA
1075 852480         3791            mov     p0, OUTPORTB 
1078 75A0C1         3792            mov     p2, #i8255OUTB
107B C2B6           3793            clr     WRNOT
107D 00             3794            nop
107E 00             3795            nop
107F 00             3796            nop
1080 00             3797            nop
1081 D2B6           3798            setb    WRNOT
1083 D2AF           3799            setb    EA
                    3800         
1085                3801    INT_TIMER0_END:
                    3802            ;pop     OUTPORTC
1085 D0B0           3803            pop     P3
1087 D0A0           3804            pop     P2
1089 D090           3805            pop     P1
108B D080           3806            pop     P0 
108D D0F0           3807            pop     B       
108F D0E0           3808            pop     ACC
1091 D0D0           3809            pop     PSW
1093 32             3810            reti 
                    3811            
                    3812    ;INT_TIMER0:
                    3813    ;        push    ACC
                    3814    ;        mov     A, R7  
                    3815    ;        dec     R7               
                    3816    ;        jnz     INT_TIMER0_END     
                    3817    ;        mov     R7, #20h
                    3818    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    3819    ;        setb    LEDU
                    3820    ;        setb    LEDD
                    3821    ;        jmp     INT_TIMER0_WRITE
                    3822    ;INT_TIMER0_CLEAR:        
                    3823    ;        ;clr     LEDU
                    3824    ;        ;clr     LEDD
                    3825    ;INT_TIMER0_WRITE: 
                    3826    ;        lcall   WRITEPORTS
DEBUGPOR                                                                                                      PAGE 68

                    3827    ;INT_TIMER0_END: 
                    3828    ;        setb    LEDU
                    3829    ;        lcall   WRITEPORTS       
                    3830    ;        pop     ACC
                    3831    ;        reti
                    3832            
                    3833            
                    3834    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    3835    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    3836    ; 11.0592MHz/2000 = zdrzanie 1 ms
1094                3837    TIME10MS:
1094 C0D0           3838            push    PSW
1096 C001           3839            push    1 ;R1
1098 C002           3840            push    2 ;R2
                    3841    
                    3842    ;        mov     R1,#063h        ; 2
                    3843    ;                                ; *** 100x
                    3844    ;TIME0:  mov     R2,#0FFh        ; 2 
                    3845    ;TIME1:  djnz    R2,TIME1        ; 256*2   
                    3846    ;        mov     R2,#0FFh        ; 2       
                    3847    ;TIME2:  djnz    R2,TIME2        ; 256*2 
                    3848    ;        mov     R2,#024h        ; 2       
                    3849    ;TIME3:  djnz    R2,TIME3        ; 36*2
                    3850    ;        nop                     ; 1
                    3851    ;        djnz    R1,TIME0        ; 2
                    3852    ;                                ; ***
                    3853    ;        mov     R1,#02Ah        ; 2 
                    3854    ;TIME4:  djnz    R1,TIME4        ; 43*2
                    3855    
                    3856 +1         TIMER2  1
109A 752D01         3857 +1            mov           T2_C, #1                              
109D C262           3858 +1                  clr       T2_F                                  
109F D2CA           3859 +1                  setb      TR2                                             
10A1 75A61E         3861    TIME:   mov     WDTRST, #01Eh
10A4 75A6E1         3862            mov     WDTRST, #0E1h
10A7 30CA03         3863            jnb     TR2, TIMEEND 
10AA 3062F4         3864            jnb               T2_F, TIME                                     ;pockame, kym prejd
                                                                               e 50-100 ms. 
10AD                3865    TIMEEND:          
10AD D002           3866            pop     2 ;R2
10AF D001           3867            pop     1 ;R1
10B1 D0D0           3868            pop     PSW
10B3 22             3869            ret                     ; koniec
                    3870            
                    3871            
                    3872    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3873    ; STOP
                    3874    ; osetri stlacenie tlacidla STOP
                    3875    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10B4                3876    STOP:
10B4 C0D0           3877            push    PSW
10B6 C0E0           3878            push    ACC
                    3879            
                    3880            
10B8 D238           3881            setb    STOPPED
10BA C222           3882            clr     FAST
10BC C223           3883            clr     SLOW
10BE 74E1           3884            mov     A, #11100001b
DEBUGPOR                                                                                                      PAGE 69

10C0 5223           3885            anl     OUTPORTA, A 
10C2 C025           3886            push    OUTPORTC     ; ulozenie stavu smerovej signalizacie
10C4 D22F           3887            setb    LEDU
10C6 D22E           3888            setb    LEDD
10C8 1211A9         3889            lcall   WRITEPORTS
                    3890            
                    3891            ;lcall   WAITFORTIMER
                    3892 +1         TIMER2  40
10CB 752D28         3893 +1            mov           T2_C, #40                              
10CE C262           3894 +1                  clr       T2_F                                  
10D0 D2CA           3895 +1                  setb      TR2                                             
10D2 1210F2         3897    STOPC:  lcall   READPORTS1
10D5 E528           3898            mov     A, INPORTA
10D7 541E           3899            anl     A, #00011110b
10D9 60F7           3900            jz      STOPC
10DB 3062F4         3901            jnb     T2_F, STOPC 
                    3902                 
                    3903                 
10DE C22F           3904            clr     LEDU        
10E0 C22E           3905            clr     LEDD     
10E2 D0E0           3906            pop     ACC         ; obnovenie stavu smerovej signalizacie  
10E4 55C0           3907            anl     A, 0C0h
10E6 4225           3908            orl     OUTPORTC, A
                    3909            
10E8 D223           3910            setb    SLOW
10EA 1211A9         3911            lcall   WRITEPORTS
                    3912            
                    3913            
10ED D0E0           3914            pop    ACC
10EF D0D0           3915            pop    PSW
10F1 22             3916            ret        
                    3917            
                    3918    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3919    ; READPORTS1
                    3920    ; precita nove hodnoty na portoch
                    3921    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10F2                3922    READPORTS1:
10F2 C0D0           3923            push    PSW
10F4 C2AF           3924            clr     EA                  ;Treba zakazat prerusenia
                    3925            
10F6 75A61E         3926            mov     WDTRST, #01Eh
10F9 75A6E1         3927            mov     WDTRST, #0E1h
                    3928            
10FC 75A080         3929            mov     p2, #i8255INA       ; citaj data z portu A
10FF 75803F         3930            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
1102 C2B7           3931            clr     RDNOT
1104 00             3932            nop
1105 00             3933            nop
1106 00             3934            nop
1107 00             3935            nop
1108 858028         3936            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
110B D2B7           3937            setb    RDNOT
                    3938            
110D 75A081         3939            mov     p2, #i8255INB       ; citaj data z portu B
1110 7580FE         3940            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1113 C2B7           3941            clr     RDNOT
1115 00             3942            nop
DEBUGPOR                                                                                                      PAGE 70

1116 00             3943            nop
1117 00             3944            nop
1118 00             3945            nop
1119 858021         3946            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
111C D2B7           3947            setb    RDNOT
                    3948    
111E 75A082         3949            mov     p2, #i8255INC       ; citaj data z portu C
1121 75803F         3950            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1124 C2B7           3951            clr     RDNOT
1126 00             3952            nop
1127 00             3953            nop
1128 00             3954            nop
1129 00             3955            nop
112A 858022         3956            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
112D D2B7           3957            setb    RDNOT
112F 00             3958            nop
1130 00             3959            nop
1131 00             3960            nop
1132 00             3961            nop
1133 00             3962            nop
1134 00             3963            nop
1135 00             3964            nop
1136 00             3965            nop
1137 D2AF           3966            setb    EA                 ;znovu spustime prerusenia .
1139 D0D0           3967            pop     PSW
113B 22             3968            ret
                    3969    
                    3970    
                    3971    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3972    ; READPORTS
                    3973    ; precita nove hodnoty na portoch
                    3974    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
113C                3975    READPORTS:
113C C0D0           3976            push    PSW
113E C0E0           3977            push    ACC
                    3978    
1140 C2AF           3979            clr     EA                  ;Treba zakazat prerusenia
                    3980            
1142 75A61E         3981            mov     WDTRST, #01Eh
1145 75A6E1         3982            mov     WDTRST, #0E1h
                    3983            
1148 75A080         3984            mov     p2, #i8255INA       ; citaj data z portu A
114B 75803F         3985            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
114E C2B7           3986            clr     RDNOT
1150 00             3987            nop
1151 00             3988            nop
1152 00             3989            nop
1153 00             3990            nop
1154 858028         3991            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1157 D2B7           3992            setb    RDNOT
                    3993            
1159 75A081         3994            mov     p2, #i8255INB       ; citaj data z portu B
115C 7580FE         3995            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
115F C2B7           3996            clr     RDNOT
1161 00             3997            nop
1162 00             3998            nop
1163 00             3999            nop
DEBUGPOR                                                                                                      PAGE 71

1164 00             4000            nop
1165 858021         4001            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1168 D2B7           4002            setb    RDNOT
                    4003    
116A 75A082         4004            mov     p2, #i8255INC       ; citaj data z portu C
116D 75803F         4005            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1170 C2B7           4006            clr     RDNOT
1172 00             4007            nop
1173 00             4008            nop
1174 00             4009            nop
1175 00             4010            nop
1176 858022         4011            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1179 D2B7           4012            setb    RDNOT
117B 00             4013            nop
117C 00             4014            nop
117D 00             4015            nop
117E 00             4016            nop
117F 00             4017            nop
1180 00             4018            nop
1181 00             4019            nop
1182 00             4020            nop
1183 D2AF           4021            setb    EA                 ;znovu spustime prerusenia
                    4022            
                    4023            
                    4024            
                    4025            
1185 300F04         4026            jnb     DPK, READPORTS_C1
1188 C222           4027            clr     FAST
118A D223           4028            setb    SLOW
118C                4029    READPORTS_C1:         
118C 204003         4030            jb      STOPNOT, READPORTS_C
118F 1210B4         4031            lcall   STOP
1192                4032    READPORTS_C:        
1192 E528           4033            mov     A, INPORTA
1194 541E           4034            anl     A, #00011110b
1196 4223           4035            orl     OUTPORTA, A
1198 1211A9         4036            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
119B E522           4037            mov     A, INPORTC
119D 543F           4038            anl     A, #00111111b
119F 4225           4039            orl     OUTPORTC, A
11A1 1211A9         4040            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    4041            
11A4 D0E0           4042            pop    ACC
11A6 D0D0           4043            pop    PSW
11A8 22             4044            ret
                    4045            
                    4046    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4047    ; WRITEPORTS
                    4048    ; spravi zalohu vystupnych registrov a posle data von
                    4049    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11A9                4050    WRITEPORTS:
11A9 C0D0           4051            push    PSW
11AB C2AF           4052            clr     EA                  ;Treba zakazat prerusenia
                    4053            
11AD 852380         4054            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
11B0 75A0C0         4055            mov     p2, #i8255OUTA
11B3 C2B6           4056            clr     WRNOT
11B5 00             4057            nop
DEBUGPOR                                                                                                      PAGE 72

11B6 00             4058            nop
11B7 00             4059            nop
11B8 00             4060            nop
11B9 D2B6           4061            setb    WRNOT
                    4062            
11BB 852480         4063            mov     p0, OUTPORTB        ; potom port B
11BE 75A0C1         4064            mov     p2, #i8255OUTB
11C1 C2B6           4065            clr     WRNOT
11C3 00             4066            nop
11C4 00             4067            nop
11C5 00             4068            nop
11C6 00             4069            nop
11C7 D2B6           4070            setb    WRNOT
                    4071    
11C9 852580         4072            mov     p0, OUTPORTC        ; a nakoniec port C
11CC 75A0C2         4073            mov     p2, #i8255OUTC
11CF C2B6           4074            clr     WRNOT
11D1 00             4075            nop
11D2 00             4076            nop
11D3 00             4077            nop
11D4 00             4078            nop
11D5 D2B6           4079            setb    WRNOT
11D7 00             4080            nop
11D8 00             4081            nop
11D9 00             4082            nop
11DA 00             4083            nop
11DB 00             4084            nop
11DC 00             4085            nop
11DD 00             4086            nop
11DE 00             4087            nop
11DF D2AF           4088            setb     EA                  ;Treba zakazat prerusenia
11E1 D0D0           4089            pop     PSW
11E3 22             4090            ret
                    4091    
                    4092    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4093    
                    4094    
                    4095    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4096    ; DISPSTR
                    4097    ; posle na seriovu linku retazec na adrese DPTR
                    4098    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11E4                4099    DISPSTR:
11E4 C0D0           4100            push    PSW
11E6 C0E0           4101            push    ACC
11E8 C083           4102            push    DPH
11EA C082           4103            push    DPL
11EC                4104    DSPS_LOOP: 
11EC 75A61E         4105            mov     WDTRST, #01Eh
11EF 75A6E1         4106            mov     WDTRST, #0E1h          
11F2 E4             4107            clr     A
11F3 93             4108            movc    A, @A+DPTR
11F4 6006           4109            jz      DSPS_END
                    4110            ;jnb     TI, $ 
                    4111            ;clr     TI
                    4112            ;mov     SBUF, A
                    4113            
11F6 121237         4114            lcall   PRINTCHAR
11F9 A3             4115            inc     DPTR
DEBUGPOR                                                                                                      PAGE 73

11FA 80F0           4116            sjmp    DSPS_LOOP
11FC                4117    DSPS_END:
11FC D082           4118            pop     DPL
11FE D083           4119            pop     DPH
1200 D0E0           4120            pop     ACC
1202 D0D0           4121            pop     PSW
1204 22             4122            ret
                    4123            
                    4124    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4125    ; DISPSTR - no wdt
                    4126    ; posle na seriovu linku retazec na adrese DPTR
                    4127    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1205                4128    DISPSTRNOWDT:
1205 C0D0           4129            push    PSW
1207 C0E0           4130            push    ACC
1209 C083           4131            push    DPH
120B C082           4132            push    DPL
120D                4133    DSPSNWDT_LOOP:           
120D E4             4134            clr     A
120E 93             4135            movc    A, @A+DPTR
120F 6006           4136            jz      DSPSNWDT_END
                    4137            ;jnb     TI, $ 
                    4138            ;clr     TI
                    4139            ;mov     SBUF, A
1211 121237         4140            lcall   PRINTCHAR
1214 A3             4141            inc     DPTR
1215 80F6           4142            sjmp    DSPSNWDT_LOOP
1217                4143    DSPSNWDT_END:
1217 D082           4144            pop     DPL
1219 D083           4145            pop     DPH
121B D0E0           4146            pop     ACC
121D D0D0           4147            pop     PSW
121F 22             4148            ret
                    4149                                         
                    4150                                         
                =1  4151            $include (procLib.inc)     
                =1  4152    ;*******************************************************************************
                =1  4153    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  4154    ;-------------------------------------------------------------------------------
                =1  4155    ;
                =1  4156    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  4157    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  4158    ;     a nastavi sa priznak <T2_F>
                =1  4159    ; 
                =1  4160    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  4161    ;
                =1  4162    ;                mov             T2_C, #60                               ;3 sekundy
                =1  4163    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  4164    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  4165    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  4166    ;
                =1  4167    ;
                =1  4168    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
1220            =1  4169    INT_TIMER2:
1220 C2CF       =1  4170                        clr     TF2
DEBUGPOR                                                                                                      PAGE 74

1222 C0E0       =1  4171            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  4172                       
1224 E52D       =1  4173            mov     A, T2_C                             ;
1226 6005       =1  4174            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
1228 14         =1  4175                        dec           A                 ; dekrementovanie registra T2_C 
1229 F52D       =1  4176            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  4177                        
122B 8007       =1  4178            sjmp    INT_TIMER2_END          ;
122D            =1  4179    INT_TIMER2_MAIN:
122D C2CA       =1  4180                        clr           TR2                                         ; zastavime po
                                                                               citadlo
122F 752D00     =1  4181            mov     T2_C, #0                            ; Resetujeme pocitadlo
1232 D262       =1  4182                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
1234            =1  4183    INT_TIMER2_END:     
1234 D0E0       =1  4184            pop     ACC                                     
1236 32         =1  4185            reti 
                =1  4186            
                =1  4187            
                =1  4188    ;*******************************************************************************
                =1  4189    ;   Vypis znaku na seriovu linku
                =1  4190    ;-------------------------------------------------------------------------------
                =1  4191    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4192    ;
1237            =1  4193    PRINTCHAR:
1237 3099FD     =1  4194        jnb     TI, $ 
123A C299       =1  4195        clr     TI
                =1  4196    ;_1: JBC   TRE, _2
                =1  4197    ;    JMP   _1
                =1  4198    ;_2:  
123C F599       =1  4199                    mov     SBUF, A
                =1  4200        ;setb    EA
123E 22         =1  4201        ret
                =1  4202        
                =1  4203    ;*******************************************************************************
                =1  4204    ;   Nacitanie znaku zo seriovej linky
                =1  4205    ;-------------------------------------------------------------------------------
                =1  4206    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4207    ;    
123F            =1  4208    READCHAR:
123F 3098FD     =1  4209                    jnb     RI, $
1242 C298       =1  4210        clr     RI
1244 E599       =1  4211        mov     A, SBUF
1246 22         =1  4212        ret
                =1  4213    
                =1  4214    
                =1  4215        
                =1  4216                    
                    4217    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4218    
1247 0D0A5269       4219    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
124B 61646961   
124F 63692073   
1253 79737465   
1257 6D206A65   
125B 20696E69   
DEBUGPOR                                                                                                      PAGE 75

125F 6369616C   
1263 697A6F76   
1267 616E792E   
126B 0D0A00     
126E 0D0A5A61       4220    STR_WDT:          db  0dh, 0ah, 'Zapinam WDT...', 0dh, 0ah, 00h
1272 70696E61   
1276 6D205744   
127A 542E2E2E   
127E 0D0A00     
1281 0D0A4361       4221    STR_RESET:          db  0dh, 0ah, 'Cakam 10 sekund...', 0dh, 0ah, 00h
1285 6B616D20   
1289 31302073   
128D 656B756E   
1291 642E2E2E   
1295 0D0A00     
1298 52696164       4222    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
129C 69616369   
12A0 20737973   
12A4 74656D20   
12A8 6A652072   
12AC 65696E69   
12B0 6369616C   
12B4 697A6F76   
12B8 616E7920   
12BC 706F2073   
12C0 746C6163   
12C4 656E6920   
12C8 746C6163   
12CC 69646C61   
12D0 2053544F   
12D4 502E0D0A   
12D8 00         
12D9 4B616C69       4223    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
12DD 62726163   
12E1 69612076   
12E5 79746168   
12E9 75206A65   
12ED 20756B6F   
12F1 6E63656E   
12F5 612E0D0A   
12F9 00         
12FA 43687962       4224    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
12FE 61212056   
1302 79706164   
1306 6C612073   
130A 706F6D61   
130E 6C6F7661   
1312 63696120   
1316 636C6F6E   
131A 6B61210D   
131E 0A00       
1320 43687962       4225    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
1324 61212056   
1328 79706164   
132C 6C692064   
1330 76652073   
1334 706F6D61   
DEBUGPOR                                                                                                      PAGE 76

1338 6C6F7661   
133C 63696520   
1340 636C6F6E   
1344 6B79210D   
1348 0A00       
134A 43687962       4226    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
134E 61212056   
1352 79706164   
1356 6C61207A   
135A 61737461   
135E 766F7661   
1362 63696120   
1366 636C6F6E   
136A 6B61210D   
136E 0A00       
1370 43687962       4227    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
1374 6121204E   
1378 656F6361   
137C 6B617661   
1380 6E65206E   
1384 61636974   
1388 616E6965   
138C 20686F72   
1390 6E656A20   
1394 73706F6D   
1398 616C6F76   
139C 6163656A   
13A0 20636C6F   
13A4 6E6B7921   
13A8 0D0A00     
13AB 43687962       4228    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
13AF 6121204E   
13B3 656F6361   
13B7 6B617661   
13BB 6E65206E   
13BF 61636974   
13C3 616E6965   
13C7 20646F6C   
13CB 6E656A20   
13CF 73706F6D   
13D3 616C6F76   
13D7 6163656A   
13DB 20636C6F   
13DF 6E6B7921   
13E3 0D0A00     
13E6 43687962       4229    STR_ERR_FLOOR:     db  'Chyba! Neocakavane pohnutie kabyny z poschodia!', 0dh, 0ah, 00h
13EA 6121204E   
13EE 656F6361   
13F2 6B617661   
13F6 6E652070   
13FA 6F686E75   
13FE 74696520   
1402 6B616279   
1406 6E79207A   
140A 20706F73   
140E 63686F64   
DEBUGPOR                                                                                                      PAGE 77

1412 6961210D   
1416 0A00       
1418 53707573       4230    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
141C 74616D20   
1420 4B54502E   
1424 2E2E0D0A   
1428 00         
1429 446F736C       4231    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
142D 6F206B20   
1431 7A6D656E   
1435 65204B54   
1439 50210D0A   
143D 00         
                    4232    
                    4233    
----                4234            DSEG
0050                4235            org     50h            ;Pozor!
0050                4236    STACK:  DS      10h
                    4237    
                    4238    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUGPOR                                                                                                      PAGE 78

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALIB. . . . . . . . . . . . . .  C ADDR  00EDH  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  0106H  
CALIBEND2. . . . . . . . . . . .  C ADDR  0111H  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00FEH  
CFCERR . . . . . . . . . . . . .  C ADDR  101CH  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  0873H  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0C77H  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0F2AH  
DISPSTR. . . . . . . . . . . . .  C ADDR  11E4H  
DISPSTRNOWDT . . . . . . . . . .  C ADDR  1205H  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DEBUGPOR                                                                                                      PAGE 79

DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  073EH  
DOWN2ERR . . . . . . . . . . . .  C ADDR  079CH  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  07ABH  
DOWN2_C. . . . . . . . . . . . .  C ADDR  0770H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  084CH  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  0866H  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  07C5H  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  07EFH  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  081BH  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  082BH  
DOWN2_PORUCHA3 . . . . . . . . .  C ADDR  07A0H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0B1BH  
DOWN3A . . . . . . . . . . . . .  C ADDR  0B4DH  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0C81H  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0C9BH  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0B90H  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0BBAH  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0BFAH  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0CCDH  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0CE7H  
DOWN4. . . . . . . . . . . . . .  C ADDR  0DD6H  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0E04H  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0F34H  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0F4EH  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0E47H  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0E6DH  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0EADH  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  0F7DH  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  0F97H  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPH. . . . . . . . . . . . . . .  D ADDR  0083H  PREDEFINED  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPL. . . . . . . . . . . . . . .  D ADDR  0082H  PREDEFINED  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPSNWDT_END . . . . . . . . . .  C ADDR  1217H  
DSPSNWDT_LOOP. . . . . . . . . .  C ADDR  120DH  
DSPS_END . . . . . . . . . . . .  C ADDR  11FCH  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  11ECH  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  0242H  
ENDD1. . . . . . . . . . . . . .  C ADDR  02ABH  
ENDD10 . . . . . . . . . . . . .  C ADDR  0A23H  
ENDD11 . . . . . . . . . . . . .  C ADDR  0AA3H  
ENDD12 . . . . . . . . . . . . .  C ADDR  0B75H  
ENDD13 . . . . . . . . . . . . .  C ADDR  0BE2H  
ENDD14 . . . . . . . . . . . . .  C ADDR  0CC3H  
ENDD15 . . . . . . . . . . . . .  C ADDR  0D0FH  
ENDD16 . . . . . . . . . . . . .  C ADDR  0E2CH  
ENDD17 . . . . . . . . . . . . .  C ADDR  0E95H  
ENDD18 . . . . . . . . . . . . .  C ADDR  0F76H  
ENDD19 . . . . . . . . . . . . .  C ADDR  0FBFH  
ENDD2. . . . . . . . . . . . . .  C ADDR  0393H  
ENDD3. . . . . . . . . . . . . .  C ADDR  03DCH  
ENDD4. . . . . . . . . . . . . .  C ADDR  058EH  
ENDD5. . . . . . . . . . . . . .  C ADDR  05FBH  
ENDD6. . . . . . . . . . . . . .  C ADDR  06E3H  
DEBUGPOR                                                                                                      PAGE 80

ENDD7. . . . . . . . . . . . . .  C ADDR  072CH  
ENDD8. . . . . . . . . . . . . .  C ADDR  0798H  
ENDD9. . . . . . . . . . . . . .  C ADDR  0817H  
ENDPROG. . . . . . . . . . . . .  C ADDR  102DH  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR . . . . . . . . . . . .  C ADDR  1002H  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERRSIG . . . . . . . . . . . . .  D ADDR  0041H  NOT USED  
ERRSKRD_C. . . . . . . . . . . .  D ADDR  0040H  NOT USED  
ERRSKRH_C. . . . . . . . . . . .  D ADDR  003FH  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  0FD0H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  0FE9H  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
F1C. . . . . . . . . . . . . . .  C ADDR  01ADH  NOT USED  
F1OK . . . . . . . . . . . . . .  C ADDR  01D8H  
F1S. . . . . . . . . . . . . . .  C ADDR  016DH  
F2 . . . . . . . . . . . . . . .  C ADDR  0506H  
F2DOWN . . . . . . . . . . . . .  C ADDR  0520H  
F2OK . . . . . . . . . . . . . .  C ADDR  047EH  
F2S. . . . . . . . . . . . . . .  C ADDR  0424H  
F2SW . . . . . . . . . . . . . .  C ADDR  04C4H  
F2UP . . . . . . . . . . . . . .  C ADDR  050CH  
F3 . . . . . . . . . . . . . . .  C ADDR  099BH  
F3DOWN . . . . . . . . . . . . .  C ADDR  09B5H  
F3OK . . . . . . . . . . . . . .  C ADDR  0913H  
F3S. . . . . . . . . . . . . . .  C ADDR  08B9H  
F3SW . . . . . . . . . . . . . .  C ADDR  0959H  
F3UP . . . . . . . . . . . . . .  C ADDR  09A1H  
F4OK . . . . . . . . . . . . . .  C ADDR  0DC2H  
F4S. . . . . . . . . . . . . . .  C ADDR  0D57H  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
DEBUGPOR                                                                                                      PAGE 81

FLOOR1 . . . . . . . . . . . . .  C ADDR  0137H  
FLOOR2 . . . . . . . . . . . . .  C ADDR  03EEH  
FLOOR3 . . . . . . . . . . . . .  C ADDR  0883H  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0D21H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  104EH  
INT_TIMER0_END . . . . . . . . .  C ADDR  1085H  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  1064H  
INT_TIMER2 . . . . . . . . . . .  C ADDR  1220H  
INT_TIMER2_END . . . . . . . . .  C ADDR  1234H  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  122DH  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  0126H  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
MSG_LEN. . . . . . . . . . . . .  D ADDR  0042H  NOT USED  
MSG_PTR_H. . . . . . . . . . . .  D ADDR  0044H  NOT USED  
MSG_PTR_L. . . . . . . . . . . .  D ADDR  0043H  NOT USED  
MSG_PTR_REC. . . . . . . . . . .  D ADDR  0045H  NOT USED  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P1 . . . . . . . . . . . . . . .  D ADDR  0090H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
P3 . . . . . . . . . . . . . . .  D ADDR  00B0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
DEBUGPOR                                                                                                      PAGE 82

PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  NOT USED  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  NOT USED  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
PRINTCHAR. . . . . . . . . . . .  C ADDR  1237H  
PSW. . . . . . . . . . . . . . .  D ADDR  00D0H  PREDEFINED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READCHAR . . . . . . . . . . . .  C ADDR  123FH  NOT USED  
READPORTS. . . . . . . . . . . .  C ADDR  113CH  
READPORTS1 . . . . . . . . . . .  C ADDR  10F2H  
READPORTS_C. . . . . . . . . . .  C ADDR  1192H  
READPORTS_C1 . . . . . . . . . .  C ADDR  118CH  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
RI . . . . . . . . . . . . . . .  B ADDR  0098H  PREDEFINED  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0050H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  10B4H  
STOPC. . . . . . . . . . . . . .  C ADDR  10D2H  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  12D9H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  1418H  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  12FAH  NOT USED  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  1320H  NOT USED  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  1429H  
STR_ERR_FLOOR. . . . . . . . . .  C ADDR  13E6H  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  13ABH  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  1370H  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  134AH  NOT USED  
STR_INIT . . . . . . . . . . . .  C ADDR  1247H  
STR_RESET. . . . . . . . . . . .  C ADDR  1281H  
STR_STOP . . . . . . . . . . . .  C ADDR  1298H  NOT USED  
STR_WDT. . . . . . . . . . . . .  C ADDR  126EH  
S_RI . . . . . . . . . . . . . .  B ADDR  0061H  NOT USED  
T0_C . . . . . . . . . . . . . .  D ADDR  002EH  
T0_F . . . . . . . . . . . . . .  B ADDR  0060H  NOT USED  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
DEBUGPOR                                                                                                      PAGE 83

T2MOD. . . . . . . . . . . . . .  D ADDR  00C9H  NOT USED  
T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  0062H  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME . . . . . . . . . . . . . .  C ADDR  10A1H  
TIME10MS . . . . . . . . . . . .  C ADDR  1094H  
TIMEEND. . . . . . . . . . . . .  C ADDR  10ADH  
TIMER0CONST. . . . . . . . . . .    NUMB  0014H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
TRE. . . . . . . . . . . . . . .  B ADDR  0063H  NOT USED  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  033BH  
U2_MB2C. . . . . . . . . . . . .  C ADDR  068BH  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0B0BH  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  01ECH  
UP1A . . . . . . . . . . . . . .  C ADDR  021AH  
UP1_MB1. . . . . . . . . . . . .  C ADDR  0345H  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  036BH  
UP1_MB2. . . . . . . . . . . . .  C ADDR  025DH  
UP1_MB2A . . . . . . . . . . . .  C ADDR  0283H  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  02C3H  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  039AH  
UP1_STOP_C . . . . . . . . . . .  C ADDR  03B4H  
UP2. . . . . . . . . . . . . . .  C ADDR  0534H  
UP2A . . . . . . . . . . . . . .  C ADDR  0566H  
UP2_MB1. . . . . . . . . . . . .  C ADDR  0695H  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  06BBH  
UP2_MB2. . . . . . . . . . . . .  C ADDR  05A9H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  05D3H  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  0613H  NOT USED  
UP2_MB2_PORUCHA1 . . . . . . . .  C ADDR  05FFH  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  06EAH  
UP2_STOP_C . . . . . . . . . . .  C ADDR  0704H  
UP3. . . . . . . . . . . . . . .  C ADDR  09C9H  
UP3A . . . . . . . . . . . . . .  C ADDR  09FBH  
UP3ERR . . . . . . . . . . . . .  C ADDR  0A27H  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0A37H  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0AD8H  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0AFEH  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0A51H  
UP3_MB2A . . . . . . . . . . . .  C ADDR  0A7BH  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0AA7H  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0AB7H  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WDTRST . . . . . . . . . . . . .  D ADDR  00A6H  
WRITEPORTS . . . . . . . . . . .  C ADDR  11A9H  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
