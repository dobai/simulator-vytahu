DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    41    i8255INA        equ     080h
  0081          =1    42    i8255INB        equ     081h
  0082          =1    43    i8255INC        equ     082h
  0083          =1    44    i8255INCW       equ     083h
  00C0          =1    45    i8255OUTA       equ     0c0h
  00C1          =1    46    i8255OUTB       equ     0c1h
  00C2          =1    47    i8255OUTC       equ     0c2h
  00C3          =1    48    i8255OUTCW      equ     0c3h
                =1    49    
  0028          =1    50    INPORTA         data    28h         ; nutne kvoli emulatoru!!!
  0021          =1    51    INPORTB         data    21h
  0022          =1    52    INPORTC         data    22h
  0023          =1    53    OUTPORTA        data    23h
  0024          =1    54    OUTPORTB        data    24h
  0025          =1    55    OUTPORTC        data    25h
  0026          =1    56    INPORTBold      data    26h
  0027          =1    57    CTRLREG         data    27h
                =1    58    
DEBUG                                                                                                         PAGE 2

  002A          =1    59    ERRFLOOR_U      data    2Ah
  002B          =1    60    ERRFLOOR_D      data    2Bh
                =1    61    
  0051          =1    62    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1    63    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1    64    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1    65    ERRF4_U         bit     ERRFLOOR_U.4  
                =1    66    
  0052          =1    67    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1    68    ERRF23_U        bit     ERRFLOOR_U.3
  0054          =1    69    ERRF34_U        bit     ERRFLOOR_U.4   
                =1    70    
  0059          =1    71    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1    72    ERRF2_D         bit     ERRFLOOR_D.2
  005B          =1    73    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1    74    ERRF4_D         bit     ERRFLOOR_D.4   
                =1    75    
  0059          =1    76    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1    77    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1    78    ERRF34_D        bit     ERRFLOOR_D.3    
                =1    79    
  0035          =1    80    ERRF1_C         data    35h
  0036          =1    81    ERRF2_C         data    36h
  0037          =1    82    ERRF3_C         data    37h
  0038          =1    83    ERRF4_C         data    38h
                =1    84    
  0039          =1    85    ERRF12_C        data    39h
  003A          =1    86    ERRF23_C        data    3Ah
  003B          =1    87    ERRF34_C        data    3Bh
                =1    88               
  0030          =1    89    POSITION        data    30h
  0031          =1    90    LOWEST          data    31h
  0032          =1    91    HIGHEST         data    32h
  0033          =1    92    STOPTIMER       data    33h
  0034          =1    93    OUTPORTBold     data    34h
                =1    94    
  003C          =1    95    G                       data    3Ch
  003D          =1    96    D1              data    3Dh
  003E          =1    97    D2          data    3Eh
                =1    98    
  0040          =1    99    STOPNOT         bit     INPORTA.0
  0041          =1   100    PKI1            bit     INPORTA.1
  0042          =1   101    PKI2            bit     INPORTA.2
  0043          =1   102    PKI3            bit     INPORTA.3
  0044          =1   103    PKI4            bit     INPORTA.4
  0045          =1   104    DOORCLSD        bit     INPORTA.5 
                =1   105    
  0009          =1   106    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   107    MB2             bit     INPORTB.2
  000B          =1   108    SKRH            bit     INPORTB.3
  000C          =1   109    SKRD            bit     INPORTB.4
  000D          =1   110    DP              bit     INPORTB.5
  000E          =1   111    DPZK            bit     INPORTB.6
  000F          =1   112    DPK             bit     INPORTB.7
                =1   113    
  0031          =1   114    MB1old          bit     INPORTBold.1
  0032          =1   115    MB2old          bit     INPORTBold.2
  0033          =1   116    SKRHold         bit     INPORTBold.3
DEBUG                                                                                                         PAGE 3

  0034          =1   117    SKRDold         bit     INPORTBold.4
                =1   118    
  0010          =1   119    PI1             bit     INPORTC.0
  0011          =1   120    PI2D            bit     INPORTC.1
  0012          =1   121    PI2U            bit     INPORTC.2
  0013          =1   122    PI3D            bit     INPORTC.3
  0014          =1   123    PI3U            bit     INPORTC.4
  0015          =1   124    PI4             bit     INPORTC.5
                =1   125    
  0018          =1   126    KS              bit     OUTPORTA.0
  0019          =1   127    PKO1            bit     OUTPORTA.1
  001A          =1   128    PKO2            bit     OUTPORTA.2
  001B          =1   129    PKO3            bit     OUTPORTA.3
  001C          =1   130    PKO4            bit     OUTPORTA.4
                =1   131    
  0020          =1   132    UP              bit     OUTPORTB.0
  0021          =1   133    DOWN            bit     OUTPORTB.1
  0022          =1   134    FAST            bit     OUTPORTB.2
  0023          =1   135    SLOW            bit     OUTPORTB.3
  0024          =1   136    FLED1           bit     OUTPORTB.4
  0025          =1   137    FLED2           bit     OUTPORTB.5
  0026          =1   138    FLED3           bit     OUTPORTB.6
  0027          =1   139    FLED4           bit     OUTPORTB.7
                =1   140    
  0028          =1   141    PO1U            bit     OUTPORTC.0
  0028          =1   142    PO1D            bit     OUTPORTC.0
  0028          =1   143    PO1             bit     OUTPORTC.0
  0029          =1   144    PO2D            bit     OUTPORTC.1
  002A          =1   145    PO2U            bit     OUTPORTC.2
  002B          =1   146    PO3D            bit     OUTPORTC.3
  002C          =1   147    PO3U            bit     OUTPORTC.4
  002D          =1   148    PO4             bit     OUTPORTC.5
  002D          =1   149    PO4U            bit     OUTPORTC.5
  002D          =1   150    PO4D            bit     OUTPORTC.5
  002E          =1   151    LEDD            bit     OUTPORTC.6
  002F          =1   152    LEDU            bit     OUTPORTC.7
                =1   153    
  0038          =1   154    STOPPED         bit     CTRLREG.0
  0039          =1   155    DOORCLSDold     bit     CTRLREG.1
  003A          =1   156    UPold           bit     CTRLREG.2
  003B          =1   157    DOWNold         bit     CTRLREG.3
  003C          =1   158    FASTold         bit     CTRLREG.4
  003D          =1   159    SLOWold         bit     CTRLREG.5
                =1   160    
  00B6          =1   161    WRNOT           bit     0b6h        ; p3.6
  00B7          =1   162    RDNOT           bit     0b7h        ; p3.7
                =1   163    
                =1   164    ; bitove masky
                =1   165    ; 8255OUT 
                =1   166    ; port A
  0001          =1   167    bmKS              equ    00000001b
  0002          =1   168    bmPKO1            equ    00000010b
  0004          =1   169    bmPKO2            equ    00000100b
  0008          =1   170    bmPKO3            equ    00001000b
  0010          =1   171    bmPKO4            equ    00010000b
                =1   172    
                =1   173    ; port B
  0001          =1   174    bmUP              equ    00000001b
DEBUG                                                                                                         PAGE 4

  0002          =1   175    bmDOWN            equ    00000010b
  0004          =1   176    bmFAST            equ    00000100b
  0008          =1   177    bmSLOW            equ    00001000b
  0010          =1   178    bmFLED1           equ    00010000b
  0020          =1   179    bmFLED2           equ    00100000b
  0040          =1   180    bmFLED3           equ    01000000b
  0080          =1   181    bmFLED4           equ    10000000b
                =1   182    
                =1   183    ; port C
  0001          =1   184    bmPO1             equ    00000001b
  0002          =1   185    bmPO2D            equ    00000010b
  0004          =1   186    bmPO2U            equ    00000100b
  0008          =1   187    bmPO3D            equ    00001000b
  0010          =1   188    bmPO3U            equ    00010000b
  0020          =1   189    bmPO4             equ    00100000b
  0040          =1   190    bmLEDD            equ    01000000b
  0080          =1   191    bmLEDU            equ    10000000b
                =1   192    
                =1   193    ; 8255IN
                =1   194    ; port A
  0001          =1   195    bmSTOP            equ    00000001b
  0002          =1   196    bmPKI1            equ    00000010b
  0004          =1   197    bmPKI2            equ    00000100b
  0008          =1   198    bmPKI3            equ    00001000b
  0010          =1   199    bmPKI4            equ    00010000b
  0020          =1   200    bmDOORCLSD        equ    00100000b
                =1   201    
                =1   202    ; port B
  0002          =1   203    bmMB1I            equ    00000010b
  0004          =1   204    bmMB2I            equ    00000100b
  0008          =1   205    bmSKRHI           equ    00001000b
  0010          =1   206    bmSKRHD           equ    00010000b
  0020          =1   207    bmDPI             equ    00100000b
  0040          =1   208    bmDPZKI           equ    01000000b
  0080          =1   209    bmDPKI            equ    10000000b
                =1   210    
                =1   211    ; port C
  0001          =1   212    bmPI1             equ    00000001b
  0002          =1   213    bmPI2D            equ    00000010b
  0004          =1   214    bmPI2U            equ    00000100b
  0008          =1   215    bmPI3D            equ    00001000b
  0010          =1   216    bmPI3U            equ    00010000b
  0020          =1   217    bmPI4             equ    00100000b
                =1   218    
                =1   219    $include (macroLib.inc)                    
                =1   220    ;*******************************************************************************
                =1   221    ;   Sofrverovy breakpoint
                =1   222    ;-------------------------------------------------------------------------------
                =1   223    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   224    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   225    ;     nastaveny na hodnotu <INT1>
                =1   226    ;
                =1   227    ;     Emulator -> Configuration -> Single step interrupt
                =1   228    ;
                =1   229    _BP_    MACRO 
                =1   230            clr     P3.3
                =1   231            setb    EX1
                =1   232            nop
DEBUG                                                                                                         PAGE 5

                =1   233    ENDM
                =1   234    
                =1   235    
                =1   236    ;*******************************************************************************
                =1   237    ;   CFCSS - kontrolne instrukcie
                =1   238    ;-------------------------------------------------------------------------------
                =1   239    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   240    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   241    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   242    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   243    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   244    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   245    ;
                =1   246    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   247            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   248            IF (Dx <> -1)
                =1   249                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   250                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   251            ENDIF    
                =1   252            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   253            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   254            IF (D1val <> -1)
                =1   255                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   256            ENDIF
                =1   257            IF (D2val <> -1)
                =1   258                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   259            ENDIF
                =1   260            SERCHAR   #s             ;; Vypis aktualneho <s> na seriovu linku
                =1   261    ENDM
                =1   262    
                =1   263    ;*******************************************************************************
                =1   264    ;   Vypis znaku na seriovu linku
                =1   265    ;-------------------------------------------------------------------------------
                =1   266    ;     Vypise jeden znak (prijaty ako parameter CHAR) na seriovu linku.   
                =1   267    ;
                =1   268    SERCHAR MACRO CHAR
                =1   269                    mov               A, CHAR
                =1   270        jnb     TI, $ 
                =1   271        clr     TI
                =1   272                    mov     SBUF, A
                =1   273        
                =1   274    ENDM
                =1   275    
                =1   276    
                =1   277    
                =1   278    ;*******************************************************************************
                =1   279    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   280    ;-------------------------------------------------------------------------------
                =1   281    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   282    ;
                =1   283    
                =1   284    ; Long jump if zero
                =1   285    LJZ     MACRO   NAVESTIE
                =1   286            jnz     $+5
                =1   287            ljmp    NAVESTIE
                =1   288            nop
                =1   289    ENDM
DEBUG                                                                                                         PAGE 6

                =1   290    
                =1   291    ; Long jump if not zero
                =1   292    LJNZ    MACRO   NAVESTIE
                =1   293            jz      $+5
                =1   294            ljmp    NAVESTIE
                =1   295            nop
                =1   296    ENDM
                =1   297    
                =1   298    ; Long jump if bit set
                =1   299    LJB     MACRO   TESTBIT, NAVESTIE
                =1   300            jnb     TESTBIT, $+6
                =1   301            ljmp    NAVESTIE
                =1   302            nop
                =1   303    ENDM
                =1   304    
                =1   305    ; Long jump if bit not set
                =1   306    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   307            jb      TESTBIT, $+6
                =1   308            ljmp    NAVESTIE
                =1   309            nop
                =1   310    ENDM
                =1   311    
                =1   312    ; Compare & long jump if not equal
                =1   313    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   314            cjne    OP1, OP2, $+6
                =1   315            jmp     $+6
                =1   316            ljmp    NAVESTIE
                =1   317            nop
                =1   318    ENDM
                =1   319    
                =1   320    ;*******************************************************************************
                =1   321    ;   Modifikacie instrukcii x51
                =1   322    ;-------------------------------------------------------------------------------
                =1   323    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   324    ;
                =1   325    
                =1   326    ;Logical and (bit operands)
                =1   327    ANLB   MACRO   BIT1, BIT2
                =1   328            mov   C, BIT1
                =1   329            anl   C, /BIT2
                =1   330            mov   BIT1, C
                =1   331    ENDM
                =1   332    
                =1   333    ; Compare & long jump if equal
                =1   334    LCJE     MACRO   OP1, OP2, NAVESTIE
                =1   335            cjne    OP1, OP2, $+7
                =1   336            jmp    NAVESTIE
                =1   337            nop
                =1   338    ENDM
                =1   339    
                =1   340    
                =1   341    ;*******************************************************************************
                =1   342    ;   Signalizacia polohy kabiny
                =1   343    ;-------------------------------------------------------------------------------
                =1   344    ;     Signalizuje polohu kabiny na signalizacnom paneli. 
                =1   345    ;     Smerove sipky budu signalizovat zastavenie kabiny,
                =1   346    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   347    ;     Vykonane zmeny sa zapisu na porty     
DEBUG                                                                                                         PAGE 7

                =1   348    ;
                =1   349    POLOHA_LED  MACRO  POLOHA
                =1   350            orl     OUTPORTC, #(bmLEDU or bmLEDD)
                =1   351            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   352            setb    FLED&POLOHA
                =1   353            lcall   WRITEPORTS
                =1   354    ENDM
                     355    
  0000               356    COUNT    SET    0
                     357    
                     358    ;*******************************************************************************
                     359    ;   Oznacenie poruchoveho poschodia 
                     360    ;-------------------------------------------------------------------------------
                     361    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     362    ;
                     363    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     364                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     365                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     366            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
                     367            COUNT    SET    COUNT+1                   
                     368            
                     369            jb      TESTBIT, ENDD&LABEL
                     370            jnb     PKI&POSCH, $+7
                     371            clr     FAST
                     372            setb    SLOW
                     373            setb    STOPPED         
                     374            setb    FLOORBIT&_U
                     375            setb    FLOORBIT&_D
                     376            inc     FLOORBIT&_C
                     377                    clr     PKO&POSCH                               ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     378            clr     PO&POSCH&U            
                     379            clr     PO&POSCH&D              
                     380                    lcall   WRITEPORTS
                     381            ljmp    NAVESTIE
                     382    ENDD&LABEL:
                     383            nop
                     384    ENDM
                     385    
                     386    ;*******************************************************************************
                     387    ;   Odstranenie oznacenia poruchoveho poschodia 
                     388    ;-------------------------------------------------------------------------------
                     389    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     390    ;
                     391    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     392            clr    FLOORBIT&_U
                     393            clr    FLOORBIT&_D
                     394            nop
                     395    ENDM
                     396    
                     397    ;*******************************************************************************
DEBUG                                                                                                         PAGE 8

                     398    ;   Osetrenie zakmitov clonky
                     399    ;-------------------------------------------------------------------------------
                     400    ;        
                     401    ;
                     402    ZAKMITC MACRO   TYPCLONKY
                     403            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     404            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     405            jnb     TYPCLONKY, $-3  ; 
                     406            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     407    ENDM
                     408    
                     409    ZASTAV  MACRO  C_POSCH, SMER
                     410                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     411            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     412            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     413            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     414            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     415            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     416            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     417            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
                     418            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     419            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     420    ENDM
                     421    
                     422    NAJNIZSIE  MACRO
                     423            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     424            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     425            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     426    
                     427            ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     428            ANLB    ACC.2, ERRF2_D  ; |
                     429            ANLB    ACC.3, ERRF2_D  ; |
                     430            ANLB    ACC.4, ERRF3_D  ; |
                     431            ANLB    ACC.5, ERRF3_D  ; |
                     432    
                     433            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     434     ; LL1: 
                     435            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     436            clr     C               ; Inak shiftnem o 2
                     437            rlc     A               ;
                     438            clr     C               ;
                     439            rlc     A               ;
                     440            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     441    ; LL2:
DEBUG                                                                                                         PAGE 9

                     442            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     443    ENDM
                     444    
                     445    NAJVYSSIE  MACRO
                     446            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     447            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     448            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     449            
                     450            ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     451            ANLB    ACC.3, ERRF2_U  ; |
                     452            ANLB    ACC.4, ERRF3_U  ; |
                     453            ANLB    ACC.5, ERRF3_U  ; |
                     454            ANLB    ACC.6, ERRF4_U  ; |
                     455            
                     456            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     457     ; LL1: 
                     458            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     459            clr     C               ; Inak shiftnem o 2
                     460            rrc     A               ;
                     461            clr     C               ;
                     462            rrc     A               ;
                     463            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     464    ; LL2:
                     465            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     466            clr     C               ;
                     467            subb    A, R0           ;
                     468    ENDM
                     469    
                     470    VYSSIE_KABINA  MACRO  POSCH
                     471            mov     A, INPORTA
                     472            anl     A, #00011110b
                     473            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     474            xrl     B, #0FFH
                     475            anl     A, B
                     476            clr     C
                     477            rrc     A
                     478    ;LL1    
                     479            mov     R0, #&POSCH
                     480            clr     C
                     481            rrc     A
                     482            djnz    R0, $-2;LL1
                     483    ENDM
                     484    
                     485    NIZSIE_KABINA  MACRO  POSCH
                     486            mov     A, #5
                     487            clr     C
                     488            subb    A, #&POSCH
                     489            mov     R0, A
                     490            mov     A, INPORTA
                     491            anl     A, #00011110b
                     492            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     493            xrl     B, #0FFH
                     494            anl     A, B
DEBUG                                                                                                         PAGE 10

                     495            clr     C
                     496            rlc     A
                     497            clr     C
                     498            rlc     A
                     499            clr     C
                     500            rlc     A
                     501    ;LL1   
                     502            clr     C
                     503            rlc     A
                     504            djnz    R0, $-2;LL1
                     505    ENDM
                     506    
                     507    
                     508    
                     509    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               510    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     511                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     512                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
                     513    ;osetrenie vektorov preruseni
0000                 514            org     0000h           ; adresa odkial startuje program po resete
0000 020033          515            ljmp    START           ; skok na zaciatok kodu programu
                     516            
000B                 517            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 020FBD          518            ljmp    INT_TIMER0      ; pre citac T0
                     519                  
0033                 520            org     0033h           ; od tejto adresy sa zacina kod programu
                     521            
0033                 522    START:
0033                 523    RESET:  
                     524            ; riadiace signaly do pasivnej urovne 
0033 D2B6            525            setb    WRNOT
0035 D2B7            526            setb    RDNOT
0037 753300          527            mov     STOPTIMER, #0
003A 758140          528            mov     SP, #STACK
                     529    
                     530            ; pockame si na inicializaciu obvodov 8255  
003D 7900            531            mov     R1, #0 
003F 7AFF            532            mov     R2, #0ffh
0041 D9FE            533            djnz    R1, $
0043 DAFC            534            djnz    R2, $-2
                     535            
                     536            ; teraz ich mozeme nastavit
0045 75809B          537            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          538            mov     p2, #i8255INCW
004B C2B6            539            clr     WRNOT
004D 00              540            nop
004E 00              541            nop
004F 00              542            nop
0050 00              543            nop
0051 D2B6            544            setb    WRNOT
0053 758080          545            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          546            mov     p2, #i8255OUTCW
0059 C2B6            547            clr     WRNOT
005B 00              548            nop
005C 00              549            nop
005D 00              550            nop
DEBUG                                                                                                         PAGE 11

005E 00              551            nop
005F D2B6            552            setb    WRNOT
                     553            
                     554            ; nastavenie preruseni 
0061 C28E            555            clr     TR1                 ; zastavi sa citac T1
0063 759852          556            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     557                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     558                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     559                                        ; RI=0 (prijimaci register - nebol prijaty znak)
0066 758801          560            mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu
0069 758921          561            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     562                                        ; T1: mod 1 - 16 bitove pocitadlo
                     563                                        ; GATE=0 (programove riadenie casovaca)
                     564                                        ; C/T#=0 interne hodiny/12
                     565                                        ; T0: mod 1 - 16 bitove pocitadlo
                     566                                        ; GATE=0 (programove riadenie casovaca)
                     567                                        ; C/T#=0 interne hodiny/12
006C 758740          568            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006F 758B00          569            mov     TL1, #000h          ; inicializacia casovaca T1
0072 758DFA          570            mov     TH1, #0FAh          ; 
0075 758A00          571            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h
0078 758C4C          572            mov     TH0, #04Ch
                     573            
007B D28C            574            setb    TR0
007D D28E            575            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     576    
                     577    
                     578    
                     579    
                     580            ;Configure and Enable timer.
                     581            ;Timer Clk=11,0592/12*1 = 0,9216 MHz
                     582            ;PCON &= 0x7f   ;Set SMOD
                     583            ;SCON = 0x50;   ;8-bit,rx enable
                     584            ;TL1  = 0x00;   ;Lower Byte
                     585            ;TH1  = 0xFA;   ;Upper Byte
                     586            ;TR1  = 1;      ;Run timer
                     587    
                     588    
                     589    
                     590            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
007F 752800          591            mov     INPORTA, #0
0082 75211E          592            mov     INPORTB, #01eh      ; vsetky clonky pasivne
0085 752200          593            mov     INPORTC, #0
0088 75231E          594            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
008B 7524F0          595            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
008E 7525FF          596            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
0091 D218            597            setb    KS
0093 C238            598            clr     STOPPED
0095 1210D3          599            call    WRITEPORTS          ; zapis novu informaciu
                     600    
0098 752300          601            mov     OUTPORTA, #0
009B 752400          602            mov     OUTPORTB, #0
009E 752500          603            mov     OUTPORTC, #0
DEBUG                                                                                                         PAGE 12

00A1 1210D3          604            call    WRITEPORTS          ; zapis novu informaciu
                     605    
00A4 752800          606            mov     INPORTA, #0
00A7 752100          607            mov     INPORTB, #0         
00AA 752200          608            mov     INPORTC, #0
00AD 121074          609            call    READPORTS           ; prvotne nacitanie udajov
                     610            
00B0 752A00          611            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00B3 752B00          612            mov     ERRFLOOR_D, #0h      
                     613    
                     614            
00B6 90111D          615            mov     DPTR, #STR_INIT         ; vypis info 
00B9 12110A          616            lcall   DISPSTR                 ; o inicializacii       
                     617    
00BC                 618    CALIB:
                     619            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     620            ;setb    TR0
00BC 121074          621            lcall   READPORTS                   ; precitaj, co je na portoch
00BF 300C13          622            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00C2 D221            623            setb    DOWN                        ; inak pod dole
00C4 D222            624            setb    FAST                        ; a rychlo
00C6 C223            625            clr     SLOW                        ;
00C8 C220            626            clr     UP                
00CA 1210D3          627            lcall   WRITEPORTS                  ; zapis informaciu 
00CD                 628    CALIBLOOP:
00CD 121074          629            lcall   READPORTS                   ; 
00D0 300C02          630            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00D3 80F8            631            jmp     CALIBLOOP
00D5                 632    CALIBEND:                              
00D5 C222            633            clr     FAST                        ; zastavime v tomto smere
00D7 C221            634            clr     DOWN                        ;
00D9 D223            635            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00DB D220            636            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00DD 1210D3          637            lcall   WRITEPORTS 
00E0                 638    CALIBEND2:
00E0 121074          639            lcall   READPORTS                   ; 
00E3 2009FA          640            jb      MB1, CALIBEND2              ; 
00E6 C223            641            clr     SLOW                        ; A teraz sme uz naozaj spravne
00E8 C220            642            clr     UP                          ; 
00EA D224            643            setb    FLED1
00EC 1210D3          644            lcall   WRITEPORTS                  ; zapis informaciu
                     645            ;clr     TR0
                     646            ;_BP_
00EF 90111D          647            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
00F2 12110A          648            lcall   DISPSTR                     ;
00F5                 649    MAIN:
                     650    
                     651    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     652    ; ****************************************************************************
                     653    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     654    ; ----------------------------------------------------------------------------
                     655    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     656    ; ----------------------------------------------------------------------------
                     657    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     658    ; ****************************************************************************
                     659    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
DEBUG                                                                                                         PAGE 13

                     660    ; ----------------------------------------------------------------------------
                     661    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     662    ; ----------------------------------------------------------------------------
                     663    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     664    ; ****************************************************************************
                     665    ; POSITION
                     666    ; ****************************************************************************
                     667    
                     668    
                     669    
00F5 7D00            670            mov     R5, #0
00F7 7E14            671            mov     R6, #20
00F9 D2A9            672            setb    ET0;
                     673            
                     674            ;Inicializacia priznakov (CFCSS)
00FB 753C1E          675            mov             G, #30
00FE 753D00          676                        mov         D1, #0
0101 753E00          677            mov             D2, #0
0104 901292          678            mov   DPTR, #STR_CFC_START         ; vypis info 
0107 12110A          679            lcall DISPSTR         ;
                     680                          
                     681    
                     682    
                     683    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     684    
010A                 685    FLOOR1:
                     686            ;--------------------------
                     687 +1         CFCSS     29, 3, -1, -1, D1
010A 633C03          688 +1         xrl             G,  #3             
                     689 +1         IF (D1 <> -1)
010D E53D            690 +1             mov   A,  D1         
010F 623C            691 +1             xrl   G,  A          
                     692 +1         ENDIF    
0111 E53C            693 +1         mov   A,  G              
                     694 +2         LCJNE A,  #29, CFCERR     
0113 B41D03          695 +2         cjne    A, #29, $+6
0116 02011C          696 +2         jmp     $+6
0119 020FA1          697 +2         ljmp    CFCERR
011C 00              698 +2         nop
                     699 +1         IF (-1 <> -1)
                     700 +1             mov         D1, #-1     
                     701 +1         ENDIF
                     702 +1         IF (-1 <> -1)
                     703 +1             mov         D2, #-1     
                     704 +1         ENDIF
                     705 +2         SERCHAR   #29             
011D 741D            706 +2                 mov               A, #29
011F 3099FD          707 +2     jnb     TI, $ 
0122 C299            708 +2     clr     TI
0124 F599            709 +2                 mov     SBUF, A
                     710 +2     
                     712            ;--------------------------
                     713 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0126 4325C0          714 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0129 53240F          715 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
DEBUG                                                                                                         PAGE 14

012C D224            716 +1         setb    FLED1
012E 1210D3          717 +1         lcall   WRITEPORTS
0131 C238            719            clr     STOPPED
0133 12102C          720            lcall   WAITFORTIMER    ; simulacia TIMERu
0136 121074          721    F1S:    lcall   READPORTS     ;-; nacitanie dat
0139 C219            722            clr     PKO1          ;-; vynulovanie volby poschodia na ktorom stojim
013B C228            723            clr     PO1             ;
013D 1210D3          724            lcall   WRITEPORTS      ;
0140 200FF3          725            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0143 E528            726            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
0145 852AF0          727            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
0148 63F0FF          728            xrl     B, #0FFH        ; | |
014B 55F0            729            anl     A, B            ; | |
014D 541C            730            anl     A, #00011100b ;-; |
014F 7026            731            jnz     F1OK          ;-; ak ano, podme na to
0151 E522            732            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
0153 543E            733            anl     A, #00111110b ;-;
                     734 +1         ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
0155 A2E1            735 +1         mov   C, ACC.1
0157 B052            736 +1         anl   C, /ERRF2_U
0159 92E1            737 +1         mov   ACC.1, C
                     739 +1         ANLB    ACC.2, ERRF2_U  ; |
015B A2E2            740 +1         mov   C, ACC.2
015D B052            741 +1         anl   C, /ERRF2_U
015F 92E2            742 +1         mov   ACC.2, C
                     744 +1         ANLB    ACC.3, ERRF3_U  ; |
0161 A2E3            745 +1         mov   C, ACC.3
0163 B053            746 +1         anl   C, /ERRF3_U
0165 92E3            747 +1         mov   ACC.3, C
                     749 +1         ANLB    ACC.4, ERRF3_U  ; |
0167 A2E4            750 +1         mov   C, ACC.4
0169 B053            751 +1         anl   C, /ERRF3_U
016B 92E4            752 +1         mov   ACC.4, C
                     754 +1         ANLB    ACC.5, ERRF4_U  ; |
016D A2E5            755 +1         mov   C, ACC.5
016F B054            756 +1         anl   C, /ERRF4_U
0171 92E5            757 +1         mov   ACC.5, C
0173 7002            759            jnz     F1OK          ;-; ak ano, podme na to
0175 80BF            760            jmp     F1S             ; Nemam sa kde hnut, opakujem
0177 D220            761    F1OK:   setb    UP              ; rychly pohyb hore
0179 D222            762            setb    FAST            ; 
017B C223            763            clr     SLOW            ;
017D 1210D3          764            lcall   WRITEPORTS      ; 
0180 020183          765            jmp     UP1           ;-; prejdi do stavu UP1
                     766            
                     767            
0183                 768    UP1:
                     769            ;--------------------------
                     770 +1         CFCSS     20, 9, 27, -1, -1
0183 633C09          771 +1         xrl             G,  #9             
                     772 +1         IF (-1 <> -1)
                     773 +1             mov   A,  -1         
                     774 +1             xrl   G,  A          
                     775 +1         ENDIF    
0186 E53C            776 +1         mov   A,  G              
                     777 +2         LCJNE A,  #20, CFCERR     
DEBUG                                                                                                         PAGE 15

0188 B41403          778 +2         cjne    A, #20, $+6
018B 020191          779 +2         jmp     $+6
018E 020FA1          780 +2         ljmp    CFCERR
0191 00              781 +2         nop
                     782 +1         IF (27 <> -1)
0192 753D1B          783 +1             mov         D1, #27     
                     784 +1         ENDIF
                     785 +1         IF (-1 <> -1)
                     786 +1             mov         D2, #-1     
                     787 +1         ENDIF
                     788 +2         SERCHAR   #20             
0195 7414            789 +2                 mov               A, #20
0197 3099FD          790 +2     jnb     TI, $ 
019A C299            791 +2     clr     TI
019C F599            792 +2                 mov     SBUF, A
                     793 +2     
                     795            ;--------------------------
                     796 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
019E 4325C0          797 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
01A1 53240F          798 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
01A4 D224            799 +1         setb    FLED1
01A6 1210D3          800 +1         lcall   WRITEPORTS
                     802 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
01A9 120FF7          803 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
01AC 121074          804 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
01AF 3009FA          805 +1         jnb     MB1, $-3  ; 
01B2 120FF7          806 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
01B5 121074          808    UP1A:   lcall   READPORTS       ; nacitanie dat
                     809 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
01B8 200B03          810 +1         jb      SKRH, $+6
01BB 020F5F          811 +1         ljmp    ERR_SKRH
01BE 00              812 +1         nop
                     814            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                     815 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
                     816 +1                                                                                             
                                                                                                                 
                     817 +1                                                                                             
                                                                                                                 
                     818 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001               819 +1         COUNT    SET    COUNT+1                   
                     820 +1         
01BF 20091B          821 +1         jb      MB1, ENDD0
01C2 304204          822 +1         jnb     PKI2, $+7
01C5 C222            823 +1         clr     FAST
01C7 D223            824 +1         setb    SLOW
01C9 D238            825 +1         setb    STOPPED         
01CB D252            826 +1         setb    ERRF12_U
01CD D259            827 +1         setb    ERRF12_D
01CF 0539            828 +1         inc     ERRF12_C
01D1 C21A            829 +1                 clr     PKO2                               
01D3 C22A            830 +1         clr     PO2U            
01D5 C229            831 +1         clr     PO2D              
01D7 1210D3          832 +1                 lcall   WRITEPORTS
01DA 0204A6          833 +1         ljmp    UP2
DEBUG                                                                                                         PAGE 16

01DD                 834 +1 ENDD0:
01DD 00              835 +1         nop
01DE 200AD4          837            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                     838 +1         CLR_FLOOR_ERR   ERRF12
01E1 C252            839 +1         clr    ERRF12_U
01E3 C259            840 +1         clr    ERRF12_D
01E5 00              841 +1         nop
                     843 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
01E6 120FF7          844 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
01E9 121074          845 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
01EC 300AFA          846 +1         jnb     MB2, $-3  ; 
01EF 120FF7          847 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
01F2 D22E            849            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
01F4 1210D3          850            lcall   WRITEPORTS      ;
01F7 0201FA          851            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                     852            
                     853            
01FA                 854    UP1_MB2:
                     855            ;--------------------------
                     856 +1         CFCSS     2, 22, 13, -1, -1
01FA 633C16          857 +1         xrl             G,  #22             
                     858 +1         IF (-1 <> -1)
                     859 +1             mov   A,  -1         
                     860 +1             xrl   G,  A          
                     861 +1         ENDIF    
01FD E53C            862 +1         mov   A,  G              
                     863 +2         LCJNE A,  #2, CFCERR     
01FF B40203          864 +2         cjne    A, #2, $+6
0202 020208          865 +2         jmp     $+6
0205 020FA1          866 +2         ljmp    CFCERR
0208 00              867 +2         nop
                     868 +1         IF (13 <> -1)
0209 753D0D          869 +1             mov         D1, #13     
                     870 +1         ENDIF
                     871 +1         IF (-1 <> -1)
                     872 +1             mov         D2, #-1     
                     873 +1         ENDIF
                     874 +2         SERCHAR   #2             
020C 7402            875 +2                 mov               A, #2
020E 3099FD          876 +2     jnb     TI, $ 
0211 C299            877 +2     clr     TI
0213 F599            878 +2                 mov     SBUF, A
                     879 +2     
                     881            ;--------------------------
                     882 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
0215 120FF7          883 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0218 121074          884 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
021B 300AFA          885 +1         jnb     MB2, $-3  ; 
021E 120FF7          886 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0221 121074          888    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                     889 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0224 200B03          890 +1         jb      SKRH, $+6
0227 020F5F          891 +1         ljmp    ERR_SKRH
022A 00              892 +1         nop
                     894            ; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na zastavovaciu) <<<
                     895 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
DEBUG                                                                                                         PAGE 17

                     896 +1                                                                                             
                                                                                                                 
                     897 +1                                                                                             
                                                                                                                 
                     898 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002               899 +1         COUNT    SET    COUNT+1                   
                     900 +1         
022B 20091B          901 +1         jb      MB1, ENDD1
022E 304204          902 +1         jnb     PKI2, $+7
0231 C222            903 +1         clr     FAST
0233 D223            904 +1         setb    SLOW
0235 D238            905 +1         setb    STOPPED         
0237 D252            906 +1         setb    ERRF12_U
0239 D259            907 +1         setb    ERRF12_D
023B 0539            908 +1         inc     ERRF12_C
023D C21A            909 +1                 clr     PKO2                               
023F C22A            910 +1         clr     PO2U            
0241 C229            911 +1         clr     PO2D              
0243 1210D3          912 +1                 lcall   WRITEPORTS
0246 0204A6          913 +1         ljmp    UP2
0249                 914 +1 ENDD1:
0249 00              915 +1         nop
024A 200AD4          917            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                     918 +1         CLR_FLOOR_ERR   ERRF12   
024D C252            919 +1         clr    ERRF12_U
024F C259            920 +1         clr    ERRF12_D
0251 00              921 +1         nop
0252 D22F            923            setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0254 1210D3          924            lcall   WRITEPORTS      ;   
                     925 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0257 120FF7          926 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
025A 121074          927 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
025D 300AFA          928 +1         jnb     MB2, $-3  ; 
0260 120FF7          929 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     931    
0263                 932    UP1_MB2_CFC:     
                     933            ;--------------------------
                     934 +1         CFCSS     12, 14, -1, -1, -1
0263 633C0E          935 +1         xrl             G,  #14             
                     936 +1         IF (-1 <> -1)
                     937 +1             mov   A,  -1         
                     938 +1             xrl   G,  A          
                     939 +1         ENDIF    
0266 E53C            940 +1         mov   A,  G              
                     941 +2         LCJNE A,  #12, CFCERR     
0268 B40C03          942 +2         cjne    A, #12, $+6
026B 020271          943 +2         jmp     $+6
026E 020FA1          944 +2         ljmp    CFCERR
0271 00              945 +2         nop
                     946 +1         IF (-1 <> -1)
                     947 +1             mov         D1, #-1     
                     948 +1         ENDIF
                     949 +1         IF (-1 <> -1)
                     950 +1             mov         D2, #-1     
                     951 +1         ENDIF
                     952 +2         SERCHAR   #12             
0272 740C            953 +2                 mov               A, #12
DEBUG                                                                                                         PAGE 18

0274 3099FD          954 +2     jnb     TI, $ 
0277 C299            955 +2     clr     TI
0279 F599            956 +2                 mov     SBUF, A
                     957 +2     
                     959            ;--------------------------
                     960 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                     961 +1                                         
027B C3              962 +1         clr     C                       
027C 7400            963 +1         mov     A, #0h                  
027E 7212            964 +1         orl     C, PI2U      
0280 B00E            965 +1         anl     C, /DPZK                
0282 7242            966 +1         orl     C, PKI2          
0284 B052            967 +1         anl     C, /ERRF2_U 
0286 720F            968 +1         orl     C, DPK                  
0288 7238            969 +1         orl     C, STOPPED              
028A 3400            970 +1         addc    A, #0h                  
028C 7054            972            jnz     U1_MB2C       ;-; Ak ano, zastav
                     973 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
028E E522            974 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0290 33              975 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0291 547E            976 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     977 +1         
                     978 +2         ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
0293 A2E2            979 +2         mov   C, ACC.2
0295 B052            980 +2         anl   C, /ERRF2_U
0297 92E2            981 +2         mov   ACC.2, C
                     982 +2         ANLB    ACC.3, ERRF2_U  ; |
0299 A2E3            983 +2         mov   C, ACC.3
029B B052            984 +2         anl   C, /ERRF2_U
029D 92E3            985 +2         mov   ACC.3, C
                     986 +2         ANLB    ACC.4, ERRF3_U  ; |
029F A2E4            987 +2         mov   C, ACC.4
02A1 B053            988 +2         anl   C, /ERRF3_U
02A3 92E4            989 +2         mov   ACC.4, C
                     990 +2         ANLB    ACC.5, ERRF3_U  ; |
02A5 A2E5            991 +2         mov   C, ACC.5
02A7 B053            992 +2         anl   C, /ERRF3_U
02A9 92E5            993 +2         mov   ACC.5, C
                     994 +2         ANLB    ACC.6, ERRF4_U  ; |
02AB A2E6            995 +2         mov   C, ACC.6
02AD B054            996 +2         anl   C, /ERRF4_U
02AF 92E6            997 +2         mov   ACC.6, C
                     998 +1         
02B1 7805            999 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1000 +1  ; LL1: 
02B3 6006           1001 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
02B5 C3             1002 +1         clr     C               ; Inak shiftnem o 2
02B6 13             1003 +1         rrc     A               ;
02B7 C3             1004 +1         clr     C               ;
02B8 13             1005 +1         rrc     A               ;
02B9 D8F8           1006 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
DEBUG                                                                                                         PAGE 19

                    1007 +1 ; LL2:
02BB 7405           1008 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
02BD C3             1009 +1         clr     C               ;
02BE 98             1010 +1         subb    A, R0           ;
                    1012 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
02BF B40203         1013 +1         cjne    A, #2, $+6
02C2 0202C8         1014 +1         jmp     $+6
02C5 0202EC         1015 +1         ljmp    UP1_MB1
02C8 00             1016 +1         nop
                    1018 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
02C9 E528           1019 +1         mov     A, INPORTA
02CB 541E           1020 +1         anl     A, #00011110b
02CD 852AF0         1021 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
02D0 63F0FF         1022 +1         xrl     B, #0FFH
02D3 55F0           1023 +1         anl     A, B
02D5 C3             1024 +1         clr     C
02D6 13             1025 +1         rrc     A
                    1026 +1 ;LL1    
02D7 7802           1027 +1         mov     R0, #2
02D9 C3             1028 +1         clr     C
02DA 13             1029 +1         rrc     A
02DB D8FC           1030 +1         djnz    R0, $-2;LL1
02DD 6003           1032            jz      U1_MB2C         ; |   ak neni zastavujem         
02DF 0202EC         1033            jmp     UP1_MB1          ; |   inak nezastavim        
02E2 D223           1034    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
02E4 C222           1035            clr     FAST            ; 
02E6 1210D3         1036            lcall   WRITEPORTS      ;         
02E9 020345         1037            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1038            
                    1039            
02EC                1040    UP1_MB1:
                    1041            ;--------------------------
                    1042 +1         CFCSS     6, 10, 9, 14, -1
02EC 633C0A         1043 +1         xrl             G,  #10             
                    1044 +1         IF (-1 <> -1)
                    1045 +1             mov   A,  -1         
                    1046 +1             xrl   G,  A          
                    1047 +1         ENDIF    
02EF E53C           1048 +1         mov   A,  G              
                    1049 +2         LCJNE A,  #6, CFCERR     
02F1 B40603         1050 +2         cjne    A, #6, $+6
02F4 0202FA         1051 +2         jmp     $+6
02F7 020FA1         1052 +2         ljmp    CFCERR
02FA 00             1053 +2         nop
                    1054 +1         IF (9 <> -1)
02FB 753D09         1055 +1             mov         D1, #9     
                    1056 +1         ENDIF
                    1057 +1         IF (14 <> -1)
02FE 753E0E         1058 +1             mov         D2, #14     
                    1059 +1         ENDIF
                    1060 +2         SERCHAR   #6             
0301 7406           1061 +2                 mov               A, #6
0303 3099FD         1062 +2     jnb     TI, $ 
0306 C299           1063 +2     clr     TI
0308 F599           1064 +2                 mov     SBUF, A
                    1065 +2     
DEBUG                                                                                                         PAGE 20

                    1067            ;--------------------------
                    1068 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
030A 120FF7         1069 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
030D 121074         1070 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0310 300AFA         1071 +1         jnb     MB2, $-3  ; 
0313 120FF7         1072 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0316 121074         1074    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1075 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0319 200B03         1076 +1         jb      SKRH, $+6
031C 020F5F         1077 +1         ljmp    ERR_SKRH
031F 00             1078 +1         nop
                    1080            ;ljnb    MB2, ERR_ZAST_C; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na spo
                                                                               malovaciu) <<<
                    1081 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT
                    1082 +1                                                                                             
                                                                                                                 
                    1083 +1                                                                                             
                                                                                                                 
                    1084 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1085 +1         COUNT    SET    COUNT+1                   
                    1086 +1         
0320 200A1B         1087 +1         jb      MB2, ENDD2
0323 304204         1088 +1         jnb     PKI2, $+7
0326 C222           1089 +1         clr     FAST
0328 D223           1090 +1         setb    SLOW
032A D238           1091 +1         setb    STOPPED         
032C D252           1092 +1         setb    ERRF2_U
032E D25A           1093 +1         setb    ERRF2_D
0330 0536           1094 +1         inc     ERRF2_C
0332 C21A           1095 +1                 clr     PKO2                               
0334 C22A           1096 +1         clr     PO2U            
0336 C229           1097 +1         clr     PO2D              
0338 1210D3         1098 +1                 lcall   WRITEPORTS
033B 020524         1099 +1         ljmp    UP2_MB2
033E                1100 +1 ENDD2:
033E 00             1101 +1         nop
033F 2009D4         1103            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
0342 0204A6         1104            ljmp    UP2             ; |   inak nezastavim        
                    1105    
0345                1106    UP1_STOP:
                    1107            ;--------------------------
                    1108 +1         CFCSS     28, 16, 9, 20, -1
0345 633C10         1109 +1         xrl             G,  #16             
                    1110 +1         IF (-1 <> -1)
                    1111 +1             mov   A,  -1         
                    1112 +1             xrl   G,  A          
                    1113 +1         ENDIF    
0348 E53C           1114 +1         mov   A,  G              
                    1115 +2         LCJNE A,  #28, CFCERR     
034A B41C03         1116 +2         cjne    A, #28, $+6
034D 020353         1117 +2         jmp     $+6
0350 020FA1         1118 +2         ljmp    CFCERR
0353 00             1119 +2         nop
                    1120 +1         IF (9 <> -1)
0354 753D09         1121 +1             mov         D1, #9     
                    1122 +1         ENDIF
                    1123 +1         IF (20 <> -1)
DEBUG                                                                                                         PAGE 21

0357 753E14         1124 +1             mov         D2, #20     
                    1125 +1         ENDIF
                    1126 +2         SERCHAR   #28             
035A 741C           1127 +2                 mov               A, #28
035C 3099FD         1128 +2     jnb     TI, $ 
035F C299           1129 +2     clr     TI
0361 F599           1130 +2                 mov     SBUF, A
                    1131 +2     
                    1133            ;--------------------------
0363 121074         1134    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1135 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0366 200B03         1136 +1         jb      SKRH, $+6
0369 020F5F         1137 +1         ljmp    ERR_SKRH
036C 00             1138 +1         nop
                    1140            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    1141 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT
                    1142 +1                                                                                             
                                                                                                                 
                    1143 +1                                                                                             
                                                                                                                 
                    1144 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1145 +1         COUNT    SET    COUNT+1                   
                    1146 +1         
036D 200A1B         1147 +1         jb      MB2, ENDD3
0370 304204         1148 +1         jnb     PKI2, $+7
0373 C222           1149 +1         clr     FAST
0375 D223           1150 +1         setb    SLOW
0377 D238           1151 +1         setb    STOPPED         
0379 D252           1152 +1         setb    ERRF2_U
037B D25A           1153 +1         setb    ERRF2_D
037D 0536           1154 +1         inc     ERRF2_C
037F C21A           1155 +1                 clr     PKO2                               
0381 C22A           1156 +1         clr     PO2U            
0383 C229           1157 +1         clr     PO2D              
0385 1210D3         1158 +1                 lcall   WRITEPORTS
0388 020524         1159 +1         ljmp    UP2_MB2
038B                1160 +1 ENDD3:
038B 00             1161 +1         nop
038C 2009D4         1163            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
038F C220           1164            clr     UP              ; zastav motor
0391 D23A           1165            setb    UPOld           ;       (a zalohuj) 
0393 C23B           1166            clr     DOWNOld         ;       (a zalohuj)
0395 C222           1167            clr     FAST            ; 
0397 1210D3         1168            lcall   WRITEPORTS      ; 
039A 02039D         1169            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1170    
                    1171    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1172    
039D                1173    FLOOR2:
                    1174            ;--------------------------
                    1175 +1         CFCSS     15, 26, 0, 30, D1
039D 633C1A         1176 +1         xrl             G,  #26             
                    1177 +1         IF (D1 <> -1)
03A0 E53D           1178 +1             mov   A,  D1         
03A2 623C           1179 +1             xrl   G,  A          
                    1180 +1         ENDIF    
DEBUG                                                                                                         PAGE 22

03A4 E53C           1181 +1         mov   A,  G              
                    1182 +2         LCJNE A,  #15, CFCERR     
03A6 B40F03         1183 +2         cjne    A, #15, $+6
03A9 0203AF         1184 +2         jmp     $+6
03AC 020FA1         1185 +2         ljmp    CFCERR
03AF 00             1186 +2         nop
                    1187 +1         IF (0 <> -1)
03B0 753D00         1188 +1             mov         D1, #0     
                    1189 +1         ENDIF
                    1190 +1         IF (30 <> -1)
03B3 753E1E         1191 +1             mov         D2, #30     
                    1192 +1         ENDIF
                    1193 +2         SERCHAR   #15             
03B6 740F           1194 +2                 mov               A, #15
03B8 3099FD         1195 +2     jnb     TI, $ 
03BB C299           1196 +2     clr     TI
03BD F599           1197 +2                 mov     SBUF, A
                    1198 +2     
                    1200            ;--------------------------
                    1201 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
03BF 4325C0         1202 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
03C2 53240F         1203 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
03C5 D225           1204 +1         setb    FLED2
03C7 1210D3         1205 +1         lcall   WRITEPORTS
03CA C238           1207            clr     STOPPED
03CC 12102C         1208            lcall   WAITFORTIMER    ; simulacia TIMERu
03CF 121074         1209    F2S:    lcall   READPORTS     ;-; nacitanie dat
03D2 C21A           1210            clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
03D4 C22A           1211            clr     PO2U            ;
03D6 C229           1212            clr     PO2D            ;
03D8 1210D3         1213            lcall   WRITEPORTS      ;
03DB 200FF1         1214            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1215            ;_BP_
03DE 782A           1216            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
03E0 79F8           1217            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
03E2 7AF8           1218            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
03E4 203A0A         1219            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
03E7 E9             1220            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
03E8 F4             1221            cpl     A               ;       |
03E9 F9             1222            mov     R1, A           ;       |
03EA EA             1223            mov     A, R2           ;       A znegujeme aj masku sachty
03EB F4             1224            cpl     A               ;       |
03EC FA             1225            mov     R2, A           ;       |  
03ED E8             1226            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
03EE 6401           1227            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
03F0 F8             1228            mov     R0, A           ;       |  
03F1                1229    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
03F1 E528           1230            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
03F3 86F0           1231            mov     B, @R0          ;  | Maskujem chybne poschodia
DEBUG                                                                                                         PAGE 23

03F5 63F0FF         1232            xrl     B, #0FFH        ;  |
03F8 55F0           1233            anl     A, B            ;  |
03FA 541A           1234            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
03FC 59             1235            anl     A, R1           ;  | 
                    1236 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
03FD 6003           1237 +1         jz      $+5
03FF 020488         1238 +1         ljmp    F2
0402 00             1239 +1         nop
                    1241                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0403 E528           1242            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0405 86F0           1243            mov     B, @R0          ;  | Maskujem chybne poschodia
0407 63F0FF         1244            xrl     B, #0FFH        ;  | |
040A 55F0           1245            anl     A, B            ;  | |
040C 541A           1246            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
040E 702D           1247            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0410 E522           1248            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0412 5439           1249            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0414 5A             1250            anl     A, R2           ;  |   
0415 86F0           1251            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)      
                    1252 +1         ANLB    ACC.0, B.1      ;  | 
0417 A2E0           1253 +1         mov   C, ACC.0
0419 B0F1           1254 +1         anl   C, /B.1
041B 92E0           1255 +1         mov   ACC.0, C
                    1257 +1         ANLB    ACC.1, B.2      ;  | 
041D A2E1           1258 +1         mov   C, ACC.1
041F B0F2           1259 +1         anl   C, /B.2
0421 92E1           1260 +1         mov   ACC.1, C
                    1262 +1         ANLB    ACC.2, B.2      ;  |
0423 A2E2           1263 +1         mov   C, ACC.2
0425 B0F2           1264 +1         anl   C, /B.2
0427 92E2           1265 +1         mov   ACC.2, C
                    1267 +1         ANLB    ACC.3, B.3      ;  |
0429 A2E3           1268 +1         mov   C, ACC.3
042B B0F3           1269 +1         anl   C, /B.3
042D 92E3           1270 +1         mov   ACC.3, C
                    1272 +1         ANLB    ACC.4, B.3      ;  |
042F A2E4           1273 +1         mov   C, ACC.4
0431 B0F3           1274 +1         anl   C, /B.3
0433 92E4           1275 +1         mov   ACC.4, C
                    1277 +1         ANLB    ACC.5, B.4      ;  |
0435 A2E5           1278 +1         mov   C, ACC.5
0437 B0F4           1279 +1         anl   C, /B.4
0439 92E5           1280 +1         mov   ACC.5, C
043B 704B           1282            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1283            ; Pohyb v opacnom smere (nevieme v ktorom)
043D E8             1284    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
043E 6401           1285            xrl     A, #01h         ;  |
0440 F8             1286            mov     R0, A           ;  |
0441 B23A           1287            cpl     UPOld           ;  Znegujem stary posun
0443 B23B           1288            cpl     DOWNOld         ;  |
0445 E9             1289            mov     A, R1           ;  Znegujeme masky
0446 F4             1290            cpl     A               ;  |
0447 F9             1291            mov     R1, A           ;  |
0448 EA             1292            mov     A, R2           ;  |
DEBUG                                                                                                         PAGE 24

0449 F4             1293            cpl     A               ;  |
044A FA             1294            mov     R2, A           ;  |               
044B E528           1295            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
044D 86F0           1296            mov     B, @R0          ;  | Maskujem chybne poschodia
044F 63F0FF         1297            xrl     B, #0FFH        ;  | |
0452 55F0           1298            anl     A, B            ;  | |
0454 541A           1299            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
0456 59             1300            anl     A, R1           ;  | 
0457 702F           1301            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0459 E522           1302            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
045B 5439           1303            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
045D 5A             1304            anl     A, R2           ;  | 
045E 86F0           1305            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)      
                    1306 +1         ANLB    ACC.0, B.1      ;  | 
0460 A2E0           1307 +1         mov   C, ACC.0
0462 B0F1           1308 +1         anl   C, /B.1
0464 92E0           1309 +1         mov   ACC.0, C
                    1311 +1         ANLB    ACC.1, B.2      ;  | 
0466 A2E1           1312 +1         mov   C, ACC.1
0468 B0F2           1313 +1         anl   C, /B.2
046A 92E1           1314 +1         mov   ACC.1, C
                    1316 +1         ANLB    ACC.2, B.2      ;  |
046C A2E2           1317 +1         mov   C, ACC.2
046E B0F2           1318 +1         anl   C, /B.2
0470 92E2           1319 +1         mov   ACC.2, C
                    1321 +1         ANLB    ACC.3, B.3      ;  |
0472 A2E3           1322 +1         mov   C, ACC.3
0474 B0F3           1323 +1         anl   C, /B.3
0476 92E3           1324 +1         mov   ACC.3, C
                    1326 +1         ANLB    ACC.4, B.3      ;  |
0478 A2E4           1327 +1         mov   C, ACC.4
047A B0F3           1328 +1         anl   C, /B.3
047C 92E4           1329 +1         mov   ACC.4, C
                    1331 +1         ANLB    ACC.5, B.4      ;  |
047E A2E5           1332 +1         mov   C, ACC.5
0480 B0F4           1333 +1         anl   C, /B.4
0482 92E5           1334 +1         mov   ACC.5, C
0484 7002           1336            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0486 61CF           1337            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
0488 203A03         1338    F2:     jb      UPOld, F2UP     ;   
048B 02049A         1339            jmp     F2DOWN          ;
048E D220           1340    F2UP:   setb    UP              ; rychly pohyb hore
0490 D222           1341            setb    FAST            ; 
0492 C223           1342            clr     SLOW            ;
0494 1210D3         1343            lcall   WRITEPORTS      ; 
0497 0204A6         1344            jmp     UP2           ;-; prejdi do stavu UP2    
049A D221           1345    F2DOWN: setb    DOWN            ; rychly pohyb hore
049C D222           1346            setb    FAST            ; 
049E C223           1347            clr     SLOW            ;
04A0 1210D3         1348            lcall   WRITEPORTS      ; 
04A3 0206CB         1349            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1350            
                    1351                
04A6                1352    UP2:
                    1353            ;--------------------------
                    1354 +1         CFCSS     8, 7, 18, 0, D1
DEBUG                                                                                                         PAGE 25

04A6 633C07         1355 +1         xrl             G,  #7             
                    1356 +1         IF (D1 <> -1)
04A9 E53D           1357 +1             mov   A,  D1         
04AB 623C           1358 +1             xrl   G,  A          
                    1359 +1         ENDIF    
04AD E53C           1360 +1         mov   A,  G              
                    1361 +2         LCJNE A,  #8, CFCERR     
04AF B40803         1362 +2         cjne    A, #8, $+6
04B2 0204B8         1363 +2         jmp     $+6
04B5 020FA1         1364 +2         ljmp    CFCERR
04B8 00             1365 +2         nop
                    1366 +1         IF (18 <> -1)
04B9 753D12         1367 +1             mov         D1, #18     
                    1368 +1         ENDIF
                    1369 +1         IF (0 <> -1)
04BC 753E00         1370 +1             mov         D2, #0     
                    1371 +1         ENDIF
                    1372 +2         SERCHAR   #8             
04BF 7408           1373 +2                 mov               A, #8
04C1 3099FD         1374 +2     jnb     TI, $ 
04C4 C299           1375 +2     clr     TI
04C6 F599           1376 +2                 mov     SBUF, A
                    1377 +2     
                    1379            ;--------------------------
                    1380 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
04C8 4325C0         1381 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
04CB 53240F         1382 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
04CE D225           1383 +1         setb    FLED2
04D0 1210D3         1384 +1         lcall   WRITEPORTS
                    1386 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
04D3 120FF7         1387 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
04D6 121074         1388 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
04D9 3009FA         1389 +1         jnb     MB1, $-3  ; 
04DC 120FF7         1390 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
04DF 121074         1392    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1393 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
04E2 200B03         1394 +1         jb      SKRH, $+6
04E5 020F5F         1395 +1         ljmp    ERR_SKRH
04E8 00             1396 +1         nop
                    1398            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    1399 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT
                    1400 +1                                                                                             
                                                                                                                 
                    1401 +1                                                                                             
                                                                                                                 
                    1402 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1403 +1         COUNT    SET    COUNT+1                   
                    1404 +1         
04E9 20091B         1405 +1         jb      MB1, ENDD4
04EC 304304         1406 +1         jnb     PKI3, $+7
04EF C222           1407 +1         clr     FAST
04F1 D223           1408 +1         setb    SLOW
04F3 D238           1409 +1         setb    STOPPED         
04F5 D253           1410 +1         setb    ERRF23_U
DEBUG                                                                                                         PAGE 26

04F7 D25A           1411 +1         setb    ERRF23_D
04F9 053A           1412 +1         inc     ERRF23_C
04FB C21B           1413 +1                 clr     PKO3                               
04FD C22C           1414 +1         clr     PO3U            
04FF C22B           1415 +1         clr     PO3D              
0501 1210D3         1416 +1                 lcall   WRITEPORTS
0504 020923         1417 +1         ljmp    UP3
0507                1418 +1 ENDD4:
0507 00             1419 +1         nop
0508 200AD4         1421            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1422 +1         CLR_FLOOR_ERR   ERRF23
050B C253           1423 +1         clr    ERRF23_U
050D C25A           1424 +1         clr    ERRF23_D
050F 00             1425 +1         nop
                    1427 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0510 120FF7         1428 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0513 121074         1429 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0516 300AFA         1430 +1         jnb     MB2, $-3  ; 
0519 120FF7         1431 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
051C D22E           1433            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
051E 1210D3         1434            lcall   WRITEPORTS      ;
0521 020524         1435            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1436            
                    1437            
0524                1438    UP2_MB2:
                    1439            ;--------------------------
                    1440 +1         CFCSS     18, 26, 8, -1, D2
0524 633C1A         1441 +1         xrl             G,  #26             
                    1442 +1         IF (D2 <> -1)
0527 E53E           1443 +1             mov   A,  D2         
0529 623C           1444 +1             xrl   G,  A          
                    1445 +1         ENDIF    
052B E53C           1446 +1         mov   A,  G              
                    1447 +2         LCJNE A,  #18, CFCERR     
052D B41203         1448 +2         cjne    A, #18, $+6
0530 020536         1449 +2         jmp     $+6
0533 020FA1         1450 +2         ljmp    CFCERR
0536 00             1451 +2         nop
                    1452 +1         IF (8 <> -1)
0537 753D08         1453 +1             mov         D1, #8     
                    1454 +1         ENDIF
                    1455 +1         IF (-1 <> -1)
                    1456 +1             mov         D2, #-1     
                    1457 +1         ENDIF
                    1458 +2         SERCHAR   #18             
053A 7412           1459 +2                 mov               A, #18
053C 3099FD         1460 +2     jnb     TI, $ 
053F C299           1461 +2     clr     TI
0541 F599           1462 +2                 mov     SBUF, A
                    1463 +2     
                    1465            ;--------------------------
                    1466 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0543 120FF7         1467 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0546 121074         1468 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0549 300AFA         1469 +1         jnb     MB2, $-3  ; 
054C 120FF7         1470 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
DEBUG                                                                                                         PAGE 27

054F 121074         1472    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1473 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0552 200B03         1474 +1         jb      SKRH, $+6
0555 020F5F         1475 +1         ljmp    ERR_SKRH
0558 00             1476 +1         nop
                    1478            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    1479 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT
                    1480 +1                                                                                             
                                                                                                                 
                    1481 +1                                                                                             
                                                                                                                 
                    1482 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1483 +1         COUNT    SET    COUNT+1                   
                    1484 +1         
0559 20091B         1485 +1         jb      MB1, ENDD5
055C 304304         1486 +1         jnb     PKI3, $+7
055F C222           1487 +1         clr     FAST
0561 D223           1488 +1         setb    SLOW
0563 D238           1489 +1         setb    STOPPED         
0565 D253           1490 +1         setb    ERRF23_U
0567 D25A           1491 +1         setb    ERRF23_D
0569 053A           1492 +1         inc     ERRF23_C
056B C21B           1493 +1                 clr     PKO3                               
056D C22C           1494 +1         clr     PO3U            
056F C22B           1495 +1         clr     PO3D              
0571 1210D3         1496 +1                 lcall   WRITEPORTS
0574 020923         1497 +1         ljmp    UP3
0577                1498 +1 ENDD5:
0577 00             1499 +1         nop
0578 200AD4         1501            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
                    1502 +1         CLR_FLOOR_ERR   ERRF23       
057B C253           1503 +1         clr    ERRF23_U
057D C25A           1504 +1         clr    ERRF23_D
057F 00             1505 +1         nop
0580 D22F           1507            setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0582 1210D3         1508            lcall   WRITEPORTS      ;
                    1509 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0585 120FF7         1510 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0588 121074         1511 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
058B 300AFA         1512 +1         jnb     MB2, $-3  ; 
058E 120FF7         1513 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1515            
0591                1516    UP2_MB2_CFC:     
                    1517            ;--------------------------
                    1518 +1         CFCSS     1, 19, -1, -1, -1
0591 633C13         1519 +1         xrl             G,  #19             
                    1520 +1         IF (-1 <> -1)
                    1521 +1             mov   A,  -1         
                    1522 +1             xrl   G,  A          
                    1523 +1         ENDIF    
0594 E53C           1524 +1         mov   A,  G              
                    1525 +2         LCJNE A,  #1, CFCERR     
0596 B40103         1526 +2         cjne    A, #1, $+6
0599 02059F         1527 +2         jmp     $+6
059C 020FA1         1528 +2         ljmp    CFCERR
059F 00             1529 +2         nop
DEBUG                                                                                                         PAGE 28

                    1530 +1         IF (-1 <> -1)
                    1531 +1             mov         D1, #-1     
                    1532 +1         ENDIF
                    1533 +1         IF (-1 <> -1)
                    1534 +1             mov         D2, #-1     
                    1535 +1         ENDIF
                    1536 +2         SERCHAR   #1             
05A0 7401           1537 +2                 mov               A, #1
05A2 3099FD         1538 +2     jnb     TI, $ 
05A5 C299           1539 +2     clr     TI
05A7 F599           1540 +2                 mov     SBUF, A
                    1541 +2     
                    1543            ;--------------------------        
                    1544 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1545 +1                                         
05A9 C3             1546 +1         clr     C                       
05AA 7400           1547 +1         mov     A, #0h                  
05AC 7214           1548 +1         orl     C, PI3U      
05AE B00E           1549 +1         anl     C, /DPZK                
05B0 7243           1550 +1         orl     C, PKI3          
05B2 B053           1551 +1         anl     C, /ERRF3_U 
05B4 720F           1552 +1         orl     C, DPK                  
05B6 7238           1553 +1         orl     C, STOPPED              
05B8 3400           1554 +1         addc    A, #0h                  
05BA 7054           1556            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1557 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
05BC E522           1558 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
05BE 33             1559 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
05BF 547E           1560 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1561 +1         
                    1562 +2         ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
05C1 A2E2           1563 +2         mov   C, ACC.2
05C3 B052           1564 +2         anl   C, /ERRF2_U
05C5 92E2           1565 +2         mov   ACC.2, C
                    1566 +2         ANLB    ACC.3, ERRF2_U  ; |
05C7 A2E3           1567 +2         mov   C, ACC.3
05C9 B052           1568 +2         anl   C, /ERRF2_U
05CB 92E3           1569 +2         mov   ACC.3, C
                    1570 +2         ANLB    ACC.4, ERRF3_U  ; |
05CD A2E4           1571 +2         mov   C, ACC.4
05CF B053           1572 +2         anl   C, /ERRF3_U
05D1 92E4           1573 +2         mov   ACC.4, C
                    1574 +2         ANLB    ACC.5, ERRF3_U  ; |
05D3 A2E5           1575 +2         mov   C, ACC.5
05D5 B053           1576 +2         anl   C, /ERRF3_U
05D7 92E5           1577 +2         mov   ACC.5, C
                    1578 +2         ANLB    ACC.6, ERRF4_U  ; |
05D9 A2E6           1579 +2         mov   C, ACC.6
05DB B054           1580 +2         anl   C, /ERRF4_U
05DD 92E6           1581 +2         mov   ACC.6, C
                    1582 +1         
05DF 7805           1583 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
DEBUG                                                                                                         PAGE 29

                    1584 +1  ; LL1: 
05E1 6006           1585 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
05E3 C3             1586 +1         clr     C               ; Inak shiftnem o 2
05E4 13             1587 +1         rrc     A               ;
05E5 C3             1588 +1         clr     C               ;
05E6 13             1589 +1         rrc     A               ;
05E7 D8F8           1590 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1591 +1 ; LL2:
05E9 7405           1592 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
05EB C3             1593 +1         clr     C               ;
05EC 98             1594 +1         subb    A, R0           ;
                    1596 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
05ED B40303         1597 +1         cjne    A, #3, $+6
05F0 0205F6         1598 +1         jmp     $+6
05F3 02061A         1599 +1         ljmp    UP2_MB1
05F6 00             1600 +1         nop
                    1602 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
05F7 E528           1603 +1         mov     A, INPORTA
05F9 541E           1604 +1         anl     A, #00011110b
05FB 852AF0         1605 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
05FE 63F0FF         1606 +1         xrl     B, #0FFH
0601 55F0           1607 +1         anl     A, B
0603 C3             1608 +1         clr     C
0604 13             1609 +1         rrc     A
                    1610 +1 ;LL1    
0605 7803           1611 +1         mov     R0, #3
0607 C3             1612 +1         clr     C
0608 13             1613 +1         rrc     A
0609 D8FC           1614 +1         djnz    R0, $-2;LL1
060B 6003           1616            jz      U2_MB2C         ; |   ak neni zastavujem  
060D 02061A         1617            ljmp    UP2_MB1         ; |   inak nezastavim
0610 D223           1618    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
0612 C222           1619            clr     FAST            ; 
0614 1210D3         1620            lcall   WRITEPORTS      ;
0617 020673         1621            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    1622          
061A                1623    UP2_MB1:
                    1624            ;--------------------------
                    1625 +1         CFCSS     26, 27, 0, 17, -1
061A 633C1B         1626 +1         xrl             G,  #27             
                    1627 +1         IF (-1 <> -1)
                    1628 +1             mov   A,  -1         
                    1629 +1             xrl   G,  A          
                    1630 +1         ENDIF    
061D E53C           1631 +1         mov   A,  G              
                    1632 +2         LCJNE A,  #26, CFCERR     
061F B41A03         1633 +2         cjne    A, #26, $+6
0622 020628         1634 +2         jmp     $+6
0625 020FA1         1635 +2         ljmp    CFCERR
0628 00             1636 +2         nop
                    1637 +1         IF (0 <> -1)
0629 753D00         1638 +1             mov         D1, #0     
                    1639 +1         ENDIF
                    1640 +1         IF (17 <> -1)
062C 753E11         1641 +1             mov         D2, #17     
DEBUG                                                                                                         PAGE 30

                    1642 +1         ENDIF
                    1643 +2         SERCHAR   #26             
062F 741A           1644 +2                 mov               A, #26
0631 3099FD         1645 +2     jnb     TI, $ 
0634 C299           1646 +2     clr     TI
0636 F599           1647 +2                 mov     SBUF, A
                    1648 +2     
                    1650            ;--------------------------
                    1651 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0638 120FF7         1652 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
063B 121074         1653 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
063E 300AFA         1654 +1         jnb     MB2, $-3  ; 
0641 120FF7         1655 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0644 121074         1657    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    1658 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0647 200B03         1659 +1         jb      SKRH, $+6
064A 020F5F         1660 +1         ljmp    ERR_SKRH
064D 00             1661 +1         nop
                    1663            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    1664 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT
                    1665 +1                                                                                             
                                                                                                                 
                    1666 +1                                                                                             
                                                                                                                 
                    1667 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              1668 +1         COUNT    SET    COUNT+1                   
                    1669 +1         
064E 200A1B         1670 +1         jb      MB2, ENDD6
0651 304304         1671 +1         jnb     PKI3, $+7
0654 C222           1672 +1         clr     FAST
0656 D223           1673 +1         setb    SLOW
0658 D238           1674 +1         setb    STOPPED         
065A D253           1675 +1         setb    ERRF3_U
065C D25B           1676 +1         setb    ERRF3_D
065E 0537           1677 +1         inc     ERRF3_C
0660 C21B           1678 +1                 clr     PKO3                               
0662 C22C           1679 +1         clr     PO3U            
0664 C22B           1680 +1         clr     PO3D              
0666 1210D3         1681 +1                 lcall   WRITEPORTS
0669 0209B4         1682 +1         ljmp    UP3_MB2
066C                1683 +1 ENDD6:
066C 00             1684 +1         nop
066D 2009D4         1686            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
0670 020923         1687            ljmp    UP3             ; 
                    1688    
                    1689    
0673                1690    UP2_STOP:
                    1691            ;--------------------------
                    1692 +1         CFCSS     4, 5, 9, 15, -1
0673 633C05         1693 +1         xrl             G,  #5             
                    1694 +1         IF (-1 <> -1)
                    1695 +1             mov   A,  -1         
                    1696 +1             xrl   G,  A          
                    1697 +1         ENDIF    
0676 E53C           1698 +1         mov   A,  G              
                    1699 +2         LCJNE A,  #4, CFCERR     
DEBUG                                                                                                         PAGE 31

0678 B40403         1700 +2         cjne    A, #4, $+6
067B 020681         1701 +2         jmp     $+6
067E 020FA1         1702 +2         ljmp    CFCERR
0681 00             1703 +2         nop
                    1704 +1         IF (9 <> -1)
0682 753D09         1705 +1             mov         D1, #9     
                    1706 +1         ENDIF
                    1707 +1         IF (15 <> -1)
0685 753E0F         1708 +1             mov         D2, #15     
                    1709 +1         ENDIF
                    1710 +2         SERCHAR   #4             
0688 7404           1711 +2                 mov               A, #4
068A 3099FD         1712 +2     jnb     TI, $ 
068D C299           1713 +2     clr     TI
068F F599           1714 +2                 mov     SBUF, A
                    1715 +2     
                    1717            ;--------------------------
0691                1718    UP2_STOP_C:
0691 121074         1719            lcall   READPORTS       ; nacitanie dat
                    1720 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0694 200B03         1721 +1         jb      SKRH, $+6
0697 020F5F         1722 +1         ljmp    ERR_SKRH
069A 00             1723 +1         nop
                    1725            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    1726 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT
                    1727 +1                                                                                             
                                                                                                                 
                    1728 +1                                                                                             
                                                                                                                 
                    1729 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              1730 +1         COUNT    SET    COUNT+1                   
                    1731 +1         
069B 200A1B         1732 +1         jb      MB2, ENDD7
069E 304304         1733 +1         jnb     PKI3, $+7
06A1 C222           1734 +1         clr     FAST
06A3 D223           1735 +1         setb    SLOW
06A5 D238           1736 +1         setb    STOPPED         
06A7 D253           1737 +1         setb    ERRF3_U
06A9 D25B           1738 +1         setb    ERRF3_D
06AB 0537           1739 +1         inc     ERRF3_C
06AD C21B           1740 +1                 clr     PKO3                               
06AF C22C           1741 +1         clr     PO3U            
06B1 C22B           1742 +1         clr     PO3D              
06B3 1210D3         1743 +1                 lcall   WRITEPORTS
06B6 0209B4         1744 +1         ljmp    UP3_MB2
06B9                1745 +1 ENDD7:
06B9 00             1746 +1         nop
06BA 2009D4         1748            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
06BD C220           1749            clr     UP              ; zastav motor
06BF D23A           1750            setb    UPOld           ;       (a zalohuj)
06C1 C23B           1751            clr     DOWNOld         ;       (a zalohuj)
06C3 C222           1752            clr     FAST            ; 
06C5 1210D3         1753            lcall   WRITEPORTS      ; 
06C8 02081A         1754            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    1755            
06CB                1756    DOWN2:
                    1757            ;--------------------------
DEBUG                                                                                                         PAGE 32

                    1758 +1         CFCSS     24, 9, 6, 9, D2
06CB 633C09         1759 +1         xrl             G,  #9             
                    1760 +1         IF (D2 <> -1)
06CE E53E           1761 +1             mov   A,  D2         
06D0 623C           1762 +1             xrl   G,  A          
                    1763 +1         ENDIF    
06D2 E53C           1764 +1         mov   A,  G              
                    1765 +2         LCJNE A,  #24, CFCERR     
06D4 B41803         1766 +2         cjne    A, #24, $+6
06D7 0206DD         1767 +2         jmp     $+6
06DA 020FA1         1768 +2         ljmp    CFCERR
06DD 00             1769 +2         nop
                    1770 +1         IF (6 <> -1)
06DE 753D06         1771 +1             mov         D1, #6     
                    1772 +1         ENDIF
                    1773 +1         IF (9 <> -1)
06E1 753E09         1774 +1             mov         D2, #9     
                    1775 +1         ENDIF
                    1776 +2         SERCHAR   #24             
06E4 7418           1777 +2                 mov               A, #24
06E6 3099FD         1778 +2     jnb     TI, $ 
06E9 C299           1779 +2     clr     TI
06EB F599           1780 +2                 mov     SBUF, A
                    1781 +2     
                    1783            ;--------------------------
                    1784 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
06ED 4325C0         1785 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
06F0 53240F         1786 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
06F3 D225           1787 +1         setb    FLED2
06F5 1210D3         1788 +1         lcall   WRITEPORTS
                    1790 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
06F8 120FF7         1791 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
06FB 121074         1792 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06FE 3009FA         1793 +1         jnb     MB1, $-3  ; 
0701 120FF7         1794 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0704 121074         1796    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    1797 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0707 200C03         1798 +1         jb      SKRD, $+6
070A 020F56         1799 +1         ljmp    ERR_SKRD
070D 00             1800 +1         nop
                    1802            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    1803 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT
                    1804 +1                                                                                             
                                                                                                                 
                    1805 +1                                                                                             
                                                                                                                 
                    1806 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              1807 +1         COUNT    SET    COUNT+1                   
                    1808 +1         
070E 20091B         1809 +1         jb      MB1, ENDD8
0711 304104         1810 +1         jnb     PKI1, $+7
0714 C222           1811 +1         clr     FAST
0716 D223           1812 +1         setb    SLOW
0718 D238           1813 +1         setb    STOPPED         
DEBUG                                                                                                         PAGE 33

071A D252           1814 +1         setb    ERRF12_U
071C D259           1815 +1         setb    ERRF12_D
071E 0539           1816 +1         inc     ERRF12_C
0720 C219           1817 +1                 clr     PKO1                               
0722 C228           1818 +1         clr     PO1U            
0724 C228           1819 +1         clr     PO1D              
0726 1210D3         1820 +1                 lcall   WRITEPORTS
0729 020730         1821 +1         ljmp    DOWN2ERR
072C                1822 +1 ENDD8:
072C 00             1823 +1         nop
072D 02073F         1825            jmp     DOWN2ERR_CONTINUE
0730                1826    DOWN2ERR:
0730 C221           1827            clr     DOWN            ; zastav motor
0732 D23B           1828            setb    DOWNOld         ;       (a zalohuj)
0734 C23A           1829            clr     UPOld           ;       (a zalohuj)
0736 C222           1830            clr     FAST            ; 
0738 C223           1831            clr     SLOW            ;
073A 1210D3         1832            lcall   WRITEPORTS      ; 
073D 210A           1833            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
073F                1834    DOWN2ERR_CONTINUE:
073F 200AC2         1835            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    1836 +1         CLR_FLOOR_ERR   ERRF12
0742 C252           1837 +1         clr    ERRF12_U
0744 C259           1838 +1         clr    ERRF12_D
0746 00             1839 +1         nop
                    1841 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0747 120FF7         1842 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
074A 121074         1843 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
074D 300AFA         1844 +1         jnb     MB2, $-3  ; 
0750 120FF7         1845 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0753 D22F           1847            setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0755 1210D3         1848            lcall   WRITEPORTS      ;
0758 02075B         1849            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    1850    
                    1851    
075B                1852    DOWN2_MB2:
                    1853            ;--------------------------
                    1854 +1         CFCSS     31, 14, 1, -1, D2
075B 633C0E         1855 +1         xrl             G,  #14             
                    1856 +1         IF (D2 <> -1)
075E E53E           1857 +1             mov   A,  D2         
0760 623C           1858 +1             xrl   G,  A          
                    1859 +1         ENDIF    
0762 E53C           1860 +1         mov   A,  G              
                    1861 +2         LCJNE A,  #31, CFCERR     
0764 B41F03         1862 +2         cjne    A, #31, $+6
0767 02076D         1863 +2         jmp     $+6
076A 020FA1         1864 +2         ljmp    CFCERR
076D 00             1865 +2         nop
                    1866 +1         IF (1 <> -1)
076E 753D01         1867 +1             mov         D1, #1     
                    1868 +1         ENDIF
                    1869 +1         IF (-1 <> -1)
                    1870 +1             mov         D2, #-1     
                    1871 +1         ENDIF
                    1872 +2         SERCHAR   #31             
0771 741F           1873 +2                 mov               A, #31
DEBUG                                                                                                         PAGE 34

0773 3099FD         1874 +2     jnb     TI, $ 
0776 C299           1875 +2     clr     TI
0778 F599           1876 +2                 mov     SBUF, A
                    1877 +2     
                    1879            ;--------------------------
                    1880 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
077A 120FF7         1881 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
077D 121074         1882 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0780 300AFA         1883 +1         jnb     MB2, $-3  ; 
0783 120FF7         1884 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0786                1886    DOWN2_MB2A:
0786 121074         1887            lcall   READPORTS       ; nacitanie dat
                    1888 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0789 200C03         1889 +1         jb      SKRD, $+6
078C 020F56         1890 +1         ljmp    ERR_SKRD
078F 00             1891 +1         nop
                    1893            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    1894 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT
                    1895 +1                                                                                             
                                                                                                                 
                    1896 +1                                                                                             
                                                                                                                 
                    1897 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              1898 +1         COUNT    SET    COUNT+1                   
                    1899 +1         
0790 20091B         1900 +1         jb      MB1, ENDD9
0793 304104         1901 +1         jnb     PKI1, $+7
0796 C222           1902 +1         clr     FAST
0798 D223           1903 +1         setb    SLOW
079A D238           1904 +1         setb    STOPPED         
079C D252           1905 +1         setb    ERRF12_U
079E D259           1906 +1         setb    ERRF12_D
07A0 0539           1907 +1         inc     ERRF12_C
07A2 C219           1908 +1                 clr     PKO1                               
07A4 C228           1909 +1         clr     PO1U            
07A6 C228           1910 +1         clr     PO1D              
07A8 1210D3         1911 +1                 lcall   WRITEPORTS
07AB 0207B2         1912 +1         ljmp    DOWN2_MB2ERR
07AE                1913 +1 ENDD9:
07AE 00             1914 +1         nop
07AF 0207C1         1916            jmp     DOWN2_MB2ERR_CONTINUE
07B2                1917    DOWN2_MB2ERR:
07B2 C221           1918            clr     DOWN            ; zastav motor
07B4 D23B           1919            setb    DOWNOld         ;       (a zalohuj)
07B6 C23A           1920            clr     UPOld           ;       (a zalohuj)
07B8 C222           1921            clr     FAST            ; 
07BA C223           1922            clr     SLOW            ;
07BC 1210D3         1923            lcall   WRITEPORTS      ; 
07BF 210A           1924            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
07C1                1925    DOWN2_MB2ERR_CONTINUE:
07C1 200AC2         1926            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    1927 +1         CLR_FLOOR_ERR   ERRF12      
07C4 C252           1928 +1         clr    ERRF12_U
07C6 C259           1929 +1         clr    ERRF12_D
07C8 00             1930 +1         nop
07C9 D22E           1932            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
DEBUG                                                                                                         PAGE 35

07CB 1210D3         1933            lcall   WRITEPORTS      ;
                    1934 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
07CE 120FF7         1935 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07D1 121074         1936 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07D4 300AFA         1937 +1         jnb     MB2, $-3  ; 
07D7 120FF7         1938 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1940    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    1941    ;        anl     A, #00000010b ;-;
                    1942    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
07DA D223           1943            setb    SLOW            ;       Ak ano, spomalme
07DC C222           1944            clr     FAST            ; 
07DE 1210D3         1945            lcall   WRITEPORTS      ;
07E1 0207E4         1946            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
07E4                1947    DOWN2_MB1:    
                    1948            ;--------------------------
                    1949 +1         CFCSS     14, 17, 16, -1, -1
07E4 633C11         1950 +1         xrl             G,  #17             
                    1951 +1         IF (-1 <> -1)
                    1952 +1             mov   A,  -1         
                    1953 +1             xrl   G,  A          
                    1954 +1         ENDIF    
07E7 E53C           1955 +1         mov   A,  G              
                    1956 +2         LCJNE A,  #14, CFCERR     
07E9 B40E03         1957 +2         cjne    A, #14, $+6
07EC 0207F2         1958 +2         jmp     $+6
07EF 020FA1         1959 +2         ljmp    CFCERR
07F2 00             1960 +2         nop
                    1961 +1         IF (16 <> -1)
07F3 753D10         1962 +1             mov         D1, #16     
                    1963 +1         ENDIF
                    1964 +1         IF (-1 <> -1)
                    1965 +1             mov         D2, #-1     
                    1966 +1         ENDIF
                    1967 +2         SERCHAR   #14             
07F6 740E           1968 +2                 mov               A, #14
07F8 3099FD         1969 +2     jnb     TI, $ 
07FB C299           1970 +2     clr     TI
07FD F599           1971 +2                 mov     SBUF, A
                    1972 +2     
                    1974            ;--------------------------
07FF 121074         1975    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
0802 300C05         1976            jnb     SKRD, D2_MB1C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade)
0805 300902         1977            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0808 80F5           1978            jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
080A C238           1979    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
080C C221           1980            clr     DOWN            ; zastav motor
080E D23B           1981            setb    DOWNOld         ;       (a zalohuj)
0810 C23A           1982            clr     UPOld           ;       (a zalohuj)
0812 C222           1983            clr     FAST            ; 
0814 1210D3         1984            lcall   WRITEPORTS      ; 
0817 02010A         1985            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    1986    
                    1987    
                    1988    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
DEBUG                                                                                                         PAGE 36

                    1989    
081A                1990    FLOOR3:
                    1991            ;--------------------------
                    1992 +1         CFCSS     10, 7, 16, 19, D1
081A 633C07         1993 +1         xrl             G,  #7             
                    1994 +1         IF (D1 <> -1)
081D E53D           1995 +1             mov   A,  D1         
081F 623C           1996 +1             xrl   G,  A          
                    1997 +1         ENDIF    
0821 E53C           1998 +1         mov   A,  G              
                    1999 +2         LCJNE A,  #10, CFCERR     
0823 B40A03         2000 +2         cjne    A, #10, $+6
0826 02082C         2001 +2         jmp     $+6
0829 020FA1         2002 +2         ljmp    CFCERR
082C 00             2003 +2         nop
                    2004 +1         IF (16 <> -1)
082D 753D10         2005 +1             mov         D1, #16     
                    2006 +1         ENDIF
                    2007 +1         IF (19 <> -1)
0830 753E13         2008 +1             mov         D2, #19     
                    2009 +1         ENDIF
                    2010 +2         SERCHAR   #10             
0833 740A           2011 +2                 mov               A, #10
0835 3099FD         2012 +2     jnb     TI, $ 
0838 C299           2013 +2     clr     TI
083A F599           2014 +2                 mov     SBUF, A
                    2015 +2     
                    2017            ;--------------------------
                    2018 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
083C 4325C0         2019 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
083F 53240F         2020 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0842 D226           2021 +1         setb    FLED3
0844 1210D3         2022 +1         lcall   WRITEPORTS
0847 C238           2024            clr     STOPPED
0849 12102C         2025            lcall   WAITFORTIMER    ; simulacia TIMERu
084C 121074         2026    F3S:    lcall   READPORTS     ;-; nacitanie dat
084F C21B           2027            clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
0851 C22C           2028            clr     PO3U            ;
0853 C22B           2029            clr     PO3D            ;
0855 1210D3         2030            lcall   WRITEPORTS      ;
0858 200FF1         2031            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
085B 782A           2032            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
085D 79F0           2033            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
085F 7AE0           2034            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
0861 203A0A         2035            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
0864 E9             2036            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
0865 F4             2037            cpl     A               ;       |
0866 F9             2038            mov     R1, A           ;       |
0867 EA             2039            mov     A, R2           ;       A znegujeme aj masku sachty
0868 F4             2040            cpl     A               ;       |
0869 FA             2041            mov     R2, A           ;       |     
086A E8             2042            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
DEBUG                                                                                                         PAGE 37

086B 6401           2043            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
086D F8             2044            mov     R0, A           ;       |    
086E                2045    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
086E E528           2046            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0870 86F0           2047            mov     B, @R0          ;  | Maskujem chybne poschodia
0872 63F0FF         2048            xrl     B, #0FFH        ;  | |
0875 55F0           2049            anl     A, B            ;  | |
0877 5416           2050            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0879 59             2051            anl     A, R1           ;  | 
                    2052 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
087A 6003           2053 +1         jz      $+5
087C 020905         2054 +1         ljmp    F3
087F 00             2055 +1         nop
                    2057                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0880 E528           2058            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0882 86F0           2059            mov     B, @R0          ;  | Maskujem chybne poschodia
0884 63F0FF         2060            xrl     B, #0FFH        ;  | |
0887 55F0           2061            anl     A, B            ;  | |
0889 5416           2062            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
088B 702D           2063            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
088D E522           2064            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
088F 5427           2065            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0891 5A             2066            anl     A, R2           ;  |   
0892 86F0           2067            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)      
                    2068 +1         ANLB    ACC.0, B.1      ;  | 
0894 A2E0           2069 +1         mov   C, ACC.0
0896 B0F1           2070 +1         anl   C, /B.1
0898 92E0           2071 +1         mov   ACC.0, C
                    2073 +1         ANLB    ACC.1, B.2      ;  | 
089A A2E1           2074 +1         mov   C, ACC.1
089C B0F2           2075 +1         anl   C, /B.2
089E 92E1           2076 +1         mov   ACC.1, C
                    2078 +1         ANLB    ACC.2, B.2      ;  |
08A0 A2E2           2079 +1         mov   C, ACC.2
08A2 B0F2           2080 +1         anl   C, /B.2
08A4 92E2           2081 +1         mov   ACC.2, C
                    2083 +1         ANLB    ACC.3, B.3      ;  |
08A6 A2E3           2084 +1         mov   C, ACC.3
08A8 B0F3           2085 +1         anl   C, /B.3
08AA 92E3           2086 +1         mov   ACC.3, C
                    2088 +1         ANLB    ACC.4, B.3      ;  |
08AC A2E4           2089 +1         mov   C, ACC.4
08AE B0F3           2090 +1         anl   C, /B.3
08B0 92E4           2091 +1         mov   ACC.4, C
                    2093 +1         ANLB    ACC.5, B.4      ;  |
08B2 A2E5           2094 +1         mov   C, ACC.5
08B4 B0F4           2095 +1         anl   C, /B.4
08B6 92E5           2096 +1         mov   ACC.5, C
08B8 704B           2098            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2099            ; Pohyb v opacnom smere (nevieme v ktorom)
08BA E8             2100    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
DEBUG                                                                                                         PAGE 38

08BB 6401           2101            xrl     A, #01h         ;  |
08BD F8             2102            mov     R0, A           ;  |
08BE B23A           2103            cpl     UPOld           ;  Znegujem stary posun
08C0 B23B           2104            cpl     DOWNOld         ;  |
08C2 E9             2105            mov     A, R1           ;  Znegujeme masky
08C3 F4             2106            cpl     A               ;  |
08C4 F9             2107            mov     R1, A           ;  |
08C5 EA             2108            mov     A, R2           ;  |
08C6 F4             2109            cpl     A               ;  |
08C7 FA             2110            mov     R2, A           ;  |               
08C8 E528           2111            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
08CA 86F0           2112            mov     B, @R0          ;  | Maskujem chybne poschodia
08CC 63F0FF         2113            xrl     B, #0FFH        ;  | |
08CF 55F0           2114            anl     A, B            ;  | |
08D1 5416           2115            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
08D3 59             2116            anl     A, R1           ;  | 
08D4 702F           2117            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
08D6 E522           2118            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
08D8 5427           2119            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
08DA 5A             2120            anl     A, R2           ;  | 
08DB 86F0           2121            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)      
                    2122 +1         ANLB    ACC.0, B.1      ;  | 
08DD A2E0           2123 +1         mov   C, ACC.0
08DF B0F1           2124 +1         anl   C, /B.1
08E1 92E0           2125 +1         mov   ACC.0, C
                    2127 +1         ANLB    ACC.1, B.2      ;  | 
08E3 A2E1           2128 +1         mov   C, ACC.1
08E5 B0F2           2129 +1         anl   C, /B.2
08E7 92E1           2130 +1         mov   ACC.1, C
                    2132 +1         ANLB    ACC.2, B.2      ;  |
08E9 A2E2           2133 +1         mov   C, ACC.2
08EB B0F2           2134 +1         anl   C, /B.2
08ED 92E2           2135 +1         mov   ACC.2, C
                    2137 +1         ANLB    ACC.3, B.3      ;  |
08EF A2E3           2138 +1         mov   C, ACC.3
08F1 B0F3           2139 +1         anl   C, /B.3
08F3 92E3           2140 +1         mov   ACC.3, C
                    2142 +1         ANLB    ACC.4, B.3      ;  |
08F5 A2E4           2143 +1         mov   C, ACC.4
08F7 B0F3           2144 +1         anl   C, /B.3
08F9 92E4           2145 +1         mov   ACC.4, C
                    2147 +1         ANLB    ACC.5, B.4      ;  |
08FB A2E5           2148 +1         mov   C, ACC.5
08FD B0F4           2149 +1         anl   C, /B.4
08FF 92E5           2150 +1         mov   ACC.5, C
0901 7002           2152            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0903 014C           2153            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
0905 203A03         2154    F3:     jb      UPOld, F3UP     ;   
0908 020917         2155            jmp     F3DOWN          ;
090B D220           2156    F3UP:   setb    UP              ; rychly pohyb hore
090D D222           2157            setb    FAST            ; 
090F C223           2158            clr     SLOW            ;
0911 1210D3         2159            lcall   WRITEPORTS      ; 
0914 020923         2160            jmp     UP3           ;-; prejdi do stavu UP2    
0917 D221           2161    F3DOWN: setb    DOWN            ; rychly pohyb hore
0919 D222           2162            setb    FAST            ; 
DEBUG                                                                                                         PAGE 39

091B C223           2163            clr     SLOW            ;
091D 1210D3         2164            lcall   WRITEPORTS      ; 
0920 020A80         2165            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2166         
                    2167         
0923                2168    UP3:
                    2169            ;--------------------------
                    2170 +1         CFCSS     11, 17, 14, 0, D1
0923 633C11         2171 +1         xrl             G,  #17             
                    2172 +1         IF (D1 <> -1)
0926 E53D           2173 +1             mov   A,  D1         
0928 623C           2174 +1             xrl   G,  A          
                    2175 +1         ENDIF    
092A E53C           2176 +1         mov   A,  G              
                    2177 +2         LCJNE A,  #11, CFCERR     
092C B40B03         2178 +2         cjne    A, #11, $+6
092F 020935         2179 +2         jmp     $+6
0932 020FA1         2180 +2         ljmp    CFCERR
0935 00             2181 +2         nop
                    2182 +1         IF (14 <> -1)
0936 753D0E         2183 +1             mov         D1, #14     
                    2184 +1         ENDIF
                    2185 +1         IF (0 <> -1)
0939 753E00         2186 +1             mov         D2, #0     
                    2187 +1         ENDIF
                    2188 +2         SERCHAR   #11             
093C 740B           2189 +2                 mov               A, #11
093E 3099FD         2190 +2     jnb     TI, $ 
0941 C299           2191 +2     clr     TI
0943 F599           2192 +2                 mov     SBUF, A
                    2193 +2     
                    2195            ;--------------------------
                    2196 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0945 4325C0         2197 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0948 53240F         2198 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
094B D226           2199 +1         setb    FLED3
094D 1210D3         2200 +1         lcall   WRITEPORTS
                    2202 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0950 120FF7         2203 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0953 121074         2204 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0956 3009FA         2205 +1         jnb     MB1, $-3  ; 
0959 120FF7         2206 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
095C 121074         2208    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2209 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
095F 200B03         2210 +1         jb      SKRH, $+6
0962 020F5F         2211 +1         ljmp    ERR_SKRH
0965 00             2212 +1         nop
                    2214            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    2215 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT
                    2216 +1                                                                                             
                                                                                                                 
                    2217 +1                                                                                             
                                                                                                                 
                    2218 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
DEBUG                                                                                                         PAGE 40

  000B              2219 +1         COUNT    SET    COUNT+1                   
                    2220 +1         
0966 20091B         2221 +1         jb      MB1, ENDD10
0969 304404         2222 +1         jnb     PKI4, $+7
096C C222           2223 +1         clr     FAST
096E D223           2224 +1         setb    SLOW
0970 D238           2225 +1         setb    STOPPED         
0972 D254           2226 +1         setb    ERRF34_U
0974 D25B           2227 +1         setb    ERRF34_D
0976 053B           2228 +1         inc     ERRF34_C
0978 C21C           2229 +1                 clr     PKO4                               
097A C22D           2230 +1         clr     PO4U            
097C C22D           2231 +1         clr     PO4D              
097E 1210D3         2232 +1                 lcall   WRITEPORTS
0981 020988         2233 +1         ljmp    UP3ERR
0984                2234 +1 ENDD10:
0984 00             2235 +1         nop
0985 020998         2237            jmp     UP3ERR_CONTINUE
0988                2238    UP3ERR:
0988 C220           2239            clr     UP              ; zastav motor
098A D23A           2240            setb    UPOld           ;       (a zalohuj)
098C C23B           2241            clr     DOWNOld         ;       (a zalohuj)
098E C222           2242            clr     FAST            ;
0990 C223           2243            clr     SLOW            ;
0992 1210D3         2244            lcall   WRITEPORTS      ; 
0995 020C9B         2245            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0998                2246    UP3ERR_CONTINUE:
0998 200AC1         2247            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2248 +1         CLR_FLOOR_ERR   ERRF34
099B C254           2249 +1         clr    ERRF34_U
099D C25B           2250 +1         clr    ERRF34_D
099F 00             2251 +1         nop
                    2253 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
09A0 120FF7         2254 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09A3 121074         2255 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
09A6 300AFA         2256 +1         jnb     MB2, $-3  ; 
09A9 120FF7         2257 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
09AC D22E           2259            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
09AE 1210D3         2260            lcall   WRITEPORTS      ;
09B1 0209B4         2261            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2262    
09B4                2263    UP3_MB2:
                    2264            ;--------------------------
                    2265 +1         CFCSS     3, 8, 6, -1, D2
09B4 633C08         2266 +1         xrl             G,  #8             
                    2267 +1         IF (D2 <> -1)
09B7 E53E           2268 +1             mov   A,  D2         
09B9 623C           2269 +1             xrl   G,  A          
                    2270 +1         ENDIF    
09BB E53C           2271 +1         mov   A,  G              
                    2272 +2         LCJNE A,  #3, CFCERR     
09BD B40303         2273 +2         cjne    A, #3, $+6
09C0 0209C6         2274 +2         jmp     $+6
09C3 020FA1         2275 +2         ljmp    CFCERR
09C6 00             2276 +2         nop
                    2277 +1         IF (6 <> -1)
09C7 753D06         2278 +1             mov         D1, #6     
DEBUG                                                                                                         PAGE 41

                    2279 +1         ENDIF
                    2280 +1         IF (-1 <> -1)
                    2281 +1             mov         D2, #-1     
                    2282 +1         ENDIF
                    2283 +2         SERCHAR   #3             
09CA 7403           2284 +2                 mov               A, #3
09CC 3099FD         2285 +2     jnb     TI, $ 
09CF C299           2286 +2     clr     TI
09D1 F599           2287 +2                 mov     SBUF, A
                    2288 +2     
                    2290            ;--------------------------
                    2291 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
09D3 120FF7         2292 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09D6 121074         2293 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
09D9 300AFA         2294 +1         jnb     MB2, $-3  ; 
09DC 120FF7         2295 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
09DF                2297    UP3_MB2A:
09DF 121074         2298            lcall   READPORTS       ; nacitanie dat
                    2299 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
09E2 200B03         2300 +1         jb      SKRH, $+6
09E5 020F5F         2301 +1         ljmp    ERR_SKRH
09E8 00             2302 +1         nop
                    2304            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    2305 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT
                    2306 +1                                                                                             
                                                                                                                 
                    2307 +1                                                                                             
                                                                                                                 
                    2308 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2309 +1         COUNT    SET    COUNT+1                   
                    2310 +1         
09E9 20091B         2311 +1         jb      MB1, ENDD11
09EC 304404         2312 +1         jnb     PKI4, $+7
09EF C222           2313 +1         clr     FAST
09F1 D223           2314 +1         setb    SLOW
09F3 D238           2315 +1         setb    STOPPED         
09F5 D254           2316 +1         setb    ERRF34_U
09F7 D25B           2317 +1         setb    ERRF34_D
09F9 053B           2318 +1         inc     ERRF34_C
09FB C21C           2319 +1                 clr     PKO4                               
09FD C22D           2320 +1         clr     PO4U            
09FF C22D           2321 +1         clr     PO4D              
0A01 1210D3         2322 +1                 lcall   WRITEPORTS
0A04 020A0B         2323 +1         ljmp    UP3_MB2ERR
0A07                2324 +1 ENDD11:
0A07 00             2325 +1         nop
0A08 020A1B         2327            jmp     UP3_MB2ERR_CONTINUE
0A0B                2328    UP3_MB2ERR:
0A0B C220           2329            clr     UP              ; zastav motor
0A0D D23A           2330            setb    UPOld           ;       (a zalohuj)
0A0F C23B           2331            clr     DOWNOld         ;       (a zalohuj)
0A11 C222           2332            clr     FAST            ;
0A13 C223           2333            clr     SLOW            ;
0A15 1210D3         2334            lcall   WRITEPORTS      ; 
0A18 020C9B         2335            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0A1B                2336    UP3_MB2ERR_CONTINUE:
DEBUG                                                                                                         PAGE 42

0A1B 200AC1         2337            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2338 +1         CLR_FLOOR_ERR   ERRF34      
0A1E C254           2339 +1         clr    ERRF34_U
0A20 C25B           2340 +1         clr    ERRF34_D
0A22 00             2341 +1         nop
0A23 D22F           2343            setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0A25 1210D3         2344            lcall   WRITEPORTS      ;
                    2345 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0A28 120FF7         2346 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A2B 121074         2347 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A2E 300AFA         2348 +1         jnb     MB2, $-3  ; 
0A31 120FF7         2349 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2351    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2352    ;        anl     A, #00010000b ;-;
                    2353    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0A34 D223           2354            setb    SLOW            ;       Ak ano, spomalme
0A36 C222           2355            clr     FAST            ; 
0A38 1210D3         2356            lcall   WRITEPORTS      ;
0A3B 020A3E         2357            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2358    
                    2359    
0A3E                2360    UP3_MB1:
                    2361            ;--------------------------
                    2362 +1         CFCSS     5, 6, 0, -1, -1
0A3E 633C06         2363 +1         xrl             G,  #6             
                    2364 +1         IF (-1 <> -1)
                    2365 +1             mov   A,  -1         
                    2366 +1             xrl   G,  A          
                    2367 +1         ENDIF    
0A41 E53C           2368 +1         mov   A,  G              
                    2369 +2         LCJNE A,  #5, CFCERR     
0A43 B40503         2370 +2         cjne    A, #5, $+6
0A46 020A4C         2371 +2         jmp     $+6
0A49 020FA1         2372 +2         ljmp    CFCERR
0A4C 00             2373 +2         nop
                    2374 +1         IF (0 <> -1)
0A4D 753D00         2375 +1             mov         D1, #0     
                    2376 +1         ENDIF
                    2377 +1         IF (-1 <> -1)
                    2378 +1             mov         D2, #-1     
                    2379 +1         ENDIF
                    2380 +2         SERCHAR   #5             
0A50 7405           2381 +2                 mov               A, #5
0A52 3099FD         2382 +2     jnb     TI, $ 
0A55 C299           2383 +2     clr     TI
0A57 F599           2384 +2                 mov     SBUF, A
                    2385 +2     
                    2387            ;--------------------------
                    2388 +1         ZAKMITC MB2
0A59 120FF7         2389 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A5C 121074         2390 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A5F 300AFA         2391 +1         jnb     MB2, $-3  ; 
0A62 120FF7         2392 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A65 121074         2394    UP3_MB1_C: lcall   READPORTS       ; nacitanie dat
0A68 300B05         2395            jnb     SKRH, U3_MB1C  ;  Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade)
DEBUG                                                                                                         PAGE 43

0A6B 300902         2396            jnb     MB1, U3_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0A6E 80F5           2397            jmp     UP3_MB1_C         ; Ak sme nechytili ani jednu clonku, opakujeme. 
0A70 C238           2398    U3_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
0A72 C220           2399            clr     UP              ; zastav motor
0A74 D23A           2400            setb    UPOld           ;       (a zalohuj)
0A76 C23B           2401            clr     DOWNOld         ;       (a zalohuj)
0A78 C222           2402            clr     FAST            ; 
0A7A 1210D3         2403            lcall   WRITEPORTS      ; 
0A7D 020C9B         2404            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2405    
                    2406    
0A80                2407    DOWN3:
                    2408            ;--------------------------
                    2409 +1         CFCSS     27, 2, 22, 10, D2
0A80 633C02         2410 +1         xrl             G,  #2             
                    2411 +1         IF (D2 <> -1)
0A83 E53E           2412 +1             mov   A,  D2         
0A85 623C           2413 +1             xrl   G,  A          
                    2414 +1         ENDIF    
0A87 E53C           2415 +1         mov   A,  G              
                    2416 +2         LCJNE A,  #27, CFCERR     
0A89 B41B03         2417 +2         cjne    A, #27, $+6
0A8C 020A92         2418 +2         jmp     $+6
0A8F 020FA1         2419 +2         ljmp    CFCERR
0A92 00             2420 +2         nop
                    2421 +1         IF (22 <> -1)
0A93 753D16         2422 +1             mov         D1, #22     
                    2423 +1         ENDIF
                    2424 +1         IF (10 <> -1)
0A96 753E0A         2425 +1             mov         D2, #10     
                    2426 +1         ENDIF
                    2427 +2         SERCHAR   #27             
0A99 741B           2428 +2                 mov               A, #27
0A9B 3099FD         2429 +2     jnb     TI, $ 
0A9E C299           2430 +2     clr     TI
0AA0 F599           2431 +2                 mov     SBUF, A
                    2432 +2     
                    2434            ;--------------------------
                    2435 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0AA2 4325C0         2436 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0AA5 53240F         2437 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0AA8 D226           2438 +1         setb    FLED3
0AAA 1210D3         2439 +1         lcall   WRITEPORTS
                    2441 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0AAD 120FF7         2442 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AB0 121074         2443 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AB3 3009FA         2444 +1         jnb     MB1, $-3  ; 
0AB6 120FF7         2445 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AB9 121074         2447    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2448 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0ABC 200C03         2449 +1         jb      SKRD, $+6
0ABF 020F56         2450 +1         ljmp    ERR_SKRD
0AC2 00             2451 +1         nop
                    2453            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
DEBUG                                                                                                         PAGE 44

                                                                               zastavovaciu) <<<
                    2454 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT
                    2455 +1                                                                                             
                                                                                                                 
                    2456 +1                                                                                             
                                                                                                                 
                    2457 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2458 +1         COUNT    SET    COUNT+1                   
                    2459 +1         
0AC3 20091B         2460 +1         jb      MB1, ENDD12
0AC6 304204         2461 +1         jnb     PKI2, $+7
0AC9 C222           2462 +1         clr     FAST
0ACB D223           2463 +1         setb    SLOW
0ACD D238           2464 +1         setb    STOPPED         
0ACF D253           2465 +1         setb    ERRF23_U
0AD1 D25A           2466 +1         setb    ERRF23_D
0AD3 053A           2467 +1         inc     ERRF23_C
0AD5 C21A           2468 +1                 clr     PKO2                               
0AD7 C22A           2469 +1         clr     PO2U            
0AD9 C229           2470 +1         clr     PO2D              
0ADB 1210D3         2471 +1                 lcall   WRITEPORTS
0ADE 0206CB         2472 +1         ljmp    DOWN2
0AE1                2473 +1 ENDD12:
0AE1 00             2474 +1         nop
0AE2 200AD4         2476            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    2477 +1         CLR_FLOOR_ERR   ERRF23
0AE5 C253           2478 +1         clr    ERRF23_U
0AE7 C25A           2479 +1         clr    ERRF23_D
0AE9 00             2480 +1         nop
                    2482 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0AEA 120FF7         2483 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AED 121074         2484 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AF0 300AFA         2485 +1         jnb     MB2, $-3  ; 
0AF3 120FF7         2486 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AF6 D22F           2488            setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0AF8 1210D3         2489            lcall   WRITEPORTS      ;
0AFB 020AFE         2490            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2491    
                    2492    
0AFE                2493    DOWN3_MB2:
                    2494            ;--------------------------
                    2495 +1         CFCSS     9, 4, -1, 24, D1
0AFE 633C04         2496 +1         xrl             G,  #4             
                    2497 +1         IF (D1 <> -1)
0B01 E53D           2498 +1             mov   A,  D1         
0B03 623C           2499 +1             xrl   G,  A          
                    2500 +1         ENDIF    
0B05 E53C           2501 +1         mov   A,  G              
                    2502 +2         LCJNE A,  #9, CFCERR     
0B07 B40903         2503 +2         cjne    A, #9, $+6
0B0A 020B10         2504 +2         jmp     $+6
0B0D 020FA1         2505 +2         ljmp    CFCERR
0B10 00             2506 +2         nop
                    2507 +1         IF (-1 <> -1)
                    2508 +1             mov         D1, #-1     
                    2509 +1         ENDIF
                    2510 +1         IF (24 <> -1)
DEBUG                                                                                                         PAGE 45

0B11 753E18         2511 +1             mov         D2, #24     
                    2512 +1         ENDIF
                    2513 +2         SERCHAR   #9             
0B14 7409           2514 +2                 mov               A, #9
0B16 3099FD         2515 +2     jnb     TI, $ 
0B19 C299           2516 +2     clr     TI
0B1B F599           2517 +2                 mov     SBUF, A
                    2518 +2     
                    2520            ;--------------------------
                    2521 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0B1D 120FF7         2522 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B20 121074         2523 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B23 300AFA         2524 +1         jnb     MB2, $-3  ; 
0B26 120FF7         2525 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B29                2527    DOWN3_MB2A:
0B29 121074         2528            lcall   READPORTS       ; nacitanie dat
                    2529 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B2C 200C03         2530 +1         jb      SKRD, $+6
0B2F 020F56         2531 +1         ljmp    ERR_SKRD
0B32 00             2532 +1         nop
                    2534            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    2535 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT
                    2536 +1                                                                                             
                                                                                                                 
                    2537 +1                                                                                             
                                                                                                                 
                    2538 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              2539 +1         COUNT    SET    COUNT+1                   
                    2540 +1         
0B33 20091B         2541 +1         jb      MB1, ENDD13
0B36 304204         2542 +1         jnb     PKI2, $+7
0B39 C222           2543 +1         clr     FAST
0B3B D223           2544 +1         setb    SLOW
0B3D D238           2545 +1         setb    STOPPED         
0B3F D253           2546 +1         setb    ERRF23_U
0B41 D25A           2547 +1         setb    ERRF23_D
0B43 053A           2548 +1         inc     ERRF23_C
0B45 C21A           2549 +1                 clr     PKO2                               
0B47 C22A           2550 +1         clr     PO2U            
0B49 C229           2551 +1         clr     PO2D              
0B4B 1210D3         2552 +1                 lcall   WRITEPORTS
0B4E 0206CB         2553 +1         ljmp    DOWN2
0B51                2554 +1 ENDD13:
0B51 00             2555 +1         nop
0B52 200AD4         2557            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2558 +1         CLR_FLOOR_ERR   ERRF23      
0B55 C253           2559 +1         clr    ERRF23_U
0B57 C25A           2560 +1         clr    ERRF23_D
0B59 00             2561 +1         nop
0B5A D22E           2563            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0B5C 1210D3         2564            lcall   WRITEPORTS      ;
                    2565 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0B5F 120FF7         2566 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B62 121074         2567 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B65 300AFA         2568 +1         jnb     MB2, $-3  ; 
0B68 120FF7         2569 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
DEBUG                                                                                                         PAGE 46

                                                                               zliezli)
                    2571    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2572    ;        anl     A, #00000100b ;-;
                    2573    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0B6B                2574    DOWN3_MB2_CFC:
                    2575            ;--------------------------
                    2576 +1         CFCSS     16, 25, -1, -1, -1
0B6B 633C19         2577 +1         xrl             G,  #25             
                    2578 +1         IF (-1 <> -1)
                    2579 +1             mov   A,  -1         
                    2580 +1             xrl   G,  A          
                    2581 +1         ENDIF    
0B6E E53C           2582 +1         mov   A,  G              
                    2583 +2         LCJNE A,  #16, CFCERR     
0B70 B41003         2584 +2         cjne    A, #16, $+6
0B73 020B79         2585 +2         jmp     $+6
0B76 020FA1         2586 +2         ljmp    CFCERR
0B79 00             2587 +2         nop
                    2588 +1         IF (-1 <> -1)
                    2589 +1             mov         D1, #-1     
                    2590 +1         ENDIF
                    2591 +1         IF (-1 <> -1)
                    2592 +1             mov         D2, #-1     
                    2593 +1         ENDIF
                    2594 +2         SERCHAR   #16             
0B7A 7410           2595 +2                 mov               A, #16
0B7C 3099FD         2596 +2     jnb     TI, $ 
0B7F C299           2597 +2     clr     TI
0B81 F599           2598 +2                 mov     SBUF, A
                    2599 +2     
                    2601            ;--------------------------
                    2602 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    2603 +1                                         
0B83 C3             2604 +1         clr     C                       
0B84 7400           2605 +1         mov     A, #0h                  
0B86 7211           2606 +1         orl     C, PI2D      
0B88 B00E           2607 +1         anl     C, /DPZK                
0B8A 7242           2608 +1         orl     C, PKI2          
0B8C B05A           2609 +1         anl     C, /ERRF2_D 
0B8E 720F           2610 +1         orl     C, DPK                  
0B90 7238           2611 +1         orl     C, STOPPED              
0B92 3400           2612 +1         addc    A, #0h                  
0B94 7059           2614            jnz     D3_MB2C         ; Ak ano, zastav
                    2615 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0B96 E522           2616 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0B98 33             2617 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0B99 547E           2618 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    2619 +1 
                    2620 +2         ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
0B9B A2E1           2621 +2         mov   C, ACC.1
0B9D B059           2622 +2         anl   C, /ERRF1_D
0B9F 92E1           2623 +2         mov   ACC.1, C
                    2624 +2         ANLB    ACC.2, ERRF2_D  ; |
0BA1 A2E2           2625 +2         mov   C, ACC.2
DEBUG                                                                                                         PAGE 47

0BA3 B05A           2626 +2         anl   C, /ERRF2_D
0BA5 92E2           2627 +2         mov   ACC.2, C
                    2628 +2         ANLB    ACC.3, ERRF2_D  ; |
0BA7 A2E3           2629 +2         mov   C, ACC.3
0BA9 B05A           2630 +2         anl   C, /ERRF2_D
0BAB 92E3           2631 +2         mov   ACC.3, C
                    2632 +2         ANLB    ACC.4, ERRF3_D  ; |
0BAD A2E4           2633 +2         mov   C, ACC.4
0BAF B05B           2634 +2         anl   C, /ERRF3_D
0BB1 92E4           2635 +2         mov   ACC.4, C
                    2636 +2         ANLB    ACC.5, ERRF3_D  ; |
0BB3 A2E5           2637 +2         mov   C, ACC.5
0BB5 B05B           2638 +2         anl   C, /ERRF3_D
0BB7 92E5           2639 +2         mov   ACC.5, C
                    2640 +1 
0BB9 7805           2641 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    2642 +1  ; LL1: 
0BBB 6006           2643 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0BBD C3             2644 +1         clr     C               ; Inak shiftnem o 2
0BBE 33             2645 +1         rlc     A               ;
0BBF C3             2646 +1         clr     C               ;
0BC0 33             2647 +1         rlc     A               ;
0BC1 D8F8           2648 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    2649 +1 ; LL2:
0BC3 E8             2650 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    2652 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0BC4 B40203         2653 +1         cjne    A, #2, $+6
0BC7 020BCD         2654 +1         jmp     $+6
0BCA 020BF9         2655 +1         ljmp    DOWN3_MB1
0BCD 00             2656 +1         nop
                    2658 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0BCE 7405           2659 +1         mov     A, #5
0BD0 C3             2660 +1         clr     C
0BD1 9402           2661 +1         subb    A, #2
0BD3 F8             2662 +1         mov     R0, A
0BD4 E528           2663 +1         mov     A, INPORTA
0BD6 541E           2664 +1         anl     A, #00011110b
0BD8 852BF0         2665 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0BDB 63F0FF         2666 +1         xrl     B, #0FFH
0BDE 55F0           2667 +1         anl     A, B
0BE0 C3             2668 +1         clr     C
0BE1 33             2669 +1         rlc     A
0BE2 C3             2670 +1         clr     C
0BE3 33             2671 +1         rlc     A
0BE4 C3             2672 +1         clr     C
0BE5 33             2673 +1         rlc     A
                    2674 +1 ;LL1   
0BE6 C3             2675 +1         clr     C
0BE7 33             2676 +1         rlc     A
0BE8 D8FC           2677 +1         djnz    R0, $-2;LL1
0BEA 6003           2679            jz      D3_MB2C         ; |   ak neni zastavujem                  
0BEC 020BF9         2680            ljmp    DOWN3_MB1       ;-; |        
0BEF D223           2681    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
DEBUG                                                                                                         PAGE 48

0BF1 C222           2682            clr     FAST            ; 
0BF3 1210D3         2683            lcall   WRITEPORTS      ;
0BF6 020C43         2684            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    2685    
                    2686    
0BF9                2687    DOWN3_MB1:    
                    2688            ;--------------------------
                    2689 +1         CFCSS     17, 1, -1, 0, -1
0BF9 633C01         2690 +1         xrl             G,  #1             
                    2691 +1         IF (-1 <> -1)
                    2692 +1             mov   A,  -1         
                    2693 +1             xrl   G,  A          
                    2694 +1         ENDIF    
0BFC E53C           2695 +1         mov   A,  G              
                    2696 +2         LCJNE A,  #17, CFCERR     
0BFE B41103         2697 +2         cjne    A, #17, $+6
0C01 020C07         2698 +2         jmp     $+6
0C04 020FA1         2699 +2         ljmp    CFCERR
0C07 00             2700 +2         nop
                    2701 +1         IF (-1 <> -1)
                    2702 +1             mov         D1, #-1     
                    2703 +1         ENDIF
                    2704 +1         IF (0 <> -1)
0C08 753E00         2705 +1             mov         D2, #0     
                    2706 +1         ENDIF
                    2707 +2         SERCHAR   #17             
0C0B 7411           2708 +2                 mov               A, #17
0C0D 3099FD         2709 +2     jnb     TI, $ 
0C10 C299           2710 +2     clr     TI
0C12 F599           2711 +2                 mov     SBUF, A
                    2712 +2     
                    2714            ;--------------------------
0C14 121074         2715    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    2716 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C17 200C03         2717 +1         jb      SKRD, $+6
0C1A 020F56         2718 +1         ljmp    ERR_SKRD
0C1D 00             2719 +1         nop
                    2721            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    2722 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT
                    2723 +1                                                                                             
                                                                                                                 
                    2724 +1                                                                                             
                                                                                                                 
                    2725 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              2726 +1         COUNT    SET    COUNT+1                   
                    2727 +1         
0C1E 200A1B         2728 +1         jb      MB2, ENDD14
0C21 304204         2729 +1         jnb     PKI2, $+7
0C24 C222           2730 +1         clr     FAST
0C26 D223           2731 +1         setb    SLOW
0C28 D238           2732 +1         setb    STOPPED         
0C2A D252           2733 +1         setb    ERRF2_U
0C2C D25A           2734 +1         setb    ERRF2_D
0C2E 0536           2735 +1         inc     ERRF2_C
0C30 C21A           2736 +1                 clr     PKO2                               
0C32 C22A           2737 +1         clr     PO2U            
0C34 C229           2738 +1         clr     PO2D              
DEBUG                                                                                                         PAGE 49

0C36 1210D3         2739 +1                 lcall   WRITEPORTS
0C39 02075B         2740 +1         ljmp    DOWN2_MB2
0C3C                2741 +1 ENDD14:
0C3C 00             2742 +1         nop
0C3D 2009D4         2744            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    2745    ;        CLR_FLOOR_ERR   ERRF2
                    2746    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    2747    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    2748    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    2749    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    2750    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    2751    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    2752    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0C40 0206CB         2753            ljmp    DOWN2         ;-; |        
                    2754    ;D3_MB1C: clr     DOWN            ; zastav motor
                    2755    ;        setb    DOWNOld         ;       (a zalohuj)
                    2756    ;        clr     UPOld           ;       (a zalohuj)
                    2757    ;        clr     FAST            ; 
                    2758    ;        lcall   WRITEPORTS      ; 
                    2759    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0C43                2760    DOWN3_STOP: 
                    2761            ;--------------------------
                    2762 +1         CFCSS     21, 5, 0, 4, -1
0C43 633C05         2763 +1         xrl             G,  #5             
                    2764 +1         IF (-1 <> -1)
                    2765 +1             mov   A,  -1         
                    2766 +1             xrl   G,  A          
                    2767 +1         ENDIF    
0C46 E53C           2768 +1         mov   A,  G              
                    2769 +2         LCJNE A,  #21, CFCERR     
0C48 B41503         2770 +2         cjne    A, #21, $+6
0C4B 020C51         2771 +2         jmp     $+6
0C4E 020FA1         2772 +2         ljmp    CFCERR
0C51 00             2773 +2         nop
                    2774 +1         IF (0 <> -1)
0C52 753D00         2775 +1             mov         D1, #0     
                    2776 +1         ENDIF
                    2777 +1         IF (4 <> -1)
0C55 753E04         2778 +1             mov         D2, #4     
                    2779 +1         ENDIF
                    2780 +2         SERCHAR   #21             
0C58 7415           2781 +2                 mov               A, #21
0C5A 3099FD         2782 +2     jnb     TI, $ 
0C5D C299           2783 +2     clr     TI
0C5F F599           2784 +2                 mov     SBUF, A
                    2785 +2     
                    2787            ;--------------------------   
0C61 121074         2788    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    2789 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C64 200C03         2790 +1         jb      SKRD, $+6
0C67 020F56         2791 +1         ljmp    ERR_SKRD
0C6A 00             2792 +1         nop
                    2794            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
DEBUG                                                                                                         PAGE 50

                    2795 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT
                    2796 +1                                                                                             
                                                                                                                 
                    2797 +1                                                                                             
                                                                                                                 
                    2798 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              2799 +1         COUNT    SET    COUNT+1                   
                    2800 +1         
0C6B 200A1B         2801 +1         jb      MB2, ENDD15
0C6E 304204         2802 +1         jnb     PKI2, $+7
0C71 C222           2803 +1         clr     FAST
0C73 D223           2804 +1         setb    SLOW
0C75 D238           2805 +1         setb    STOPPED         
0C77 D252           2806 +1         setb    ERRF2_U
0C79 D25A           2807 +1         setb    ERRF2_D
0C7B 0536           2808 +1         inc     ERRF2_C
0C7D C21A           2809 +1                 clr     PKO2                               
0C7F C22A           2810 +1         clr     PO2U            
0C81 C229           2811 +1         clr     PO2D              
0C83 1210D3         2812 +1                 lcall   WRITEPORTS
0C86 02075B         2813 +1         ljmp    DOWN2_MB2
0C89                2814 +1 ENDD15:
0C89 00             2815 +1         nop
0C8A 2009D4         2817            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    2818    ;        CLR_FLOOR_ERR   ERRF2     
0C8D C221           2819            clr     DOWN            ; zastav motor
0C8F D23B           2820            setb    DOWNOld         ;       (a zalohuj)
0C91 C23A           2821            clr     UPOld           ;       (a zalohuj)
0C93 C222           2822            clr     FAST            ; 
0C95 1210D3         2823            lcall   WRITEPORTS      ; 
0C98 02039D         2824            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    2825    
                    2826            
                    2827    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    2828    
0C9B                2829    FLOOR4:
                    2830            ;--------------------------
                    2831 +1         CFCSS     19, 22, -1, -1, D1
0C9B 633C16         2832 +1         xrl             G,  #22             
                    2833 +1         IF (D1 <> -1)
0C9E E53D           2834 +1             mov   A,  D1         
0CA0 623C           2835 +1             xrl   G,  A          
                    2836 +1         ENDIF    
0CA2 E53C           2837 +1         mov   A,  G              
                    2838 +2         LCJNE A,  #19, CFCERR     
0CA4 B41303         2839 +2         cjne    A, #19, $+6
0CA7 020CAD         2840 +2         jmp     $+6
0CAA 020FA1         2841 +2         ljmp    CFCERR
0CAD 00             2842 +2         nop
                    2843 +1         IF (-1 <> -1)
                    2844 +1             mov         D1, #-1     
                    2845 +1         ENDIF
                    2846 +1         IF (-1 <> -1)
                    2847 +1             mov         D2, #-1     
                    2848 +1         ENDIF
                    2849 +2         SERCHAR   #19             
0CAE 7413           2850 +2                 mov               A, #19
DEBUG                                                                                                         PAGE 51

0CB0 3099FD         2851 +2     jnb     TI, $ 
0CB3 C299           2852 +2     clr     TI
0CB5 F599           2853 +2                 mov     SBUF, A
                    2854 +2     
                    2856            ;--------------------------
                    2857 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0CB7 4325C0         2858 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0CBA 53240F         2859 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0CBD D227           2860 +1         setb    FLED4
0CBF 1210D3         2861 +1         lcall   WRITEPORTS
0CC2 C238           2863            clr     STOPPED
0CC4 12102C         2864            lcall   WAITFORTIMER    ; simulacia TIMERu
0CC7 121074         2865    F4S:    lcall   READPORTS     ;-; nacitanie dat
0CCA C21C           2866            clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
0CCC C22D           2867            clr     PO4            ;
0CCE 1210D3         2868            lcall   WRITEPORTS      ;
0CD1 200FF3         2869            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0CD4 E528           2870            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0CD6 852BF0         2871            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0CD9 63F0FF         2872            xrl     B, #0FFH        ; | |
0CDC 55F0           2873            anl     A, B            ; | |
0CDE 540E           2874            anl     A, #00001110b ;-;
0CE0 7026           2875            jnz     F4OK          ;-; ak ano, ideme na to
0CE2 E522           2876            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0CE4 541F           2877            anl     A, #00011111b ;-;
                    2878 +1         ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
0CE6 A2E0           2879 +1         mov   C, ACC.0
0CE8 B059           2880 +1         anl   C, /ERRF1_D
0CEA 92E0           2881 +1         mov   ACC.0, C
                    2883 +1         ANLB    ACC.1, ERRF2_D  ; |
0CEC A2E1           2884 +1         mov   C, ACC.1
0CEE B05A           2885 +1         anl   C, /ERRF2_D
0CF0 92E1           2886 +1         mov   ACC.1, C
                    2888 +1         ANLB    ACC.2, ERRF2_D  ; |
0CF2 A2E2           2889 +1         mov   C, ACC.2
0CF4 B05A           2890 +1         anl   C, /ERRF2_D
0CF6 92E2           2891 +1         mov   ACC.2, C
                    2893 +1         ANLB    ACC.3, ERRF3_D  ; |
0CF8 A2E3           2894 +1         mov   C, ACC.3
0CFA B05B           2895 +1         anl   C, /ERRF3_D
0CFC 92E3           2896 +1         mov   ACC.3, C
                    2898 +1         ANLB    ACC.4, ERRF3_D  ; |
0CFE A2E4           2899 +1         mov   C, ACC.4
0D00 B05B           2900 +1         anl   C, /ERRF3_D
0D02 92E4           2901 +1         mov   ACC.4, C
0D04 7002           2903            jnz     F4OK          ;-; ak ano, ideme na to
0D06 80BF           2904            jmp     F4S             ; Nemam sa kde hnut, opakujem
0D08 D221           2905    F4OK:   setb    DOWN            ; rychly pohyb dole
0D0A D222           2906            setb    FAST            ;
0D0C C223           2907            clr     SLOW            ; 
0D0E 1210D3         2908            lcall   WRITEPORTS      ; 
0D11 020D14         2909            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
                    2910    
                    2911    
DEBUG                                                                                                         PAGE 52

0D14                2912    DOWN4:
                    2913            ;--------------------------
                    2914 +1         CFCSS     22, 5, -1, 15, -1
0D14 633C05         2915 +1         xrl             G,  #5             
                    2916 +1         IF (-1 <> -1)
                    2917 +1             mov   A,  -1         
                    2918 +1             xrl   G,  A          
                    2919 +1         ENDIF    
0D17 E53C           2920 +1         mov   A,  G              
                    2921 +2         LCJNE A,  #22, CFCERR     
0D19 B41603         2922 +2         cjne    A, #22, $+6
0D1C 020D22         2923 +2         jmp     $+6
0D1F 020FA1         2924 +2         ljmp    CFCERR
0D22 00             2925 +2         nop
                    2926 +1         IF (-1 <> -1)
                    2927 +1             mov         D1, #-1     
                    2928 +1         ENDIF
                    2929 +1         IF (15 <> -1)
0D23 753E0F         2930 +1             mov         D2, #15     
                    2931 +1         ENDIF
                    2932 +2         SERCHAR   #22             
0D26 7416           2933 +2                 mov               A, #22
0D28 3099FD         2934 +2     jnb     TI, $ 
0D2B C299           2935 +2     clr     TI
0D2D F599           2936 +2                 mov     SBUF, A
                    2937 +2     
                    2939            ;--------------------------
                    2940 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0D2F 4325C0         2941 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0D32 53240F         2942 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0D35 D227           2943 +1         setb    FLED4
0D37 1210D3         2944 +1         lcall   WRITEPORTS
                    2946 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0D3A 120FF7         2947 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0D3D 121074         2948 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0D40 3009FA         2949 +1         jnb     MB1, $-3  ; 
0D43 120FF7         2950 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0D46 121074         2952    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    2953 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D49 200C03         2954 +1         jb      SKRD, $+6
0D4C 020F56         2955 +1         ljmp    ERR_SKRD
0D4F 00             2956 +1         nop
                    2958            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    2959 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT
                    2960 +1                                                                                             
                                                                                                                 
                    2961 +1                                                                                             
                                                                                                                 
                    2962 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              2963 +1         COUNT    SET    COUNT+1                   
                    2964 +1         
0D50 20091B         2965 +1         jb      MB1, ENDD16
0D53 304304         2966 +1         jnb     PKI3, $+7
0D56 C222           2967 +1         clr     FAST
DEBUG                                                                                                         PAGE 53

0D58 D223           2968 +1         setb    SLOW
0D5A D238           2969 +1         setb    STOPPED         
0D5C D254           2970 +1         setb    ERRF34_U
0D5E D25B           2971 +1         setb    ERRF34_D
0D60 053B           2972 +1         inc     ERRF34_C
0D62 C21B           2973 +1                 clr     PKO3                               
0D64 C22C           2974 +1         clr     PO3U            
0D66 C22B           2975 +1         clr     PO3D              
0D68 1210D3         2976 +1                 lcall   WRITEPORTS
0D6B 020A80         2977 +1         ljmp    DOWN3
0D6E                2978 +1 ENDD16:
0D6E 00             2979 +1         nop
0D6F 200AD4         2981            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    2982 +1         CLR_FLOOR_ERR   ERRF34
0D72 C254           2983 +1         clr    ERRF34_U
0D74 C25B           2984 +1         clr    ERRF34_D
0D76 00             2985 +1         nop
                    2987 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0D77 120FF7         2988 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0D7A 121074         2989 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0D7D 300AFA         2990 +1         jnb     MB2, $-3  ; 
0D80 120FF7         2991 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0D83 D22F           2993            setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0D85 1210D3         2994            lcall   WRITEPORTS      ;
0D88 020D8B         2995            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    2996            
                    2997            
0D8B                2998    DOWN4_MB2:
                    2999            ;--------------------------
                    3000 +1         CFCSS     23, 1, -1, 14, -1
0D8B 633C01         3001 +1         xrl             G,  #1             
                    3002 +1         IF (-1 <> -1)
                    3003 +1             mov   A,  -1         
                    3004 +1             xrl   G,  A          
                    3005 +1         ENDIF    
0D8E E53C           3006 +1         mov   A,  G              
                    3007 +2         LCJNE A,  #23, CFCERR     
0D90 B41703         3008 +2         cjne    A, #23, $+6
0D93 020D99         3009 +2         jmp     $+6
0D96 020FA1         3010 +2         ljmp    CFCERR
0D99 00             3011 +2         nop
                    3012 +1         IF (-1 <> -1)
                    3013 +1             mov         D1, #-1     
                    3014 +1         ENDIF
                    3015 +1         IF (14 <> -1)
0D9A 753E0E         3016 +1             mov         D2, #14     
                    3017 +1         ENDIF
                    3018 +2         SERCHAR   #23             
0D9D 7417           3019 +2                 mov               A, #23
0D9F 3099FD         3020 +2     jnb     TI, $ 
0DA2 C299           3021 +2     clr     TI
0DA4 F599           3022 +2                 mov     SBUF, A
                    3023 +2     
                    3025            ;--------------------------
                    3026 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0DA6 120FF7         3027 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0DA9 121074         3028 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
DEBUG                                                                                                         PAGE 54

0DAC 300AFA         3029 +1         jnb     MB2, $-3  ; 
0DAF 120FF7         3030 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0DB2                3032    DOWN4_MB2A:
0DB2 121074         3033            lcall   READPORTS       ; nacitanie dat
                    3034 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0DB5 200C03         3035 +1         jb      SKRD, $+6
0DB8 020F56         3036 +1         ljmp    ERR_SKRD
0DBB 00             3037 +1         nop
                    3039            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    3040 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT
                    3041 +1                                                                                             
                                                                                                                 
                    3042 +1                                                                                             
                                                                                                                 
                    3043 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3044 +1         COUNT    SET    COUNT+1                   
                    3045 +1         
0DBC 20091B         3046 +1         jb      MB1, ENDD17
0DBF 304304         3047 +1         jnb     PKI3, $+7
0DC2 C222           3048 +1         clr     FAST
0DC4 D223           3049 +1         setb    SLOW
0DC6 D238           3050 +1         setb    STOPPED         
0DC8 D254           3051 +1         setb    ERRF34_U
0DCA D25B           3052 +1         setb    ERRF34_D
0DCC 053B           3053 +1         inc     ERRF34_C
0DCE C21B           3054 +1                 clr     PKO3                               
0DD0 C22C           3055 +1         clr     PO3U            
0DD2 C22B           3056 +1         clr     PO3D              
0DD4 1210D3         3057 +1                 lcall   WRITEPORTS
0DD7 020A80         3058 +1         ljmp    DOWN3
0DDA                3059 +1 ENDD17:
0DDA 00             3060 +1         nop
0DDB 200AD4         3062            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3063 +1         CLR_FLOOR_ERR   ERRF34       
0DDE C254           3064 +1         clr    ERRF34_U
0DE0 C25B           3065 +1         clr    ERRF34_D
0DE2 00             3066 +1         nop
0DE3 D22E           3068            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0DE5 1210D3         3069            lcall   WRITEPORTS      ;
                    3070 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0DE8 120FF7         3071 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0DEB 121074         3072 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0DEE 300AFA         3073 +1         jnb     MB2, $-3  ; 
0DF1 120FF7         3074 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3076    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3077    ;        anl     A, #00001000b ;-;
                    3078    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0DF4                3079    DOWN4_MB2_CFC:
                    3080            ;--------------------------
                    3081 +1         CFCSS     7, 16, -1, -1, -1
0DF4 633C10         3082 +1         xrl             G,  #16             
                    3083 +1         IF (-1 <> -1)
                    3084 +1             mov   A,  -1         
                    3085 +1             xrl   G,  A          
                    3086 +1         ENDIF    
DEBUG                                                                                                         PAGE 55

0DF7 E53C           3087 +1         mov   A,  G              
                    3088 +2         LCJNE A,  #7, CFCERR     
0DF9 B40703         3089 +2         cjne    A, #7, $+6
0DFC 020E02         3090 +2         jmp     $+6
0DFF 020FA1         3091 +2         ljmp    CFCERR
0E02 00             3092 +2         nop
                    3093 +1         IF (-1 <> -1)
                    3094 +1             mov         D1, #-1     
                    3095 +1         ENDIF
                    3096 +1         IF (-1 <> -1)
                    3097 +1             mov         D2, #-1     
                    3098 +1         ENDIF
                    3099 +2         SERCHAR   #7             
0E03 7407           3100 +2                 mov               A, #7
0E05 3099FD         3101 +2     jnb     TI, $ 
0E08 C299           3102 +2     clr     TI
0E0A F599           3103 +2                 mov     SBUF, A
                    3104 +2     
                    3106            ;--------------------------
                    3107 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3108 +1                                         
0E0C C3             3109 +1         clr     C                       
0E0D 7400           3110 +1         mov     A, #0h                  
0E0F 7213           3111 +1         orl     C, PI3D      
0E11 B00E           3112 +1         anl     C, /DPZK                
0E13 7243           3113 +1         orl     C, PKI3          
0E15 B05B           3114 +1         anl     C, /ERRF3_D 
0E17 720F           3115 +1         orl     C, DPK                  
0E19 7238           3116 +1         orl     C, STOPPED              
0E1B 3400           3117 +1         addc    A, #0h                  
0E1D 7059           3119            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3120 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0E1F E522           3121 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0E21 33             3122 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0E22 547E           3123 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3124 +1 
                    3125 +2         ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
0E24 A2E1           3126 +2         mov   C, ACC.1
0E26 B059           3127 +2         anl   C, /ERRF1_D
0E28 92E1           3128 +2         mov   ACC.1, C
                    3129 +2         ANLB    ACC.2, ERRF2_D  ; |
0E2A A2E2           3130 +2         mov   C, ACC.2
0E2C B05A           3131 +2         anl   C, /ERRF2_D
0E2E 92E2           3132 +2         mov   ACC.2, C
                    3133 +2         ANLB    ACC.3, ERRF2_D  ; |
0E30 A2E3           3134 +2         mov   C, ACC.3
0E32 B05A           3135 +2         anl   C, /ERRF2_D
0E34 92E3           3136 +2         mov   ACC.3, C
                    3137 +2         ANLB    ACC.4, ERRF3_D  ; |
0E36 A2E4           3138 +2         mov   C, ACC.4
0E38 B05B           3139 +2         anl   C, /ERRF3_D
0E3A 92E4           3140 +2         mov   ACC.4, C
                    3141 +2         ANLB    ACC.5, ERRF3_D  ; |
0E3C A2E5           3142 +2         mov   C, ACC.5
DEBUG                                                                                                         PAGE 56

0E3E B05B           3143 +2         anl   C, /ERRF3_D
0E40 92E5           3144 +2         mov   ACC.5, C
                    3145 +1 
0E42 7805           3146 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3147 +1  ; LL1: 
0E44 6006           3148 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0E46 C3             3149 +1         clr     C               ; Inak shiftnem o 2
0E47 33             3150 +1         rlc     A               ;
0E48 C3             3151 +1         clr     C               ;
0E49 33             3152 +1         rlc     A               ;
0E4A D8F8           3153 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3154 +1 ; LL2:
0E4C E8             3155 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3157 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0E4D B40303         3158 +1         cjne    A, #3, $+6
0E50 020E56         3159 +1         jmp     $+6
0E53 020E82         3160 +1         ljmp    DOWN4_MB1
0E56 00             3161 +1         nop
                    3163 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0E57 7405           3164 +1         mov     A, #5
0E59 C3             3165 +1         clr     C
0E5A 9403           3166 +1         subb    A, #3
0E5C F8             3167 +1         mov     R0, A
0E5D E528           3168 +1         mov     A, INPORTA
0E5F 541E           3169 +1         anl     A, #00011110b
0E61 852BF0         3170 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0E64 63F0FF         3171 +1         xrl     B, #0FFH
0E67 55F0           3172 +1         anl     A, B
0E69 C3             3173 +1         clr     C
0E6A 33             3174 +1         rlc     A
0E6B C3             3175 +1         clr     C
0E6C 33             3176 +1         rlc     A
0E6D C3             3177 +1         clr     C
0E6E 33             3178 +1         rlc     A
                    3179 +1 ;LL1   
0E6F C3             3180 +1         clr     C
0E70 33             3181 +1         rlc     A
0E71 D8FC           3182 +1         djnz    R0, $-2;LL1
0E73 6003           3184            jz      D4_MB2C         ; |   ak neni zastavujem          
0E75 020E82         3185            ljmp    DOWN4_MB1       ;-; |       
0E78 D223           3186    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0E7A C222           3187            clr     FAST            ; 
0E7C 1210D3         3188            lcall   WRITEPORTS      ;
0E7F 020ECF         3189            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3190            
                    3191            
0E82                3192    DOWN4_MB1:    
                    3193            ;--------------------------
                    3194 +1         CFCSS     25, 30, 20, 0, -1
0E82 633C1E         3195 +1         xrl             G,  #30             
                    3196 +1         IF (-1 <> -1)
                    3197 +1             mov   A,  -1         
                    3198 +1             xrl   G,  A          
DEBUG                                                                                                         PAGE 57

                    3199 +1         ENDIF    
0E85 E53C           3200 +1         mov   A,  G              
                    3201 +2         LCJNE A,  #25, CFCERR     
0E87 B41903         3202 +2         cjne    A, #25, $+6
0E8A 020E90         3203 +2         jmp     $+6
0E8D 020FA1         3204 +2         ljmp    CFCERR
0E90 00             3205 +2         nop
                    3206 +1         IF (20 <> -1)
0E91 753D14         3207 +1             mov         D1, #20     
                    3208 +1         ENDIF
                    3209 +1         IF (0 <> -1)
0E94 753E00         3210 +1             mov         D2, #0     
                    3211 +1         ENDIF
                    3212 +2         SERCHAR   #25             
0E97 7419           3213 +2                 mov               A, #25
0E99 3099FD         3214 +2     jnb     TI, $ 
0E9C C299           3215 +2     clr     TI
0E9E F599           3216 +2                 mov     SBUF, A
                    3217 +2     
                    3219            ;--------------------------
0EA0 121074         3220    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3221 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0EA3 200C03         3222 +1         jb      SKRD, $+6
0EA6 020F56         3223 +1         ljmp    ERR_SKRD
0EA9 00             3224 +1         nop
                    3226            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    3227 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT
                    3228 +1                                                                                             
                                                                                                                 
                    3229 +1                                                                                             
                                                                                                                 
                    3230 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3231 +1         COUNT    SET    COUNT+1                   
                    3232 +1         
0EAA 200A1B         3233 +1         jb      MB2, ENDD18
0EAD 304304         3234 +1         jnb     PKI3, $+7
0EB0 C222           3235 +1         clr     FAST
0EB2 D223           3236 +1         setb    SLOW
0EB4 D238           3237 +1         setb    STOPPED         
0EB6 D253           3238 +1         setb    ERRF3_U
0EB8 D25B           3239 +1         setb    ERRF3_D
0EBA 0537           3240 +1         inc     ERRF3_C
0EBC C21B           3241 +1                 clr     PKO3                               
0EBE C22C           3242 +1         clr     PO3U            
0EC0 C22B           3243 +1         clr     PO3D              
0EC2 1210D3         3244 +1                 lcall   WRITEPORTS
0EC5 020AFE         3245 +1         ljmp    DOWN3_MB2
0EC8                3246 +1 ENDD18:
0EC8 00             3247 +1         nop
0EC9 2009D4         3249            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3250    ;        CLR_FLOOR_ERR   ERRF3
                    3251    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3252    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3253    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3254    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
DEBUG                                                                                                         PAGE 58

                    3255    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3256    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3257    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
0ECC 020A80         3258            ljmp    DOWN3         ;-; |       
                    3259    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3260    ;        setb    DOWNOld         ;       (a zalohuj)
                    3261    ;        clr     UPOld           ;       (a zalohuj)
                    3262    ;        clr     FAST            ; 
                    3263    ;        lcall   WRITEPORTS      ; 
                    3264    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3265    
                    3266                    
0ECF                3267    DOWN4_STOP:    
                    3268            ;--------------------------
                    3269 +1         CFCSS     13, 10, 0, -1, -1
0ECF 633C0A         3270 +1         xrl             G,  #10             
                    3271 +1         IF (-1 <> -1)
                    3272 +1             mov   A,  -1         
                    3273 +1             xrl   G,  A          
                    3274 +1         ENDIF    
0ED2 E53C           3275 +1         mov   A,  G              
                    3276 +2         LCJNE A,  #13, CFCERR     
0ED4 B40D03         3277 +2         cjne    A, #13, $+6
0ED7 020EDD         3278 +2         jmp     $+6
0EDA 020FA1         3279 +2         ljmp    CFCERR
0EDD 00             3280 +2         nop
                    3281 +1         IF (0 <> -1)
0EDE 753D00         3282 +1             mov         D1, #0     
                    3283 +1         ENDIF
                    3284 +1         IF (-1 <> -1)
                    3285 +1             mov         D2, #-1     
                    3286 +1         ENDIF
                    3287 +2         SERCHAR   #13             
0EE1 740D           3288 +2                 mov               A, #13
0EE3 3099FD         3289 +2     jnb     TI, $ 
0EE6 C299           3290 +2     clr     TI
0EE8 F599           3291 +2                 mov     SBUF, A
                    3292 +2     
                    3294            ;--------------------------
0EEA 121074         3295    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3296 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0EED 200C03         3297 +1         jb      SKRD, $+6
0EF0 020F56         3298 +1         ljmp    ERR_SKRD
0EF3 00             3299 +1         nop
                    3301            ;ljnb    MB2, ERR_ZAST_C; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na spo
                                                                               malovaciu) <<<
                    3302 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT
                    3303 +1                                                                                             
                                                                                                                 
                    3304 +1                                                                                             
                                                                                                                 
                    3305 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3306 +1         COUNT    SET    COUNT+1                   
                    3307 +1         
0EF4 200A1B         3308 +1         jb      MB2, ENDD19
0EF7 304304         3309 +1         jnb     PKI3, $+7
DEBUG                                                                                                         PAGE 59

0EFA C222           3310 +1         clr     FAST
0EFC D223           3311 +1         setb    SLOW
0EFE D238           3312 +1         setb    STOPPED         
0F00 D253           3313 +1         setb    ERRF3_U
0F02 D25B           3314 +1         setb    ERRF3_D
0F04 0537           3315 +1         inc     ERRF3_C
0F06 C21B           3316 +1                 clr     PKO3                               
0F08 C22C           3317 +1         clr     PO3U            
0F0A C22B           3318 +1         clr     PO3D              
0F0C 1210D3         3319 +1                 lcall   WRITEPORTS
0F0F 020AFE         3320 +1         ljmp    DOWN3_MB2
0F12                3321 +1 ENDD19:
0F12 00             3322 +1         nop
0F13 2009D4         3324            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3325    ;        CLR_FLOOR_ERR   ERRF3
0F16 C221           3326            clr     DOWN            ; zastav motor
0F18 D23B           3327            setb    DOWNOld         ;       (a zalohuj)
0F1A C23A           3328            clr     UPOld           ;       (a zalohuj)
0F1C C222           3329            clr     FAST            ; 
0F1E 1210D3         3330            lcall   WRITEPORTS      ; 
0F21 011A           3331            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3332      
0F23                3333    ERR_1SPOM_C: 
                    3334            ;clr     UP              ; zastav motor
                    3335            ;clr     DOWN            ; 
                    3336            ;lcall   WRITEPORTS      ; 
                    3337            ;_BP_
                    3338            ;nop
                    3339            ;nop 
                    3340 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0F23 120FF7         3341 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0F26 121074         3342 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0F29 3009FA         3343 +1         jnb     MB1, $-3  ; 
0F2C 120FF7         3344 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0F2F 9011A6         3346            mov     DPTR, #STR_ERR_1SPOM_C         ; vypis info 
0F32 12110A         3347            lcall   DISPSTR         ;          
0F35 020F68         3348            ljmp    ERROR1         
                    3349            
0F38                3350    ERR_2SPOM_C: 
                    3351            ;clr     UP              ; zastav motor
                    3352            ;clr     DOWN            ; 
                    3353            ;lcall   WRITEPORTS      ; 
                    3354            ;_BP_
                    3355            ;nop
                    3356            ;nop
                    3357 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0F38 120FF7         3358 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0F3B 121074         3359 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0F3E 3009FA         3360 +1         jnb     MB1, $-3  ; 
0F41 120FF7         3361 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0F44 9011CC         3363            mov     DPTR, #STR_ERR_2SPOM_C         ; vypis info 
0F47 12110A         3364            lcall   DISPSTR         ;
0F4A 020F68         3365            ljmp    ERROR1 
                    3366            
0F4D                3367    ERR_ZAST_C: 
                    3368            ;clr     UP              ; zastav motor
DEBUG                                                                                                         PAGE 60

                    3369            ;clr     DOWN            ; 
                    3370            ;lcall   WRITEPORTS      ; 
                    3371            ;_BP_
                    3372            ;nop
                    3373            ;nop
                    3374            ;lcall   READPORTS
                    3375            ;clr     FAST
                    3376            ;clr     SLOW
0F4D 9011F6         3377            mov     DPTR, #STR_ERR_ZAST_C         ; vypis info 
0F50 12110A         3378            lcall   DISPSTR         ;
0F53 020F68         3379            ljmp    ERROR1  
                    3380            
0F56                3381    ERR_SKRD: 
                    3382            ;clr     UP              ; zastav motor
                    3383            ;clr     DOWN            ; 
                    3384            ;lcall   WRITEPORTS      ; 
                    3385            ;_BP_
                    3386            ;nop
                    3387            ;nop        
0F56 901257         3388            mov     DPTR, #STR_ERR_SKRD         ; vypis info 
0F59 12110A         3389            lcall   DISPSTR         ;
0F5C 020F68         3390            ljmp    ERROR1    
                    3391            
0F5F                3392    ERR_SKRH: 
                    3393            ;clr     UP              ; zastav motor
                    3394            ;clr     DOWN            ; 
                    3395            ;lcall   WRITEPORTS      ; 
                    3396            ;_BP_
                    3397            ;nop
                    3398            ;nop
0F5F 90121C         3399            mov     DPTR, #STR_ERR_SKRH         ; vypis info 
0F62 12110A         3400            lcall   DISPSTR         ;        
0F65 020F68         3401            ljmp    ERROR1 
                    3402            
0F68                3403    ERROR1:         
0F68 D22F           3404            setb    LEDU
0F6A D22E           3405            setb    LEDD
0F6C C222           3406            clr     FAST
0F6E D223           3407            setb    SLOW
0F70 1210D3         3408            lcall   WRITEPORTS          
0F73 121074         3409    ERROR1S:lcall   READPORTS       ; nacitanie dat
0F76 300B08         3410            jnb     SKRH, ERROR1C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade)
0F79 300C05         3411            jnb     SKRD, ERROR1C   ; Sme na dolnej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade)
0F7C 300902         3412            jnb     MB1, ERROR1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0F7F 80F2           3413            jmp     ERROR1S         ; Ak sme nechytili ani jednu clonku, opakujeme
0F81 C220           3414    ERROR1C:clr     UP              ; zastav motor
0F83 C221           3415            clr     DOWN            ; 
0F85 C222           3416            clr     FAST            ; 
0F87 C223           3417            clr     SLOW            ; 
0F89 1210D3         3418            lcall   WRITEPORTS      ; 
0F8C 12102C         3419            lcall   WAITFORTIMER    ; simulacia TIMERu
0F8F 020F92         3420            jmp     ERROR2        ;-; a prejdi do stavu ERROR2 
                    3421            
0F92 121074         3422    ERROR2: lcall   READPORTS       ; nacitanie dat
0F95 200DFA         3423            jb      DP, ERROR2      ; uz vystupili vsetci ludia z kabiny?
DEBUG                                                                                                         PAGE 61

0F98 200FF7         3424            jb      DPK, ERROR2     ; uz vystupili vsetci ludia z kabiny?
0F9B 200EF4         3425            jb      DPZK, ERROR2    ; uz vystupili vsetci ludia z kabiny?
0F9E 020033         3426            ljmp    START
                    3427                           
                    3428                    
0FA1                3429    CFCERR:
0FA1 C220           3430            clr     UP              ; zastav motor
0FA3 C221           3431            clr     DOWN            ; 
0FA5 C222           3432            clr     FAST            ; 
0FA7 C223           3433            clr     SLOW            ; 
0FA9 1210D3         3434            lcall   WRITEPORTS      ; 
0FAC 9012A3         3435            mov     DPTR, #STR_ERR_CFC         ; vypis info 
0FAF 12110A         3436            lcall   DISPSTR         ;
                    3437                    
0FB2                3438    ENDPROG:
0FB2 D218           3439            setb    KS
0FB4 1210D3         3440            call    WRITEPORTS                ; zapis novu informaciu
                    3441 +1         _BP_
0FB7 C2B3           3442 +1         clr     P3.3
0FB9 D2AA           3443 +1         setb    EX1
0FBB 00             3444 +1         nop
0FBC 22             3446            ret
                    3447            
                    3448            
                    3449            
                    3450    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3451    ; INT_TIMER0
                    3452    ; Obsluha prerusenia timera 0
                    3453    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
0FBD                3454    INT_TIMER0:
0FBD C0E0           3455            push    ACC
0FBF C0F0           3456            push    B
0FC1 C080           3457            push    P0
0FC3 C090           3458            push    P1
0FC5 C0A0           3459            push    P2
0FC7 C0B0           3460            push    P3
                    3461            ;push    OUTPORTC
                    3462            
0FC9 ED             3463            mov     A, R5
0FCA 1D             3464            dec     R5
0FCB 6002           3465            jz      INT_TIMER0_MAIN    
0FCD 801B           3466            sjmp    INT_TIMER0_END
0FCF                3467    INT_TIMER0_MAIN:
0FCF EE             3468            mov     A, R6
0FD0 FD             3469            mov     R5, A
0FD1 E52A           3470            mov     A, ERRFLOOR_U
0FD3 452B           3471            orl     A, ERRFLOOR_D
0FD5 541E           3472            anl     A, #00011110b
0FD7 23             3473            rl      A
0FD8 23             3474            rl      A
0FD9 23             3475            rl      A    
0FDA 6224           3476            xrl     OUTPORTB, A     
                    3477                          
0FDC 852480         3478            mov     p0, OUTPORTB 
0FDF 75A0C1         3479            mov     p2, #i8255OUTB
0FE2 C2B6           3480            clr     WRNOT
0FE4 00             3481            nop
0FE5 00             3482            nop
DEBUG                                                                                                         PAGE 62

0FE6 00             3483            nop
0FE7 00             3484            nop
0FE8 D2B6           3485            setb    WRNOT
                    3486            
                    3487            
0FEA                3488    INT_TIMER0_END:
                    3489            
                    3490    
                    3491            ;pop     OUTPORTC
0FEA D0B0           3492            pop     P3
0FEC D0A0           3493            pop     P2
0FEE D090           3494            pop     P1
0FF0 D080           3495            pop     P0 
0FF2 D0F0           3496            pop     B       
0FF4 D0E0           3497            pop     ACC
0FF6 32             3498            reti 
                    3499            
                    3500    ;INT_TIMER0:
                    3501    ;        push    ACC
                    3502    ;        mov     A, R7  
                    3503    ;        dec     R7               
                    3504    ;        jnz     INT_TIMER0_END     
                    3505    ;        mov     R7, #20h
                    3506    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    3507    ;        setb    LEDU
                    3508    ;        setb    LEDD
                    3509    ;        jmp     INT_TIMER0_WRITE
                    3510    ;INT_TIMER0_CLEAR:        
                    3511    ;        ;clr     LEDU
                    3512    ;        ;clr     LEDD
                    3513    ;INT_TIMER0_WRITE: 
                    3514    ;        lcall   WRITEPORTS
                    3515    ;INT_TIMER0_END: 
                    3516    ;        setb    LEDU
                    3517    ;        lcall   WRITEPORTS       
                    3518    ;        pop     ACC
                    3519    ;        reti
                    3520            
                    3521            
                    3522    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    3523    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    3524    ; 11.0592MHz/2000 = zdrzanie 1 ms
0FF7                3525    TIME10MS:
0FF7 7963           3526            mov     R1,#063h        ; 2
                    3527                                    ; *** 100x
0FF9 7AFF           3528    TIME0:  mov     R2,#0FFh        ; 2 
0FFB DAFE           3529    TIME1:  djnz    R2,TIME1        ; 256*2   
0FFD 7AFF           3530            mov     R2,#0FFh        ; 2       
0FFF DAFE           3531    TIME2:  djnz    R2,TIME2        ; 256*2 
1001 7A24           3532            mov     R2,#024h        ; 2       
1003 DAFE           3533    TIME3:  djnz    R2,TIME3        ; 36*2
1005 00             3534            nop                     ; 1
1006 D9F1           3535            djnz    R1,TIME0        ; 2
                    3536                                    ; ***
1008 792A           3537            mov     R1,#02Ah        ; 2 
100A D9FE           3538    TIME4:  djnz    R1,TIME4        ; 43*2  
100C 22             3539            ret                     ; koniec
                    3540            
DEBUG                                                                                                         PAGE 63

                    3541            
                    3542    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3543    ; STOP
                    3544    ; osetri stlacenie tlacidla STOP
                    3545    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
100D                3546    STOP:
100D D238           3547            setb    STOPPED
100F C222           3548            clr     FAST
1011 C223           3549            clr     SLOW
1013 74E1           3550            mov     A, #11100001b
1015 5223           3551            anl     OUTPORTA, A 
1017 1210D3         3552            lcall   WRITEPORTS
                    3553            
101A 12102C         3554            lcall   WAITFORTIMER
101D 121034         3555    STOPC:  lcall   READPORTS1
1020 E528           3556            mov     A, INPORTA
1022 541E           3557            anl     A, #00011110b
1024 60F7           3558            jz      STOPC     
                    3559            
1026 D223           3560            setb    SLOW
1028 1210D3         3561            lcall   WRITEPORTS
102B 22             3562            ret        
                    3563            
                    3564            
                    3565    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3566    ; DELAY
                    3567    ; Pocka na stlacenie tlacidla na 1. poschodi  - signal PO1 (v buducnosti to 
                    3568    ; bude timer)
                    3569    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
102C                3570    WAITFORTIMER:
102C 7B10           3571            mov     R3, #10h
102E 120FF7         3572    DEL1:   lcall   TIME10MS
1031 DBFB           3573            djnz    R3, DEL1
1033 22             3574            ret
                    3575            
                    3576    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3577    ; READPORTS1
                    3578    ; precita nove hodnoty na portoch
                    3579    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1034                3580    READPORTS1:
1034 C2AF           3581            clr     EA                  ;Treba zakazat prerusenia
                    3582            
1036 75A080         3583            mov     p2, #i8255INA       ; citaj data z portu A
1039 75803F         3584            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
103C C2B7           3585            clr     RDNOT
103E 00             3586            nop
103F 00             3587            nop
1040 00             3588            nop
1041 00             3589            nop
1042 858028         3590            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1045 D2B7           3591            setb    RDNOT
                    3592            
1047 75A081         3593            mov     p2, #i8255INB       ; citaj data z portu B
104A 7580FE         3594            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
104D C2B7           3595            clr     RDNOT
104F 00             3596            nop
1050 00             3597            nop
DEBUG                                                                                                         PAGE 64

1051 00             3598            nop
1052 00             3599            nop
1053 858021         3600            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1056 D2B7           3601            setb    RDNOT
                    3602    
1058 75A082         3603            mov     p2, #i8255INC       ; citaj data z portu C
105B 75803F         3604            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
105E C2B7           3605            clr     RDNOT
1060 00             3606            nop
1061 00             3607            nop
1062 00             3608            nop
1063 00             3609            nop
1064 858022         3610            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1067 D2B7           3611            setb    RDNOT
1069 00             3612            nop
106A 00             3613            nop
106B 00             3614            nop
106C 00             3615            nop
106D 00             3616            nop
106E 00             3617            nop
106F 00             3618            nop
1070 00             3619            nop
1071 D2AF           3620            setb    EA                 ;znovu spustime prerusenia
1073 22             3621            ret
                    3622    
                    3623    
                    3624    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3625    ; READPORTS
                    3626    ; precita nove hodnoty na portoch
                    3627    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1074                3628    READPORTS:
1074 C2AF           3629            clr     EA                  ;Treba zakazat prerusenia
                    3630            
1076 75A080         3631            mov     p2, #i8255INA       ; citaj data z portu A
1079 75803F         3632            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
107C C2B7           3633            clr     RDNOT
107E 00             3634            nop
107F 00             3635            nop
1080 00             3636            nop
1081 00             3637            nop
1082 858028         3638            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1085 D2B7           3639            setb    RDNOT
                    3640            
1087 75A081         3641            mov     p2, #i8255INB       ; citaj data z portu B
108A 7580FE         3642            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
108D C2B7           3643            clr     RDNOT
108F 00             3644            nop
1090 00             3645            nop
1091 00             3646            nop
1092 00             3647            nop
1093 858021         3648            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1096 D2B7           3649            setb    RDNOT
                    3650    
1098 75A082         3651            mov     p2, #i8255INC       ; citaj data z portu C
109B 75803F         3652            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
109E C2B7           3653            clr     RDNOT
10A0 00             3654            nop
DEBUG                                                                                                         PAGE 65

10A1 00             3655            nop
10A2 00             3656            nop
10A3 00             3657            nop
10A4 858022         3658            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
10A7 D2B7           3659            setb    RDNOT
10A9 00             3660            nop
10AA 00             3661            nop
10AB 00             3662            nop
10AC 00             3663            nop
10AD 00             3664            nop
10AE 00             3665            nop
10AF 00             3666            nop
10B0 00             3667            nop
10B1 D2AF           3668            setb    EA                 ;znovu spustime prerusenia
                    3669            
                    3670            
10B3 300F04         3671            jnb     DPK, READPORTS_C1
10B6 C222           3672            clr     FAST
10B8 D223           3673            setb    SLOW
10BA                3674    READPORTS_C1:         
10BA 204003         3675            jb      STOPNOT, READPORTS_C
10BD 12100D         3676            lcall   STOP
10C0                3677    READPORTS_C:        
10C0 E528           3678            mov     A, INPORTA
10C2 541E           3679            anl     A, #00011110b
10C4 4223           3680            orl     OUTPORTA, A
10C6 1210D3         3681            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
10C9 E522           3682            mov     A, INPORTC
10CB 543F           3683            anl     A, #00111111b
10CD 4225           3684            orl     OUTPORTC, A
10CF 1210D3         3685            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    3686            
                    3687            
10D2 22             3688            ret
                    3689            
                    3690    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3691    ; WRITEPORTS
                    3692    ; spravi zalohu vystupnych registrov a posle data von
                    3693    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10D3                3694    WRITEPORTS:
10D3 C2AF           3695            clr     EA                  ;Treba zakazat prerusenia
                    3696            
10D5 852380         3697            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
10D8 75A0C0         3698            mov     p2, #i8255OUTA
10DB C2B6           3699            clr     WRNOT
10DD 00             3700            nop
10DE 00             3701            nop
10DF 00             3702            nop
10E0 00             3703            nop
10E1 D2B6           3704            setb    WRNOT
                    3705            
10E3 852480         3706            mov     p0, OUTPORTB        ; potom port B
10E6 75A0C1         3707            mov     p2, #i8255OUTB
10E9 C2B6           3708            clr     WRNOT
10EB 00             3709            nop
10EC 00             3710            nop
10ED 00             3711            nop
10EE 00             3712            nop
DEBUG                                                                                                         PAGE 66

10EF D2B6           3713            setb    WRNOT
                    3714    
10F1 852580         3715            mov     p0, OUTPORTC        ; a nakoniec port C
10F4 75A0C2         3716            mov     p2, #i8255OUTC
10F7 C2B6           3717            clr     WRNOT
10F9 00             3718            nop
10FA 00             3719            nop
10FB 00             3720            nop
10FC 00             3721            nop
10FD D2B6           3722            setb    WRNOT
10FF 00             3723            nop
1100 00             3724            nop
1101 00             3725            nop
1102 00             3726            nop
1103 00             3727            nop
1104 00             3728            nop
1105 00             3729            nop
1106 00             3730            nop
1107 D2AF           3731            setb     EA                  ;Treba zakazat prerusenia
1109 22             3732            ret
                    3733    
                    3734    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3735    
                    3736    
                    3737    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3738    ; DISPSTR
                    3739    ; posle na seriovu linku retazec na adrese DPTR
                    3740    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
110A                3741    DISPSTR:
110A C0E0           3742            push    ACC
110C                3743    DSPS_LOOP:           
110C E4             3744            clr     A
110D 93             3745            movc    A, @A+DPTR
110E 600A           3746            jz      DSPS_END
1110 C299           3747            clr     TI
1112 F599           3748            mov     SBUF, A
1114 3099FD         3749            jnb     TI, $ 
1117 A3             3750            inc     DPTR
1118 80F2           3751            sjmp    DSPS_LOOP
111A                3752    DSPS_END:
111A D0E0           3753            pop     ACC
111C 22             3754            ret
                    3755                                             
                    3756    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3757    
111D 0D0A5269       3758    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
1121 61646961   
1125 63692073   
1129 79737465   
112D 6D206A65   
1131 20696E69   
1135 6369616C   
1139 697A6F76   
113D 616E792E   
1141 0D0A00     
1144 52696164       3759    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
1148 69616369   
DEBUG                                                                                                         PAGE 67

114C 20737973   
1150 74656D20   
1154 6A652072   
1158 65696E69   
115C 6369616C   
1160 697A6F76   
1164 616E7920   
1168 706F2073   
116C 746C6163   
1170 656E6920   
1174 746C6163   
1178 69646C61   
117C 2053544F   
1180 502E0D0A   
1184 00         
1185 4B616C69       3760    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
1189 62726163   
118D 69612076   
1191 79746168   
1195 75206A65   
1199 20756B6F   
119D 6E63656E   
11A1 612E0D0A   
11A5 00         
11A6 43687962       3761    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
11AA 61212056   
11AE 79706164   
11B2 6C612073   
11B6 706F6D61   
11BA 6C6F7661   
11BE 63696120   
11C2 636C6F6E   
11C6 6B61210D   
11CA 0A00       
11CC 43687962       3762    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
11D0 61212056   
11D4 79706164   
11D8 6C692064   
11DC 76652073   
11E0 706F6D61   
11E4 6C6F7661   
11E8 63696520   
11EC 636C6F6E   
11F0 6B79210D   
11F4 0A00       
11F6 43687962       3763    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
11FA 61212056   
11FE 79706164   
1202 6C61207A   
1206 61737461   
120A 766F7661   
120E 63696120   
1212 636C6F6E   
1216 6B61210D   
121A 0A00       
121C 43687962       3764    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
1220 6121204E   
DEBUG                                                                                                         PAGE 68

1224 656F6361   
1228 6B617661   
122C 6E65206E   
1230 61636974   
1234 616E6965   
1238 20686F72   
123C 6E656A20   
1240 73706F6D   
1244 616C6F76   
1248 6163656A   
124C 20636C6F   
1250 6E6B7921   
1254 0D0A00     
1257 43687962       3765    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
125B 6121204E   
125F 656F6361   
1263 6B617661   
1267 6E65206E   
126B 61636974   
126F 616E6965   
1273 20646F6C   
1277 6E656A20   
127B 73706F6D   
127F 616C6F76   
1283 6163656A   
1287 20636C6F   
128B 6E6B7921   
128F 0D0A00     
1292 53707573       3766    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
1296 74616D20   
129A 4B54502E   
129E 2E2E0D0A   
12A2 00         
12A3 446F736C       3767    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
12A7 6F206B20   
12AB 7A6D656E   
12AF 65204B54   
12B3 50210D0A   
12B7 00         
                    3768    
----                3769            DSEG
0040                3770            org     40h
0040                3771    STACK:  DS      10h
                    3772    
                    3773    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 69

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALIB. . . . . . . . . . . . . .  C ADDR  00BCH  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00D5H  
CALIBEND2. . . . . . . . . . . .  C ADDR  00E0H  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00CDH  
CFCERR . . . . . . . . . . . . .  C ADDR  0FA1H  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  080AH  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0BEFH  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0E78H  
DEL1 . . . . . . . . . . . . . .  C ADDR  102EH  
DISPSTR. . . . . . . . . . . . .  C ADDR  110AH  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  NOT USED  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DEBUG                                                                                                         PAGE 70

DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  06CBH  
DOWN2ERR . . . . . . . . . . . .  C ADDR  0730H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  073FH  
DOWN2_C. . . . . . . . . . . . .  C ADDR  0704H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  07E4H  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  07FFH  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  075BH  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  0786H  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  07B2H  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  07C1H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0A80H  
DOWN3A . . . . . . . . . . . . .  C ADDR  0AB9H  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0BF9H  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0C14H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0AFEH  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0B29H  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0B6BH  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0C43H  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0C61H  
DOWN4. . . . . . . . . . . . . .  C ADDR  0D14H  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0D46H  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0E82H  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0EA0H  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0D8BH  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0DB2H  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0DF4H  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  0ECFH  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  0EEAH  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPS_END . . . . . . . . . . . .  C ADDR  111AH  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  110CH  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  01DDH  
ENDD1. . . . . . . . . . . . . .  C ADDR  0249H  
ENDD10 . . . . . . . . . . . . .  C ADDR  0984H  
ENDD11 . . . . . . . . . . . . .  C ADDR  0A07H  
ENDD12 . . . . . . . . . . . . .  C ADDR  0AE1H  
ENDD13 . . . . . . . . . . . . .  C ADDR  0B51H  
ENDD14 . . . . . . . . . . . . .  C ADDR  0C3CH  
ENDD15 . . . . . . . . . . . . .  C ADDR  0C89H  
ENDD16 . . . . . . . . . . . . .  C ADDR  0D6EH  
ENDD17 . . . . . . . . . . . . .  C ADDR  0DDAH  
ENDD18 . . . . . . . . . . . . .  C ADDR  0EC8H  
ENDD19 . . . . . . . . . . . . .  C ADDR  0F12H  
ENDD2. . . . . . . . . . . . . .  C ADDR  033EH  
ENDD3. . . . . . . . . . . . . .  C ADDR  038BH  
ENDD4. . . . . . . . . . . . . .  C ADDR  0507H  
ENDD5. . . . . . . . . . . . . .  C ADDR  0577H  
ENDD6. . . . . . . . . . . . . .  C ADDR  066CH  
ENDD7. . . . . . . . . . . . . .  C ADDR  06B9H  
ENDD8. . . . . . . . . . . . . .  C ADDR  072CH  
ENDD9. . . . . . . . . . . . . .  C ADDR  07AEH  
ENDPROG. . . . . . . . . . . . .  C ADDR  0FB2H  NOT USED  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
DEBUG                                                                                                         PAGE 71

ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  NOT USED  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  NOT USED  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERROR1 . . . . . . . . . . . . .  C ADDR  0F68H  
ERROR1C. . . . . . . . . . . . .  C ADDR  0F81H  
ERROR1S. . . . . . . . . . . . .  C ADDR  0F73H  
ERROR2 . . . . . . . . . . . . .  C ADDR  0F92H  
ERR_1SPOM_C. . . . . . . . . . .  C ADDR  0F23H  NOT USED  
ERR_2SPOM_C. . . . . . . . . . .  C ADDR  0F38H  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  0F56H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  0F5FH  
ERR_ZAST_C . . . . . . . . . . .  C ADDR  0F4DH  NOT USED  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
EX1. . . . . . . . . . . . . . .  B ADDR  00AAH  PREDEFINED  
F1OK . . . . . . . . . . . . . .  C ADDR  0177H  
F1S. . . . . . . . . . . . . . .  C ADDR  0136H  
F2 . . . . . . . . . . . . . . .  C ADDR  0488H  
F2DOWN . . . . . . . . . . . . .  C ADDR  049AH  
F2OK . . . . . . . . . . . . . .  C ADDR  03F1H  
F2S. . . . . . . . . . . . . . .  C ADDR  03CFH  
F2SW . . . . . . . . . . . . . .  C ADDR  043DH  
F2UP . . . . . . . . . . . . . .  C ADDR  048EH  
F3 . . . . . . . . . . . . . . .  C ADDR  0905H  
F3DOWN . . . . . . . . . . . . .  C ADDR  0917H  
F3OK . . . . . . . . . . . . . .  C ADDR  086EH  
F3S. . . . . . . . . . . . . . .  C ADDR  084CH  
F3SW . . . . . . . . . . . . . .  C ADDR  08BAH  
F3UP . . . . . . . . . . . . . .  C ADDR  090BH  
F4OK . . . . . . . . . . . . . .  C ADDR  0D08H  
F4S. . . . . . . . . . . . . . .  C ADDR  0CC7H  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  010AH  
FLOOR2 . . . . . . . . . . . . .  C ADDR  039DH  
FLOOR3 . . . . . . . . . . . . .  C ADDR  081AH  
DEBUG                                                                                                         PAGE 72

FLOOR4 . . . . . . . . . . . . .  C ADDR  0C9BH  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  0FBDH  
INT_TIMER0_END . . . . . . . . .  C ADDR  0FEAH  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  0FCFH  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  00F5H  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P1 . . . . . . . . . . . . . . .  D ADDR  0090H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
P3 . . . . . . . . . . . . . . .  D ADDR  00B0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  
DEBUG                                                                                                         PAGE 73

PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READPORTS. . . . . . . . . . . .  C ADDR  1074H  
READPORTS1 . . . . . . . . . . .  C ADDR  1034H  
READPORTS_C. . . . . . . . . . .  C ADDR  10C0H  
READPORTS_C1 . . . . . . . . . .  C ADDR  10BAH  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0040H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  100DH  
STOPC. . . . . . . . . . . . . .  C ADDR  101DH  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  1185H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  1292H  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  11A6H  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  11CCH  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  12A3H  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  1257H  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  121CH  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  11F6H  
STR_INIT . . . . . . . . . . . .  C ADDR  111DH  
STR_STOP . . . . . . . . . . . .  C ADDR  1144H  NOT USED  
TCON . . . . . . . . . . . . . .  D ADDR  0088H  PREDEFINED  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME0. . . . . . . . . . . . . .  C ADDR  0FF9H  
TIME1. . . . . . . . . . . . . .  C ADDR  0FFBH  
TIME10MS . . . . . . . . . . . .  C ADDR  0FF7H  
TIME2. . . . . . . . . . . . . .  C ADDR  0FFFH  
TIME3. . . . . . . . . . . . . .  C ADDR  1003H  
TIME4. . . . . . . . . . . . . .  C ADDR  100AH  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
U1_MB2C. . . . . . . . . . . . .  C ADDR  02E2H  
U2_MB2C. . . . . . . . . . . . .  C ADDR  0610H  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0A70H  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  0183H  
UP1A . . . . . . . . . . . . . .  C ADDR  01B5H  
UP1_MB1. . . . . . . . . . . . .  C ADDR  02ECH  
DEBUG                                                                                                         PAGE 74

UP1_MB1_C. . . . . . . . . . . .  C ADDR  0316H  
UP1_MB2. . . . . . . . . . . . .  C ADDR  01FAH  
UP1_MB2A . . . . . . . . . . . .  C ADDR  0221H  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  0263H  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  0345H  
UP1_STOP_C . . . . . . . . . . .  C ADDR  0363H  
UP2. . . . . . . . . . . . . . .  C ADDR  04A6H  
UP2A . . . . . . . . . . . . . .  C ADDR  04DFH  
UP2_MB1. . . . . . . . . . . . .  C ADDR  061AH  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  0644H  
UP2_MB2. . . . . . . . . . . . .  C ADDR  0524H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  054FH  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  0591H  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  0673H  
UP2_STOP_C . . . . . . . . . . .  C ADDR  0691H  
UP3. . . . . . . . . . . . . . .  C ADDR  0923H  
UP3A . . . . . . . . . . . . . .  C ADDR  095CH  
UP3ERR . . . . . . . . . . . . .  C ADDR  0988H  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0998H  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0A3EH  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0A65H  
UP3_MB2. . . . . . . . . . . . .  C ADDR  09B4H  
UP3_MB2A . . . . . . . . . . . .  C ADDR  09DFH  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0A0BH  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0A1BH  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WAITFORTIMER . . . . . . . . . .  C ADDR  102CH  
WRITEPORTS . . . . . . . . . . .  C ADDR  10D3H  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
