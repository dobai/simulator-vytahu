DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    
                =1    41    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    42    i8255INA        equ     080h
  0081          =1    43    i8255INB        equ     081h
  0082          =1    44    i8255INC        equ     082h
  0083          =1    45    i8255INCW       equ     083h
  00C0          =1    46    i8255OUTA       equ     0c0h
  00C1          =1    47    i8255OUTB       equ     0c1h
  00C2          =1    48    i8255OUTC       equ     0c2h
  00C3          =1    49    i8255OUTCW      equ     0c3h
                =1    50    
                =1    51    ; bitovo adresovatelne bunky
                =1    52    ;               data    20h    ; toto vyuziva emulator
  0021          =1    53    INPORTB         data    21h    ; nutne kvoli emulatoru!!! 
  0022          =1    54    INPORTC         data    22h
  0023          =1    55    OUTPORTA        data    23h
  0024          =1    56    OUTPORTB        data    24h
  0025          =1    57    OUTPORTC        data    25h
  0026          =1    58    INPORTBold      data    26h
DEBUG                                                                                                         PAGE 2

  0027          =1    59    CTRLREG         data    27h
  0028          =1    60    INPORTA         data    28h
                =1    61    ;               data    29h
  002A          =1    62    ERRFLOOR_U      data    2Ah
  002B          =1    63    ERRFLOOR_D      data    2Bh
  002C          =1    64    T_F                       data    2Ch
  002D          =1    65    T2_C                    data      2Dh      ;toto tu nemusi byt, netreba mi bitovo adresovate
                                                                               lne
  002E          =1    66    T0_C            data      2Eh
                =1    67    ;               data    2Fh  
                =1    68    ; general purpose RAM (including STACK)
  0030          =1    69    POSITION        data    30h
  0031          =1    70    LOWEST          data    31h
  0032          =1    71    HIGHEST         data    32h
  0033          =1    72    STOPTIMER       data    33h
  0034          =1    73    OUTPORTBold     data    34h
  0035          =1    74    ERRF1_C         data    35h
  0036          =1    75    ERRF2_C         data    36h
  0037          =1    76    ERRF3_C         data    37h
  0038          =1    77    ERRF4_C         data    38h
  0039          =1    78    ERRF12_C        data    39h
  003A          =1    79    ERRF23_C        data    3Ah
  003B          =1    80    ERRF34_C        data    3Bh
  003C          =1    81    G                           data    3Ch
  003D          =1    82    D1                  data    3Dh
  003E          =1    83    D2              data    3Eh
  003F          =1    84    ERRSKRH_C       data    3Fh
  0040          =1    85    ERRSKRD_C       data    40h 
  0041          =1    86    ERRSIG          data    41h
                =1    87       
  0042          =1    88    MSG_LEN                     data          42h
  0043          =1    89    MSG_PTR_L                   data          43h
  0044          =1    90    MSG_PTR_H                   data          44h
  0045          =1    91    MSG_PTR_REC               data    45h
                =1    92    
                =1    93                 
                =1    94    
                =1    95    
                =1    96    ;                       50h - vyssie - stack!
                =1    97    
                =1    98    
                =1    99    
  0060          =1   100    T0_F                    bit         T_F.0
  0062          =1   101    T2_F                    bit         T_F.2
  0061          =1   102    S_RI                          bit                 T_F.1
  0063          =1   103    TRE             bit     T_F.3
                =1   104    
  0051          =1   105    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1   106    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1   107    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1   108    ERRF4_U         bit     ERRFLOOR_U.4  
                =1   109    
  0052          =1   110    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1   111    ERRF23_U        bit     ERRFLOOR_U.3
  0054          =1   112    ERRF34_U        bit     ERRFLOOR_U.4   
                =1   113    
  0059          =1   114    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1   115    ERRF2_D         bit     ERRFLOOR_D.2
DEBUG                                                                                                         PAGE 3

  005B          =1   116    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1   117    ERRF4_D         bit     ERRFLOOR_D.4   
                =1   118    
  0059          =1   119    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1   120    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1   121    ERRF34_D        bit     ERRFLOOR_D.3
                =1   122    
  0040          =1   123    STOPNOT         bit     INPORTA.0
  0041          =1   124    PKI1            bit     INPORTA.1
  0042          =1   125    PKI2            bit     INPORTA.2
  0043          =1   126    PKI3            bit     INPORTA.3
  0044          =1   127    PKI4            bit     INPORTA.4
  0045          =1   128    DOORCLSD        bit     INPORTA.5 
                =1   129    
  0009          =1   130    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   131    MB2             bit     INPORTB.2
  000B          =1   132    SKRH            bit     INPORTB.3
  000C          =1   133    SKRD            bit     INPORTB.4
  000D          =1   134    DP              bit     INPORTB.5
  000E          =1   135    DPZK            bit     INPORTB.6
  000F          =1   136    DPK             bit     INPORTB.7
                =1   137    
  0031          =1   138    MB1old          bit     INPORTBold.1
  0032          =1   139    MB2old          bit     INPORTBold.2
  0033          =1   140    SKRHold         bit     INPORTBold.3
  0034          =1   141    SKRDold         bit     INPORTBold.4
                =1   142    
  0010          =1   143    PI1             bit     INPORTC.0
  0011          =1   144    PI2D            bit     INPORTC.1
  0012          =1   145    PI2U            bit     INPORTC.2
  0013          =1   146    PI3D            bit     INPORTC.3
  0014          =1   147    PI3U            bit     INPORTC.4
  0015          =1   148    PI4             bit     INPORTC.5
                =1   149    
  0018          =1   150    KS              bit     OUTPORTA.0
  0019          =1   151    PKO1            bit     OUTPORTA.1
  001A          =1   152    PKO2            bit     OUTPORTA.2
  001B          =1   153    PKO3            bit     OUTPORTA.3
  001C          =1   154    PKO4            bit     OUTPORTA.4
                =1   155    
  0020          =1   156    UP              bit     OUTPORTB.0
  0021          =1   157    DOWN            bit     OUTPORTB.1
  0022          =1   158    FAST            bit     OUTPORTB.2
  0023          =1   159    SLOW            bit     OUTPORTB.3
  0024          =1   160    FLED1           bit     OUTPORTB.4
  0025          =1   161    FLED2           bit     OUTPORTB.5
  0026          =1   162    FLED3           bit     OUTPORTB.6
  0027          =1   163    FLED4           bit     OUTPORTB.7
                =1   164    
  0028          =1   165    PO1U            bit     OUTPORTC.0
  0028          =1   166    PO1D            bit     OUTPORTC.0
  0028          =1   167    PO1             bit     OUTPORTC.0
  0029          =1   168    PO2D            bit     OUTPORTC.1
  002A          =1   169    PO2U            bit     OUTPORTC.2
  002B          =1   170    PO3D            bit     OUTPORTC.3
  002C          =1   171    PO3U            bit     OUTPORTC.4
  002D          =1   172    PO4             bit     OUTPORTC.5
  002D          =1   173    PO4U            bit     OUTPORTC.5
DEBUG                                                                                                         PAGE 4

  002D          =1   174    PO4D            bit     OUTPORTC.5
  002E          =1   175    LEDD            bit     OUTPORTC.6
  002F          =1   176    LEDU            bit     OUTPORTC.7
                =1   177    
  0038          =1   178    STOPPED         bit     CTRLREG.0
  0039          =1   179    DOORCLSDold     bit     CTRLREG.1
  003A          =1   180    UPold           bit     CTRLREG.2
  003B          =1   181    DOWNold         bit     CTRLREG.3
  003C          =1   182    FASTold         bit     CTRLREG.4
  003D          =1   183    SLOWold         bit     CTRLREG.5
                =1   184    
  00B6          =1   185    WRNOT           bit     0B6h        ; p3.6
  00B7          =1   186    RDNOT           bit     0B7h        ; p3.7
                =1   187    
                =1   188    ; bitove masky
                =1   189    ; 8255OUT 
                =1   190    ; port A
  0001          =1   191    bmKS              equ    00000001b
  0002          =1   192    bmPKO1            equ    00000010b
  0004          =1   193    bmPKO2            equ    00000100b
  0008          =1   194    bmPKO3            equ    00001000b
  0010          =1   195    bmPKO4            equ    00010000b
                =1   196    
                =1   197    ; port B
  0001          =1   198    bmUP              equ    00000001b
  0002          =1   199    bmDOWN            equ    00000010b
  0004          =1   200    bmFAST            equ    00000100b
  0008          =1   201    bmSLOW            equ    00001000b
  0010          =1   202    bmFLED1           equ    00010000b
  0020          =1   203    bmFLED2           equ    00100000b
  0040          =1   204    bmFLED3           equ    01000000b
  0080          =1   205    bmFLED4           equ    10000000b
                =1   206    
                =1   207    ; port C
  0001          =1   208    bmPO1             equ    00000001b
  0002          =1   209    bmPO2D            equ    00000010b
  0004          =1   210    bmPO2U            equ    00000100b
  0008          =1   211    bmPO3D            equ    00001000b
  0010          =1   212    bmPO3U            equ    00010000b
  0020          =1   213    bmPO4             equ    00100000b
  0040          =1   214    bmLEDD            equ    01000000b
  0080          =1   215    bmLEDU            equ    10000000b
                =1   216    
                =1   217    ; 8255IN
                =1   218    ; port A
  0001          =1   219    bmSTOP            equ    00000001b
  0002          =1   220    bmPKI1            equ    00000010b
  0004          =1   221    bmPKI2            equ    00000100b
  0008          =1   222    bmPKI3            equ    00001000b
  0010          =1   223    bmPKI4            equ    00010000b
  0020          =1   224    bmDOORCLSD        equ    00100000b
                =1   225    
                =1   226    ; port B
  0002          =1   227    bmMB1I            equ    00000010b
  0004          =1   228    bmMB2I            equ    00000100b
  0008          =1   229    bmSKRHI           equ    00001000b
  0010          =1   230    bmSKRHD           equ    00010000b
  0020          =1   231    bmDPI             equ    00100000b
DEBUG                                                                                                         PAGE 5

  0040          =1   232    bmDPZKI           equ    01000000b
  0080          =1   233    bmDPKI            equ    10000000b
                =1   234    
                =1   235    ; port C
  0001          =1   236    bmPI1             equ    00000001b
  0002          =1   237    bmPI2D            equ    00000010b
  0004          =1   238    bmPI2U            equ    00000100b
  0008          =1   239    bmPI3D            equ    00001000b
  0010          =1   240    bmPI3U            equ    00010000b
  0020          =1   241    bmPI4             equ    00100000b
                =1   242    
                =1   243    $include (macroLib.inc)
                =1   244    ;*******************************************************************************
                =1   245    ;   Sofrverovy breakpoint
                =1   246    ;-------------------------------------------------------------------------------
                =1   247    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   248    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   249    ;     nastaveny na hodnotu <INT1>
                =1   250    ;
                =1   251    ;     Emulator -> Configuration -> Single step interrupt
                =1   252    ;
                =1   253    _BP_    MACRO 
                =1   254            clr     P3.3
                =1   255            setb    EX1
                =1   256            nop
                =1   257    ENDM
                =1   258    
                =1   259    
                =1   260    ;*******************************************************************************
                =1   261    ;   CFCSS - kontrolne instrukcie
                =1   262    ;-------------------------------------------------------------------------------
                =1   263    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   264    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   265    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   266    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   267    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   268    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   269    ;
                =1   270    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   271            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   272            IF (Dx <> -1)
                =1   273                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   274                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   275            ENDIF    
                =1   276            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   277            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   278            IF (D1val <> -1)
                =1   279                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   280            ELSE
                =1   281                mov         D1, #32        ;; Nastavenie priznaku <D1> na hodnotu mimo rozsahu 
                                                                               
                =1   282            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   283            IF (D2val <> -1)
                =1   284                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   285            ELSE
                =1   286                mov         D2, #32        ;; Nastavenie priznaku <D2> na hodnotu mimo rozsahu 
                                                                               
DEBUG                                                                                                         PAGE 6

                =1   287            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   288            mov       A, #s
                =1   289            lcall     PRINTCHAR        ;; Vypis aktualneho <s> na seriovu linku
                =1   290    ENDM
                =1   291    
                =1   292    
                =1   293    ;*******************************************************************************
                =1   294    ;   Instrukcie pre casovace a pocitadla
                =1   295    ;-------------------------------------------------------------------------------
                =1   296    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   297    ;     priznak <T2_F>    
                =1   298    ;
                =1   299    TIMER2  MACRO  VAL
                =1   300               mov           T2_C, #VAL                              ;; 3 sekundy
                =1   301                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   302                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   303    ENDM
                =1   304    
                =1   305    
                =1   306    
                =1   307    
                =1   308    ;*******************************************************************************
                =1   309    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   310    ;-------------------------------------------------------------------------------
                =1   311    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   312    ;
                =1   313    
                =1   314    ; Long jump if zero
                =1   315    LJZ     MACRO   NAVESTIE
                =1   316            jnz     $+5
                =1   317            ljmp    NAVESTIE
                =1   318            nop
                =1   319    ENDM
                =1   320    
                =1   321    ; Long jump if not zero
                =1   322    LJNZ    MACRO   NAVESTIE
                =1   323            jz      $+5
                =1   324            ljmp    NAVESTIE
                =1   325            nop
                =1   326    ENDM
                =1   327    
                =1   328    ; Long jump if bit set
                =1   329    LJB     MACRO   TESTBIT, NAVESTIE
                =1   330            jnb     TESTBIT, $+6
                =1   331            ljmp    NAVESTIE
                =1   332            nop
                =1   333    ENDM
                =1   334    
                =1   335    ; Long jump if bit not set
                =1   336    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   337            jb      TESTBIT, $+6
                =1   338            ljmp    NAVESTIE
                =1   339            nop
                =1   340    ENDM
                =1   341    
                =1   342    ; Compare & long jump if not equal
DEBUG                                                                                                         PAGE 7

                =1   343    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   344            cjne    OP1, OP2, $+6
                =1   345            jmp     $+6
                =1   346            ljmp    NAVESTIE
                =1   347            nop
                =1   348    ENDM
                =1   349    
                =1   350    ; Long call if bit set
                =1   351    LCALLB  MACRO   TESTBIT, NAVESTIE
                =1   352            jnb     TESTBIT, $+6
                =1   353            lcall   NAVESTIE
                =1   354            nop
                =1   355    ENDM
                =1   356    
                =1   357    ;*******************************************************************************
                =1   358    ;   Modifikacie instrukcii x51
                =1   359    ;-------------------------------------------------------------------------------
                =1   360    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   361    ;
                =1   362    
                =1   363    ;Logical and (bit operands)
                =1   364    ANLB   MACRO   BIT1, BIT2
                =1   365            mov   C, BIT1
                =1   366            anl   C, /BIT2
                =1   367            mov   BIT1, C
                =1   368    ENDM
                =1   369    
                =1   370    ; Compare & long jump if equal
                =1   371    LCJE     MACRO   OP1, OP2, NAVESTIE
                =1   372            cjne    OP1, OP2, $+7
                =1   373            jmp    NAVESTIE
                =1   374            nop
                =1   375    ENDM
                =1   376    
                =1   377    
                =1   378    ;*******************************************************************************
                =1   379    ;   Privolavace, signalizácia polohy a smeru kabiny
                =1   380    ;-------------------------------------------------------------------------------
                =1   381    ;
                =1   382    ;   Signalizacia polohy kabiny
                =1   383    ;
                =1   384    ;     Signalizuje polohu kabiny na signalizacnom paneli.  
                =1   385    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   386    ;     Vykonane zmeny sa zapisu na porty     
                =1   387    ;
                =1   388    POLOHA_LED  MACRO  POLOHA
                =1   389            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   390            setb    FLED&POLOHA
                =1   391            lcall   WRITEPORTS
                =1   392    ENDM
                =1   393    
                =1   394    ;   Zrusenie volby vybraneho poschodia
                =1   395    ;
                =1   396    ;     Zrusi volbu vybraneho poschodia <POSCH>. Volba   
                =1   397    ;     sa zrusi v kabine ako aj v oboch smeroch na poschodi.
                =1   398    ;
                =1   399    ZRUS_POSCH  MACRO POSCH
DEBUG                                                                                                         PAGE 8

                =1   400            clr     PKO&POSCH       ;; vynulovanie volby poschodia na ktorom stojim
                =1   401            clr     PO&POSCH&U      ;;
                =1   402            clr     PO&POSCH&D      ;;
                =1   403            lcall   WRITEPORTS
                =1   404    ENDM
                =1   405    
                =1   406    ;   Rozsvietenie kabinoveho svetla a smerovej signalizacie 
                =1   407    ;
                =1   408    ;     Rozsvieti kabinove svetlo a obe sibky smerovej
                =1   409    ;     signalizacie ak sa v kabine nachadza obsluhyschopna
                =1   410    ;     osoba. V opacnom pripade svetlo a signalizaciu
                =1   411    ;     zhasne.
                =1   412    ;
                =1   413    KABINOVE_SVETLO MACRO
                =1   414            mov      C, DP          ;; Ak je nieko v kabine,
                =1   415            orl      C, DPZK        ;;
                =1   416            orl      C, DPK         ;;
                =1   417            mov      KS, C          ;;   - v kabine zapalime svetlo. Ak nie, bude zhasnute.
                =1   418            mov      LEDU, C        ;;   - Rozsvietime signalizaciu do oboch smerov. Ak nie, zha
                                                                               sneme.
                =1   419            mov      LEDD, C        ;;
                =1   420            lcall   WRITEPORTS      ;;
                =1   421    ENDM
                =1   422    
                =1   423    ;   Rozsvieti obe smerove LED diody (signalizacia, ze kabina stoji)
                =1   424    ;
                =1   425    ROZSVIET_SMER_LED MACRO
                =1   426            setb    LEDU            ;
                =1   427            setb    LEDD            ;
                =1   428            lcall   WRITEPORTS      ;
                =1   429    ENDM
                =1   430    
                =1   431    ;   Zistenie, ci obsluhyschopna osoba zvolila poschodie
                =1   432    ;      
                =1   433    ;     Zistenie, či obsluhyschopna osoba v kabine vytahu 
                =1   434    ;     stlacila niektoru z volieb poschodi v kabine.
                =1   435    ;     V pripade, ze v kabine sa nachadza obsluhyschopna 
                =1   436    ;     osoba a volba zatial nebola uskutocnena, skoci sa 
                =1   437    ;     na <NAVESTIE>      
                =1   438    ;        
                =1   439    JE_VYBRATE_POSCHODIE MACRO NAVESTIE
                =1   440            mov      C, DP         ;; Ak sa nachadza v kabine osoba, 
                =1   441            orl      C, DPZK        ;;
                =1   442            orl      C, DPK         ;;
                =1   443            jnc      $+8            ;;
                =1   444            mov      A, INPORTA     ;;
                =1   445            anl      A, #00011110b  ;; ...a nie je vybrata ziadna volba (v kabine)
                =1   446            jz       NAVESTIE       ;; skoc na navestie
                =1   447    ENDM
                =1   448    
                =1   449    
                =1   450    ;*******************************************************************************
                =1   451    ;   Rychlost a smer pohybu motora
                =1   452    ;-------------------------------------------------------------------------------
                =1   453    ;
                =1   454    ;   Nastavenie smeru pohybu motora - hore
                =1   455    SET_UP MACRO
                =1   456            setb     UP
DEBUG                                                                                                         PAGE 9

                =1   457            clr      DOWN
                =1   458            setb     LEDU
                =1   459            clr      LEDD 
                =1   460    ENDM
                =1   461    
                =1   462    ;   Nastavenie smeru pohybu motora - dole
                =1   463    SET_DOWN MACRO
                =1   464            clr     UP
                =1   465            setb    DOWN
                =1   466            clr     LEDU
                =1   467            setb    LEDD 
                =1   468    ENDM
                =1   469    
                =1   470    ;   Nastavenie rychlosti pohybu motora - rychlo
                =1   471    SET_FAST MACRO
                =1   472            setb     FAST
                =1   473            clr      SLOW
                =1   474            setb     KS      
                =1   475    ENDM
                =1   476    
                =1   477    ;   Nastavenie smeru pohybu motora - hore
                =1   478    SET_SLOW MACRO
                =1   479            setb     SLOW
                =1   480            clr      FAST
                =1   481            setb     KS
                =1   482    ENDM
                =1   483     
                =1   484      
                     485                       
                     486    
                     487    ; Definicie registrov pre Keil uVision
  00C8               488    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00C9               489    T2MOD  DATA  0C9H  ;TIMER 2 MODE
  00CA               490    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               491    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               492    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               493    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               494    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
  00A6               495    WDTRST DATA  0A6H  ;Watchdog timer
                     496    
                     497    
  0000               498    COUNT    SET    0
                     499    
                     500    ;*******************************************************************************
                     501    ;   Oznacenie poruchoveho poschodia 
                     502    ;-------------------------------------------------------------------------------
                     503    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     504    ;
                     505    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     506                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     507                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     508            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
DEBUG                                                                                                         PAGE 10

                     509            COUNT    SET    COUNT+1                   
                     510            
                     511            jb      TESTBIT, ENDD&LABEL
                     512            jnb     PKI&POSCH, $+7
                     513            clr     FAST
                     514            setb    SLOW
                     515            setb    STOPPED         
                     516            setb    FLOORBIT&_U
                     517            setb    FLOORBIT&_D
                     518            inc     FLOORBIT&_C
                     519                    clr     PKO&POSCH                               ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     520            clr     PO&POSCH&U            
                     521            clr     PO&POSCH&D              
                     522                    lcall   WRITEPORTS
                     523            ljmp    NAVESTIE
                     524    ENDD&LABEL:
                     525            nop
                     526    ENDM
                     527    
                     528    ;*******************************************************************************
                     529    ;   Odstranenie oznacenia poruchoveho poschodia 
                     530    ;-------------------------------------------------------------------------------
                     531    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     532    ;
                     533    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     534            clr    FLOORBIT&_U
                     535            clr    FLOORBIT&_D
                     536            nop
                     537    ENDM
                     538    
                     539    ;*******************************************************************************
                     540    ;   Osetrenie zakmitov clonky
                     541    ;-------------------------------------------------------------------------------
                     542    ;        
                     543    ;
                     544    ZAKMITC MACRO   TYPCLONKY
                     545            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     546            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     547            jnb     TYPCLONKY, $-3  ; 
                     548            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     549    ENDM
                     550    
                     551    ZASTAV  MACRO  C_POSCH, SMER
                     552                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     553            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     554            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     555            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     556            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     557            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     558            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     559            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
DEBUG                                                                                                         PAGE 11

                     560            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     561            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     562    ENDM
                     563    
                     564    NAJNIZSIE  MACRO
                     565            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     566            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     567            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     568    
                     569            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     570            ANLB    ACC.2, ERRF2_D  ; |
                     571            ANLB    ACC.3, ERRF2_D  ; |
                     572            ANLB    ACC.4, ERRF3_D  ; |
                     573            ;ANLB    ACC.5, ERRF3_D  ; |
                     574    
                     575            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     576     ; LL1: 
                     577            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     578            clr     C               ; Inak shiftnem o 2
                     579            rlc     A               ;
                     580            clr     C               ;
                     581            rlc     A               ;
                     582            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     583    ; LL2:
                     584            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     585    ENDM
                     586    
                     587    NAJVYSSIE  MACRO
                     588            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     589            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     590            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     591            
                     592            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     593            ANLB    ACC.3, ERRF2_U  ; |
                     594            ANLB    ACC.4, ERRF3_U  ; |
                     595            ANLB    ACC.5, ERRF3_U  ; |
                     596            ;ANLB    ACC.6, ERRF4_U  ; |
                     597            
                     598            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     599     ; LL1: 
                     600            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     601            clr     C               ; Inak shiftnem o 2
                     602            rrc     A               ;
                     603            clr     C               ;
                     604            rrc     A               ;
DEBUG                                                                                                         PAGE 12

                     605            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     606    ; LL2:
                     607            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     608            clr     C               ;
                     609            subb    A, R0           ;
                     610    ENDM
                     611    
                     612    VYSSIE_KABINA  MACRO  POSCH
                     613            mov     A, INPORTA
                     614            anl     A, #00011110b
                     615            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     616            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     617            xrl     B, #0FFH
                     618            anl     A, B
                     619            clr     C
                     620            rrc     A
                     621    ;LL1    
                     622            mov     R0, #&POSCH
                     623            clr     C
                     624            rrc     A
                     625            djnz    R0, $-2;LL1
                     626    ENDM
                     627    
                     628    NIZSIE_KABINA  MACRO  POSCH
                     629            mov     A, #5
                     630            clr     C
                     631            subb    A, #&POSCH
                     632            mov     R0, A
                     633            mov     A, INPORTA
                     634            anl     A, #00011110b
                     635            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     636            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     637            xrl     B, #0FFH
                     638            anl     A, B
                     639            clr     C
                     640            rlc     A
                     641            clr     C
                     642            rlc     A
                     643            clr     C
                     644            rlc     A
                     645    ;LL1   
                     646            clr     C
                     647            rlc     A
                     648            djnz    R0, $-2;LL1
                     649    ENDM
                     650    
                     651    
                     652    
                     653    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               654    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     655                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     656                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
  0014               657    TIMER0CONST     equ     20      ; pouziva sa pri Timer0, ktory sluzi na rozblikanie LEDiek p
                                                                               ri poruche. Hodnota 20 je 1 sekunda (1=50
                                                                               ms)
                     658    ;osetrenie vektorov preruseni
DEBUG                                                                                                         PAGE 13

0000                 659            org     0000h           ; adresa odkial startuje program po resete
0000 020033          660            ljmp    START           ; skok na zaciatok kodu programu
                     661            
000B                 662            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 021036          663            ljmp    INT_TIMER0      ; pre casovac T0
                     664            
0023                 665            org       0023h           ; v tejto casti pamati je vektor prerusenia
0023 021217          666                        ljmp          SERIAL_INT              ; seriovej linky 
                     667        
002B                 668            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 0211F0          669                        ljmp    INT_TIMER2      ; pre casovac T2   
                     670                  
0033                 671            org     0033h           ; od tejto adresy sa zacina kod programu
                     672            
0033                 673    START:
0033                 674    RESET:  
                     675            ; riadiace signaly do pasivnej urovne 
0033 D2B6            676            setb    WRNOT
0035 D2B7            677            setb    RDNOT
0037 753300          678            mov     STOPTIMER, #0
003A 758150          679            mov     SP, #STACK
                     680    
                     681            ; pockame si na inicializaciu obvodov 8255  
003D 7900            682            mov     R1, #0 
003F 7AFF            683            mov     R2, #0ffh
0041 D9FE            684            djnz    R1, $
0043 DAFC            685            djnz    R2, $-2
                     686            
                     687            ; teraz ich mozeme nastavit
0045 75809B          688            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          689            mov     p2, #i8255INCW
004B C2B6            690            clr     WRNOT
004D 00              691            nop
004E 00              692            nop
004F 00              693            nop
0050 00              694            nop
0051 D2B6            695            setb    WRNOT
0053 758080          696            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          697            mov     p2, #i8255OUTCW
0059 C2B6            698            clr     WRNOT
005B 00              699            nop
005C 00              700            nop
005D 00              701            nop
005E 00              702            nop
005F D2B6            703            setb    WRNOT
                     704            
                     705            ; nastavenie preruseni 
0061 C28E            706            clr     TR1                 ; zastavi sa citac T1
0063 759852          707            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     708                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     709                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     710                                        ; RI=0 (prijimaci register - nebol prijaty znak)
                     711            ;mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu                    
                                                                                            <<< 
0066 758921          712            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     713                                        ; T1: mod 1 - 16 bitove pocitadlo
DEBUG                                                                                                         PAGE 14

                     714                                        ; GATE=0 (programove riadenie casovaca)
                     715                                        ; C/T#=0 interne hodiny/12
                     716                                        ; T0: mod 1 - 16 bitove pocitadlo
                     717                                        ; GATE=0 (programove riadenie casovaca)
                     718                                        ; C/T#=0 interne hodiny/12
0069 758740          719            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006C 758B00          720            mov     TL1, #000h          ; inicializacia casovaca T1
006F 758DFA          721            mov     TH1, #0FAh          ; 
0072 758A00          722            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h            
                                                                                    <<<
0075 758C4C          723            mov     TH0, #04Ch                                      ;                           
                                                                                                                        
                                                                                   <<<
0078 75C800          724                        mov           T2CON,  #0                        ; Auto-reload mod
007B 75CA00          725                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
                                                                               592/12*1 = 0,9216 MHz
007E 75CB4C          726                        mov           RCAP2H, #4Ch;             ; (50ms)
0081 D2AD            727                        setb          ET2                                           ; Enable Tim
                                                                               er2 interrupt
                     728            
                     729            
                     730            
0083 D28C            731            setb    TR0                 ;                                                       
                                                                                            <<<
0085 C2A9            732            clr     ET0
0087 D28E            733            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     734            
0089 C299            735            clr     TI
008B C298            736            clr     RI
008D D263            737            setb    TRE
008F D2AC            738            setb      ES                    ; enable serial interrupt       
0091 754500          739                        mov           MSG_PTR_REC, #0h
0094 C261            740                        clr           S_RI
                     741            
                     742    
                     743            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
0096 752800          744            mov     INPORTA, #0
0099 75211E          745            mov     INPORTB, #01eh      ; vsetky clonky pasivne
009C 752200          746            mov     INPORTC, #0
009F 75231E          747            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
00A2 7524F0          748            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
00A5 7525FF          749            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
00A8 D218            750            setb    KS
00AA C238            751            clr     STOPPED
00AC 12117F          752            call    WRITEPORTS          ; zapis novu informaciu
                     753    
00AF 752300          754            mov     OUTPORTA, #0
00B2 752400          755            mov     OUTPORTB, #0
00B5 752500          756            mov     OUTPORTC, #0
00B8 12117F          757            call    WRITEPORTS          ; zapis novu informaciu
                     758            
                     759            ;----------------------------------------------------
                     760            ;mov     DPTR, #STR_RESET    ; vypis info 
                     761            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     762            
DEBUG                                                                                                         PAGE 15

                     763            ;TIMER2  200
                     764            ;jnb              T2_F, $                               ; Uz presiel cas?
                     765            
                     766            ;clr     DOWN                ; ZASTAVIME KABINU
                     767            ;clr     FAST                ; a rychlo
                     768            ;clr     SLOW                ;                           
                     769            ;clr     UP                  ;
                     770            ;lcall   WRITEPORTS          ; zapis informaciu 
                     771            ;mov     DPTR, #STR_WDT      ; vypis info 
                     772            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     773            ;mov     WDTRST, #01Eh
                     774            ;mov     WDTRST, #0E1h
                     775            
                     776            ;----------------------------------------------------
                     777    
00BB 752800          778            mov     INPORTA, #0
00BE 752100          779            mov     INPORTB, #0         
00C1 752200          780            mov     INPORTC, #0
00C4 121118          781            call    READPORTS           ; prvotne nacitanie udajov
                     782            
00C7 752A00          783            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00CA 752B00          784            mov     ERRFLOOR_D, #0h      
                     785    
                     786            
00CD 9013D0          787            mov     DPTR, #STR_INIT         ; vypis info 
00D0 1211BA          788            lcall   DISPSTR                 ; o inicializacii
                     789            
                     790                   
00D3                 791    CALIB:
                     792            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     793            ;setb    TR0
00D3 121118          794            lcall   READPORTS                   ; precitaj, co je na portoch
00D6 300C13          795            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00D9 D221            796            setb    DOWN                        ; inak pod dole
00DB D222            797            setb    FAST                        ; a rychlo
00DD C223            798            clr     SLOW                        ;
00DF C220            799            clr     UP                
00E1 12117F          800            lcall   WRITEPORTS                  ; zapis informaciu 
00E4                 801    CALIBLOOP:
00E4 121118          802            lcall   READPORTS                   ; 
00E7 300C02          803            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00EA 80F8            804            jmp     CALIBLOOP
00EC                 805    CALIBEND:                              
00EC C222            806            clr     FAST                        ; zastavime v tomto smere
00EE C221            807            clr     DOWN                        ;
00F0 D223            808            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00F2 D220            809            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00F4 12117F          810            lcall   WRITEPORTS 
00F7                 811    CALIBEND2:
00F7 121118          812            lcall   READPORTS                   ; 
00FA 2009FA          813            jb      MB1, CALIBEND2              ; 
00FD C223            814            clr     SLOW                        ; A teraz sme uz naozaj spravne
00FF C220            815            clr     UP                          ; 
0101 D224            816            setb    FLED1
0103 12117F          817            lcall   WRITEPORTS                  ; zapis informaciu
                     818            ;clr     TR0
DEBUG                                                                                                         PAGE 16

                     819            ;_BP_
0106 9013D0          820            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
0109 1211BA          821            lcall   DISPSTR                     ;
010C                 822    MAIN:
                     823    
                     824    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     825    ; ****************************************************************************
                     826    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     827    ; ----------------------------------------------------------------------------
                     828    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     829    ; ----------------------------------------------------------------------------
                     830    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     831    ; ****************************************************************************
                     832    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                     833    ; ----------------------------------------------------------------------------
                     834    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     835    ; ----------------------------------------------------------------------------
                     836    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     837    ; ****************************************************************************
                     838    ; POSITION
                     839    ; ****************************************************************************
                     840    
                     841    
                     842    
                     843            ;mov     R5, #0
                     844            ;mov     R6, #20
                     845            ;setb    ET0;
                     846            
                     847    
                     848                                                                                              
                     849            ;Inicializacia priznakov (CFCSS)
010C 753C1E          850            mov             G, #30
010F 753D00          851                        mov         D1, #0
0112 753E00          852            mov             D2, #0
0115 9015A1          853            mov   DPTR, #STR_CFC_START         ; vypis info 
0118 1211BA          854            lcall DISPSTR         ;
                     855                          
                     856    
                     857    
                     858    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     859    
011B                 860    FLOOR1:
                     861            ;--------------------------
                     862 +1         CFCSS     29, 3, -1, -1, D1
011B 633C03          863 +1         xrl             G,  #3             
                     864 +1         IF (D1 <> -1)
011E E53D            865 +1             mov   A,  D1         
0120 623C            866 +1             xrl   G,  A          
                     867 +1         ENDIF    
0122 E53C            868 +1         mov   A,  G              
                     869 +2         LCJNE A,  #29, CFCERR     
0124 B41D03          870 +2         cjne    A, #29, $+6
0127 02012D          871 +2         jmp     $+6
012A 021004          872 +2         ljmp    CFCERR
012D 00              873 +2         nop
                     874 +1         IF (-1 <> -1)
                     875 +1             mov         D1, #-1     
DEBUG                                                                                                         PAGE 17

                     876 +1         ELSE
012E 753D20          877 +1             mov         D1, #32        
                     878 +1         ENDIF                    
                     879 +1         IF (-1 <> -1)
                     880 +1             mov         D2, #-1     
                     881 +1         ELSE
0131 753E20          882 +1             mov         D2, #32        
                     883 +1         ENDIF                    
0134 741D            884 +1         mov       A, #29
0136 121207          885 +1         lcall     PRINTCHAR        
                     887            ;--------------------------
                     888 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0139 53240F          889 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
013C D224            890 +1         setb    FLED1
013E 12117F          891 +1         lcall   WRITEPORTS
0141 C238            893            clr     STOPPED
                     894 +1         TIMER2  60              ; (Timer - 3s)
0143 752D3C          895 +1            mov           T2_C, #60                              
0146 C262            896 +1                  clr       T2_F                                  
0148 D2CA            897 +1                  setb      TR2                                             
                     899 +1         ROZSVIET_SMER_LED
014A D22F            900 +1         setb    LEDU            ;
014C D22E            901 +1         setb    LEDD            ;
014E 12117F          902 +1         lcall   WRITEPORTS      ;
0151 121118          904    F1S:    lcall   READPORTS       ; nacitanie dat
                     905 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0154 200A03          906 +1         jb      MB2, $+6
0157 020FEA          907 +1         ljmp    ERRFLOOR
015A 00              908 +1         nop
                     910 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
015B 200B03          911 +1         jb      SKRH, $+6
015E 020FEA          912 +1         ljmp    ERRFLOOR
0161 00              913 +1         nop
                     915 +1         ZRUS_POSCH 1
0162 C219            916 +1         clr     PKO1       
0164 C228            917 +1         clr     PO1U      
0166 C228            918 +1         clr     PO1D      
0168 12117F          919 +1         lcall   WRITEPORTS
                     921            
                     922 +1         LCALLB          S_RI, RCV_MESSAGE
016B 306103          923 +1         jnb     S_RI, $+6
016E 12124C          924 +1         lcall   RCV_MESSAGE
0171 00              925 +1         nop
                     927            
0172 3062DC          928            jnb                T2_F, F1S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                     929 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0175 A20D            930 +1         mov      C, DP          
0177 720E            931 +1         orl      C, DPZK        
0179 720F            932 +1         orl      C, DPK         
017B 9218            933 +1         mov      KS, C          
017D 922F            934 +1         mov      LEDU, C        
017F 922E            935 +1         mov      LEDD, C        
0181 12117F          936 +1         lcall   WRITEPORTS      
0184 200FCA          938            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
DEBUG                                                                                                         PAGE 18

0187 3045C7          939            jnb     DOORCLSD, F1S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                     940 +1         JE_VYBRATE_POSCHODIE F1S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
018A A20D            941 +1         mov      C, DP         
018C 720E            942 +1         orl      C, DPZK        
018E 720F            943 +1         orl      C, DPK         
0190 5006            944 +1         jnc      $+8            
0192 E528            945 +1         mov      A, INPORTA     
0194 541E            946 +1         anl      A, #00011110b  
0196 60B9            947 +1         jz       F1S       
0198                 949    F1C:        
0198 E528            950            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
019A 852AF0          951            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
019D 53F00C          952            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
01A0 63F0FF          953            xrl     B, #0FFH        ; | |
01A3 55F0            954            anl     A, B            ; | |
01A5 541C            955            anl     A, #00011100b   ; |
01A7 701A            956            jnz     F1OK            ; ak ano, podme na to
01A9 E522            957            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
01AB 543E            958            anl     A, #00111110b   ;
                     959            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                     960 +1         ANLB    ACC.2, ERRF2_U  ; |
01AD A2E2            961 +1         mov   C, ACC.2
01AF B052            962 +1         anl   C, /ERRF2_U
01B1 92E2            963 +1         mov   ACC.2, C
                     965 +1         ANLB    ACC.3, ERRF3_U  ; |
01B3 A2E3            966 +1         mov   C, ACC.3
01B5 B053            967 +1         anl   C, /ERRF3_U
01B7 92E3            968 +1         mov   ACC.3, C
                     970 +1         ANLB    ACC.4, ERRF3_U  ; |
01B9 A2E4            971 +1         mov   C, ACC.4
01BB B053            972 +1         anl   C, /ERRF3_U
01BD 92E4            973 +1         mov   ACC.4, C
                     975            ;ANLB    ACC.5, ERRF4_U  ; |
01BF 7002            976            jnz     F1OK            ; ak ano, podme na to
01C1 808E            977            jmp     F1S             ; Nemam sa kde hnut, opakujem
                     978 +1 F1OK:   SET_UP                  ; rychly pohyb hore
01C3 D220            979 +1         setb     UP
01C5 C221            980 +1         clr      DOWN
01C7 D22F            981 +1         setb     LEDU
01C9 C22E            982 +1         clr      LEDD 
                     984 +1         SET_FAST                ; 
01CB D222            985 +1         setb     FAST
01CD C223            986 +1         clr      SLOW
01CF D218            987 +1         setb     KS      
01D1 12117F          989            lcall   WRITEPORTS      ; 
01D4 0201D7          990            jmp     UP1             ; prejdi do stavu UP1
                     991            
                     992            
01D7                 993    UP1:
                     994            ;--------------------------
                     995 +1         CFCSS     20, 9, 27, -1, -1
01D7 633C09          996 +1         xrl             G,  #9             
                     997 +1         IF (-1 <> -1)
                     998 +1             mov   A,  -1         
                     999 +1             xrl   G,  A          
DEBUG                                                                                                         PAGE 19

                    1000 +1         ENDIF    
01DA E53C           1001 +1         mov   A,  G              
                    1002 +2         LCJNE A,  #20, CFCERR     
01DC B41403         1003 +2         cjne    A, #20, $+6
01DF 0201E5         1004 +2         jmp     $+6
01E2 021004         1005 +2         ljmp    CFCERR
01E5 00             1006 +2         nop
                    1007 +1         IF (27 <> -1)
01E6 753D1B         1008 +1             mov         D1, #27     
                    1009 +1         ELSE
                    1010 +1             mov         D1, #32        
                    1011 +1         ENDIF                    
                    1012 +1         IF (-1 <> -1)
                    1013 +1             mov         D2, #-1     
                    1014 +1         ELSE
01E9 753E20         1015 +1             mov         D2, #32        
                    1016 +1         ENDIF                    
01EC 7414           1017 +1         mov       A, #20
01EE 121207         1018 +1         lcall     PRINTCHAR        
                    1020            ;--------------------------
                    1021 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
01F1 53240F         1022 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
01F4 D224           1023 +1         setb    FLED1
01F6 12117F         1024 +1         lcall   WRITEPORTS
                    1026 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
01F9 12107C         1027 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
01FC 121118         1028 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
01FF 3009FA         1029 +1         jnb     MB1, $-3  ; 
0202 12107C         1030 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0205 121118         1032    UP1A:   lcall   READPORTS       ; nacitanie dat
                    1033 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0208 200B03         1034 +1         jb      SKRH, $+6
020B 020FD1         1035 +1         ljmp    ERR_SKRH
020E 00             1036 +1         nop
                    1038 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1039 +1                                                                                             
                                                                                                                 
                    1040 +1                                                                                             
                                                                                                                 
                    1041 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001              1042 +1         COUNT    SET    COUNT+1                   
                    1043 +1         
020F 20091B         1044 +1         jb      MB1, ENDD0
0212 304204         1045 +1         jnb     PKI2, $+7
0215 C222           1046 +1         clr     FAST
0217 D223           1047 +1         setb    SLOW
0219 D238           1048 +1         setb    STOPPED         
021B D252           1049 +1         setb    ERRF12_U
021D D259           1050 +1         setb    ERRF12_D
021F 0539           1051 +1         inc     ERRF12_C
0221 C21A           1052 +1                 clr     PKO2                               
0223 C22A           1053 +1         clr     PO2U            
0225 C229           1054 +1         clr     PO2D              
0227 12117F         1055 +1                 lcall   WRITEPORTS
DEBUG                                                                                                         PAGE 20

022A 02051F         1056 +1         ljmp    UP2
022D                1057 +1 ENDD0:
022D 00             1058 +1         nop
022E 200AD4         1060            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                    1061 +1         CLR_FLOOR_ERR   ERRF12
0231 C252           1062 +1         clr    ERRF12_U
0233 C259           1063 +1         clr    ERRF12_D
0235 00             1064 +1         nop
                    1066 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0236 12107C         1067 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0239 121118         1068 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
023C 300AFA         1069 +1         jnb     MB2, $-3  ; 
023F 12107C         1070 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1072            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0242 12117F         1073            lcall   WRITEPORTS      ;
0245 020248         1074            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                    1075            
                    1076            
0248                1077    UP1_MB2:
                    1078            ;--------------------------
                    1079 +1         CFCSS     2, 22, 13, -1, -1
0248 633C16         1080 +1         xrl             G,  #22             
                    1081 +1         IF (-1 <> -1)
                    1082 +1             mov   A,  -1         
                    1083 +1             xrl   G,  A          
                    1084 +1         ENDIF    
024B E53C           1085 +1         mov   A,  G              
                    1086 +2         LCJNE A,  #2, CFCERR     
024D B40203         1087 +2         cjne    A, #2, $+6
0250 020256         1088 +2         jmp     $+6
0253 021004         1089 +2         ljmp    CFCERR
0256 00             1090 +2         nop
                    1091 +1         IF (13 <> -1)
0257 753D0D         1092 +1             mov         D1, #13     
                    1093 +1         ELSE
                    1094 +1             mov         D1, #32        
                    1095 +1         ENDIF                    
                    1096 +1         IF (-1 <> -1)
                    1097 +1             mov         D2, #-1     
                    1098 +1         ELSE
025A 753E20         1099 +1             mov         D2, #32        
                    1100 +1         ENDIF                    
025D 7402           1101 +1         mov       A, #2
025F 121207         1102 +1         lcall     PRINTCHAR        
                    1104            ;--------------------------
                    1105 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
0262 12107C         1106 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0265 121118         1107 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0268 300AFA         1108 +1         jnb     MB2, $-3  ; 
026B 12107C         1109 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
026E 121118         1111    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                    1112 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0271 200B03         1113 +1         jb      SKRH, $+6
0274 020FD1         1114 +1         ljmp    ERR_SKRH
0277 00             1115 +1         nop
                    1117            ; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na zastavovaciu) <<<
DEBUG                                                                                                         PAGE 21

                    1118 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
                    1119 +1                                                                                             
                                                                                                                 
                    1120 +1                                                                                             
                                                                                                                 
                    1121 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002              1122 +1         COUNT    SET    COUNT+1                   
                    1123 +1         
0278 20091B         1124 +1         jb      MB1, ENDD1
027B 304204         1125 +1         jnb     PKI2, $+7
027E C222           1126 +1         clr     FAST
0280 D223           1127 +1         setb    SLOW
0282 D238           1128 +1         setb    STOPPED         
0284 D252           1129 +1         setb    ERRF12_U
0286 D259           1130 +1         setb    ERRF12_D
0288 0539           1131 +1         inc     ERRF12_C
028A C21A           1132 +1                 clr     PKO2                               
028C C22A           1133 +1         clr     PO2U            
028E C229           1134 +1         clr     PO2D              
0290 12117F         1135 +1                 lcall   WRITEPORTS
0293 02051F         1136 +1         ljmp    UP2
0296                1137 +1 ENDD1:
0296 00             1138 +1         nop
0297 200AD4         1140            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                    1141 +1         CLR_FLOOR_ERR   ERRF12   
029A C252           1142 +1         clr    ERRF12_U
029C C259           1143 +1         clr    ERRF12_D
029E 00             1144 +1         nop
                    1146            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
029F 12117F         1147            lcall   WRITEPORTS      ;   
                    1148 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
02A2 12107C         1149 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
02A5 121118         1150 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
02A8 300AFA         1151 +1         jnb     MB2, $-3  ; 
02AB 12107C         1152 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1154    
02AE                1155    UP1_MB2_CFC:     
                    1156            ;--------------------------
                    1157 +1         CFCSS     12, 14, -1, -1, -1
02AE 633C0E         1158 +1         xrl             G,  #14             
                    1159 +1         IF (-1 <> -1)
                    1160 +1             mov   A,  -1         
                    1161 +1             xrl   G,  A          
                    1162 +1         ENDIF    
02B1 E53C           1163 +1         mov   A,  G              
                    1164 +2         LCJNE A,  #12, CFCERR     
02B3 B40C03         1165 +2         cjne    A, #12, $+6
02B6 0202BC         1166 +2         jmp     $+6
02B9 021004         1167 +2         ljmp    CFCERR
02BC 00             1168 +2         nop
                    1169 +1         IF (-1 <> -1)
                    1170 +1             mov         D1, #-1     
                    1171 +1         ELSE
02BD 753D20         1172 +1             mov         D1, #32        
                    1173 +1         ENDIF                    
                    1174 +1         IF (-1 <> -1)
                    1175 +1             mov         D2, #-1     
DEBUG                                                                                                         PAGE 22

                    1176 +1         ELSE
02C0 753E20         1177 +1             mov         D2, #32        
                    1178 +1         ENDIF                    
02C3 740C           1179 +1         mov       A, #12
02C5 121207         1180 +1         lcall     PRINTCHAR        
                    1182            ;--------------------------
                    1183 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    1184 +1                                         
02C8 C3             1185 +1         clr     C                       
02C9 7400           1186 +1         mov     A, #0h                  
02CB 7212           1187 +1         orl     C, PI2U      
02CD B00E           1188 +1         anl     C, /DPZK                
02CF 7242           1189 +1         orl     C, PKI2          
02D1 B052           1190 +1         anl     C, /ERRF2_U 
02D3 720F           1191 +1         orl     C, DPK                  
02D5 7238           1192 +1         orl     C, STOPPED              
02D7 3400           1193 +1         addc    A, #0h                  
02D9 704B           1195            jnz     U1_MB2C       ;-; Ak ano, zastav
                    1196 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
02DB E522           1197 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
02DD 33             1198 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
02DE 547E           1199 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1200 +1         
                    1201 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1202 +2         ANLB    ACC.3, ERRF2_U  ; |
02E0 A2E3           1203 +2         mov   C, ACC.3
02E2 B052           1204 +2         anl   C, /ERRF2_U
02E4 92E3           1205 +2         mov   ACC.3, C
                    1206 +2         ANLB    ACC.4, ERRF3_U  ; |
02E6 A2E4           1207 +2         mov   C, ACC.4
02E8 B053           1208 +2         anl   C, /ERRF3_U
02EA 92E4           1209 +2         mov   ACC.4, C
                    1210 +2         ANLB    ACC.5, ERRF3_U  ; |
02EC A2E5           1211 +2         mov   C, ACC.5
02EE B053           1212 +2         anl   C, /ERRF3_U
02F0 92E5           1213 +2         mov   ACC.5, C
                    1214 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1215 +1         
02F2 7805           1216 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1217 +1  ; LL1: 
02F4 6006           1218 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
02F6 C3             1219 +1         clr     C               ; Inak shiftnem o 2
02F7 13             1220 +1         rrc     A               ;
02F8 C3             1221 +1         clr     C               ;
02F9 13             1222 +1         rrc     A               ;
02FA D8F8           1223 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1224 +1 ; LL2:
02FC 7405           1225 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
02FE C3             1226 +1         clr     C               ;
02FF 98             1227 +1         subb    A, R0           ;
                    1229 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
DEBUG                                                                                                         PAGE 23

0300 B40203         1230 +1         cjne    A, #2, $+6
0303 020309         1231 +1         jmp     $+6
0306 020330         1232 +1         ljmp    UP1_MB1
0309 00             1233 +1         nop
                    1235 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
030A E528           1236 +1         mov     A, INPORTA
030C 541E           1237 +1         anl     A, #00011110b
030E 852AF0         1238 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
0311 53F00C         1239 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0314 63F0FF         1240 +1         xrl     B, #0FFH
0317 55F0           1241 +1         anl     A, B
0319 C3             1242 +1         clr     C
031A 13             1243 +1         rrc     A
                    1244 +1 ;LL1    
031B 7802           1245 +1         mov     R0, #2
031D C3             1246 +1         clr     C
031E 13             1247 +1         rrc     A
031F D8FC           1248 +1         djnz    R0, $-2;LL1
0321 6003           1250            jz      U1_MB2C         ; |   ak neni zastavujem         
0323 020330         1251            jmp     UP1_MB1          ; |   inak nezastavim        
0326 D223           1252    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
0328 C222           1253            clr     FAST            ; 
032A 12117F         1254            lcall   WRITEPORTS      ;         
032D 020385         1255            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1256            
                    1257            
0330                1258    UP1_MB1:
                    1259            ;--------------------------
                    1260 +1         CFCSS     6, 10, 9, 14, -1
0330 633C0A         1261 +1         xrl             G,  #10             
                    1262 +1         IF (-1 <> -1)
                    1263 +1             mov   A,  -1         
                    1264 +1             xrl   G,  A          
                    1265 +1         ENDIF    
0333 E53C           1266 +1         mov   A,  G              
                    1267 +2         LCJNE A,  #6, CFCERR     
0335 B40603         1268 +2         cjne    A, #6, $+6
0338 02033E         1269 +2         jmp     $+6
033B 021004         1270 +2         ljmp    CFCERR
033E 00             1271 +2         nop
                    1272 +1         IF (9 <> -1)
033F 753D09         1273 +1             mov         D1, #9     
                    1274 +1         ELSE
                    1275 +1             mov         D1, #32        
                    1276 +1         ENDIF                    
                    1277 +1         IF (14 <> -1)
0342 753E0E         1278 +1             mov         D2, #14     
                    1279 +1         ELSE
                    1280 +1             mov         D2, #32        
                    1281 +1         ENDIF                    
0345 7406           1282 +1         mov       A, #6
0347 121207         1283 +1         lcall     PRINTCHAR        
                    1285            ;--------------------------
                    1286 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
034A 12107C         1287 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
034D 121118         1288 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
DEBUG                                                                                                         PAGE 24

0350 300AFA         1289 +1         jnb     MB2, $-3  ; 
0353 12107C         1290 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0356 121118         1292    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1293 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0359 200B03         1294 +1         jb      SKRH, $+6
035C 020FD1         1295 +1         ljmp    ERR_SKRH
035F 00             1296 +1         nop
                    1298 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1299 +1                                                                                             
                                                                                                                 
                    1300 +1                                                                                             
                                                                                                                 
                    1301 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1302 +1         COUNT    SET    COUNT+1                   
                    1303 +1         
0360 200A1B         1304 +1         jb      MB2, ENDD2
0363 304204         1305 +1         jnb     PKI2, $+7
0366 C222           1306 +1         clr     FAST
0368 D223           1307 +1         setb    SLOW
036A D238           1308 +1         setb    STOPPED         
036C D252           1309 +1         setb    ERRF2_U
036E D25A           1310 +1         setb    ERRF2_D
0370 0536           1311 +1         inc     ERRF2_C
0372 C21A           1312 +1                 clr     PKO2                               
0374 C22A           1313 +1         clr     PO2U            
0376 C229           1314 +1         clr     PO2D              
0378 12117F         1315 +1                 lcall   WRITEPORTS
037B 020594         1316 +1         ljmp    UP2_MB2
037E                1317 +1 ENDD2:
037E 00             1318 +1         nop
037F 2009D4         1320            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
0382 02051F         1321            ljmp    UP2             ; |   inak nezastavim        
                    1322    
0385                1323    UP1_STOP:
                    1324            ;--------------------------
                    1325 +1         CFCSS     28, 16, 9, 20, -1
0385 633C10         1326 +1         xrl             G,  #16             
                    1327 +1         IF (-1 <> -1)
                    1328 +1             mov   A,  -1         
                    1329 +1             xrl   G,  A          
                    1330 +1         ENDIF    
0388 E53C           1331 +1         mov   A,  G              
                    1332 +2         LCJNE A,  #28, CFCERR     
038A B41C03         1333 +2         cjne    A, #28, $+6
038D 020393         1334 +2         jmp     $+6
0390 021004         1335 +2         ljmp    CFCERR
0393 00             1336 +2         nop
                    1337 +1         IF (9 <> -1)
0394 753D09         1338 +1             mov         D1, #9     
                    1339 +1         ELSE
                    1340 +1             mov         D1, #32        
                    1341 +1         ENDIF                    
                    1342 +1         IF (20 <> -1)
0397 753E14         1343 +1             mov         D2, #20     
                    1344 +1         ELSE
                    1345 +1             mov         D2, #32        
DEBUG                                                                                                         PAGE 25

                    1346 +1         ENDIF                    
039A 741C           1347 +1         mov       A, #28
039C 121207         1348 +1         lcall     PRINTCHAR        
                    1350            ;--------------------------
039F 121118         1351    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1352 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
03A2 200B03         1353 +1         jb      SKRH, $+6
03A5 020FD1         1354 +1         ljmp    ERR_SKRH
03A8 00             1355 +1         nop
                    1357 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1358 +1                                                                                             
                                                                                                                 
                    1359 +1                                                                                             
                                                                                                                 
                    1360 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1361 +1         COUNT    SET    COUNT+1                   
                    1362 +1         
03A9 200A1B         1363 +1         jb      MB2, ENDD3
03AC 304204         1364 +1         jnb     PKI2, $+7
03AF C222           1365 +1         clr     FAST
03B1 D223           1366 +1         setb    SLOW
03B3 D238           1367 +1         setb    STOPPED         
03B5 D252           1368 +1         setb    ERRF2_U
03B7 D25A           1369 +1         setb    ERRF2_D
03B9 0536           1370 +1         inc     ERRF2_C
03BB C21A           1371 +1                 clr     PKO2                               
03BD C22A           1372 +1         clr     PO2U            
03BF C229           1373 +1         clr     PO2D              
03C1 12117F         1374 +1                 lcall   WRITEPORTS
03C4 020594         1375 +1         ljmp    UP2_MB2
03C7                1376 +1 ENDD3:
03C7 00             1377 +1         nop
03C8 2009D4         1379            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
03CB C220           1380            clr     UP              ; zastav motor
03CD D23A           1381            setb    UPOld           ;       (a zalohuj) 
03CF C23B           1382            clr     DOWNOld         ;       (a zalohuj)
03D1 C222           1383            clr     FAST            ; 
03D3 12117F         1384            lcall   WRITEPORTS      ; 
03D6 0203D9         1385            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1386    
                    1387    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1388    
03D9                1389    FLOOR2:
                    1390            ;--------------------------
                    1391 +1         CFCSS     15, 26, 0, 30, D1
03D9 633C1A         1392 +1         xrl             G,  #26             
                    1393 +1         IF (D1 <> -1)
03DC E53D           1394 +1             mov   A,  D1         
03DE 623C           1395 +1             xrl   G,  A          
                    1396 +1         ENDIF    
03E0 E53C           1397 +1         mov   A,  G              
                    1398 +2         LCJNE A,  #15, CFCERR     
03E2 B40F03         1399 +2         cjne    A, #15, $+6
03E5 0203EB         1400 +2         jmp     $+6
03E8 021004         1401 +2         ljmp    CFCERR
03EB 00             1402 +2         nop
DEBUG                                                                                                         PAGE 26

                    1403 +1         IF (0 <> -1)
03EC 753D00         1404 +1             mov         D1, #0     
                    1405 +1         ELSE
                    1406 +1             mov         D1, #32        
                    1407 +1         ENDIF                    
                    1408 +1         IF (30 <> -1)
03EF 753E1E         1409 +1             mov         D2, #30     
                    1410 +1         ELSE
                    1411 +1             mov         D2, #32        
                    1412 +1         ENDIF                    
03F2 740F           1413 +1         mov       A, #15
03F4 121207         1414 +1         lcall     PRINTCHAR        
                    1416            ;--------------------------
                    1417 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
03F7 53240F         1418 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
03FA D225           1419 +1         setb    FLED2
03FC 12117F         1420 +1         lcall   WRITEPORTS
03FF C238           1422            clr     STOPPED
                    1423 +1         TIMER2  60              ; (Timer - 3s)
0401 752D3C         1424 +1            mov           T2_C, #60                              
0404 C262           1425 +1                  clr       T2_F                                  
0406 D2CA           1426 +1                  setb      TR2                                             
                    1428 +1         ROZSVIET_SMER_LED
0408 D22F           1429 +1         setb    LEDU            ;
040A D22E           1430 +1         setb    LEDD            ;
040C 12117F         1431 +1         lcall   WRITEPORTS      ;
040F 121118         1433    F2S:    lcall   READPORTS     ;-; nacitanie dat
                    1434 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0412 200A03         1435 +1         jb      MB2, $+6
0415 020FEA         1436 +1         ljmp    ERRFLOOR
0418 00             1437 +1         nop
                    1439 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0419 200B03         1440 +1         jb      SKRH, $+6
041C 020FEA         1441 +1         ljmp    ERRFLOOR
041F 00             1442 +1         nop
                    1444 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0420 200C03         1445 +1         jb      SKRD, $+6
0423 020FEA         1446 +1         ljmp    ERRFLOOR
0426 00             1447 +1         nop
                    1449 +1         ZRUS_POSCH 2
0427 C21A           1450 +1         clr     PKO2       
0429 C22A           1451 +1         clr     PO2U      
042B C229           1452 +1         clr     PO2D      
042D 12117F         1453 +1         lcall   WRITEPORTS
0430 3062DC         1455            jnb                T2_F, F2S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    1456 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0433 A20D           1457 +1         mov      C, DP          
0435 720E           1458 +1         orl      C, DPZK        
0437 720F           1459 +1         orl      C, DPK         
0439 9218           1460 +1         mov      KS, C          
043B 922F           1461 +1         mov      LEDU, C        
043D 922E           1462 +1         mov      LEDD, C        
043F 12117F         1463 +1         lcall   WRITEPORTS      
0442 200FCA         1465            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
DEBUG                                                                                                         PAGE 27

0445 3045C7         1466            jnb     DOORCLSD, F2S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1467 +1         JE_VYBRATE_POSCHODIE F2S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0448 A20D           1468 +1         mov      C, DP         
044A 720E           1469 +1         orl      C, DPZK        
044C 720F           1470 +1         orl      C, DPK         
044E 5006           1471 +1         jnc      $+8            
0450 E528           1472 +1         mov      A, INPORTA     
0452 541E           1473 +1         anl      A, #00011110b  
0454 60B9           1474 +1         jz       F2S       
                    1476            ;clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
                    1477            ;clr     PO2U            ;
                    1478            ;clr     PO2D            ;
                    1479            ;lcall   WRITEPORTS      ;
                    1480            ;jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1481            ;_BP_
0456 782A           1482            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
0458 79F8           1483            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
045A 7AF8           1484            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
045C 203A0A         1485            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
045F E9             1486            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
0460 F4             1487            cpl     A               ;       |
0461 F9             1488            mov     R1, A           ;       |
0462 EA             1489            mov     A, R2           ;       A znegujeme aj masku sachty
0463 F4             1490            cpl     A               ;       |
0464 FA             1491            mov     R2, A           ;       |  
0465 E8             1492            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
0466 6401           1493            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
0468 F8             1494            mov     R0, A           ;       |  
0469                1495    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
0469 E528           1496            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
046B 86F0           1497            mov     B, @R0          ;  | Maskujem chybne poschodia
046D 53F00C         1498            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0470 63F0FF         1499            xrl     B, #0FFH        ;  |
0473 55F0           1500            anl     A, B            ;  |
0475 541A           1501            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0477 59             1502            anl     A, R1           ;  | 
                    1503 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0478 6003           1504 +1         jz      $+5
047A 0204F1         1505 +1         ljmp    F2
047D 00             1506 +1         nop
                    1508                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
047E E528           1509            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0480 86F0           1510            mov     B, @R0          ;  | Maskujem chybne poschodia
0482 53F00C         1511            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0485 63F0FF         1512            xrl     B, #0FFH        ;  | |
0488 55F0           1513            anl     A, B            ;  | |
048A 541A           1514            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
048C 7021           1515            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
DEBUG                                                                                                         PAGE 28

048E E522           1516            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0490 5439           1517            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0492 5A             1518            anl     A, R2           ;  |   
0493 86F0           1519            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1520            ;ANLB    ACC.0, B.1      ;  | 
                    1521 +1         ANLB    ACC.1, B.2      ;  | 
0495 A2E1           1522 +1         mov   C, ACC.1
0497 B0F2           1523 +1         anl   C, /B.2
0499 92E1           1524 +1         mov   ACC.1, C
                    1526 +1         ANLB    ACC.2, B.2      ;  |
049B A2E2           1527 +1         mov   C, ACC.2
049D B0F2           1528 +1         anl   C, /B.2
049F 92E2           1529 +1         mov   ACC.2, C
                    1531 +1         ANLB    ACC.3, B.3      ;  |
04A1 A2E3           1532 +1         mov   C, ACC.3
04A3 B0F3           1533 +1         anl   C, /B.3
04A5 92E3           1534 +1         mov   ACC.3, C
                    1536 +1         ANLB    ACC.4, B.3      ;  |
04A7 A2E4           1537 +1         mov   C, ACC.4
04A9 B0F3           1538 +1         anl   C, /B.3
04AB 92E4           1539 +1         mov   ACC.4, C
                    1541            ;ANLB    ACC.5, B.4      ;  |
04AD 7042           1542            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1543            ; Pohyb v opacnom smere (nevieme v ktorom)
04AF E8             1544    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
04B0 6401           1545            xrl     A, #01h         ;  |
04B2 F8             1546            mov     R0, A           ;  |
04B3 B23A           1547            cpl     UPOld           ;  Znegujem stary posun
04B5 B23B           1548            cpl     DOWNOld         ;  |
04B7 E9             1549            mov     A, R1           ;  Znegujeme masky
04B8 F4             1550            cpl     A               ;  |
04B9 F9             1551            mov     R1, A           ;  |
04BA EA             1552            mov     A, R2           ;  |
04BB F4             1553            cpl     A               ;  |
04BC FA             1554            mov     R2, A           ;  |               
04BD E528           1555            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
04BF 86F0           1556            mov     B, @R0          ;  | Maskujem chybne poschodia
04C1 53F00C         1557            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04C4 63F0FF         1558            xrl     B, #0FFH        ;  | |
04C7 55F0           1559            anl     A, B            ;  | |
04C9 541A           1560            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
04CB 59             1561            anl     A, R1           ;  | 
04CC 7023           1562            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04CE E522           1563            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
04D0 5439           1564            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
04D2 5A             1565            anl     A, R2           ;  | 
04D3 86F0           1566            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1567            ;ANLB    ACC.0, B.1      ;  | 
                    1568 +1         ANLB    ACC.1, B.2      ;  | 
04D5 A2E1           1569 +1         mov   C, ACC.1
04D7 B0F2           1570 +1         anl   C, /B.2
04D9 92E1           1571 +1         mov   ACC.1, C
                    1573 +1         ANLB    ACC.2, B.2      ;  |
04DB A2E2           1574 +1         mov   C, ACC.2
DEBUG                                                                                                         PAGE 29

04DD B0F2           1575 +1         anl   C, /B.2
04DF 92E2           1576 +1         mov   ACC.2, C
                    1578 +1         ANLB    ACC.3, B.3      ;  |
04E1 A2E3           1579 +1         mov   C, ACC.3
04E3 B0F3           1580 +1         anl   C, /B.3
04E5 92E3           1581 +1         mov   ACC.3, C
                    1583 +1         ANLB    ACC.4, B.3      ;  |
04E7 A2E4           1584 +1         mov   C, ACC.4
04E9 B0F3           1585 +1         anl   C, /B.3
04EB 92E4           1586 +1         mov   ACC.4, C
                    1588            ;ANLB    ACC.5, B.4      ;  |
04ED 7002           1589            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04EF 810F           1590            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
04F1 203A03         1591    F2:     jb      UPOld, F2UP     ;   
04F4 02050B         1592            jmp     F2DOWN          ;
                    1593 +1 F2UP:   SET_UP                  ; rychly pohyb hore
04F7 D220           1594 +1         setb     UP
04F9 C221           1595 +1         clr      DOWN
04FB D22F           1596 +1         setb     LEDU
04FD C22E           1597 +1         clr      LEDD 
                    1599 +1         SET_FAST                ; 
04FF D222           1600 +1         setb     FAST
0501 C223           1601 +1         clr      SLOW
0503 D218           1602 +1         setb     KS      
0505 12117F         1604            lcall   WRITEPORTS      ;   
0508 02051F         1605            jmp     UP2           ;-; prejdi do stavu UP2    
                    1606 +1 F2DOWN: SET_DOWN                  ; rychly pohyb dole
050B C220           1607 +1         clr     UP
050D D221           1608 +1         setb    DOWN
050F C22F           1609 +1         clr     LEDU
0511 D22E           1610 +1         setb    LEDD 
                    1612 +1         SET_FAST                ; 
0513 D222           1613 +1         setb     FAST
0515 C223           1614 +1         clr      SLOW
0517 D218           1615 +1         setb     KS      
0519 12117F         1617            lcall   WRITEPORTS      ; 
051C 020729         1618            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1619            
                    1620                
051F                1621    UP2:
                    1622            ;--------------------------
                    1623 +1         CFCSS     8, 7, 18, 0, D1
051F 633C07         1624 +1         xrl             G,  #7             
                    1625 +1         IF (D1 <> -1)
0522 E53D           1626 +1             mov   A,  D1         
0524 623C           1627 +1             xrl   G,  A          
                    1628 +1         ENDIF    
0526 E53C           1629 +1         mov   A,  G              
                    1630 +2         LCJNE A,  #8, CFCERR     
0528 B40803         1631 +2         cjne    A, #8, $+6
052B 020531         1632 +2         jmp     $+6
052E 021004         1633 +2         ljmp    CFCERR
0531 00             1634 +2         nop
                    1635 +1         IF (18 <> -1)
0532 753D12         1636 +1             mov         D1, #18     
                    1637 +1         ELSE
                    1638 +1             mov         D1, #32        
                    1639 +1         ENDIF                    
DEBUG                                                                                                         PAGE 30

                    1640 +1         IF (0 <> -1)
0535 753E00         1641 +1             mov         D2, #0     
                    1642 +1         ELSE
                    1643 +1             mov         D2, #32        
                    1644 +1         ENDIF                    
0538 7408           1645 +1         mov       A, #8
053A 121207         1646 +1         lcall     PRINTCHAR        
                    1648            ;--------------------------
                    1649 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
053D 53240F         1650 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0540 D225           1651 +1         setb    FLED2
0542 12117F         1652 +1         lcall   WRITEPORTS
                    1654 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0545 12107C         1655 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0548 121118         1656 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
054B 3009FA         1657 +1         jnb     MB1, $-3  ; 
054E 12107C         1658 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0551 121118         1660    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1661 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0554 200B03         1662 +1         jb      SKRH, $+6
0557 020FD1         1663 +1         ljmp    ERR_SKRH
055A 00             1664 +1         nop
                    1666 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1667 +1                                                                                             
                                                                                                                 
                    1668 +1                                                                                             
                                                                                                                 
                    1669 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1670 +1         COUNT    SET    COUNT+1                   
                    1671 +1         
055B 20091B         1672 +1         jb      MB1, ENDD4
055E 304304         1673 +1         jnb     PKI3, $+7
0561 C222           1674 +1         clr     FAST
0563 D223           1675 +1         setb    SLOW
0565 D238           1676 +1         setb    STOPPED         
0567 D253           1677 +1         setb    ERRF23_U
0569 D25A           1678 +1         setb    ERRF23_D
056B 053A           1679 +1         inc     ERRF23_C
056D C21B           1680 +1                 clr     PKO3                               
056F C22C           1681 +1         clr     PO3U            
0571 C22B           1682 +1         clr     PO3D              
0573 12117F         1683 +1                 lcall   WRITEPORTS
0576 0209B4         1684 +1         ljmp    UP3
0579                1685 +1 ENDD4:
0579 00             1686 +1         nop
057A 200AD4         1688            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1689 +1         CLR_FLOOR_ERR   ERRF23
057D C253           1690 +1         clr    ERRF23_U
057F C25A           1691 +1         clr    ERRF23_D
0581 00             1692 +1         nop
                    1694 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0582 12107C         1695 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0585 121118         1696 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0588 300AFA         1697 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 31

058B 12107C         1698 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1700            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
058E 12117F         1701            lcall   WRITEPORTS      ;
0591 020594         1702            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1703            
                    1704            
0594                1705    UP2_MB2:
                    1706            ;--------------------------
                    1707 +1         CFCSS     18, 26, 8, -1, D2
0594 633C1A         1708 +1         xrl             G,  #26             
                    1709 +1         IF (D2 <> -1)
0597 E53E           1710 +1             mov   A,  D2         
0599 623C           1711 +1             xrl   G,  A          
                    1712 +1         ENDIF    
059B E53C           1713 +1         mov   A,  G              
                    1714 +2         LCJNE A,  #18, CFCERR     
059D B41203         1715 +2         cjne    A, #18, $+6
05A0 0205A6         1716 +2         jmp     $+6
05A3 021004         1717 +2         ljmp    CFCERR
05A6 00             1718 +2         nop
                    1719 +1         IF (8 <> -1)
05A7 753D08         1720 +1             mov         D1, #8     
                    1721 +1         ELSE
                    1722 +1             mov         D1, #32        
                    1723 +1         ENDIF                    
                    1724 +1         IF (-1 <> -1)
                    1725 +1             mov         D2, #-1     
                    1726 +1         ELSE
05AA 753E20         1727 +1             mov         D2, #32        
                    1728 +1         ENDIF                    
05AD 7412           1729 +1         mov       A, #18
05AF 121207         1730 +1         lcall     PRINTCHAR        
                    1732            ;--------------------------
                    1733 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
05B2 12107C         1734 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05B5 121118         1735 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05B8 300AFA         1736 +1         jnb     MB2, $-3  ; 
05BB 12107C         1737 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
05BE 121118         1739    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1740 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
05C1 200B03         1741 +1         jb      SKRH, $+6
05C4 020FD1         1742 +1         ljmp    ERR_SKRH
05C7 00             1743 +1         nop
                    1745 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT ; >>> CHYBA, Vypadla spomalovacia clonka
                                                                                (narazil som na zastavovaciu) <<<
                    1746 +1                                                                                             
                                                                                                                 
                    1747 +1                                                                                             
                                                                                                                 
                    1748 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1749 +1         COUNT    SET    COUNT+1                   
                    1750 +1         
05C8 20091B         1751 +1         jb      MB1, ENDD5
05CB 304304         1752 +1         jnb     PKI3, $+7
05CE C222           1753 +1         clr     FAST
05D0 D223           1754 +1         setb    SLOW
DEBUG                                                                                                         PAGE 32

05D2 D238           1755 +1         setb    STOPPED         
05D4 D253           1756 +1         setb    ERRF23_U
05D6 D25A           1757 +1         setb    ERRF23_D
05D8 053A           1758 +1         inc     ERRF23_C
05DA C21B           1759 +1                 clr     PKO3                               
05DC C22C           1760 +1         clr     PO3U            
05DE C22B           1761 +1         clr     PO3D              
05E0 12117F         1762 +1                 lcall   WRITEPORTS
05E3 0209B4         1763 +1         ljmp    UP3
05E6                1764 +1 ENDD5:
05E6 00             1765 +1         nop
05E7 200AD4         1767            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
                    1768 +1         CLR_FLOOR_ERR   ERRF23       
05EA C253           1769 +1         clr    ERRF23_U
05EC C25A           1770 +1         clr    ERRF23_D
05EE 00             1771 +1         nop
                    1773            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
05EF 12117F         1774            lcall   WRITEPORTS      ;
                    1775 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
05F2 12107C         1776 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05F5 121118         1777 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05F8 300AFA         1778 +1         jnb     MB2, $-3  ; 
05FB 12107C         1779 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1781            
05FE                1782    UP2_MB2_CFC:     
                    1783            ;--------------------------
                    1784 +1         CFCSS     1, 19, -1, -1, -1
05FE 633C13         1785 +1         xrl             G,  #19             
                    1786 +1         IF (-1 <> -1)
                    1787 +1             mov   A,  -1         
                    1788 +1             xrl   G,  A          
                    1789 +1         ENDIF    
0601 E53C           1790 +1         mov   A,  G              
                    1791 +2         LCJNE A,  #1, CFCERR     
0603 B40103         1792 +2         cjne    A, #1, $+6
0606 02060C         1793 +2         jmp     $+6
0609 021004         1794 +2         ljmp    CFCERR
060C 00             1795 +2         nop
                    1796 +1         IF (-1 <> -1)
                    1797 +1             mov         D1, #-1     
                    1798 +1         ELSE
060D 753D20         1799 +1             mov         D1, #32        
                    1800 +1         ENDIF                    
                    1801 +1         IF (-1 <> -1)
                    1802 +1             mov         D2, #-1     
                    1803 +1         ELSE
0610 753E20         1804 +1             mov         D2, #32        
                    1805 +1         ENDIF                    
0613 7401           1806 +1         mov       A, #1
0615 121207         1807 +1         lcall     PRINTCHAR        
                    1809            ;--------------------------        
                    1810 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1811 +1                                         
0618 C3             1812 +1         clr     C                       
0619 7400           1813 +1         mov     A, #0h                  
061B 7214           1814 +1         orl     C, PI3U      
DEBUG                                                                                                         PAGE 33

061D B00E           1815 +1         anl     C, /DPZK                
061F 7243           1816 +1         orl     C, PKI3          
0621 B053           1817 +1         anl     C, /ERRF3_U 
0623 720F           1818 +1         orl     C, DPK                  
0625 7238           1819 +1         orl     C, STOPPED              
0627 3400           1820 +1         addc    A, #0h                  
0629 704B           1822            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1823 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
062B E522           1824 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
062D 33             1825 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
062E 547E           1826 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1827 +1         
                    1828 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1829 +2         ANLB    ACC.3, ERRF2_U  ; |
0630 A2E3           1830 +2         mov   C, ACC.3
0632 B052           1831 +2         anl   C, /ERRF2_U
0634 92E3           1832 +2         mov   ACC.3, C
                    1833 +2         ANLB    ACC.4, ERRF3_U  ; |
0636 A2E4           1834 +2         mov   C, ACC.4
0638 B053           1835 +2         anl   C, /ERRF3_U
063A 92E4           1836 +2         mov   ACC.4, C
                    1837 +2         ANLB    ACC.5, ERRF3_U  ; |
063C A2E5           1838 +2         mov   C, ACC.5
063E B053           1839 +2         anl   C, /ERRF3_U
0640 92E5           1840 +2         mov   ACC.5, C
                    1841 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1842 +1         
0642 7805           1843 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1844 +1  ; LL1: 
0644 6006           1845 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0646 C3             1846 +1         clr     C               ; Inak shiftnem o 2
0647 13             1847 +1         rrc     A               ;
0648 C3             1848 +1         clr     C               ;
0649 13             1849 +1         rrc     A               ;
064A D8F8           1850 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1851 +1 ; LL2:
064C 7405           1852 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
064E C3             1853 +1         clr     C               ;
064F 98             1854 +1         subb    A, R0           ;
                    1856 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
0650 B40303         1857 +1         cjne    A, #3, $+6
0653 020659         1858 +1         jmp     $+6
0656 020680         1859 +1         ljmp    UP2_MB1
0659 00             1860 +1         nop
                    1862 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
065A E528           1863 +1         mov     A, INPORTA
065C 541E           1864 +1         anl     A, #00011110b
065E 852AF0         1865 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
0661 53F00C         1866 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0664 63F0FF         1867 +1         xrl     B, #0FFH
DEBUG                                                                                                         PAGE 34

0667 55F0           1868 +1         anl     A, B
0669 C3             1869 +1         clr     C
066A 13             1870 +1         rrc     A
                    1871 +1 ;LL1    
066B 7803           1872 +1         mov     R0, #3
066D C3             1873 +1         clr     C
066E 13             1874 +1         rrc     A
066F D8FC           1875 +1         djnz    R0, $-2;LL1
0671 6003           1877            jz      U2_MB2C         ; |   ak neni zastavujem  
0673 020680         1878            ljmp    UP2_MB1         ; |   inak nezastavim
0676 D223           1879    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
0678 C222           1880            clr     FAST            ; 
067A 12117F         1881            lcall   WRITEPORTS      ;
067D 0206D5         1882            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    1883          
0680                1884    UP2_MB1:
                    1885            ;--------------------------
                    1886 +1         CFCSS     26, 27, 0, 17, -1
0680 633C1B         1887 +1         xrl             G,  #27             
                    1888 +1         IF (-1 <> -1)
                    1889 +1             mov   A,  -1         
                    1890 +1             xrl   G,  A          
                    1891 +1         ENDIF    
0683 E53C           1892 +1         mov   A,  G              
                    1893 +2         LCJNE A,  #26, CFCERR     
0685 B41A03         1894 +2         cjne    A, #26, $+6
0688 02068E         1895 +2         jmp     $+6
068B 021004         1896 +2         ljmp    CFCERR
068E 00             1897 +2         nop
                    1898 +1         IF (0 <> -1)
068F 753D00         1899 +1             mov         D1, #0     
                    1900 +1         ELSE
                    1901 +1             mov         D1, #32        
                    1902 +1         ENDIF                    
                    1903 +1         IF (17 <> -1)
0692 753E11         1904 +1             mov         D2, #17     
                    1905 +1         ELSE
                    1906 +1             mov         D2, #32        
                    1907 +1         ENDIF                    
0695 741A           1908 +1         mov       A, #26
0697 121207         1909 +1         lcall     PRINTCHAR        
                    1911            ;--------------------------
                    1912 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
069A 12107C         1913 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
069D 121118         1914 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06A0 300AFA         1915 +1         jnb     MB2, $-3  ; 
06A3 12107C         1916 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
06A6 121118         1918    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    1919 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
06A9 200B03         1920 +1         jb      SKRH, $+6
06AC 020FD1         1921 +1         ljmp    ERR_SKRH
06AF 00             1922 +1         nop
                    1924 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia cl
                                                                               onka (narazil som na spomalovaciu) <<<
                    1925 +1                                                                                             
                                                                                                                 
                    1926 +1                                                                                             
DEBUG                                                                                                         PAGE 35

                                                                                                                 
                    1927 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              1928 +1         COUNT    SET    COUNT+1                   
                    1929 +1         
06B0 200A1B         1930 +1         jb      MB2, ENDD6
06B3 304304         1931 +1         jnb     PKI3, $+7
06B6 C222           1932 +1         clr     FAST
06B8 D223           1933 +1         setb    SLOW
06BA D238           1934 +1         setb    STOPPED         
06BC D253           1935 +1         setb    ERRF3_U
06BE D25B           1936 +1         setb    ERRF3_D
06C0 0537           1937 +1         inc     ERRF3_C
06C2 C21B           1938 +1                 clr     PKO3                               
06C4 C22C           1939 +1         clr     PO3U            
06C6 C22B           1940 +1         clr     PO3D              
06C8 12117F         1941 +1                 lcall   WRITEPORTS
06CB 020A3C         1942 +1         ljmp    UP3_MB2
06CE                1943 +1 ENDD6:
06CE 00             1944 +1         nop
06CF 2009D4         1946            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
06D2 0209B4         1947            ljmp    UP3             ; 
                    1948    
                    1949    
06D5                1950    UP2_STOP:
                    1951            ;--------------------------
                    1952 +1         CFCSS     4, 5, 9, 15, -1
06D5 633C05         1953 +1         xrl             G,  #5             
                    1954 +1         IF (-1 <> -1)
                    1955 +1             mov   A,  -1         
                    1956 +1             xrl   G,  A          
                    1957 +1         ENDIF    
06D8 E53C           1958 +1         mov   A,  G              
                    1959 +2         LCJNE A,  #4, CFCERR     
06DA B40403         1960 +2         cjne    A, #4, $+6
06DD 0206E3         1961 +2         jmp     $+6
06E0 021004         1962 +2         ljmp    CFCERR
06E3 00             1963 +2         nop
                    1964 +1         IF (9 <> -1)
06E4 753D09         1965 +1             mov         D1, #9     
                    1966 +1         ELSE
                    1967 +1             mov         D1, #32        
                    1968 +1         ENDIF                    
                    1969 +1         IF (15 <> -1)
06E7 753E0F         1970 +1             mov         D2, #15     
                    1971 +1         ELSE
                    1972 +1             mov         D2, #32        
                    1973 +1         ENDIF                    
06EA 7404           1974 +1         mov       A, #4
06EC 121207         1975 +1         lcall     PRINTCHAR        
                    1977            ;--------------------------
06EF                1978    UP2_STOP_C:
06EF 121118         1979            lcall   READPORTS       ; nacitanie dat
                    1980 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
06F2 200B03         1981 +1         jb      SKRH, $+6
06F5 020FD1         1982 +1         ljmp    ERR_SKRH
06F8 00             1983 +1         nop
                    1985 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
DEBUG                                                                                                         PAGE 36

                    1986 +1                                                                                             
                                                                                                                 
                    1987 +1                                                                                             
                                                                                                                 
                    1988 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              1989 +1         COUNT    SET    COUNT+1                   
                    1990 +1         
06F9 200A1B         1991 +1         jb      MB2, ENDD7
06FC 304304         1992 +1         jnb     PKI3, $+7
06FF C222           1993 +1         clr     FAST
0701 D223           1994 +1         setb    SLOW
0703 D238           1995 +1         setb    STOPPED         
0705 D253           1996 +1         setb    ERRF3_U
0707 D25B           1997 +1         setb    ERRF3_D
0709 0537           1998 +1         inc     ERRF3_C
070B C21B           1999 +1                 clr     PKO3                               
070D C22C           2000 +1         clr     PO3U            
070F C22B           2001 +1         clr     PO3D              
0711 12117F         2002 +1                 lcall   WRITEPORTS
0714 020A3C         2003 +1         ljmp    UP3_MB2
0717                2004 +1 ENDD7:
0717 00             2005 +1         nop
0718 2009D4         2007            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
071B C220           2008            clr     UP              ; zastav motor
071D D23A           2009            setb    UPOld           ;       (a zalohuj)
071F C23B           2010            clr     DOWNOld         ;       (a zalohuj)
0721 C222           2011            clr     FAST            ; 
0723 12117F         2012            lcall   WRITEPORTS      ; 
0726 02086E         2013            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    2014            
0729                2015    DOWN2:
                    2016            ;--------------------------
                    2017 +1         CFCSS     24, 9, 6, 9, D2
0729 633C09         2018 +1         xrl             G,  #9             
                    2019 +1         IF (D2 <> -1)
072C E53E           2020 +1             mov   A,  D2         
072E 623C           2021 +1             xrl   G,  A          
                    2022 +1         ENDIF    
0730 E53C           2023 +1         mov   A,  G              
                    2024 +2         LCJNE A,  #24, CFCERR     
0732 B41803         2025 +2         cjne    A, #24, $+6
0735 02073B         2026 +2         jmp     $+6
0738 021004         2027 +2         ljmp    CFCERR
073B 00             2028 +2         nop
                    2029 +1         IF (6 <> -1)
073C 753D06         2030 +1             mov         D1, #6     
                    2031 +1         ELSE
                    2032 +1             mov         D1, #32        
                    2033 +1         ENDIF                    
                    2034 +1         IF (9 <> -1)
073F 753E09         2035 +1             mov         D2, #9     
                    2036 +1         ELSE
                    2037 +1             mov         D2, #32        
                    2038 +1         ENDIF                    
0742 7418           2039 +1         mov       A, #24
0744 121207         2040 +1         lcall     PRINTCHAR        
                    2042            ;--------------------------
                    2043 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
DEBUG                                                                                                         PAGE 37

                                                                               ny", nechaj len aktualne poschodie)
0747 53240F         2044 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
074A D225           2045 +1         setb    FLED2
074C 12117F         2046 +1         lcall   WRITEPORTS
                    2048 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
074F 12107C         2049 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0752 121118         2050 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0755 3009FA         2051 +1         jnb     MB1, $-3  ; 
0758 12107C         2052 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
075B 121118         2054    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    2055 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
075E 200C03         2056 +1         jb      SKRD, $+6
0761 020FB8         2057 +1         ljmp    ERR_SKRD
0764 00             2058 +1         nop
                    2060 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2061 +1                                                                                             
                                                                                                                 
                    2062 +1                                                                                             
                                                                                                                 
                    2063 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              2064 +1         COUNT    SET    COUNT+1                   
                    2065 +1         
0765 20091B         2066 +1         jb      MB1, ENDD8
0768 304104         2067 +1         jnb     PKI1, $+7
076B C222           2068 +1         clr     FAST
076D D223           2069 +1         setb    SLOW
076F D238           2070 +1         setb    STOPPED         
0771 D252           2071 +1         setb    ERRF12_U
0773 D259           2072 +1         setb    ERRF12_D
0775 0539           2073 +1         inc     ERRF12_C
0777 C219           2074 +1                 clr     PKO1                               
0779 C228           2075 +1         clr     PO1U            
077B C228           2076 +1         clr     PO1D              
077D 12117F         2077 +1                 lcall   WRITEPORTS
0780 020787         2078 +1         ljmp    DOWN2ERR
0783                2079 +1 ENDD8:
0783 00             2080 +1         nop
0784 020796         2082            jmp     DOWN2ERR_CONTINUE
0787                2083    DOWN2ERR:
0787 C221           2084            clr     DOWN            ; zastav motor
0789 D23B           2085            setb    DOWNOld         ;       (a zalohuj)
078B C23A           2086            clr     UPOld           ;       (a zalohuj)
078D C222           2087            clr     FAST            ; 
078F C223           2088            clr     SLOW            ;
0791 12117F         2089            lcall   WRITEPORTS      ; 
0794 211B           2090            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0796                2091    DOWN2ERR_CONTINUE:
0796 200AC2         2092            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    2093 +1         CLR_FLOOR_ERR   ERRF12
0799 C252           2094 +1         clr    ERRF12_U
079B C259           2095 +1         clr    ERRF12_D
079D 00             2096 +1         nop
                    2098 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
079E 12107C         2099 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
DEBUG                                                                                                         PAGE 38

07A1 121118         2100 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07A4 300AFA         2101 +1         jnb     MB2, $-3  ; 
07A7 12107C         2102 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2104            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
07AA 12117F         2105            lcall   WRITEPORTS      ;
07AD 0207B0         2106            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    2107    
                    2108    
07B0                2109    DOWN2_MB2:
                    2110            ;--------------------------
                    2111 +1         CFCSS     31, 14, 1, -1, D2
07B0 633C0E         2112 +1         xrl             G,  #14             
                    2113 +1         IF (D2 <> -1)
07B3 E53E           2114 +1             mov   A,  D2         
07B5 623C           2115 +1             xrl   G,  A          
                    2116 +1         ENDIF    
07B7 E53C           2117 +1         mov   A,  G              
                    2118 +2         LCJNE A,  #31, CFCERR     
07B9 B41F03         2119 +2         cjne    A, #31, $+6
07BC 0207C2         2120 +2         jmp     $+6
07BF 021004         2121 +2         ljmp    CFCERR
07C2 00             2122 +2         nop
                    2123 +1         IF (1 <> -1)
07C3 753D01         2124 +1             mov         D1, #1     
                    2125 +1         ELSE
                    2126 +1             mov         D1, #32        
                    2127 +1         ENDIF                    
                    2128 +1         IF (-1 <> -1)
                    2129 +1             mov         D2, #-1     
                    2130 +1         ELSE
07C6 753E20         2131 +1             mov         D2, #32        
                    2132 +1         ENDIF                    
07C9 741F           2133 +1         mov       A, #31
07CB 121207         2134 +1         lcall     PRINTCHAR        
                    2136            ;--------------------------
                    2137 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
07CE 12107C         2138 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07D1 121118         2139 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07D4 300AFA         2140 +1         jnb     MB2, $-3  ; 
07D7 12107C         2141 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
07DA                2143    DOWN2_MB2A:
07DA 121118         2144            lcall   READPORTS       ; nacitanie dat
                    2145 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
07DD 200C03         2146 +1         jb      SKRD, $+6
07E0 020FB8         2147 +1         ljmp    ERR_SKRD
07E3 00             2148 +1         nop
                    2150 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT ; >>> CHYBA, Vypadla spomalovac
                                                                               ia clonka (narazil som na zastavovaciu) <
                                                                               <<
                    2151 +1                                                                                             
                                                                                                                 
                    2152 +1                                                                                             
                                                                                                                 
                    2153 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              2154 +1         COUNT    SET    COUNT+1                   
                    2155 +1         
DEBUG                                                                                                         PAGE 39

07E4 20091B         2156 +1         jb      MB1, ENDD9
07E7 304104         2157 +1         jnb     PKI1, $+7
07EA C222           2158 +1         clr     FAST
07EC D223           2159 +1         setb    SLOW
07EE D238           2160 +1         setb    STOPPED         
07F0 D252           2161 +1         setb    ERRF12_U
07F2 D259           2162 +1         setb    ERRF12_D
07F4 0539           2163 +1         inc     ERRF12_C
07F6 C219           2164 +1                 clr     PKO1                               
07F8 C228           2165 +1         clr     PO1U            
07FA C228           2166 +1         clr     PO1D              
07FC 12117F         2167 +1                 lcall   WRITEPORTS
07FF 020806         2168 +1         ljmp    DOWN2_MB2ERR
0802                2169 +1 ENDD9:
0802 00             2170 +1         nop
0803 020816         2172            jmp     DOWN2_MB2ERR_CONTINUE
0806                2173    DOWN2_MB2ERR:
0806 C221           2174            clr     DOWN            ; zastav motor
0808 D23B           2175            setb    DOWNOld         ;       (a zalohuj)
080A C23A           2176            clr     UPOld           ;       (a zalohuj)
080C C222           2177            clr     FAST            ; 
080E C223           2178            clr     SLOW            ;
0810 12117F         2179            lcall   WRITEPORTS      ; 
0813 02011B         2180            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0816                2181    DOWN2_MB2ERR_CONTINUE:
0816 200AC1         2182            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2183 +1         CLR_FLOOR_ERR   ERRF12      
0819 C252           2184 +1         clr    ERRF12_U
081B C259           2185 +1         clr    ERRF12_D
081D 00             2186 +1         nop
                    2188            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
081E 12117F         2189            lcall   WRITEPORTS      ;
                    2190 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0821 12107C         2191 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0824 121118         2192 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0827 300AFA         2193 +1         jnb     MB2, $-3  ; 
082A 12107C         2194 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2196    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2197    ;        anl     A, #00000010b ;-;
                    2198    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
082D D223           2199            setb    SLOW            ;       Ak ano, spomalme
082F C222           2200            clr     FAST            ; 
0831 12117F         2201            lcall   WRITEPORTS      ;
0834 020837         2202            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
0837                2203    DOWN2_MB1:    
                    2204            ;--------------------------
                    2205 +1         CFCSS     14, 17, 16, -1, -1
0837 633C11         2206 +1         xrl             G,  #17             
                    2207 +1         IF (-1 <> -1)
                    2208 +1             mov   A,  -1         
                    2209 +1             xrl   G,  A          
                    2210 +1         ENDIF    
083A E53C           2211 +1         mov   A,  G              
                    2212 +2         LCJNE A,  #14, CFCERR     
083C B40E03         2213 +2         cjne    A, #14, $+6
083F 020845         2214 +2         jmp     $+6
0842 021004         2215 +2         ljmp    CFCERR
DEBUG                                                                                                         PAGE 40

0845 00             2216 +2         nop
                    2217 +1         IF (16 <> -1)
0846 753D10         2218 +1             mov         D1, #16     
                    2219 +1         ELSE
                    2220 +1             mov         D1, #32        
                    2221 +1         ENDIF                    
                    2222 +1         IF (-1 <> -1)
                    2223 +1             mov         D2, #-1     
                    2224 +1         ELSE
0849 753E20         2225 +1             mov         D2, #32        
                    2226 +1         ENDIF                    
084C 740E           2227 +1         mov       A, #14
084E 121207         2228 +1         lcall     PRINTCHAR        
                    2230            ;--------------------------
0851 121118         2231    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
0854 300907         2232            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0857 200CF7         2233            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
085A D259           2234            setb    ERRF1_D
085C 0535           2235            inc     ERRF1_C
                    2236    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
085E C238           2237    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
0860 C221           2238            clr     DOWN            ; zastav motor
0862 D23B           2239            setb    DOWNOld         ;       (a zalohuj)
0864 C23A           2240            clr     UPOld           ;       (a zalohuj)
0866 C222           2241            clr     FAST            ; 
0868 12117F         2242            lcall   WRITEPORTS      ; 
086B 02011B         2243            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    2244    
                    2245    
                    2246    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    2247    
086E                2248    FLOOR3:
                    2249            ;--------------------------
                    2250 +1         CFCSS     10, 7, 16, 19, D1
086E 633C07         2251 +1         xrl             G,  #7             
                    2252 +1         IF (D1 <> -1)
0871 E53D           2253 +1             mov   A,  D1         
0873 623C           2254 +1             xrl   G,  A          
                    2255 +1         ENDIF    
0875 E53C           2256 +1         mov   A,  G              
                    2257 +2         LCJNE A,  #10, CFCERR     
0877 B40A03         2258 +2         cjne    A, #10, $+6
087A 020880         2259 +2         jmp     $+6
087D 021004         2260 +2         ljmp    CFCERR
0880 00             2261 +2         nop
                    2262 +1         IF (16 <> -1)
0881 753D10         2263 +1             mov         D1, #16     
                    2264 +1         ELSE
                    2265 +1             mov         D1, #32        
                    2266 +1         ENDIF                    
                    2267 +1         IF (19 <> -1)
0884 753E13         2268 +1             mov         D2, #19     
                    2269 +1         ELSE
                    2270 +1             mov         D2, #32        
                    2271 +1         ENDIF                    
DEBUG                                                                                                         PAGE 41

0887 740A           2272 +1         mov       A, #10
0889 121207         2273 +1         lcall     PRINTCHAR        
                    2275            ;--------------------------
                    2276 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
088C 53240F         2277 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
088F D226           2278 +1         setb    FLED3
0891 12117F         2279 +1         lcall   WRITEPORTS
0894 C238           2281            clr     STOPPED
                    2282 +1         TIMER2  60              ; (Timer - 3s)
0896 752D3C         2283 +1            mov           T2_C, #60                              
0899 C262           2284 +1                  clr       T2_F                                  
089B D2CA           2285 +1                  setb      TR2                                             
                    2287 +1         ROZSVIET_SMER_LED
089D D22F           2288 +1         setb    LEDU            ;
089F D22E           2289 +1         setb    LEDD            ;
08A1 12117F         2290 +1         lcall   WRITEPORTS      ;
08A4 121118         2292    F3S:    lcall   READPORTS     ;-; nacitanie dat
                    2293 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08A7 200A03         2294 +1         jb      MB2, $+6
08AA 020FEA         2295 +1         ljmp    ERRFLOOR
08AD 00             2296 +1         nop
                    2298 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08AE 200B03         2299 +1         jb      SKRH, $+6
08B1 020FEA         2300 +1         ljmp    ERRFLOOR
08B4 00             2301 +1         nop
                    2303 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08B5 200C03         2304 +1         jb      SKRD, $+6
08B8 020FEA         2305 +1         ljmp    ERRFLOOR
08BB 00             2306 +1         nop
                    2308 +1         ZRUS_POSCH 3
08BC C21B           2309 +1         clr     PKO3       
08BE C22C           2310 +1         clr     PO3U      
08C0 C22B           2311 +1         clr     PO3D      
08C2 12117F         2312 +1         lcall   WRITEPORTS
08C5 3062DC         2314            jnb                T2_F, F3S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    2315 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
08C8 A20D           2316 +1         mov      C, DP          
08CA 720E           2317 +1         orl      C, DPZK        
08CC 720F           2318 +1         orl      C, DPK         
08CE 9218           2319 +1         mov      KS, C          
08D0 922F           2320 +1         mov      LEDU, C        
08D2 922E           2321 +1         mov      LEDD, C        
08D4 12117F         2322 +1         lcall   WRITEPORTS      
08D7 200FCA         2324            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
08DA 3045C7         2325            jnb     DOORCLSD, F3S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    2326 +1         JE_VYBRATE_POSCHODIE F3S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.          
08DD A20D           2327 +1         mov      C, DP         
08DF 720E           2328 +1         orl      C, DPZK        
08E1 720F           2329 +1         orl      C, DPK         
08E3 5006           2330 +1         jnc      $+8            
08E5 E528           2331 +1         mov      A, INPORTA     
08E7 541E           2332 +1         anl      A, #00011110b  
08E9 60B9           2333 +1         jz       F3S       
DEBUG                                                                                                         PAGE 42

                    2335            ;clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
                    2336            ;clr     PO3U            ;
                    2337            ;clr     PO3D            ;
                    2338            ;lcall   WRITEPORTS      ;
                    2339            ;jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
08EB 782A           2340            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
08ED 79F0           2341            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
08EF 7AE0           2342            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
08F1 203A0A         2343            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
08F4 E9             2344            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
08F5 F4             2345            cpl     A               ;       |
08F6 F9             2346            mov     R1, A           ;       |
08F7 EA             2347            mov     A, R2           ;       A znegujeme aj masku sachty
08F8 F4             2348            cpl     A               ;       |
08F9 FA             2349            mov     R2, A           ;       |     
08FA E8             2350            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
08FB 6401           2351            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
08FD F8             2352            mov     R0, A           ;       |    
08FE                2353    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
08FE E528           2354            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0900 86F0           2355            mov     B, @R0          ;  | Maskujem chybne poschodia
0902 53F00C         2356            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
0905 63F0FF         2357            xrl     B, #0FFH        ;  | |
0908 55F0           2358            anl     A, B            ;  | |
090A 5416           2359            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
090C 59             2360            anl     A, R1           ;  | 
                    2361 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
090D 6003           2362 +1         jz      $+5
090F 020986         2363 +1         ljmp    F3
0912 00             2364 +1         nop
                    2366                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0913 E528           2367            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0915 86F0           2368            mov     B, @R0          ;  | Maskujem chybne poschodia
0917 53F00C         2369            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
091A 63F0FF         2370            xrl     B, #0FFH        ;  | |
091D 55F0           2371            anl     A, B            ;  | |
091F 5416           2372            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
0921 7021           2373            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0923 E522           2374            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0925 5427           2375            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0927 5A             2376            anl     A, R2           ;  |   
0928 86F0           2377            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2378            ;ANLB    ACC.0, B.1      ;  | 
                    2379 +1         ANLB    ACC.1, B.2      ;  | 
092A A2E1           2380 +1         mov   C, ACC.1
092C B0F2           2381 +1         anl   C, /B.2
092E 92E1           2382 +1         mov   ACC.1, C
                    2384 +1         ANLB    ACC.2, B.2      ;  |
0930 A2E2           2385 +1         mov   C, ACC.2
DEBUG                                                                                                         PAGE 43

0932 B0F2           2386 +1         anl   C, /B.2
0934 92E2           2387 +1         mov   ACC.2, C
                    2389 +1         ANLB    ACC.3, B.3      ;  |
0936 A2E3           2390 +1         mov   C, ACC.3
0938 B0F3           2391 +1         anl   C, /B.3
093A 92E3           2392 +1         mov   ACC.3, C
                    2394 +1         ANLB    ACC.4, B.3      ;  |
093C A2E4           2395 +1         mov   C, ACC.4
093E B0F3           2396 +1         anl   C, /B.3
0940 92E4           2397 +1         mov   ACC.4, C
                    2399            ;ANLB    ACC.5, B.4      ;  |
0942 7042           2400            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2401            ; Pohyb v opacnom smere (nevieme v ktorom)
0944 E8             2402    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
0945 6401           2403            xrl     A, #01h         ;  |
0947 F8             2404            mov     R0, A           ;  |
0948 B23A           2405            cpl     UPOld           ;  Znegujem stary posun
094A B23B           2406            cpl     DOWNOld         ;  |
094C E9             2407            mov     A, R1           ;  Znegujeme masky
094D F4             2408            cpl     A               ;  |
094E F9             2409            mov     R1, A           ;  |
094F EA             2410            mov     A, R2           ;  |
0950 F4             2411            cpl     A               ;  |
0951 FA             2412            mov     R2, A           ;  |               
0952 E528           2413            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
0954 86F0           2414            mov     B, @R0          ;  | Maskujem chybne poschodia
0956 53F00C         2415            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0959 63F0FF         2416            xrl     B, #0FFH        ;  | |
095C 55F0           2417            anl     A, B            ;  | |
095E 5416           2418            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0960 59             2419            anl     A, R1           ;  | 
0961 7023           2420            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0963 E522           2421            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
0965 5427           2422            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0967 5A             2423            anl     A, R2           ;  | 
0968 86F0           2424            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2425            ;ANLB    ACC.0, B.1      ;  | 
                    2426 +1         ANLB    ACC.1, B.2      ;  | 
096A A2E1           2427 +1         mov   C, ACC.1
096C B0F2           2428 +1         anl   C, /B.2
096E 92E1           2429 +1         mov   ACC.1, C
                    2431 +1         ANLB    ACC.2, B.2      ;  |
0970 A2E2           2432 +1         mov   C, ACC.2
0972 B0F2           2433 +1         anl   C, /B.2
0974 92E2           2434 +1         mov   ACC.2, C
                    2436 +1         ANLB    ACC.3, B.3      ;  |
0976 A2E3           2437 +1         mov   C, ACC.3
0978 B0F3           2438 +1         anl   C, /B.3
097A 92E3           2439 +1         mov   ACC.3, C
                    2441 +1         ANLB    ACC.4, B.3      ;  |
097C A2E4           2442 +1         mov   C, ACC.4
097E B0F3           2443 +1         anl   C, /B.3
0980 92E4           2444 +1         mov   ACC.4, C
                    2446            ;ANLB    ACC.5, B.4      ;  |
DEBUG                                                                                                         PAGE 44

0982 7002           2447            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0984 01A4           2448            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
0986 203A03         2449    F3:     jb      UPOld, F3UP     ;   
0989 0209A0         2450            jmp     F3DOWN          ;
                    2451 +1 F3UP:   SET_UP                  ; rychly pohyb hore
098C D220           2452 +1         setb     UP
098E C221           2453 +1         clr      DOWN
0990 D22F           2454 +1         setb     LEDU
0992 C22E           2455 +1         clr      LEDD 
                    2457 +1         SET_FAST                ; 
0994 D222           2458 +1         setb     FAST
0996 C223           2459 +1         clr      SLOW
0998 D218           2460 +1         setb     KS      
099A 12117F         2462            lcall   WRITEPORTS      ; 
099D 0209B4         2463            jmp     UP3           ;-; prejdi do stavu UP2    
                    2464 +1 F3DOWN: SET_DOWN                  ; rychly pohyb dole
09A0 C220           2465 +1         clr     UP
09A2 D221           2466 +1         setb    DOWN
09A4 C22F           2467 +1         clr     LEDU
09A6 D22E           2468 +1         setb    LEDD 
                    2470 +1         SET_FAST                ; 
09A8 D222           2471 +1         setb     FAST
09AA C223           2472 +1         clr      SLOW
09AC D218           2473 +1         setb     KS      
09AE 12117F         2475            lcall   WRITEPORTS      ; 
09B1 020B06         2476            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2477         
                    2478         
09B4                2479    UP3:
                    2480            ;--------------------------
                    2481 +1         CFCSS     11, 17, 14, 0, D1
09B4 633C11         2482 +1         xrl             G,  #17             
                    2483 +1         IF (D1 <> -1)
09B7 E53D           2484 +1             mov   A,  D1         
09B9 623C           2485 +1             xrl   G,  A          
                    2486 +1         ENDIF    
09BB E53C           2487 +1         mov   A,  G              
                    2488 +2         LCJNE A,  #11, CFCERR     
09BD B40B03         2489 +2         cjne    A, #11, $+6
09C0 0209C6         2490 +2         jmp     $+6
09C3 021004         2491 +2         ljmp    CFCERR
09C6 00             2492 +2         nop
                    2493 +1         IF (14 <> -1)
09C7 753D0E         2494 +1             mov         D1, #14     
                    2495 +1         ELSE
                    2496 +1             mov         D1, #32        
                    2497 +1         ENDIF                    
                    2498 +1         IF (0 <> -1)
09CA 753E00         2499 +1             mov         D2, #0     
                    2500 +1         ELSE
                    2501 +1             mov         D2, #32        
                    2502 +1         ENDIF                    
09CD 740B           2503 +1         mov       A, #11
09CF 121207         2504 +1         lcall     PRINTCHAR        
                    2506            ;--------------------------
                    2507 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
09D2 53240F         2508 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
DEBUG                                                                                                         PAGE 45

                                                                               )          
09D5 D226           2509 +1         setb    FLED3
09D7 12117F         2510 +1         lcall   WRITEPORTS
                    2512 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
09DA 12107C         2513 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09DD 121118         2514 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
09E0 3009FA         2515 +1         jnb     MB1, $-3  ; 
09E3 12107C         2516 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
09E6 121118         2518    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2519 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
09E9 200B03         2520 +1         jb      SKRH, $+6
09EC 020FD1         2521 +1         ljmp    ERR_SKRH
09EF 00             2522 +1         nop
                    2524 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie 
                                                                               clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2525 +1                                                                                             
                                                                                                                 
                    2526 +1                                                                                             
                                                                                                                 
                    2527 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2528 +1         COUNT    SET    COUNT+1                   
                    2529 +1         
09F0 20091B         2530 +1         jb      MB1, ENDD10
09F3 304404         2531 +1         jnb     PKI4, $+7
09F6 C222           2532 +1         clr     FAST
09F8 D223           2533 +1         setb    SLOW
09FA D238           2534 +1         setb    STOPPED         
09FC D254           2535 +1         setb    ERRF34_U
09FE D25B           2536 +1         setb    ERRF34_D
0A00 053B           2537 +1         inc     ERRF34_C
0A02 C21C           2538 +1                 clr     PKO4                               
0A04 C22D           2539 +1         clr     PO4U            
0A06 C22D           2540 +1         clr     PO4D              
0A08 12117F         2541 +1                 lcall   WRITEPORTS
0A0B 020A12         2542 +1         ljmp    UP3ERR
0A0E                2543 +1 ENDD10:
0A0E 00             2544 +1         nop
0A0F 020A22         2546            jmp     UP3ERR_CONTINUE
0A12                2547    UP3ERR:
0A12 C220           2548            clr     UP              ; zastav motor
0A14 D23A           2549            setb    UPOld           ;       (a zalohuj)
0A16 C23B           2550            clr     DOWNOld         ;       (a zalohuj)
0A18 C222           2551            clr     FAST            ;
0A1A C223           2552            clr     SLOW            ;
0A1C 12117F         2553            lcall   WRITEPORTS      ; 
0A1F 020D09         2554            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0A22                2555    UP3ERR_CONTINUE:
0A22 200AC1         2556            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2557 +1         CLR_FLOOR_ERR   ERRF34
0A25 C254           2558 +1         clr    ERRF34_U
0A27 C25B           2559 +1         clr    ERRF34_D
0A29 00             2560 +1         nop
                    2562 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0A2A 12107C         2563 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A2D 121118         2564 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A30 300AFA         2565 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 46

0A33 12107C         2566 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2568            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0A36 12117F         2569            lcall   WRITEPORTS      ;
0A39 020A3C         2570            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2571    
0A3C                2572    UP3_MB2:
                    2573            ;--------------------------
                    2574 +1         CFCSS     3, 8, 6, -1, D2
0A3C 633C08         2575 +1         xrl             G,  #8             
                    2576 +1         IF (D2 <> -1)
0A3F E53E           2577 +1             mov   A,  D2         
0A41 623C           2578 +1             xrl   G,  A          
                    2579 +1         ENDIF    
0A43 E53C           2580 +1         mov   A,  G              
                    2581 +2         LCJNE A,  #3, CFCERR     
0A45 B40303         2582 +2         cjne    A, #3, $+6
0A48 020A4E         2583 +2         jmp     $+6
0A4B 021004         2584 +2         ljmp    CFCERR
0A4E 00             2585 +2         nop
                    2586 +1         IF (6 <> -1)
0A4F 753D06         2587 +1             mov         D1, #6     
                    2588 +1         ELSE
                    2589 +1             mov         D1, #32        
                    2590 +1         ENDIF                    
                    2591 +1         IF (-1 <> -1)
                    2592 +1             mov         D2, #-1     
                    2593 +1         ELSE
0A52 753E20         2594 +1             mov         D2, #32        
                    2595 +1         ENDIF                    
0A55 7403           2596 +1         mov       A, #3
0A57 121207         2597 +1         lcall     PRINTCHAR        
                    2599            ;--------------------------
                    2600 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0A5A 12107C         2601 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A5D 121118         2602 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A60 300AFA         2603 +1         jnb     MB2, $-3  ; 
0A63 12107C         2604 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A66                2606    UP3_MB2A:
0A66 121118         2607            lcall   READPORTS       ; nacitanie dat
                    2608 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0A69 200B03         2609 +1         jb      SKRH, $+6
0A6C 020FD1         2610 +1         ljmp    ERR_SKRH
0A6F 00             2611 +1         nop
                    2613 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT ; >>> CHYBA, Vypadla spomalovacia
                                                                                clonka (narazil som na zastavovaciu) <<<
                                                                               
                    2614 +1                                                                                             
                                                                                                                 
                    2615 +1                                                                                             
                                                                                                                 
                    2616 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2617 +1         COUNT    SET    COUNT+1                   
                    2618 +1         
0A70 20091B         2619 +1         jb      MB1, ENDD11
0A73 304404         2620 +1         jnb     PKI4, $+7
0A76 C222           2621 +1         clr     FAST
DEBUG                                                                                                         PAGE 47

0A78 D223           2622 +1         setb    SLOW
0A7A D238           2623 +1         setb    STOPPED         
0A7C D254           2624 +1         setb    ERRF34_U
0A7E D25B           2625 +1         setb    ERRF34_D
0A80 053B           2626 +1         inc     ERRF34_C
0A82 C21C           2627 +1                 clr     PKO4                               
0A84 C22D           2628 +1         clr     PO4U            
0A86 C22D           2629 +1         clr     PO4D              
0A88 12117F         2630 +1                 lcall   WRITEPORTS
0A8B 020A92         2631 +1         ljmp    UP3_MB2ERR
0A8E                2632 +1 ENDD11:
0A8E 00             2633 +1         nop
0A8F 020AA2         2635            jmp     UP3_MB2ERR_CONTINUE
0A92                2636    UP3_MB2ERR:
0A92 C220           2637            clr     UP              ; zastav motor
0A94 D23A           2638            setb    UPOld           ;       (a zalohuj)
0A96 C23B           2639            clr     DOWNOld         ;       (a zalohuj)
0A98 C222           2640            clr     FAST            ;
0A9A C223           2641            clr     SLOW            ;
0A9C 12117F         2642            lcall   WRITEPORTS      ; 
0A9F 020D09         2643            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0AA2                2644    UP3_MB2ERR_CONTINUE:
0AA2 200AC1         2645            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2646 +1         CLR_FLOOR_ERR   ERRF34      
0AA5 C254           2647 +1         clr    ERRF34_U
0AA7 C25B           2648 +1         clr    ERRF34_D
0AA9 00             2649 +1         nop
                    2651            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0AAA 12117F         2652            lcall   WRITEPORTS      ;
                    2653 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0AAD 12107C         2654 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AB0 121118         2655 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AB3 300AFA         2656 +1         jnb     MB2, $-3  ; 
0AB6 12107C         2657 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2659    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2660    ;        anl     A, #00010000b ;-;
                    2661    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0AB9 D223           2662            setb    SLOW            ;       Ak ano, spomalme
0ABB C222           2663            clr     FAST            ; 
0ABD 12117F         2664            lcall   WRITEPORTS      ;
0AC0 020AC3         2665            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2666    
                    2667    
0AC3                2668    UP3_MB1:
                    2669            ;--------------------------
                    2670 +1         CFCSS     5, 6, 0, -1, -1
0AC3 633C06         2671 +1         xrl             G,  #6             
                    2672 +1         IF (-1 <> -1)
                    2673 +1             mov   A,  -1         
                    2674 +1             xrl   G,  A          
                    2675 +1         ENDIF    
0AC6 E53C           2676 +1         mov   A,  G              
                    2677 +2         LCJNE A,  #5, CFCERR     
0AC8 B40503         2678 +2         cjne    A, #5, $+6
0ACB 020AD1         2679 +2         jmp     $+6
0ACE 021004         2680 +2         ljmp    CFCERR
0AD1 00             2681 +2         nop
DEBUG                                                                                                         PAGE 48

                    2682 +1         IF (0 <> -1)
0AD2 753D00         2683 +1             mov         D1, #0     
                    2684 +1         ELSE
                    2685 +1             mov         D1, #32        
                    2686 +1         ENDIF                    
                    2687 +1         IF (-1 <> -1)
                    2688 +1             mov         D2, #-1     
                    2689 +1         ELSE
0AD5 753E20         2690 +1             mov         D2, #32        
                    2691 +1         ENDIF                    
0AD8 7405           2692 +1         mov       A, #5
0ADA 121207         2693 +1         lcall     PRINTCHAR        
                    2695            ;--------------------------
                    2696 +1         ZAKMITC MB2
0ADD 12107C         2697 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AE0 121118         2698 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AE3 300AFA         2699 +1         jnb     MB2, $-3  ; 
0AE6 12107C         2700 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AE9 121118         2702    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0AEC 300907         2703            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0AEF 200BF7         2704            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0AF2 D254           2705            setb    ERRF4_U
0AF4 0538           2706            inc     ERRF4_C
                    2707    ;        jmp     U3_MB1C 
                    2708    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2709    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0AF6 C238           2710    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0AF8 C220           2711            clr     UP              ; zastav motor
0AFA D23A           2712            setb    UPOld           ;       (a zalohuj)
0AFC C23B           2713            clr     DOWNOld         ;       (a zalohuj)
0AFE C222           2714            clr     FAST            ; 
0B00 12117F         2715            lcall   WRITEPORTS      ; 
0B03 020D09         2716            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2717    
                    2718    
0B06                2719    DOWN3:
                    2720            ;--------------------------
                    2721 +1         CFCSS     27, 2, 22, 10, D2
0B06 633C02         2722 +1         xrl             G,  #2             
                    2723 +1         IF (D2 <> -1)
0B09 E53E           2724 +1             mov   A,  D2         
0B0B 623C           2725 +1             xrl   G,  A          
                    2726 +1         ENDIF    
0B0D E53C           2727 +1         mov   A,  G              
                    2728 +2         LCJNE A,  #27, CFCERR     
0B0F B41B03         2729 +2         cjne    A, #27, $+6
0B12 020B18         2730 +2         jmp     $+6
0B15 021004         2731 +2         ljmp    CFCERR
0B18 00             2732 +2         nop
                    2733 +1         IF (22 <> -1)
0B19 753D16         2734 +1             mov         D1, #22     
                    2735 +1         ELSE
                    2736 +1             mov         D1, #32        
                    2737 +1         ENDIF                    
DEBUG                                                                                                         PAGE 49

                    2738 +1         IF (10 <> -1)
0B1C 753E0A         2739 +1             mov         D2, #10     
                    2740 +1         ELSE
                    2741 +1             mov         D2, #32        
                    2742 +1         ENDIF                    
0B1F 741B           2743 +1         mov       A, #27
0B21 121207         2744 +1         lcall     PRINTCHAR        
                    2746            ;--------------------------
                    2747 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0B24 53240F         2748 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0B27 D226           2749 +1         setb    FLED3
0B29 12117F         2750 +1         lcall   WRITEPORTS
                    2752 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0B2C 12107C         2753 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B2F 121118         2754 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B32 3009FA         2755 +1         jnb     MB1, $-3  ; 
0B35 12107C         2756 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B38 121118         2758    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2759 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B3B 200C03         2760 +1         jb      SKRD, $+6
0B3E 020FB8         2761 +1         ljmp    ERR_SKRD
0B41 00             2762 +1         nop
                    2764 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie c
                                                                               lonky (narazil som na zastavovaciu) <<<
                    2765 +1                                                                                             
                                                                                                                 
                    2766 +1                                                                                             
                                                                                                                 
                    2767 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2768 +1         COUNT    SET    COUNT+1                   
                    2769 +1         
0B42 20091B         2770 +1         jb      MB1, ENDD12
0B45 304204         2771 +1         jnb     PKI2, $+7
0B48 C222           2772 +1         clr     FAST
0B4A D223           2773 +1         setb    SLOW
0B4C D238           2774 +1         setb    STOPPED         
0B4E D253           2775 +1         setb    ERRF23_U
0B50 D25A           2776 +1         setb    ERRF23_D
0B52 053A           2777 +1         inc     ERRF23_C
0B54 C21A           2778 +1                 clr     PKO2                               
0B56 C22A           2779 +1         clr     PO2U            
0B58 C229           2780 +1         clr     PO2D              
0B5A 12117F         2781 +1                 lcall   WRITEPORTS
0B5D 020729         2782 +1         ljmp    DOWN2
0B60                2783 +1 ENDD12:
0B60 00             2784 +1         nop
0B61 200AD4         2786            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    2787 +1         CLR_FLOOR_ERR   ERRF23
0B64 C253           2788 +1         clr    ERRF23_U
0B66 C25A           2789 +1         clr    ERRF23_D
0B68 00             2790 +1         nop
                    2792 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0B69 12107C         2793 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B6C 121118         2794 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B6F 300AFA         2795 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 50

0B72 12107C         2796 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2798            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0B75 12117F         2799            lcall   WRITEPORTS      ;
0B78 020B7B         2800            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2801    
                    2802    
0B7B                2803    DOWN3_MB2:
                    2804            ;--------------------------
                    2805 +1         CFCSS     9, 4, -1, 24, D1
0B7B 633C04         2806 +1         xrl             G,  #4             
                    2807 +1         IF (D1 <> -1)
0B7E E53D           2808 +1             mov   A,  D1         
0B80 623C           2809 +1             xrl   G,  A          
                    2810 +1         ENDIF    
0B82 E53C           2811 +1         mov   A,  G              
                    2812 +2         LCJNE A,  #9, CFCERR     
0B84 B40903         2813 +2         cjne    A, #9, $+6
0B87 020B8D         2814 +2         jmp     $+6
0B8A 021004         2815 +2         ljmp    CFCERR
0B8D 00             2816 +2         nop
                    2817 +1         IF (-1 <> -1)
                    2818 +1             mov         D1, #-1     
                    2819 +1         ELSE
0B8E 753D20         2820 +1             mov         D1, #32        
                    2821 +1         ENDIF                    
                    2822 +1         IF (24 <> -1)
0B91 753E18         2823 +1             mov         D2, #24     
                    2824 +1         ELSE
                    2825 +1             mov         D2, #32        
                    2826 +1         ENDIF                    
0B94 7409           2827 +1         mov       A, #9
0B96 121207         2828 +1         lcall     PRINTCHAR        
                    2830            ;--------------------------
                    2831 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0B99 12107C         2832 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B9C 121118         2833 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B9F 300AFA         2834 +1         jnb     MB2, $-3  ; 
0BA2 12107C         2835 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0BA5                2837    DOWN3_MB2A:
0BA5 121118         2838            lcall   READPORTS       ; nacitanie dat
                    2839 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0BA8 200C03         2840 +1         jb      SKRD, $+6
0BAB 020FB8         2841 +1         ljmp    ERR_SKRD
0BAE 00             2842 +1         nop
                    2844 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    2845 +1                                                                                             
                                                                                                                 
                    2846 +1                                                                                             
                                                                                                                 
                    2847 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              2848 +1         COUNT    SET    COUNT+1                   
                    2849 +1         
0BAF 20091B         2850 +1         jb      MB1, ENDD13
0BB2 304204         2851 +1         jnb     PKI2, $+7
0BB5 C222           2852 +1         clr     FAST
DEBUG                                                                                                         PAGE 51

0BB7 D223           2853 +1         setb    SLOW
0BB9 D238           2854 +1         setb    STOPPED         
0BBB D253           2855 +1         setb    ERRF23_U
0BBD D25A           2856 +1         setb    ERRF23_D
0BBF 053A           2857 +1         inc     ERRF23_C
0BC1 C21A           2858 +1                 clr     PKO2                               
0BC3 C22A           2859 +1         clr     PO2U            
0BC5 C229           2860 +1         clr     PO2D              
0BC7 12117F         2861 +1                 lcall   WRITEPORTS
0BCA 020729         2862 +1         ljmp    DOWN2
0BCD                2863 +1 ENDD13:
0BCD 00             2864 +1         nop
0BCE 200AD4         2866            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2867 +1         CLR_FLOOR_ERR   ERRF23      
0BD1 C253           2868 +1         clr    ERRF23_U
0BD3 C25A           2869 +1         clr    ERRF23_D
0BD5 00             2870 +1         nop
                    2872            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0BD6 12117F         2873            lcall   WRITEPORTS      ;
                    2874 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0BD9 12107C         2875 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BDC 121118         2876 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BDF 300AFA         2877 +1         jnb     MB2, $-3  ; 
0BE2 12107C         2878 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2880    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2881    ;        anl     A, #00000100b ;-;
                    2882    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0BE5                2883    DOWN3_MB2_CFC:
                    2884            ;--------------------------
                    2885 +1         CFCSS     16, 25, -1, -1, -1
0BE5 633C19         2886 +1         xrl             G,  #25             
                    2887 +1         IF (-1 <> -1)
                    2888 +1             mov   A,  -1         
                    2889 +1             xrl   G,  A          
                    2890 +1         ENDIF    
0BE8 E53C           2891 +1         mov   A,  G              
                    2892 +2         LCJNE A,  #16, CFCERR     
0BEA B41003         2893 +2         cjne    A, #16, $+6
0BED 020BF3         2894 +2         jmp     $+6
0BF0 021004         2895 +2         ljmp    CFCERR
0BF3 00             2896 +2         nop
                    2897 +1         IF (-1 <> -1)
                    2898 +1             mov         D1, #-1     
                    2899 +1         ELSE
0BF4 753D20         2900 +1             mov         D1, #32        
                    2901 +1         ENDIF                    
                    2902 +1         IF (-1 <> -1)
                    2903 +1             mov         D2, #-1     
                    2904 +1         ELSE
0BF7 753E20         2905 +1             mov         D2, #32        
                    2906 +1         ENDIF                    
0BFA 7410           2907 +1         mov       A, #16
0BFC 121207         2908 +1         lcall     PRINTCHAR        
                    2910            ;--------------------------
                    2911 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    2912 +1                                         
DEBUG                                                                                                         PAGE 52

0BFF C3             2913 +1         clr     C                       
0C00 7400           2914 +1         mov     A, #0h                  
0C02 7211           2915 +1         orl     C, PI2D      
0C04 B00E           2916 +1         anl     C, /DPZK                
0C06 7242           2917 +1         orl     C, PKI2          
0C08 B05A           2918 +1         anl     C, /ERRF2_D 
0C0A 720F           2919 +1         orl     C, DPK                  
0C0C 7238           2920 +1         orl     C, STOPPED              
0C0E 3400           2921 +1         addc    A, #0h                  
0C10 7050           2923            jnz     D3_MB2C         ; Ak ano, zastav
                    2924 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0C12 E522           2925 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0C14 33             2926 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0C15 547E           2927 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    2928 +1 
                    2929 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    2930 +2         ANLB    ACC.2, ERRF2_D  ; |
0C17 A2E2           2931 +2         mov   C, ACC.2
0C19 B05A           2932 +2         anl   C, /ERRF2_D
0C1B 92E2           2933 +2         mov   ACC.2, C
                    2934 +2         ANLB    ACC.3, ERRF2_D  ; |
0C1D A2E3           2935 +2         mov   C, ACC.3
0C1F B05A           2936 +2         anl   C, /ERRF2_D
0C21 92E3           2937 +2         mov   ACC.3, C
                    2938 +2         ANLB    ACC.4, ERRF3_D  ; |
0C23 A2E4           2939 +2         mov   C, ACC.4
0C25 B05B           2940 +2         anl   C, /ERRF3_D
0C27 92E4           2941 +2         mov   ACC.4, C
                    2942 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    2943 +1 
0C29 7805           2944 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    2945 +1  ; LL1: 
0C2B 6006           2946 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0C2D C3             2947 +1         clr     C               ; Inak shiftnem o 2
0C2E 33             2948 +1         rlc     A               ;
0C2F C3             2949 +1         clr     C               ;
0C30 33             2950 +1         rlc     A               ;
0C31 D8F8           2951 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    2952 +1 ; LL2:
0C33 E8             2953 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    2955 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0C34 B40203         2956 +1         cjne    A, #2, $+6
0C37 020C3D         2957 +1         jmp     $+6
0C3A 020C6C         2958 +1         ljmp    DOWN3_MB1
0C3D 00             2959 +1         nop
                    2961 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0C3E 7405           2962 +1         mov     A, #5
0C40 C3             2963 +1         clr     C
0C41 9402           2964 +1         subb    A, #2
0C43 F8             2965 +1         mov     R0, A
DEBUG                                                                                                         PAGE 53

0C44 E528           2966 +1         mov     A, INPORTA
0C46 541E           2967 +1         anl     A, #00011110b
0C48 852BF0         2968 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0C4B 53F00C         2969 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0C4E 63F0FF         2970 +1         xrl     B, #0FFH
0C51 55F0           2971 +1         anl     A, B
0C53 C3             2972 +1         clr     C
0C54 33             2973 +1         rlc     A
0C55 C3             2974 +1         clr     C
0C56 33             2975 +1         rlc     A
0C57 C3             2976 +1         clr     C
0C58 33             2977 +1         rlc     A
                    2978 +1 ;LL1   
0C59 C3             2979 +1         clr     C
0C5A 33             2980 +1         rlc     A
0C5B D8FC           2981 +1         djnz    R0, $-2;LL1
0C5D 6003           2983            jz      D3_MB2C         ; |   ak neni zastavujem                  
0C5F 020C6C         2984            ljmp    DOWN3_MB1       ;-; |        
0C62 D223           2985    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0C64 C222           2986            clr     FAST            ; 
0C66 12117F         2987            lcall   WRITEPORTS      ;
0C69 020CB5         2988            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    2989    
                    2990    
0C6C                2991    DOWN3_MB1:    
                    2992            ;--------------------------
                    2993 +1         CFCSS     17, 1, -1, 0, -1
0C6C 633C01         2994 +1         xrl             G,  #1             
                    2995 +1         IF (-1 <> -1)
                    2996 +1             mov   A,  -1         
                    2997 +1             xrl   G,  A          
                    2998 +1         ENDIF    
0C6F E53C           2999 +1         mov   A,  G              
                    3000 +2         LCJNE A,  #17, CFCERR     
0C71 B41103         3001 +2         cjne    A, #17, $+6
0C74 020C7A         3002 +2         jmp     $+6
0C77 021004         3003 +2         ljmp    CFCERR
0C7A 00             3004 +2         nop
                    3005 +1         IF (-1 <> -1)
                    3006 +1             mov         D1, #-1     
                    3007 +1         ELSE
0C7B 753D20         3008 +1             mov         D1, #32        
                    3009 +1         ENDIF                    
                    3010 +1         IF (0 <> -1)
0C7E 753E00         3011 +1             mov         D2, #0     
                    3012 +1         ELSE
                    3013 +1             mov         D2, #32        
                    3014 +1         ENDIF                    
0C81 7411           3015 +1         mov       A, #17
0C83 121207         3016 +1         lcall     PRINTCHAR        
                    3018            ;--------------------------
0C86 121118         3019    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3020 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C89 200C03         3021 +1         jb      SKRD, $+6
0C8C 020FB8         3022 +1         ljmp    ERR_SKRD
0C8F 00             3023 +1         nop
                    3025 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
DEBUG                                                                                                         PAGE 54

                                                                               
                    3026 +1                                                                                             
                                                                                                                 
                    3027 +1                                                                                             
                                                                                                                 
                    3028 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              3029 +1         COUNT    SET    COUNT+1                   
                    3030 +1         
0C90 200A1B         3031 +1         jb      MB2, ENDD14
0C93 304204         3032 +1         jnb     PKI2, $+7
0C96 C222           3033 +1         clr     FAST
0C98 D223           3034 +1         setb    SLOW
0C9A D238           3035 +1         setb    STOPPED         
0C9C D252           3036 +1         setb    ERRF2_U
0C9E D25A           3037 +1         setb    ERRF2_D
0CA0 0536           3038 +1         inc     ERRF2_C
0CA2 C21A           3039 +1                 clr     PKO2                               
0CA4 C22A           3040 +1         clr     PO2U            
0CA6 C229           3041 +1         clr     PO2D              
0CA8 12117F         3042 +1                 lcall   WRITEPORTS
0CAB 0207B0         3043 +1         ljmp    DOWN2_MB2
0CAE                3044 +1 ENDD14:
0CAE 00             3045 +1         nop
0CAF 2009D4         3047            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    3048    ;        CLR_FLOOR_ERR   ERRF2
                    3049    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3050    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    3051    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    3052    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3053    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    3054    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3055    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0CB2 020729         3056            ljmp    DOWN2         ;-; |        
                    3057    ;D3_MB1C: clr     DOWN            ; zastav motor
                    3058    ;        setb    DOWNOld         ;       (a zalohuj)
                    3059    ;        clr     UPOld           ;       (a zalohuj)
                    3060    ;        clr     FAST            ; 
                    3061    ;        lcall   WRITEPORTS      ; 
                    3062    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0CB5                3063    DOWN3_STOP: 
                    3064            ;--------------------------
                    3065 +1         CFCSS     21, 5, 0, 4, -1
0CB5 633C05         3066 +1         xrl             G,  #5             
                    3067 +1         IF (-1 <> -1)
                    3068 +1             mov   A,  -1         
                    3069 +1             xrl   G,  A          
                    3070 +1         ENDIF    
0CB8 E53C           3071 +1         mov   A,  G              
                    3072 +2         LCJNE A,  #21, CFCERR     
0CBA B41503         3073 +2         cjne    A, #21, $+6
0CBD 020CC3         3074 +2         jmp     $+6
0CC0 021004         3075 +2         ljmp    CFCERR
0CC3 00             3076 +2         nop
                    3077 +1         IF (0 <> -1)
DEBUG                                                                                                         PAGE 55

0CC4 753D00         3078 +1             mov         D1, #0     
                    3079 +1         ELSE
                    3080 +1             mov         D1, #32        
                    3081 +1         ENDIF                    
                    3082 +1         IF (4 <> -1)
0CC7 753E04         3083 +1             mov         D2, #4     
                    3084 +1         ELSE
                    3085 +1             mov         D2, #32        
                    3086 +1         ENDIF                    
0CCA 7415           3087 +1         mov       A, #21
0CCC 121207         3088 +1         lcall     PRINTCHAR        
                    3090            ;--------------------------
0CCF 121118         3091    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3092 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0CD2 200C03         3093 +1         jb      SKRD, $+6
0CD5 020FB8         3094 +1         ljmp    ERR_SKRD
0CD8 00             3095 +1         nop
                    3097 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia c
                                                                               lonka (narazil som na spomalovaciu) <<<
                    3098 +1                                                                                             
                                                                                                                 
                    3099 +1                                                                                             
                                                                                                                 
                    3100 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              3101 +1         COUNT    SET    COUNT+1                   
                    3102 +1         
0CD9 200A1B         3103 +1         jb      MB2, ENDD15
0CDC 304204         3104 +1         jnb     PKI2, $+7
0CDF C222           3105 +1         clr     FAST
0CE1 D223           3106 +1         setb    SLOW
0CE3 D238           3107 +1         setb    STOPPED         
0CE5 D252           3108 +1         setb    ERRF2_U
0CE7 D25A           3109 +1         setb    ERRF2_D
0CE9 0536           3110 +1         inc     ERRF2_C
0CEB C21A           3111 +1                 clr     PKO2                               
0CED C22A           3112 +1         clr     PO2U            
0CEF C229           3113 +1         clr     PO2D              
0CF1 12117F         3114 +1                 lcall   WRITEPORTS
0CF4 0207B0         3115 +1         ljmp    DOWN2_MB2
0CF7                3116 +1 ENDD15:
0CF7 00             3117 +1         nop
0CF8 2009D4         3119            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    3120    ;        CLR_FLOOR_ERR   ERRF2     
0CFB C221           3121            clr     DOWN            ; zastav motor
0CFD D23B           3122            setb    DOWNOld         ;       (a zalohuj)
0CFF C23A           3123            clr     UPOld           ;       (a zalohuj)
0D01 C222           3124            clr     FAST            ; 
0D03 12117F         3125            lcall   WRITEPORTS      ; 
0D06 0203D9         3126            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    3127    
                    3128            
                    3129    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    3130    
0D09                3131    FLOOR4:
                    3132            ;--------------------------
                    3133 +1         CFCSS     19, 22, -1, -1, D1
0D09 633C16         3134 +1         xrl             G,  #22             
DEBUG                                                                                                         PAGE 56

                    3135 +1         IF (D1 <> -1)
0D0C E53D           3136 +1             mov   A,  D1         
0D0E 623C           3137 +1             xrl   G,  A          
                    3138 +1         ENDIF    
0D10 E53C           3139 +1         mov   A,  G              
                    3140 +2         LCJNE A,  #19, CFCERR     
0D12 B41303         3141 +2         cjne    A, #19, $+6
0D15 020D1B         3142 +2         jmp     $+6
0D18 021004         3143 +2         ljmp    CFCERR
0D1B 00             3144 +2         nop
                    3145 +1         IF (-1 <> -1)
                    3146 +1             mov         D1, #-1     
                    3147 +1         ELSE
0D1C 753D20         3148 +1             mov         D1, #32        
                    3149 +1         ENDIF                    
                    3150 +1         IF (-1 <> -1)
                    3151 +1             mov         D2, #-1     
                    3152 +1         ELSE
0D1F 753E20         3153 +1             mov         D2, #32        
                    3154 +1         ENDIF                    
0D22 7413           3155 +1         mov       A, #19
0D24 121207         3156 +1         lcall     PRINTCHAR        
                    3158            ;--------------------------
                    3159 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0D27 53240F         3160 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0D2A D227           3161 +1         setb    FLED4
0D2C 12117F         3162 +1         lcall   WRITEPORTS
0D2F C238           3164            clr     STOPPED
                    3165 +1         TIMER2  60              ; (Timer - 3s)
0D31 752D3C         3166 +1            mov           T2_C, #60                              
0D34 C262           3167 +1                  clr       T2_F                                  
0D36 D2CA           3168 +1                  setb      TR2                                             
                    3170 +1         ROZSVIET_SMER_LED
0D38 D22F           3171 +1         setb    LEDU            ;
0D3A D22E           3172 +1         setb    LEDD            ;
0D3C 12117F         3173 +1         lcall   WRITEPORTS      ;
0D3F 121118         3175    F4S:    lcall   READPORTS     ;-; nacitanie dat
                    3176 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0D42 200A03         3177 +1         jb      MB2, $+6
0D45 020FEA         3178 +1         ljmp    ERRFLOOR
0D48 00             3179 +1         nop
                    3181 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0D49 200C03         3182 +1         jb      SKRD, $+6
0D4C 020FEA         3183 +1         ljmp    ERRFLOOR
0D4F 00             3184 +1         nop
                    3186 +1         ZRUS_POSCH 4
0D50 C21C           3187 +1         clr     PKO4       
0D52 C22D           3188 +1         clr     PO4U      
0D54 C22D           3189 +1         clr     PO4D      
0D56 12117F         3190 +1         lcall   WRITEPORTS
0D59 3062E3         3192            jnb                T2_F, F4S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    3193 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0D5C A20D           3194 +1         mov      C, DP          
0D5E 720E           3195 +1         orl      C, DPZK        
DEBUG                                                                                                         PAGE 57

0D60 720F           3196 +1         orl      C, DPK         
0D62 9218           3197 +1         mov      KS, C          
0D64 922F           3198 +1         mov      LEDU, C        
0D66 922E           3199 +1         mov      LEDD, C        
0D68 12117F         3200 +1         lcall   WRITEPORTS      
0D6B 200FD1         3202            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0D6E 3045CE         3203            jnb     DOORCLSD, F4S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    3204 +1         JE_VYBRATE_POSCHODIE F4S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0D71 A20D           3205 +1         mov      C, DP         
0D73 720E           3206 +1         orl      C, DPZK        
0D75 720F           3207 +1         orl      C, DPK         
0D77 5006           3208 +1         jnc      $+8            
0D79 E528           3209 +1         mov      A, INPORTA     
0D7B 541E           3210 +1         anl      A, #00011110b  
0D7D 60C0           3211 +1         jz       F4S       
                    3213            ;clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
                    3214            ;clr     PO4            ;
                    3215            ;lcall   WRITEPORTS      ;
                    3216            ;jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0D7F E528           3217            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0D81 852BF0         3218            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0D84 53F00C         3219            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0D87 63F0FF         3220            xrl     B, #0FFH        ; | |
0D8A 55F0           3221            anl     A, B            ; | |
0D8C 540E           3222            anl     A, #00001110b ;-;
0D8E 701A           3223            jnz     F4OK          ;-; ak ano, ideme na to
0D90 E522           3224            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0D92 541F           3225            anl     A, #00011111b ;-;
                    3226            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    3227 +1         ANLB    ACC.1, ERRF2_D  ; |
0D94 A2E1           3228 +1         mov   C, ACC.1
0D96 B05A           3229 +1         anl   C, /ERRF2_D
0D98 92E1           3230 +1         mov   ACC.1, C
                    3232 +1         ANLB    ACC.2, ERRF2_D  ; |
0D9A A2E2           3233 +1         mov   C, ACC.2
0D9C B05A           3234 +1         anl   C, /ERRF2_D
0D9E 92E2           3235 +1         mov   ACC.2, C
                    3237 +1         ANLB    ACC.3, ERRF3_D  ; |
0DA0 A2E3           3238 +1         mov   C, ACC.3
0DA2 B05B           3239 +1         anl   C, /ERRF3_D
0DA4 92E3           3240 +1         mov   ACC.3, C
                    3242            ;ANLB    ACC.4, ERRF3_D  ; |
0DA6 7002           3243            jnz     F4OK          ;-; ak ano, ideme na to
0DA8 8095           3244            jmp     F4S             ; Nemam sa kde hnut, opakujem
                    3245 +1 F4OK:   SET_DOWN                  ; rychly pohyb dole
0DAA C220           3246 +1         clr     UP
0DAC D221           3247 +1         setb    DOWN
0DAE C22F           3248 +1         clr     LEDU
0DB0 D22E           3249 +1         setb    LEDD 
                    3251 +1         SET_FAST                ; 
0DB2 D222           3252 +1         setb     FAST
0DB4 C223           3253 +1         clr      SLOW
0DB6 D218           3254 +1         setb     KS      
0DB8 12117F         3256            lcall   WRITEPORTS      ; 
0DBB 020DBE         3257            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
DEBUG                                                                                                         PAGE 58

                    3258    
                    3259    
0DBE                3260    DOWN4:
                    3261            ;--------------------------
                    3262 +1         CFCSS     22, 5, -1, 15, -1
0DBE 633C05         3263 +1         xrl             G,  #5             
                    3264 +1         IF (-1 <> -1)
                    3265 +1             mov   A,  -1         
                    3266 +1             xrl   G,  A          
                    3267 +1         ENDIF    
0DC1 E53C           3268 +1         mov   A,  G              
                    3269 +2         LCJNE A,  #22, CFCERR     
0DC3 B41603         3270 +2         cjne    A, #22, $+6
0DC6 020DCC         3271 +2         jmp     $+6
0DC9 021004         3272 +2         ljmp    CFCERR
0DCC 00             3273 +2         nop
                    3274 +1         IF (-1 <> -1)
                    3275 +1             mov         D1, #-1     
                    3276 +1         ELSE
0DCD 753D20         3277 +1             mov         D1, #32        
                    3278 +1         ENDIF                    
                    3279 +1         IF (15 <> -1)
0DD0 753E0F         3280 +1             mov         D2, #15     
                    3281 +1         ELSE
                    3282 +1             mov         D2, #32        
                    3283 +1         ENDIF                    
0DD3 7416           3284 +1         mov       A, #22
0DD5 121207         3285 +1         lcall     PRINTCHAR        
                    3287            ;--------------------------
                    3288 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0DD8 53240F         3289 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0DDB D227           3290 +1         setb    FLED4
0DDD 12117F         3291 +1         lcall   WRITEPORTS
                    3293 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0DE0 12107C         3294 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0DE3 121118         3295 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0DE6 3009FA         3296 +1         jnb     MB1, $-3  ; 
0DE9 12107C         3297 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0DEC 121118         3299    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    3300 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0DEF 200C03         3301 +1         jb      SKRD, $+6
0DF2 020FB8         3302 +1         ljmp    ERR_SKRD
0DF5 00             3303 +1         nop
                    3305 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    3306 +1                                                                                             
                                                                                                                 
                    3307 +1                                                                                             
                                                                                                                 
                    3308 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              3309 +1         COUNT    SET    COUNT+1                   
                    3310 +1         
0DF6 20091B         3311 +1         jb      MB1, ENDD16
0DF9 304304         3312 +1         jnb     PKI3, $+7
DEBUG                                                                                                         PAGE 59

0DFC C222           3313 +1         clr     FAST
0DFE D223           3314 +1         setb    SLOW
0E00 D238           3315 +1         setb    STOPPED         
0E02 D254           3316 +1         setb    ERRF34_U
0E04 D25B           3317 +1         setb    ERRF34_D
0E06 053B           3318 +1         inc     ERRF34_C
0E08 C21B           3319 +1                 clr     PKO3                               
0E0A C22C           3320 +1         clr     PO3U            
0E0C C22B           3321 +1         clr     PO3D              
0E0E 12117F         3322 +1                 lcall   WRITEPORTS
0E11 020B06         3323 +1         ljmp    DOWN3
0E14                3324 +1 ENDD16:
0E14 00             3325 +1         nop
0E15 200AD4         3327            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    3328 +1         CLR_FLOOR_ERR   ERRF34
0E18 C254           3329 +1         clr    ERRF34_U
0E1A C25B           3330 +1         clr    ERRF34_D
0E1C 00             3331 +1         nop
                    3333 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0E1D 12107C         3334 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E20 121118         3335 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E23 300AFA         3336 +1         jnb     MB2, $-3  ; 
0E26 12107C         3337 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3339            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0E29 12117F         3340            lcall   WRITEPORTS      ;
0E2C 020E2F         3341            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    3342            
                    3343            
0E2F                3344    DOWN4_MB2:
                    3345            ;--------------------------
                    3346 +1         CFCSS     23, 1, -1, 14, -1
0E2F 633C01         3347 +1         xrl             G,  #1             
                    3348 +1         IF (-1 <> -1)
                    3349 +1             mov   A,  -1         
                    3350 +1             xrl   G,  A          
                    3351 +1         ENDIF    
0E32 E53C           3352 +1         mov   A,  G              
                    3353 +2         LCJNE A,  #23, CFCERR     
0E34 B41703         3354 +2         cjne    A, #23, $+6
0E37 020E3D         3355 +2         jmp     $+6
0E3A 021004         3356 +2         ljmp    CFCERR
0E3D 00             3357 +2         nop
                    3358 +1         IF (-1 <> -1)
                    3359 +1             mov         D1, #-1     
                    3360 +1         ELSE
0E3E 753D20         3361 +1             mov         D1, #32        
                    3362 +1         ENDIF                    
                    3363 +1         IF (14 <> -1)
0E41 753E0E         3364 +1             mov         D2, #14     
                    3365 +1         ELSE
                    3366 +1             mov         D2, #32        
                    3367 +1         ENDIF                    
0E44 7417           3368 +1         mov       A, #23
0E46 121207         3369 +1         lcall     PRINTCHAR        
                    3371            ;--------------------------
                    3372 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0E49 12107C         3373 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
DEBUG                                                                                                         PAGE 60

0E4C 121118         3374 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E4F 300AFA         3375 +1         jnb     MB2, $-3  ; 
0E52 12107C         3376 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E55                3378    DOWN4_MB2A:
0E55 121118         3379            lcall   READPORTS       ; nacitanie dat
                    3380 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E58 200C03         3381 +1         jb      SKRD, $+6
0E5B 020FB8         3382 +1         ljmp    ERR_SKRD
0E5E 00             3383 +1         nop
                    3385 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadla spomalovacia c
                                                                               lonka (narazil som na zastavovaciu) <<<
                    3386 +1                                                                                             
                                                                                                                 
                    3387 +1                                                                                             
                                                                                                                 
                    3388 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3389 +1         COUNT    SET    COUNT+1                   
                    3390 +1         
0E5F 20091B         3391 +1         jb      MB1, ENDD17
0E62 304304         3392 +1         jnb     PKI3, $+7
0E65 C222           3393 +1         clr     FAST
0E67 D223           3394 +1         setb    SLOW
0E69 D238           3395 +1         setb    STOPPED         
0E6B D254           3396 +1         setb    ERRF34_U
0E6D D25B           3397 +1         setb    ERRF34_D
0E6F 053B           3398 +1         inc     ERRF34_C
0E71 C21B           3399 +1                 clr     PKO3                               
0E73 C22C           3400 +1         clr     PO3U            
0E75 C22B           3401 +1         clr     PO3D              
0E77 12117F         3402 +1                 lcall   WRITEPORTS
0E7A 020B06         3403 +1         ljmp    DOWN3
0E7D                3404 +1 ENDD17:
0E7D 00             3405 +1         nop
0E7E 200AD4         3407            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3408 +1         CLR_FLOOR_ERR   ERRF34       
0E81 C254           3409 +1         clr    ERRF34_U
0E83 C25B           3410 +1         clr    ERRF34_D
0E85 00             3411 +1         nop
                    3413            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0E86 12117F         3414            lcall   WRITEPORTS      ;
                    3415 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0E89 12107C         3416 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E8C 121118         3417 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E8F 300AFA         3418 +1         jnb     MB2, $-3  ; 
0E92 12107C         3419 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3421    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3422    ;        anl     A, #00001000b ;-;
                    3423    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0E95                3424    DOWN4_MB2_CFC:
                    3425            ;--------------------------
                    3426 +1         CFCSS     7, 16, -1, -1, -1
0E95 633C10         3427 +1         xrl             G,  #16             
                    3428 +1         IF (-1 <> -1)
                    3429 +1             mov   A,  -1         
                    3430 +1             xrl   G,  A          
                    3431 +1         ENDIF    
DEBUG                                                                                                         PAGE 61

0E98 E53C           3432 +1         mov   A,  G              
                    3433 +2         LCJNE A,  #7, CFCERR     
0E9A B40703         3434 +2         cjne    A, #7, $+6
0E9D 020EA3         3435 +2         jmp     $+6
0EA0 021004         3436 +2         ljmp    CFCERR
0EA3 00             3437 +2         nop
                    3438 +1         IF (-1 <> -1)
                    3439 +1             mov         D1, #-1     
                    3440 +1         ELSE
0EA4 753D20         3441 +1             mov         D1, #32        
                    3442 +1         ENDIF                    
                    3443 +1         IF (-1 <> -1)
                    3444 +1             mov         D2, #-1     
                    3445 +1         ELSE
0EA7 753E20         3446 +1             mov         D2, #32        
                    3447 +1         ENDIF                    
0EAA 7407           3448 +1         mov       A, #7
0EAC 121207         3449 +1         lcall     PRINTCHAR        
                    3451            ;--------------------------
                    3452 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3453 +1                                         
0EAF C3             3454 +1         clr     C                       
0EB0 7400           3455 +1         mov     A, #0h                  
0EB2 7213           3456 +1         orl     C, PI3D      
0EB4 B00E           3457 +1         anl     C, /DPZK                
0EB6 7243           3458 +1         orl     C, PKI3          
0EB8 B05B           3459 +1         anl     C, /ERRF3_D 
0EBA 720F           3460 +1         orl     C, DPK                  
0EBC 7238           3461 +1         orl     C, STOPPED              
0EBE 3400           3462 +1         addc    A, #0h                  
0EC0 7050           3464            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3465 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0EC2 E522           3466 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0EC4 33             3467 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0EC5 547E           3468 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3469 +1 
                    3470 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3471 +2         ANLB    ACC.2, ERRF2_D  ; |
0EC7 A2E2           3472 +2         mov   C, ACC.2
0EC9 B05A           3473 +2         anl   C, /ERRF2_D
0ECB 92E2           3474 +2         mov   ACC.2, C
                    3475 +2         ANLB    ACC.3, ERRF2_D  ; |
0ECD A2E3           3476 +2         mov   C, ACC.3
0ECF B05A           3477 +2         anl   C, /ERRF2_D
0ED1 92E3           3478 +2         mov   ACC.3, C
                    3479 +2         ANLB    ACC.4, ERRF3_D  ; |
0ED3 A2E4           3480 +2         mov   C, ACC.4
0ED5 B05B           3481 +2         anl   C, /ERRF3_D
0ED7 92E4           3482 +2         mov   ACC.4, C
                    3483 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3484 +1 
0ED9 7805           3485 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
DEBUG                                                                                                         PAGE 62

                    3486 +1  ; LL1: 
0EDB 6006           3487 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0EDD C3             3488 +1         clr     C               ; Inak shiftnem o 2
0EDE 33             3489 +1         rlc     A               ;
0EDF C3             3490 +1         clr     C               ;
0EE0 33             3491 +1         rlc     A               ;
0EE1 D8F8           3492 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3493 +1 ; LL2:
0EE3 E8             3494 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3496 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0EE4 B40303         3497 +1         cjne    A, #3, $+6
0EE7 020EED         3498 +1         jmp     $+6
0EEA 020F1C         3499 +1         ljmp    DOWN4_MB1
0EED 00             3500 +1         nop
                    3502 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0EEE 7405           3503 +1         mov     A, #5
0EF0 C3             3504 +1         clr     C
0EF1 9403           3505 +1         subb    A, #3
0EF3 F8             3506 +1         mov     R0, A
0EF4 E528           3507 +1         mov     A, INPORTA
0EF6 541E           3508 +1         anl     A, #00011110b
0EF8 852BF0         3509 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0EFB 53F00C         3510 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0EFE 63F0FF         3511 +1         xrl     B, #0FFH
0F01 55F0           3512 +1         anl     A, B
0F03 C3             3513 +1         clr     C
0F04 33             3514 +1         rlc     A
0F05 C3             3515 +1         clr     C
0F06 33             3516 +1         rlc     A
0F07 C3             3517 +1         clr     C
0F08 33             3518 +1         rlc     A
                    3519 +1 ;LL1   
0F09 C3             3520 +1         clr     C
0F0A 33             3521 +1         rlc     A
0F0B D8FC           3522 +1         djnz    R0, $-2;LL1
0F0D 6003           3524            jz      D4_MB2C         ; |   ak neni zastavujem          
0F0F 020F1C         3525            ljmp    DOWN4_MB1       ;-; |       
0F12 D223           3526    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0F14 C222           3527            clr     FAST            ; 
0F16 12117F         3528            lcall   WRITEPORTS      ;
0F19 020F65         3529            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3530            
                    3531            
0F1C                3532    DOWN4_MB1:    
                    3533            ;--------------------------
                    3534 +1         CFCSS     25, 30, 20, 0, -1
0F1C 633C1E         3535 +1         xrl             G,  #30             
                    3536 +1         IF (-1 <> -1)
                    3537 +1             mov   A,  -1         
                    3538 +1             xrl   G,  A          
                    3539 +1         ENDIF    
0F1F E53C           3540 +1         mov   A,  G              
                    3541 +2         LCJNE A,  #25, CFCERR     
0F21 B41903         3542 +2         cjne    A, #25, $+6
0F24 020F2A         3543 +2         jmp     $+6
DEBUG                                                                                                         PAGE 63

0F27 021004         3544 +2         ljmp    CFCERR
0F2A 00             3545 +2         nop
                    3546 +1         IF (20 <> -1)
0F2B 753D14         3547 +1             mov         D1, #20     
                    3548 +1         ELSE
                    3549 +1             mov         D1, #32        
                    3550 +1         ENDIF                    
                    3551 +1         IF (0 <> -1)
0F2E 753E00         3552 +1             mov         D2, #0     
                    3553 +1         ELSE
                    3554 +1             mov         D2, #32        
                    3555 +1         ENDIF                    
0F31 7419           3556 +1         mov       A, #25
0F33 121207         3557 +1         lcall     PRINTCHAR        
                    3559            ;--------------------------
0F36 121118         3560    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3561 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0F39 200C03         3562 +1         jb      SKRD, $+6
0F3C 020FB8         3563 +1         ljmp    ERR_SKRD
0F3F 00             3564 +1         nop
                    3566 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3567 +1                                                                                             
                                                                                                                 
                    3568 +1                                                                                             
                                                                                                                 
                    3569 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3570 +1         COUNT    SET    COUNT+1                   
                    3571 +1         
0F40 200A1B         3572 +1         jb      MB2, ENDD18
0F43 304304         3573 +1         jnb     PKI3, $+7
0F46 C222           3574 +1         clr     FAST
0F48 D223           3575 +1         setb    SLOW
0F4A D238           3576 +1         setb    STOPPED         
0F4C D253           3577 +1         setb    ERRF3_U
0F4E D25B           3578 +1         setb    ERRF3_D
0F50 0537           3579 +1         inc     ERRF3_C
0F52 C21B           3580 +1                 clr     PKO3                               
0F54 C22C           3581 +1         clr     PO3U            
0F56 C22B           3582 +1         clr     PO3D              
0F58 12117F         3583 +1                 lcall   WRITEPORTS
0F5B 020B7B         3584 +1         ljmp    DOWN3_MB2
0F5E                3585 +1 ENDD18:
0F5E 00             3586 +1         nop
0F5F 2009D4         3588            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3589    ;        CLR_FLOOR_ERR   ERRF3
                    3590    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3591    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3592    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3593    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3594    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3595    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3596    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
DEBUG                                                                                                         PAGE 64

0F62 020B06         3597            ljmp    DOWN3         ;-; |       
                    3598    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3599    ;        setb    DOWNOld         ;       (a zalohuj)
                    3600    ;        clr     UPOld           ;       (a zalohuj)
                    3601    ;        clr     FAST            ; 
                    3602    ;        lcall   WRITEPORTS      ; 
                    3603    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3604    
                    3605                    
0F65                3606    DOWN4_STOP:    
                    3607            ;--------------------------
                    3608 +1         CFCSS     13, 10, 0, -1, -1
0F65 633C0A         3609 +1         xrl             G,  #10             
                    3610 +1         IF (-1 <> -1)
                    3611 +1             mov   A,  -1         
                    3612 +1             xrl   G,  A          
                    3613 +1         ENDIF    
0F68 E53C           3614 +1         mov   A,  G              
                    3615 +2         LCJNE A,  #13, CFCERR     
0F6A B40D03         3616 +2         cjne    A, #13, $+6
0F6D 020F73         3617 +2         jmp     $+6
0F70 021004         3618 +2         ljmp    CFCERR
0F73 00             3619 +2         nop
                    3620 +1         IF (0 <> -1)
0F74 753D00         3621 +1             mov         D1, #0     
                    3622 +1         ELSE
                    3623 +1             mov         D1, #32        
                    3624 +1         ENDIF                    
                    3625 +1         IF (-1 <> -1)
                    3626 +1             mov         D2, #-1     
                    3627 +1         ELSE
0F77 753E20         3628 +1             mov         D2, #32        
                    3629 +1         ENDIF                    
0F7A 740D           3630 +1         mov       A, #13
0F7C 121207         3631 +1         lcall     PRINTCHAR        
                    3633            ;--------------------------
0F7F 121118         3634    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3635 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0F82 200C03         3636 +1         jb      SKRD, $+6
0F85 020FB8         3637 +1         ljmp    ERR_SKRD
0F88 00             3638 +1         nop
                    3640 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3641 +1                                                                                             
                                                                                                                 
                    3642 +1                                                                                             
                                                                                                                 
                    3643 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3644 +1         COUNT    SET    COUNT+1                   
                    3645 +1         
0F89 200A1B         3646 +1         jb      MB2, ENDD19
0F8C 304304         3647 +1         jnb     PKI3, $+7
0F8F C222           3648 +1         clr     FAST
0F91 D223           3649 +1         setb    SLOW
0F93 D238           3650 +1         setb    STOPPED         
0F95 D253           3651 +1         setb    ERRF3_U
0F97 D25B           3652 +1         setb    ERRF3_D
DEBUG                                                                                                         PAGE 65

0F99 0537           3653 +1         inc     ERRF3_C
0F9B C21B           3654 +1                 clr     PKO3                               
0F9D C22C           3655 +1         clr     PO3U            
0F9F C22B           3656 +1         clr     PO3D              
0FA1 12117F         3657 +1                 lcall   WRITEPORTS
0FA4 020B7B         3658 +1         ljmp    DOWN3_MB2
0FA7                3659 +1 ENDD19:
0FA7 00             3660 +1         nop
0FA8 2009D4         3662            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3663    ;        CLR_FLOOR_ERR   ERRF3
0FAB C221           3664            clr     DOWN            ; zastav motor
0FAD D23B           3665            setb    DOWNOld         ;       (a zalohuj)
0FAF C23A           3666            clr     UPOld           ;       (a zalohuj)
0FB1 C222           3667            clr     FAST            ; 
0FB3 12117F         3668            lcall   WRITEPORTS      ; 
0FB6 016E           3669            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3670      
                    3671      
                    3672      
                    3673    
                    3674            
0FB8                3675    ERR_SKRD:    
0FB8 C221           3676            clr     DOWN            ; zastav motor
0FBA C222           3677            clr     FAST            ; 
0FBC 12117F         3678            lcall   WRITEPORTS      ; 
0FBF 901534         3679            mov     DPTR, #STR_ERR_SKRD         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
0FC2 1211BA         3680            lcall   DISPSTR         ;
                    3681            ; Nastavenie spravneho priznaku G a D     
0FC5 753C1E         3682            mov     G, #30          ;
0FC8 753D00         3683            mov     D1, #0           ;
0FCB 753E00         3684            mov     D2, #0           ;
0FCE 02011B         3685            ljmp    FLOOR1    
                    3686            
0FD1                3687    ERR_SKRH: 
0FD1 C222           3688            clr     FAST            ; zastav motor
0FD3 C223           3689            clr     SLOW            ; 
0FD5 12117F         3690            lcall   WRITEPORTS      ; 
0FD8 9014F9         3691            mov     DPTR, #STR_ERR_SKRH         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
0FDB 1211BA         3692            lcall   DISPSTR         ;
                    3693            ; Nastavenie spravneho priznaku G a D     
0FDE 753C05         3694            mov     G, #5           ;
0FE1 753D00         3695            mov     D1, #0           ;
0FE4 753E00         3696            mov     D2, #0           ;
0FE7 020D09         3697            ljmp    FLOOR4 
                    3698            
0FEA                3699    ERRFLOOR:
0FEA C222           3700            clr     FAST            ; zastav motor
0FEC C223           3701            clr     SLOW            ; 
0FEE 12117F         3702            lcall   WRITEPORTS      ; 
0FF1 90156F         3703            mov     DPTR, #STR_ERR_FLOOR         ; vypis info o neocakavanom pohnuti sa kabiny z
                                                                                poschodia
0FF4 1211BA         3704            lcall   DISPSTR         ;
                    3705            ; rozblikaj vsetky LEDky
                    3706            ; pockaj kym vsetci vystupia
                    3707            ; pockaj este 3 sakundy
                    3708 +1         TIMER2  60
DEBUG                                                                                                         PAGE 66

0FF7 752D3C         3709 +1            mov           T2_C, #60                              
0FFA C262           3710 +1                  clr       T2_F                                  
0FFC D2CA           3711 +1                  setb      TR2                                             
0FFE 3062FD         3713            jnb               T2_F, $                       ; 
                    3714            ;zresetuj
1001 020033         3715            ljmp     START
                    3716            
                    3717    
                    3718               
1004                3719    CFCERR:
1004 C220           3720            clr     UP              ; zastav motor
1006 C221           3721            clr     DOWN            ; 
1008 C222           3722            clr     FAST            ; 
100A C223           3723            clr     SLOW            ; 
100C 12117F         3724            lcall   WRITEPORTS      ; 
100F 9015B2         3725            mov     DPTR, #STR_ERR_CFC         ; vypis info o zisteni chyby toku programu
1012 1211BA         3726            lcall   DISPSTR         ;
                    3727                    
1015                3728    ENDPROG:
                    3729 +1         TIMER2  20
1015 752D14         3730 +1            mov           T2_C, #20                              
1018 C262           3731 +1                  clr       T2_F                                  
101A D2CA           3732 +1                  setb      TR2                                             
101C 3062FD         3734            jnb     T2_F, $
101F D218           3735            setb    KS
1021 12117F         3736            call    WRITEPORTS     
                    3737 +1         TIMER2  20
1024 752D14         3738 +1            mov           T2_C, #20                              
1027 C262           3739 +1                  clr       T2_F                                  
1029 D2CA           3740 +1                  setb      TR2                                             
102B 3062FD         3742            jnb     T2_F, $
102E C218           3743            clr     KS
1030 12117F         3744            call    WRITEPORTS
1033 80E0           3745            jmp     ENDPROG 
                    3746    
1035 22             3747            ret
                    3748            
                    3749            
                    3750            
                    3751    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3752    ; INT_TIMER0
                    3753    ; Obsluha prerusenia timera 0
                    3754    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
1036                3755    INT_TIMER0:
1036 C0D0           3756            push    PSW
1038 C0E0           3757            push    ACC
103A C0F0           3758            push    B
103C C080           3759            push    P0
103E C090           3760            push    P1
1040 C0A0           3761            push    P2
1042 C0B0           3762            push    P3
                    3763            ;push    OUTPORTC
                    3764            
1044 E52E           3765            mov     A, T0_C ;R5
1046 152E           3766            dec     T0_C    ;R5
1048 6002           3767            jz      INT_TIMER0_MAIN    
104A 8021           3768            sjmp    INT_TIMER0_END
104C                3769    INT_TIMER0_MAIN:
DEBUG                                                                                                         PAGE 67

104C 7414           3770            mov     A, #TIMER0CONST;R6
104E F52E           3771            mov     T0_C, A ;R5, A
1050 E52A           3772            mov     A, ERRFLOOR_U
1052 452B           3773            orl     A, ERRFLOOR_D
1054 541E           3774            anl     A, #00011110b
1056 23             3775            rl      A
1057 23             3776            rl      A
1058 23             3777            rl      A    
1059 6224           3778            xrl     OUTPORTB, A     
                    3779                          
105B C2AF           3780            clr    EA
105D 852480         3781            mov     p0, OUTPORTB 
1060 75A0C1         3782            mov     p2, #i8255OUTB
1063 C2B6           3783            clr     WRNOT
1065 00             3784            nop
1066 00             3785            nop
1067 00             3786            nop
1068 00             3787            nop
1069 D2B6           3788            setb    WRNOT
106B D2AF           3789            setb    EA
                    3790         
106D                3791    INT_TIMER0_END:
                    3792            ;pop     OUTPORTC
106D D0B0           3793            pop     P3
106F D0A0           3794            pop     P2
1071 D090           3795            pop     P1
1073 D080           3796            pop     P0 
1075 D0F0           3797            pop     B       
1077 D0E0           3798            pop     ACC
1079 D0D0           3799            pop     PSW
107B 32             3800            reti 
                    3801            
                    3802    ;INT_TIMER0:
                    3803    ;        push    ACC
                    3804    ;        mov     A, R7  
                    3805    ;        dec     R7               
                    3806    ;        jnz     INT_TIMER0_END     
                    3807    ;        mov     R7, #20h
                    3808    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    3809    ;        setb    LEDU
                    3810    ;        setb    LEDD
                    3811    ;        jmp     INT_TIMER0_WRITE
                    3812    ;INT_TIMER0_CLEAR:        
                    3813    ;        ;clr     LEDU
                    3814    ;        ;clr     LEDD
                    3815    ;INT_TIMER0_WRITE: 
                    3816    ;        lcall   WRITEPORTS
                    3817    ;INT_TIMER0_END: 
                    3818    ;        setb    LEDU
                    3819    ;        lcall   WRITEPORTS       
                    3820    ;        pop     ACC
                    3821    ;        reti
                    3822            
                    3823            
                    3824    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    3825    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    3826    ; 11.0592MHz/2000 = zdrzanie 1 ms
107C                3827    TIME10MS:
DEBUG                                                                                                         PAGE 68

107C C0D0           3828            push    PSW
107E C001           3829            push    1 ;R1
1080 C002           3830            push    2 ;R2
                    3831    
                    3832    ;        mov     R1,#063h        ; 2
                    3833    ;                                ; *** 100x
                    3834    ;TIME0:  mov     R2,#0FFh        ; 2 
                    3835    ;TIME1:  djnz    R2,TIME1        ; 256*2   
                    3836    ;        mov     R2,#0FFh        ; 2       
                    3837    ;TIME2:  djnz    R2,TIME2        ; 256*2 
                    3838    ;        mov     R2,#024h        ; 2       
                    3839    ;TIME3:  djnz    R2,TIME3        ; 36*2
                    3840    ;        nop                     ; 1
                    3841    ;        djnz    R1,TIME0        ; 2
                    3842    ;                                ; ***
                    3843    ;        mov     R1,#02Ah        ; 2 
                    3844    ;TIME4:  djnz    R1,TIME4        ; 43*2
                    3845    
                    3846 +1         TIMER2  1
1082 752D01         3847 +1            mov           T2_C, #1                              
1085 C262           3848 +1                  clr       T2_F                                  
1087 D2CA           3849 +1                  setb      TR2                                             
1089                3851    TIME:   ;mov     WDTRST, #01Eh
                    3852            ;mov     WDTRST, #0E1h
1089 30CA03         3853            jnb     TR2, TIMEEND 
108C 3062FA         3854            jnb               T2_F, TIME                                     ;pockame, kym prejd
                                                                               e 50-100 ms. 
108F                3855    TIMEEND:          
108F D002           3856            pop     2 ;R2
1091 D001           3857            pop     1 ;R1
1093 D0D0           3858            pop     PSW
1095 22             3859            ret                     ; koniec
                    3860            
                    3861            
                    3862    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3863    ; STOP
                    3864    ; osetri stlacenie tlacidla STOP
                    3865    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1096                3866    STOP:
1096 C0D0           3867            push    PSW
1098 C0E0           3868            push    ACC
                    3869            
                    3870            
109A D238           3871            setb    STOPPED
109C C222           3872            clr     FAST
109E C223           3873            clr     SLOW
10A0 74E1           3874            mov     A, #11100001b
10A2 5223           3875            anl     OUTPORTA, A 
10A4 C025           3876            push    OUTPORTC     ; ulozenie stavu smerovej signalizacie
10A6 D22F           3877            setb    LEDU
10A8 D22E           3878            setb    LEDD
10AA 12117F         3879            lcall   WRITEPORTS
                    3880            
                    3881            ;lcall   WAITFORTIMER
                    3882 +1         TIMER2  40
10AD 752D28         3883 +1            mov           T2_C, #40                              
10B0 C262           3884 +1                  clr       T2_F                                  
10B2 D2CA           3885 +1                  setb      TR2                                             
DEBUG                                                                                                         PAGE 69

10B4 1210D4         3887    STOPC:  lcall   READPORTS1
10B7 E528           3888            mov     A, INPORTA
10B9 541E           3889            anl     A, #00011110b
10BB 60F7           3890            jz      STOPC
10BD 3062F4         3891            jnb     T2_F, STOPC 
                    3892                 
                    3893                 
10C0 C22F           3894            clr     LEDU        
10C2 C22E           3895            clr     LEDD     
10C4 D0E0           3896            pop     ACC         ; obnovenie stavu smerovej signalizacie  
10C6 55C0           3897            anl     A, 0C0h
10C8 4225           3898            orl     OUTPORTC, A
                    3899            
10CA D223           3900            setb    SLOW
10CC 12117F         3901            lcall   WRITEPORTS
                    3902            
                    3903            
10CF D0E0           3904            pop    ACC
10D1 D0D0           3905            pop    PSW
10D3 22             3906            ret        
                    3907            
                    3908    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3909    ; READPORTS1
                    3910    ; precita nove hodnoty na portoch
                    3911    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10D4                3912    READPORTS1:
10D4 C0D0           3913            push    PSW
10D6 C2AF           3914            clr     EA                  ;Treba zakazat prerusenia
                    3915            
                    3916            ;mov     WDTRST, #01Eh
                    3917            ;mov     WDTRST, #0E1h
                    3918            
10D8 75A080         3919            mov     p2, #i8255INA       ; citaj data z portu A
10DB 75803F         3920            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
10DE C2B7           3921            clr     RDNOT
10E0 00             3922            nop
10E1 00             3923            nop
10E2 00             3924            nop
10E3 00             3925            nop
10E4 858028         3926            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
10E7 D2B7           3927            setb    RDNOT
                    3928            
10E9 75A081         3929            mov     p2, #i8255INB       ; citaj data z portu B
10EC 7580FE         3930            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
10EF C2B7           3931            clr     RDNOT
10F1 00             3932            nop
10F2 00             3933            nop
10F3 00             3934            nop
10F4 00             3935            nop
10F5 858021         3936            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
10F8 D2B7           3937            setb    RDNOT
                    3938    
10FA 75A082         3939            mov     p2, #i8255INC       ; citaj data z portu C
10FD 75803F         3940            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1100 C2B7           3941            clr     RDNOT
1102 00             3942            nop
1103 00             3943            nop
DEBUG                                                                                                         PAGE 70

1104 00             3944            nop
1105 00             3945            nop
1106 858022         3946            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1109 D2B7           3947            setb    RDNOT
110B 00             3948            nop
110C 00             3949            nop
110D 00             3950            nop
110E 00             3951            nop
110F 00             3952            nop
1110 00             3953            nop
1111 00             3954            nop
1112 00             3955            nop
1113 D2AF           3956            setb    EA                 ;znovu spustime prerusenia .
1115 D0D0           3957            pop     PSW
1117 22             3958            ret
                    3959    
                    3960    
                    3961    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3962    ; READPORTS
                    3963    ; precita nove hodnoty na portoch
                    3964    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1118                3965    READPORTS:
1118 C0D0           3966            push    PSW
111A C0E0           3967            push    ACC
                    3968    
111C C2AF           3969            clr     EA                  ;Treba zakazat prerusenia
                    3970            
                    3971            ;mov     WDTRST, #01Eh
                    3972            ;mov     WDTRST, #0E1h
                    3973            
111E 75A080         3974            mov     p2, #i8255INA       ; citaj data z portu A
1121 75803F         3975            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
1124 C2B7           3976            clr     RDNOT
1126 00             3977            nop
1127 00             3978            nop
1128 00             3979            nop
1129 00             3980            nop
112A 858028         3981            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
112D D2B7           3982            setb    RDNOT
                    3983            
112F 75A081         3984            mov     p2, #i8255INB       ; citaj data z portu B
1132 7580FE         3985            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1135 C2B7           3986            clr     RDNOT
1137 00             3987            nop
1138 00             3988            nop
1139 00             3989            nop
113A 00             3990            nop
113B 858021         3991            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
113E D2B7           3992            setb    RDNOT
                    3993    
1140 75A082         3994            mov     p2, #i8255INC       ; citaj data z portu C
1143 75803F         3995            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1146 C2B7           3996            clr     RDNOT
1148 00             3997            nop
1149 00             3998            nop
114A 00             3999            nop
114B 00             4000            nop
DEBUG                                                                                                         PAGE 71

114C 858022         4001            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
114F D2B7           4002            setb    RDNOT
1151 00             4003            nop
1152 00             4004            nop
1153 00             4005            nop
1154 00             4006            nop
1155 00             4007            nop
1156 00             4008            nop
1157 00             4009            nop
1158 00             4010            nop
1159 D2AF           4011            setb    EA                 ;znovu spustime prerusenia
                    4012            
                    4013            
                    4014            
                    4015            
115B 300F04         4016            jnb     DPK, READPORTS_C1
115E C222           4017            clr     FAST
1160 D223           4018            setb    SLOW
1162                4019    READPORTS_C1:         
1162 204003         4020            jb      STOPNOT, READPORTS_C
1165 121096         4021            lcall   STOP
1168                4022    READPORTS_C:        
1168 E528           4023            mov     A, INPORTA
116A 541E           4024            anl     A, #00011110b
116C 4223           4025            orl     OUTPORTA, A
116E 12117F         4026            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
1171 E522           4027            mov     A, INPORTC
1173 543F           4028            anl     A, #00111111b
1175 4225           4029            orl     OUTPORTC, A
1177 12117F         4030            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    4031            
117A D0E0           4032            pop    ACC
117C D0D0           4033            pop    PSW
117E 22             4034            ret
                    4035            
                    4036    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4037    ; WRITEPORTS
                    4038    ; spravi zalohu vystupnych registrov a posle data von
                    4039    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
117F                4040    WRITEPORTS:
117F C0D0           4041            push    PSW
1181 C2AF           4042            clr     EA                  ;Treba zakazat prerusenia
                    4043            
1183 852380         4044            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
1186 75A0C0         4045            mov     p2, #i8255OUTA
1189 C2B6           4046            clr     WRNOT
118B 00             4047            nop
118C 00             4048            nop
118D 00             4049            nop
118E 00             4050            nop
118F D2B6           4051            setb    WRNOT
                    4052            
1191 852480         4053            mov     p0, OUTPORTB        ; potom port B
1194 75A0C1         4054            mov     p2, #i8255OUTB
1197 C2B6           4055            clr     WRNOT
1199 00             4056            nop
119A 00             4057            nop
119B 00             4058            nop
DEBUG                                                                                                         PAGE 72

119C 00             4059            nop
119D D2B6           4060            setb    WRNOT
                    4061    
119F 852580         4062            mov     p0, OUTPORTC        ; a nakoniec port C
11A2 75A0C2         4063            mov     p2, #i8255OUTC
11A5 C2B6           4064            clr     WRNOT
11A7 00             4065            nop
11A8 00             4066            nop
11A9 00             4067            nop
11AA 00             4068            nop
11AB D2B6           4069            setb    WRNOT
11AD 00             4070            nop
11AE 00             4071            nop
11AF 00             4072            nop
11B0 00             4073            nop
11B1 00             4074            nop
11B2 00             4075            nop
11B3 00             4076            nop
11B4 00             4077            nop
11B5 D2AF           4078            setb     EA                  ;Treba zakazat prerusenia
11B7 D0D0           4079            pop     PSW
11B9 22             4080            ret
                    4081    
                    4082    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4083    
                    4084    
                    4085    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4086    ; DISPSTR
                    4087    ; posle na seriovu linku retazec na adrese DPTR
                    4088    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11BA                4089    DISPSTR:
11BA C0D0           4090            push    PSW
11BC C0E0           4091            push    ACC
11BE C083           4092            push    DPH
11C0 C082           4093            push    DPL
11C2                4094    DSPS_LOOP: 
                    4095            ;mov     WDTRST, #01Eh
                    4096            ;mov     WDTRST, #0E1h          
11C2 E4             4097            clr     A
11C3 93             4098            movc    A, @A+DPTR
11C4 6006           4099            jz      DSPS_END
                    4100            ;jnb     TI, $ 
                    4101            ;clr     TI
                    4102            ;mov     SBUF, A
                    4103            
11C6 121207         4104            lcall   PRINTCHAR
11C9 A3             4105            inc     DPTR
11CA 80F6           4106            sjmp    DSPS_LOOP
11CC                4107    DSPS_END:
11CC D082           4108            pop     DPL
11CE D083           4109            pop     DPH
11D0 D0E0           4110            pop     ACC
11D2 D0D0           4111            pop     PSW
11D4 22             4112            ret
                    4113            
                    4114    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4115    ; DISPSTR - no wdt
                    4116    ; posle na seriovu linku retazec na adrese DPTR
DEBUG                                                                                                         PAGE 73

                    4117    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11D5                4118    DISPSTRNOWDT:
11D5 C0D0           4119            push    PSW
11D7 C0E0           4120            push    ACC
11D9 C083           4121            push    DPH
11DB C082           4122            push    DPL
11DD                4123    DSPSNWDT_LOOP:           
11DD E4             4124            clr     A
11DE 93             4125            movc    A, @A+DPTR
11DF 6006           4126            jz      DSPSNWDT_END
                    4127            ;jnb     TI, $ 
                    4128            ;clr     TI
                    4129            ;mov     SBUF, A
11E1 121207         4130            lcall   PRINTCHAR
11E4 A3             4131            inc     DPTR
11E5 80F6           4132            sjmp    DSPSNWDT_LOOP
11E7                4133    DSPSNWDT_END:
11E7 D082           4134            pop     DPL
11E9 D083           4135            pop     DPH
11EB D0E0           4136            pop     ACC
11ED D0D0           4137            pop     PSW
11EF 22             4138            ret
                    4139                                         
                    4140                                         
                =1  4141            $include (procLib.inc)     
                =1  4142    ;*******************************************************************************
                =1  4143    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  4144    ;-------------------------------------------------------------------------------
                =1  4145    ;
                =1  4146    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  4147    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  4148    ;     a nastavi sa priznak <T2_F>
                =1  4149    ; 
                =1  4150    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  4151    ;
                =1  4152    ;                mov             T2_C, #60                               ;3 sekundy
                =1  4153    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  4154    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  4155    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  4156    ;
                =1  4157    ;
                =1  4158    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
11F0            =1  4159    INT_TIMER2:
11F0 C2CF       =1  4160                        clr     TF2
11F2 C0E0       =1  4161            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  4162                       
11F4 E52D       =1  4163            mov     A, T2_C                             ;
11F6 6005       =1  4164            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
11F8 14         =1  4165                        dec           A                 ; dekrementovanie registra T2_C 
11F9 F52D       =1  4166            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  4167                        
11FB 8007       =1  4168            sjmp    INT_TIMER2_END          ;
11FD            =1  4169    INT_TIMER2_MAIN:
DEBUG                                                                                                         PAGE 74

11FD C2CA       =1  4170                        clr           TR2                                         ; zastavime po
                                                                               citadlo
11FF 752D00     =1  4171            mov     T2_C, #0                            ; Resetujeme pocitadlo
1202 D262       =1  4172                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
1204            =1  4173    INT_TIMER2_END:     
1204 D0E0       =1  4174            pop     ACC                                     
1206 32         =1  4175            reti 
                =1  4176            
                =1  4177            
                =1  4178    ;*******************************************************************************
                =1  4179    ;   Vypis znaku na seriovu linku
                =1  4180    ;-------------------------------------------------------------------------------
                =1  4181    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4182    ;
1207            =1  4183    PRINTCHAR:
                =1  4184        ;jnb     TI, $ 
                =1  4185        ;clr     TI
1207 106302     =1  4186    _1: JBC   TRE, _2
120A 80FB       =1  4187        JMP   _1
120C            =1  4188    _2:  
120C F599       =1  4189                    mov     SBUF, A
                =1  4190        ;setb    EA
120E 22         =1  4191        ret
                =1  4192        
                =1  4193    ;*******************************************************************************
                =1  4194    ;   Nacitanie znaku zo seriovej linky
                =1  4195    ;-------------------------------------------------------------------------------
                =1  4196    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4197    ;    
120F            =1  4198    READCHAR:
120F 3098FD     =1  4199                    jnb     RI, $
1212 C298       =1  4200        clr     RI
1214 E599       =1  4201        mov     A, SBUF
1216 22         =1  4202        ret
                =1  4203    
                =1  4204    
                =1  4205    
                =1  4206    ;*******************************************************************************
                =1  4207    ;   Obsluha prerusenia seriovej linky
                =1  4208    ;-------------------------------------------------------------------------------
                =1  4209    ;     Ide o prerusenie seriovej linky. Ak je k dispozicii znak, 
                =1  4210    ;     ulozi ho do buffra.
                =1  4211    ;     V pripade, ze je nacitany znak konca ramca, vynuluje 
                =1  4212    ;     ukazovatel do buffra a nastavi priznak S_RI   
                =1  4213    ;  
1217            =1  4214    SERIAL_INT:
                =1  4215                    ;clr            EA
1217 C0D0       =1  4216        push  PSW
1219 C0E0       =1  4217                    push    ACC
121B C001       =1  4218                    push    1 ;R1
                =1  4219        
                =1  4220        
121D 30981E     =1  4221                    jnb             RI, SERIAL_INT_TI                                       ; Ak
                                                                                neslo o recieve interrupt, nenacitavame 
                                                                               znak
1220 C298       =1  4222                    clr             RI
1222 E599       =1  4223                    mov             A, SBUF
DEBUG                                                                                                         PAGE 75

1224 B47E08     =1  4224                    cjne    A, #07Eh, SERIAL_INT_RCV
1227            =1  4225    SERIAL_INT_EOF:         
1227 754500     =1  4226                    mov             MSG_PTR_REC, #0
122A D261       =1  4227                    setb    S_RI
122C 02123E     =1  4228                    jmp             SERIAL_INT_TI
122F            =1  4229    SERIAL_INT_RCV:         
122F 20610C     =1  4230        jb          S_RI, SERIAL_INT_TI                             ; ak sme este stale neznulov
                                                                               ali priznak prijatej spravy, nenacitavame
                                                                                dalsiu
1232 C0E0       =1  4231                    push    ACC
1234 7480       =1  4232                    mov             A, #80h
1236 2545       =1  4233                    add             A, MSG_PTR_REC
1238 F9         =1  4234                    mov             R1, A
1239 D0E0       =1  4235                    pop             ACC
123B F7         =1  4236                    mov             @R1, A
123C 0545       =1  4237                    inc             MSG_PTR_REC
                =1  4238                    ;jmp            SERIAL_INT_END
123E            =1  4239    SERIAL_INT_TI:
123E 309904     =1  4240        jnb    TI, SERIAL_INT_END
1241 D263       =1  4241        setb  TRE        ;<------------
1243 C299       =1  4242                    clr             TI
1245            =1  4243    SERIAL_INT_END:
                =1  4244    
1245 D001       =1  4245                    pop             1 ;R1
1247 D0E0       =1  4246                    pop             ACC
1249 D0D0       =1  4247        pop   PSW
                =1  4248                    ;setb   EA
124B 32         =1  4249                    reti
                =1  4250        
                =1  4251                    
                =1  4252        
                =1  4253        
                =1  4254        
                =1  4255                            
                =1  4256                    ; nacitanie a odpoved na spravu
124C            =1  4257    RCV_MESSAGE:    
124C C0D0       =1  4258        push    PSW
124E            =1  4259    RCV_MESSAGE1:
                =1  4260            ;       Prijatie spravy
                =1  4261 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
124E 752D50     =1  4262 +1            mov           T2_C, #80                              
1251 C262       =1  4263 +1                  clr       T2_F                                  
1253 D2CA       =1  4264 +1                  setb      TR2                                             
1255            =1  4266    RCV_LOOP:
1255 206243     =1  4267                    jb              T2_F, RCV_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
1258 3061FA     =1  4268                    jnb             S_RI, RCV_LOOP  
                =1  4269    
                =1  4270                    
                =1  4271                    
                =1  4272            ;       Vypocet CRC                                             ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
125B 7880       =1  4273                    mov     R0, #80H                                ;       Adresa prveho bajtu 
DEBUG                                                                                                         PAGE 76

                                                                               prijatej spravy (Count)
125D E6         =1  4274                    mov             A, @R0                                  ;
125E 75F002     =1  4275                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
1261 A4         =1  4276                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
1262 04         =1  4277                    inc     A                                               ;       
1263 F542       =1  4278                    mov             MSG_LEN, A                              ;
1265 AA42       =1  4279                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
1267 7880       =1  4280                    mov     R0, #80H                                ;       R2 = dlzka bloku, 
1269 12129E     =1  4281                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
                                                                                bloku                                   
                                                                                                                        
                                                                                                ;<<<<<<<<<<<<<<<<<<<
126C B47E01     =1  4282                    cjne    A, #7Eh, RCV_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
126F 04         =1  4283                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
1270            =1  4284    RCV_CONT:       
                =1  4285            ;       Kontrola spravnosti CRC
1270 F5F0       =1  4286                    mov             B, A                                    ; Prave vypocitane C
                                                                               RC zalohujeme do B
1272 E542       =1  4287                    mov             A, MSG_LEN                              ; Nacita sa prijate 
                                                                               CRC
1274 4480       =1  4288                    orl             A, #80h                                 ;       80h + MSG_LE
                                                                               N (dlzka spravy) + 1 
1276 F8         =1  4289                    mov             R0, A                                   ;                   
                                                                                    
1277 E6         =1  4290                    mov             A, @R0                                  ;
1278 B5F009     =1  4291                    cjne    A, B, NACK                              ; Porovnanie CRC. Ak sa nezh
                                                                               oduje, posiela sa NACK
                =1  4292    
                =1  4293            ;       Poslanie ACK
127B            =1  4294    ACK:
127B 9015CF     =1  4295            mov     DPTR, #COM_ACK          ; Posle sa predpripravena sprava ACK 
127E 1211BA     =1  4296            lcall   DISPSTR                 ; a pokracuje sa spracovanim prijatej spravy        
                                                                                   
1281 02128E     =1  4297                    jmp             PROCESS
                =1  4298                    
                =1  4299                    
                =1  4300            ;       Poslanie NACK
1284            =1  4301    NACK:
1284 9015D3     =1  4302        mov     DPTR, #COM_NACK         ; Posle sa predpripravena sprava NACK
1287 1211BA     =1  4303        lcall   DISPSTR                         ; a skoci sa na zaciatok tejto rutiny pre prijat
                                                                               ie novej spravy
128A C261       =1  4304                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
128C 80C0       =1  4305                    jmp             RCV_MESSAGE1
                =1  4306    
                =1  4307            ;       Priprava odpovede
128E            =1  4308    PROCESS:
                =1  4309                    
128E C261       =1  4310                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
                =1  4311                    
1290 7408       =1  4312                    mov             A, #08h
1292 78C0       =1  4313                    mov             R0, #0C0h
DEBUG                                                                                                         PAGE 77

1294 F6         =1  4314    SLOOP:  mov             @R0, A
1295 08         =1  4315                    inc             R0
1296 14         =1  4316                    dec             A
1297 70FB       =1  4317                    jnz             SLOOP
1299 7600       =1  4318                    mov             @R0, #0h
                =1  4319                    
                =1  4320                    ;mov     R0, #0C0h                  ; Odoslanie odpovede
                =1  4321                    ;lcall  DISPSTRI                            ; z vyrovnavacej pamate urcenej 
                                                                               pre odpoved D:0C0h
                =1  4322                    
                =1  4323                    ;lcall  SND_MESSAGE                             ;odoslanie spravy           
                                                                                                                        
                                                                                                                        
                                                                                                           <<<<<<<<<<
                =1  4324                    
                =1  4325                    
129B            =1  4326    RCV_MESSAGE_END:
                =1  4327    
129B D0D0       =1  4328        pop    PSW
129D 22         =1  4329                    ret
                =1  4330    
                =1  4331    
                =1  4332    
                =1  4333    ;****************************************************************************
                =1  4334    ;
                =1  4335    ;  Description:
                =1  4336    ;       Calculates Value In Acc Into The Running CRC In 'B', Using The Table
                =1  4337    ;       Method.  (Faster But Larger)
                =1  4338    ;
                =1  4339    ;  Entry Requirements:
                =1  4340    ;       Acc Has Value To Add To CRC
                =1  4341    ;       'B' Contains Running CRC Value
                =1  4342    ;
                =1  4343    ;  On Exit:
                =1  4344    ;       'B' Has Updated CRC Value
                =1  4345    ;
                =1  4346    ;  Affected:
                =1  4347    ;       PSW.CY, B
                =1  4348    ;
                =1  4349    ;  Stack:
                =1  4350    ;       3 Bytes, Not Including Called Routines
                =1  4351    ;
                =1  4352    ;  Comments:
                =1  4353    ;       None
                =1  4354    
                =1  4355    
                =1  4356    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4357    ; CALC_CRCX
                =1  4358    ; Vypocita CRC retazca s adresou v R0 a s dlzkou v R2
                =1  4359    ; Vysledok vrati do A
                =1  4360    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
129E            =1  4361    CALC_CRCX:
129E C0D0       =1  4362        push    PSW
12A0 C0F0       =1  4363                    push      B
                =1  4364                    ;mov            R0, A
                =1  4365                    
12A2 75F000     =1  4366                    mov       B, #00h;
12A5            =1  4367    CRCX_LOOP:      
DEBUG                                                                                                         PAGE 78

12A5 BA0003     =1  4368                    cjne      R2, #0h, CRCX_CONT
12A8 0212B4     =1  4369                    jmp               CRCX_END
12AB            =1  4370    CRCX_CONT:              
12AB E4         =1  4371        clr     A
12AC E6         =1  4372        mov         A, @R0  
12AD 1212BB     =1  4373        lcall         CRC8_ADD_TABLE;
12B0 08         =1  4374        inc     R0
12B1 1A         =1  4375                    dec               R2
12B2 80F1       =1  4376                    jmp               CRCX_LOOP
12B4            =1  4377    CRCX_END:
12B4 E5F0       =1  4378                    mov               A, B
                =1  4379        
12B6 D0F0       =1  4380                    pop               B
12B8 D0D0       =1  4381        pop     PSW
12BA 22         =1  4382        ret
                =1  4383            
                =1  4384    
12BB            =1  4385    CRC8_ADD_TABLE:  
12BB C083       =1  4386                    push    dph                     ; Save DPH
12BD C082       =1  4387                    push    dpl                     ; Save DPL
12BF C0E0       =1  4388                    push    acc                     ; Save Acc
                =1  4389    ;
12C1 9012D0     =1  4390                    mov     dptr, #CRC8_DATA         ; Point To Table
12C4 65F0       =1  4391                    xrl     a,b                     ; XOR In CRC
12C6 93         =1  4392                    movc    a,@a+dptr               ; Get New CRC Byte
12C7 F5F0       =1  4393                    mov     b,a                     ; Store Back
                =1  4394    ;
12C9 D0E0       =1  4395                    pop     acc                     ; Recover Acc
12CB D082       =1  4396                    pop     dpl                     ; Recover DPL
12CD D083       =1  4397                    pop     dph                     ; Recover DPH
12CF 22         =1  4398                    ret                             ; Return To Caller
                =1  4399                    
12D0 005EBCE2   =1  4400    CRC8_DATA:      db      000h, 05eh, 0bch, 0e2h, 061h, 03fh, 0ddh, 083h
12D4 613FDD83   
12D8 C29C7E20   =1  4401                    db      0c2h, 09ch, 07eh, 020h, 0a3h, 0fdh, 01fh, 041h
12DC A3FD1F41   
12E0 9DC3217F   =1  4402                    db      09dh, 0c3h, 021h, 07fh, 0fch, 0a2h, 040h, 01eh
12E4 FCA2401E   
12E8 5F01E3BD   =1  4403                    db      05fh, 001h, 0e3h, 0bdh, 03eh, 060h, 082h, 0dch
12EC 3E6082DC   
12F0 237D9FC1   =1  4404                    db      023h, 07dh, 09fh, 0c1h, 042h, 01ch, 0feh, 0a0h
12F4 421CFEA0   
12F8 E1BF5D03   =1  4405                    db      0e1h, 0bfh, 05dh, 003h, 080h, 0deh, 03ch, 062h
12FC 80DE3C62   
1300 BEE0025C   =1  4406                    db      0beh, 0e0h, 002h, 05ch, 0dfh, 081h, 063h, 03dh
1304 DF81633D   
1308 7C22C09E   =1  4407                    db      07ch, 022h, 0c0h, 09eh, 01dh, 043h, 0a1h, 0ffh
130C 1D43A1FF   
1310 4618FAA4   =1  4408                    db      046h, 018h, 0fah, 0a4h, 027h, 079h, 09bh, 0c5h
1314 27799BC5   
1318 84DA3866   =1  4409                    db      084h, 0dah, 038h, 066h, 0e5h, 0bbh, 059h, 007h
131C E5BB5907   
1320 DB856739   =1  4410                    db      0dbh, 085h, 067h, 039h, 0bah, 0e4h, 006h, 058h
1324 BAE40658   
1328 1947A5FB   =1  4411                    db      019h, 047h, 0a5h, 0fbh, 078h, 026h, 0c4h, 09ah
132C 7826C49A   
1330 653BD987   =1  4412                    db      065h, 03bh, 0d9h, 087h, 004h, 05ah, 0b8h, 0e6h
1334 045AB8E6   
DEBUG                                                                                                         PAGE 79

1338 A7F91B45   =1  4413                    db      0a7h, 0f9h, 01bh, 045h, 0c6h, 098h, 07ah, 024h
133C C6987A24   
1340 F8A6441A   =1  4414                    db      0f8h, 0a6h, 044h, 01ah, 099h, 0c7h, 025h, 07bh
1344 99C7257B   
1348 3A6486D8   =1  4415                    db      03ah, 064h, 086h, 0d8h, 05bh, 005h, 0e7h, 0b9h
134C 5B05E7B9   
1350 8CD2306E   =1  4416                    db      08ch, 0d2h, 030h, 06eh, 0edh, 0b3h, 051h, 00fh
1354 EDB3510F   
1358 4E10F2AC   =1  4417                    db      04eh, 010h, 0f2h, 0ach, 02fh, 071h, 093h, 0cdh
135C 2F7193CD   
1360 114FADF3   =1  4418                    db      011h, 04fh, 0adh, 0f3h, 070h, 02eh, 0cch, 092h
1364 702ECC92   
1368 D38D6F31   =1  4419                    db      0d3h, 08dh, 06fh, 031h, 0b2h, 0ech, 00eh, 050h
136C B2EC0E50   
1370 AFF1134D   =1  4420                    db      0afh, 0f1h, 013h, 04dh, 0ceh, 090h, 072h, 02ch
1374 CE90722C   
1378 6D33D18F   =1  4421                    db      06dh, 033h, 0d1h, 08fh, 00ch, 052h, 0b0h, 0eeh
137C 0C52B0EE   
1380 326C8ED0   =1  4422                    db      032h, 06ch, 08eh, 0d0h, 053h, 00dh, 0efh, 0b1h
1384 530DEFB1   
1388 F0AE4C12   =1  4423                    db      0f0h, 0aeh, 04ch, 012h, 091h, 0cfh, 02dh, 073h
138C 91CF2D73   
1390 CA947628   =1  4424                    db      0cah, 094h, 076h, 028h, 0abh, 0f5h, 017h, 049h
1394 ABF51749   
1398 0856B4EA   =1  4425                    db      008h, 056h, 0b4h, 0eah, 069h, 037h, 0d5h, 08bh
139C 6937D58B   
13A0 5709EBB5   =1  4426                    db      057h, 009h, 0ebh, 0b5h, 036h, 068h, 08ah, 0d4h
13A4 36688AD4   
13A8 95CB2977   =1  4427                    db      095h, 0cbh, 029h, 077h, 0f4h, 0aah, 048h, 016h
13AC F4AA4816   
13B0 E9B7550B   =1  4428                    db      0e9h, 0b7h, 055h, 00bh, 088h, 0d6h, 034h, 06ah
13B4 88D6346A   
13B8 2B7597C9   =1  4429                    db      02bh, 075h, 097h, 0c9h, 04ah, 014h, 0f6h, 0a8h
13BC 4A14F6A8   
13C0 742AC896   =1  4430                    db      074h, 02ah, 0c8h, 096h, 015h, 04bh, 0a9h, 0f7h
13C4 154BA9F7   
13C8 B6E80A54   =1  4431                    db      0b6h, 0e8h, 00ah, 054h, 0d7h, 089h, 06bh, 035h                
13CC D7896B35   
                =1  4432                    
                    4433    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4434    
13D0 0D0A5269       4435    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
13D4 61646961   
13D8 63692073   
13DC 79737465   
13E0 6D206A65   
13E4 20696E69   
13E8 6369616C   
13EC 697A6F76   
13F0 616E792E   
13F4 0D0A00     
13F7 0D0A5A61       4436    STR_WDT:          db  0dh, 0ah, 'Zapinam WDT...', 0dh, 0ah, 00h
13FB 70696E61   
13FF 6D205744   
1403 542E2E2E   
1407 0D0A00     
140A 0D0A4361       4437    STR_RESET:          db  0dh, 0ah, 'Cakam 10 sekund...', 0dh, 0ah, 00h
140E 6B616D20   
DEBUG                                                                                                         PAGE 80

1412 31302073   
1416 656B756E   
141A 642E2E2E   
141E 0D0A00     
1421 52696164       4438    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
1425 69616369   
1429 20737973   
142D 74656D20   
1431 6A652072   
1435 65696E69   
1439 6369616C   
143D 697A6F76   
1441 616E7920   
1445 706F2073   
1449 746C6163   
144D 656E6920   
1451 746C6163   
1455 69646C61   
1459 2053544F   
145D 502E0D0A   
1461 00         
1462 4B616C69       4439    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
1466 62726163   
146A 69612076   
146E 79746168   
1472 75206A65   
1476 20756B6F   
147A 6E63656E   
147E 612E0D0A   
1482 00         
1483 43687962       4440    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
1487 61212056   
148B 79706164   
148F 6C612073   
1493 706F6D61   
1497 6C6F7661   
149B 63696120   
149F 636C6F6E   
14A3 6B61210D   
14A7 0A00       
14A9 43687962       4441    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
14AD 61212056   
14B1 79706164   
14B5 6C692064   
14B9 76652073   
14BD 706F6D61   
14C1 6C6F7661   
14C5 63696520   
14C9 636C6F6E   
14CD 6B79210D   
14D1 0A00       
14D3 43687962       4442    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
14D7 61212056   
14DB 79706164   
14DF 6C61207A   
14E3 61737461   
14E7 766F7661   
DEBUG                                                                                                         PAGE 81

14EB 63696120   
14EF 636C6F6E   
14F3 6B61210D   
14F7 0A00       
14F9 43687962       4443    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
14FD 6121204E   
1501 656F6361   
1505 6B617661   
1509 6E65206E   
150D 61636974   
1511 616E6965   
1515 20686F72   
1519 6E656A20   
151D 73706F6D   
1521 616C6F76   
1525 6163656A   
1529 20636C6F   
152D 6E6B7921   
1531 0D0A00     
1534 43687962       4444    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
1538 6121204E   
153C 656F6361   
1540 6B617661   
1544 6E65206E   
1548 61636974   
154C 616E6965   
1550 20646F6C   
1554 6E656A20   
1558 73706F6D   
155C 616C6F76   
1560 6163656A   
1564 20636C6F   
1568 6E6B7921   
156C 0D0A00     
156F 43687962       4445    STR_ERR_FLOOR:     db  'Chyba! Neocakavane pohnutie kabyny z poschodia!', 0dh, 0ah, 00h
1573 6121204E   
1577 656F6361   
157B 6B617661   
157F 6E652070   
1583 6F686E75   
1587 74696520   
158B 6B616279   
158F 6E79207A   
1593 20706F73   
1597 63686F64   
159B 6961210D   
159F 0A00       
15A1 53707573       4446    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
15A5 74616D20   
15A9 4B54502E   
15AD 2E2E0D0A   
15B1 00         
15B2 446F736C       4447    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
15B6 6F206B20   
15BA 7A6D656E   
15BE 65204B54   
DEBUG                                                                                                         PAGE 82

15C2 50210D0A   
15C6 00         
                    4448    
15C7 00007E00       4449    COM_KEEPALIVE:    db  000h, 00h, 7Eh, 00h
15CB FD897E00       4450    COM_BUSY:                     db  0FDh, 89h, 7Eh, 00h
15CF FE6B7E00       4451    COM_ACK:                      db  0FEh, 6Bh, 7Eh, 00h
15D3 FF357E00       4452    COM_NACK:                     db  0FFh, 35h, 7Eh, 00h
                    4453    
                    4454    
----                4455            DSEG
0050                4456            org     50h            ;Pozor!
0050                4457    STACK:  DS      10h
                    4458    
                    4459    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 83

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
ACK. . . . . . . . . . . . . . .  C ADDR  127BH  NOT USED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALC_CRCX. . . . . . . . . . . .  C ADDR  129EH  
CALIB. . . . . . . . . . . . . .  C ADDR  00D3H  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00ECH  
CALIBEND2. . . . . . . . . . . .  C ADDR  00F7H  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00E4H  
CFCERR . . . . . . . . . . . . .  C ADDR  1004H  
COM_ACK. . . . . . . . . . . . .  C ADDR  15CFH  
COM_BUSY . . . . . . . . . . . .  C ADDR  15CBH  NOT USED  
COM_KEEPALIVE. . . . . . . . . .  C ADDR  15C7H  NOT USED  
COM_NACK . . . . . . . . . . . .  C ADDR  15D3H  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CRC8_ADD_TABLE . . . . . . . . .  C ADDR  12BBH  
CRC8_DATA. . . . . . . . . . . .  C ADDR  12D0H  
CRCX_CONT. . . . . . . . . . . .  C ADDR  12ABH  
CRCX_END . . . . . . . . . . . .  C ADDR  12B4H  
DEBUG                                                                                                         PAGE 84

CRCX_LOOP. . . . . . . . . . . .  C ADDR  12A5H  
CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  085EH  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0C62H  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0F12H  
DISPSTR. . . . . . . . . . . . .  C ADDR  11BAH  
DISPSTRNOWDT . . . . . . . . . .  C ADDR  11D5H  NOT USED  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  0729H  
DOWN2ERR . . . . . . . . . . . .  C ADDR  0787H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  0796H  
DOWN2_C. . . . . . . . . . . . .  C ADDR  075BH  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  0837H  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  0851H  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  07B0H  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  07DAH  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  0806H  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  0816H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0B06H  
DOWN3A . . . . . . . . . . . . .  C ADDR  0B38H  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0C6CH  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0C86H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0B7BH  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0BA5H  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0BE5H  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0CB5H  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0CCFH  
DOWN4. . . . . . . . . . . . . .  C ADDR  0DBEH  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0DECH  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0F1CH  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0F36H  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0E2FH  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0E55H  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0E95H  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  0F65H  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  0F7FH  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPH. . . . . . . . . . . . . . .  D ADDR  0083H  PREDEFINED  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPL. . . . . . . . . . . . . . .  D ADDR  0082H  PREDEFINED  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPSNWDT_END . . . . . . . . . .  C ADDR  11E7H  
DSPSNWDT_LOOP. . . . . . . . . .  C ADDR  11DDH  
DSPS_END . . . . . . . . . . . .  C ADDR  11CCH  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  11C2H  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  022DH  
ENDD1. . . . . . . . . . . . . .  C ADDR  0296H  
ENDD10 . . . . . . . . . . . . .  C ADDR  0A0EH  
ENDD11 . . . . . . . . . . . . .  C ADDR  0A8EH  
ENDD12 . . . . . . . . . . . . .  C ADDR  0B60H  
ENDD13 . . . . . . . . . . . . .  C ADDR  0BCDH  
ENDD14 . . . . . . . . . . . . .  C ADDR  0CAEH  
DEBUG                                                                                                         PAGE 85

ENDD15 . . . . . . . . . . . . .  C ADDR  0CF7H  
ENDD16 . . . . . . . . . . . . .  C ADDR  0E14H  
ENDD17 . . . . . . . . . . . . .  C ADDR  0E7DH  
ENDD18 . . . . . . . . . . . . .  C ADDR  0F5EH  
ENDD19 . . . . . . . . . . . . .  C ADDR  0FA7H  
ENDD2. . . . . . . . . . . . . .  C ADDR  037EH  
ENDD3. . . . . . . . . . . . . .  C ADDR  03C7H  
ENDD4. . . . . . . . . . . . . .  C ADDR  0579H  
ENDD5. . . . . . . . . . . . . .  C ADDR  05E6H  
ENDD6. . . . . . . . . . . . . .  C ADDR  06CEH  
ENDD7. . . . . . . . . . . . . .  C ADDR  0717H  
ENDD8. . . . . . . . . . . . . .  C ADDR  0783H  
ENDD9. . . . . . . . . . . . . .  C ADDR  0802H  
ENDPROG. . . . . . . . . . . . .  C ADDR  1015H  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR . . . . . . . . . . . .  C ADDR  0FEAH  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERRSIG . . . . . . . . . . . . .  D ADDR  0041H  NOT USED  
ERRSKRD_C. . . . . . . . . . . .  D ADDR  0040H  NOT USED  
ERRSKRH_C. . . . . . . . . . . .  D ADDR  003FH  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  0FB8H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  0FD1H  
ES . . . . . . . . . . . . . . .  B ADDR  00ACH  PREDEFINED  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
F1C. . . . . . . . . . . . . . .  C ADDR  0198H  NOT USED  
F1OK . . . . . . . . . . . . . .  C ADDR  01C3H  
F1S. . . . . . . . . . . . . . .  C ADDR  0151H  
F2 . . . . . . . . . . . . . . .  C ADDR  04F1H  
F2DOWN . . . . . . . . . . . . .  C ADDR  050BH  
F2OK . . . . . . . . . . . . . .  C ADDR  0469H  
F2S. . . . . . . . . . . . . . .  C ADDR  040FH  
F2SW . . . . . . . . . . . . . .  C ADDR  04AFH  
F2UP . . . . . . . . . . . . . .  C ADDR  04F7H  
F3 . . . . . . . . . . . . . . .  C ADDR  0986H  
F3DOWN . . . . . . . . . . . . .  C ADDR  09A0H  
F3OK . . . . . . . . . . . . . .  C ADDR  08FEH  
DEBUG                                                                                                         PAGE 86

F3S. . . . . . . . . . . . . . .  C ADDR  08A4H  
F3SW . . . . . . . . . . . . . .  C ADDR  0944H  
F3UP . . . . . . . . . . . . . .  C ADDR  098CH  
F4OK . . . . . . . . . . . . . .  C ADDR  0DAAH  
F4S. . . . . . . . . . . . . . .  C ADDR  0D3FH  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  011BH  
FLOOR2 . . . . . . . . . . . . .  C ADDR  03D9H  
FLOOR3 . . . . . . . . . . . . .  C ADDR  086EH  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0D09H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  1036H  
INT_TIMER0_END . . . . . . . . .  C ADDR  106DH  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  104CH  
INT_TIMER2 . . . . . . . . . . .  C ADDR  11F0H  
INT_TIMER2_END . . . . . . . . .  C ADDR  1204H  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  11FDH  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  010CH  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
MSG_LEN. . . . . . . . . . . . .  D ADDR  0042H  
MSG_PTR_H. . . . . . . . . . . .  D ADDR  0044H  NOT USED  
MSG_PTR_L. . . . . . . . . . . .  D ADDR  0043H  NOT USED  
MSG_PTR_REC. . . . . . . . . . .  D ADDR  0045H  
NACK . . . . . . . . . . . . . .  C ADDR  1284H  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P1 . . . . . . . . . . . . . . .  D ADDR  0090H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
P3 . . . . . . . . . . . . . . .  D ADDR  00B0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
DEBUG                                                                                                         PAGE 87

PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  NOT USED  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  NOT USED  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
PRINTCHAR. . . . . . . . . . . .  C ADDR  1207H  
PROCESS. . . . . . . . . . . . .  C ADDR  128EH  
PSW. . . . . . . . . . . . . . .  D ADDR  00D0H  PREDEFINED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RCV_CONT . . . . . . . . . . . .  C ADDR  1270H  
RCV_LOOP . . . . . . . . . . . .  C ADDR  1255H  
RCV_MESSAGE. . . . . . . . . . .  C ADDR  124CH  
RCV_MESSAGE1 . . . . . . . . . .  C ADDR  124EH  
RCV_MESSAGE_END. . . . . . . . .  C ADDR  129BH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READCHAR . . . . . . . . . . . .  C ADDR  120FH  NOT USED  
READPORTS. . . . . . . . . . . .  C ADDR  1118H  
READPORTS1 . . . . . . . . . . .  C ADDR  10D4H  
READPORTS_C. . . . . . . . . . .  C ADDR  1168H  
READPORTS_C1 . . . . . . . . . .  C ADDR  1162H  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
RI . . . . . . . . . . . . . . .  B ADDR  0098H  PREDEFINED  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SERIAL_INT . . . . . . . . . . .  C ADDR  1217H  
SERIAL_INT_END . . . . . . . . .  C ADDR  1245H  
SERIAL_INT_EOF . . . . . . . . .  C ADDR  1227H  NOT USED  
SERIAL_INT_RCV . . . . . . . . .  C ADDR  122FH  
SERIAL_INT_TI. . . . . . . . . .  C ADDR  123EH  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOOP. . . . . . . . . . . . . .  C ADDR  1294H  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
DEBUG                                                                                                         PAGE 88

STACK. . . . . . . . . . . . . .  D ADDR  0050H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  1096H  
STOPC. . . . . . . . . . . . . .  C ADDR  10B4H  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  1462H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  15A1H  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  1483H  NOT USED  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  14A9H  NOT USED  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  15B2H  
STR_ERR_FLOOR. . . . . . . . . .  C ADDR  156FH  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  1534H  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  14F9H  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  14D3H  NOT USED  
STR_INIT . . . . . . . . . . . .  C ADDR  13D0H  
STR_RESET. . . . . . . . . . . .  C ADDR  140AH  NOT USED  
STR_STOP . . . . . . . . . . . .  C ADDR  1421H  NOT USED  
STR_WDT. . . . . . . . . . . . .  C ADDR  13F7H  NOT USED  
S_RI . . . . . . . . . . . . . .  B ADDR  0061H  
T0_C . . . . . . . . . . . . . .  D ADDR  002EH  
T0_F . . . . . . . . . . . . . .  B ADDR  0060H  NOT USED  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
T2MOD. . . . . . . . . . . . . .  D ADDR  00C9H  NOT USED  
T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  0062H  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME . . . . . . . . . . . . . .  C ADDR  1089H  
TIME10MS . . . . . . . . . . . .  C ADDR  107CH  
TIMEEND. . . . . . . . . . . . .  C ADDR  108FH  
TIMER0CONST. . . . . . . . . . .    NUMB  0014H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
TRE. . . . . . . . . . . . . . .  B ADDR  0063H  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  0326H  
U2_MB2C. . . . . . . . . . . . .  C ADDR  0676H  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0AF6H  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  01D7H  
UP1A . . . . . . . . . . . . . .  C ADDR  0205H  
UP1_MB1. . . . . . . . . . . . .  C ADDR  0330H  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  0356H  
UP1_MB2. . . . . . . . . . . . .  C ADDR  0248H  
UP1_MB2A . . . . . . . . . . . .  C ADDR  026EH  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  02AEH  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  0385H  
UP1_STOP_C . . . . . . . . . . .  C ADDR  039FH  
UP2. . . . . . . . . . . . . . .  C ADDR  051FH  
DEBUG                                                                                                         PAGE 89

UP2A . . . . . . . . . . . . . .  C ADDR  0551H  
UP2_MB1. . . . . . . . . . . . .  C ADDR  0680H  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  06A6H  
UP2_MB2. . . . . . . . . . . . .  C ADDR  0594H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  05BEH  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  05FEH  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  06D5H  
UP2_STOP_C . . . . . . . . . . .  C ADDR  06EFH  
UP3. . . . . . . . . . . . . . .  C ADDR  09B4H  
UP3A . . . . . . . . . . . . . .  C ADDR  09E6H  
UP3ERR . . . . . . . . . . . . .  C ADDR  0A12H  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0A22H  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0AC3H  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0AE9H  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0A3CH  
UP3_MB2A . . . . . . . . . . . .  C ADDR  0A66H  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0A92H  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0AA2H  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WDTRST . . . . . . . . . . . . .  D ADDR  00A6H  NOT USED  
WRITEPORTS . . . . . . . . . . .  C ADDR  117FH  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
_1 . . . . . . . . . . . . . . .  C ADDR  1207H  
_2 . . . . . . . . . . . . . . .  C ADDR  120CH  
