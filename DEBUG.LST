DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    
                =1    41    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    42    i8255INA        equ     080h
  0081          =1    43    i8255INB        equ     081h
  0082          =1    44    i8255INC        equ     082h
  0083          =1    45    i8255INCW       equ     083h
  00C0          =1    46    i8255OUTA       equ     0c0h
  00C1          =1    47    i8255OUTB       equ     0c1h
  00C2          =1    48    i8255OUTC       equ     0c2h
  00C3          =1    49    i8255OUTCW      equ     0c3h
                =1    50    
                =1    51    ; bitovo adresovatelne bunky
                =1    52    ;               data    20h    ; toto vyuziva emulator
  0021          =1    53    INPORTB         data    21h    ; nutne kvoli emulatoru!!! 
  0022          =1    54    INPORTC         data    22h
  0023          =1    55    OUTPORTA        data    23h
  0024          =1    56    OUTPORTB        data    24h
  0025          =1    57    OUTPORTC        data    25h
  0026          =1    58    INPORTBold      data    26h
DEBUG                                                                                                         PAGE 2

  0027          =1    59    CTRLREG         data    27h
  0028          =1    60    INPORTA         data    28h
                =1    61    ;               data    29h
  002A          =1    62    ERRFLOOR_U      data    2Ah
  002B          =1    63    ERRFLOOR_D      data    2Bh
  002C          =1    64    T_F                       data    2Ch
  002D          =1    65    T2_C                    data      2Dh      ;toto tu nemusi byt, netreba mi bitovo adresovate
                                                                               lne
  002E          =1    66    T0_C            data      2Eh
  002F          =1    67    T2              data    2Fh  
                =1    68    ; general purpose RAM (including STACK)
  0030          =1    69    POSITION        data    30h
  0031          =1    70    LOWEST          data    31h
  0032          =1    71    HIGHEST         data    32h
  0033          =1    72    STOPTIMER       data    33h
  0034          =1    73    OUTPORTBold     data    34h
  0035          =1    74    ERRF1_C         data    35h
  0036          =1    75    ERRF2_C         data    36h
  0037          =1    76    ERRF3_C         data    37h
  0038          =1    77    ERRF4_C         data    38h
  0039          =1    78    ERRF12_C        data    39h
  003A          =1    79    ERRF23_C        data    3Ah
  003B          =1    80    ERRF34_C        data    3Bh
  003C          =1    81    G                           data    3Ch
  003D          =1    82    D1                  data    3Dh
  003E          =1    83    D2              data    3Eh
  003F          =1    84    ERRSKRH_C       data    3Fh
  0040          =1    85    ERRSKRD_C       data    40h 
  0041          =1    86    ERRSIG          data    41h
                =1    87       
  0042          =1    88    MSG_LEN                     data          42h
  0043          =1    89    MSG_PTR_R                   data          43h
  0044          =1    90    MSG_PTR_S                   data          44h
  0045          =1    91    MSG_PTR_REC               data    45h
                =1    92    
  0046          =1    93    POSCHODIE       data    46h
  0047          =1    94    PORUCHA         data    47h
                =1    95    
                =1    96                 
                =1    97    
                =1    98    
                =1    99    ;                       50h - vyssie - stack!
                =1   100    
                =1   101    
                =1   102    
  0060          =1   103    T0_F                    bit         T_F.0
  007A          =1   104    T2_F                    bit         T2.2
  0061          =1   105    S_RI                          bit                 T_F.1
  0063          =1   106    TRE             bit     T_F.3
  0064          =1   107    FLOORTIME       bit     T_F.4
                =1   108    
  0051          =1   109    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1   110    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1   111    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1   112    ERRF4_U         bit     ERRFLOOR_U.4  
                =1   113    
  0052          =1   114    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1   115    ERRF23_U        bit     ERRFLOOR_U.3
DEBUG                                                                                                         PAGE 3

  0054          =1   116    ERRF34_U        bit     ERRFLOOR_U.4   
                =1   117    
  0059          =1   118    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1   119    ERRF2_D         bit     ERRFLOOR_D.2
  005B          =1   120    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1   121    ERRF4_D         bit     ERRFLOOR_D.4   
                =1   122    
  0059          =1   123    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1   124    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1   125    ERRF34_D        bit     ERRFLOOR_D.3
                =1   126    
  0040          =1   127    STOPNOT         bit     INPORTA.0
  0041          =1   128    PKI1            bit     INPORTA.1
  0042          =1   129    PKI2            bit     INPORTA.2
  0043          =1   130    PKI3            bit     INPORTA.3
  0044          =1   131    PKI4            bit     INPORTA.4
  0045          =1   132    DOORCLSD        bit     INPORTA.5 
                =1   133    
  0009          =1   134    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   135    MB2             bit     INPORTB.2
  000B          =1   136    SKRH            bit     INPORTB.3
  000C          =1   137    SKRD            bit     INPORTB.4
  000D          =1   138    DP              bit     INPORTB.5
  000E          =1   139    DPZK            bit     INPORTB.6
  000F          =1   140    DPK             bit     INPORTB.7
                =1   141    
  0031          =1   142    MB1old          bit     INPORTBold.1
  0032          =1   143    MB2old          bit     INPORTBold.2
  0033          =1   144    SKRHold         bit     INPORTBold.3
  0034          =1   145    SKRDold         bit     INPORTBold.4
                =1   146    
  0010          =1   147    PI1             bit     INPORTC.0
  0011          =1   148    PI2D            bit     INPORTC.1
  0012          =1   149    PI2U            bit     INPORTC.2
  0013          =1   150    PI3D            bit     INPORTC.3
  0014          =1   151    PI3U            bit     INPORTC.4
  0015          =1   152    PI4             bit     INPORTC.5
                =1   153    
  0018          =1   154    KS              bit     OUTPORTA.0
  0019          =1   155    PKO1            bit     OUTPORTA.1
  001A          =1   156    PKO2            bit     OUTPORTA.2
  001B          =1   157    PKO3            bit     OUTPORTA.3
  001C          =1   158    PKO4            bit     OUTPORTA.4
                =1   159    
  0020          =1   160    UP              bit     OUTPORTB.0
  0021          =1   161    DOWN            bit     OUTPORTB.1
  0022          =1   162    FAST            bit     OUTPORTB.2
  0023          =1   163    SLOW            bit     OUTPORTB.3
  0024          =1   164    FLED1           bit     OUTPORTB.4
  0025          =1   165    FLED2           bit     OUTPORTB.5
  0026          =1   166    FLED3           bit     OUTPORTB.6
  0027          =1   167    FLED4           bit     OUTPORTB.7
                =1   168    
  0028          =1   169    PO1U            bit     OUTPORTC.0
  0028          =1   170    PO1D            bit     OUTPORTC.0
  0028          =1   171    PO1             bit     OUTPORTC.0
  0029          =1   172    PO2D            bit     OUTPORTC.1
  002A          =1   173    PO2U            bit     OUTPORTC.2
DEBUG                                                                                                         PAGE 4

  002B          =1   174    PO3D            bit     OUTPORTC.3
  002C          =1   175    PO3U            bit     OUTPORTC.4
  002D          =1   176    PO4             bit     OUTPORTC.5
  002D          =1   177    PO4U            bit     OUTPORTC.5
  002D          =1   178    PO4D            bit     OUTPORTC.5
  002E          =1   179    LEDD            bit     OUTPORTC.6
  002F          =1   180    LEDU            bit     OUTPORTC.7
                =1   181    
  0038          =1   182    STOPPED         bit     CTRLREG.0
  0039          =1   183    DOORCLSDold     bit     CTRLREG.1
  003A          =1   184    UPold           bit     CTRLREG.2
  003B          =1   185    DOWNold         bit     CTRLREG.3
  003C          =1   186    FASTold         bit     CTRLREG.4
  003D          =1   187    SLOWold         bit     CTRLREG.5
                =1   188    
  00B6          =1   189    WRNOT           bit     0B6h        ; p3.6
  00B7          =1   190    RDNOT           bit     0B7h        ; p3.7
                =1   191    
                =1   192    ; bitove masky
                =1   193    ; 8255OUT 
                =1   194    ; port A
  0001          =1   195    bmKS              equ    00000001b
  0002          =1   196    bmPKO1            equ    00000010b
  0004          =1   197    bmPKO2            equ    00000100b
  0008          =1   198    bmPKO3            equ    00001000b
  0010          =1   199    bmPKO4            equ    00010000b
                =1   200    
                =1   201    ; port B
  0001          =1   202    bmUP              equ    00000001b
  0002          =1   203    bmDOWN            equ    00000010b
  0004          =1   204    bmFAST            equ    00000100b
  0008          =1   205    bmSLOW            equ    00001000b
  0010          =1   206    bmFLED1           equ    00010000b
  0020          =1   207    bmFLED2           equ    00100000b
  0040          =1   208    bmFLED3           equ    01000000b
  0080          =1   209    bmFLED4           equ    10000000b
                =1   210    
                =1   211    ; port C
  0001          =1   212    bmPO1             equ    00000001b
  0002          =1   213    bmPO2D            equ    00000010b
  0004          =1   214    bmPO2U            equ    00000100b
  0008          =1   215    bmPO3D            equ    00001000b
  0010          =1   216    bmPO3U            equ    00010000b
  0020          =1   217    bmPO4             equ    00100000b
  0040          =1   218    bmLEDD            equ    01000000b
  0080          =1   219    bmLEDU            equ    10000000b
                =1   220    
                =1   221    ; 8255IN
                =1   222    ; port A
  0001          =1   223    bmSTOP            equ    00000001b
  0002          =1   224    bmPKI1            equ    00000010b
  0004          =1   225    bmPKI2            equ    00000100b
  0008          =1   226    bmPKI3            equ    00001000b
  0010          =1   227    bmPKI4            equ    00010000b
  0020          =1   228    bmDOORCLSD        equ    00100000b
                =1   229    
                =1   230    ; port B
  0002          =1   231    bmMB1I            equ    00000010b
DEBUG                                                                                                         PAGE 5

  0004          =1   232    bmMB2I            equ    00000100b
  0008          =1   233    bmSKRHI           equ    00001000b
  0010          =1   234    bmSKRHD           equ    00010000b
  0020          =1   235    bmDPI             equ    00100000b
  0040          =1   236    bmDPZKI           equ    01000000b
  0080          =1   237    bmDPKI            equ    10000000b
                =1   238    
                =1   239    ; port C
  0001          =1   240    bmPI1             equ    00000001b
  0002          =1   241    bmPI2D            equ    00000010b
  0004          =1   242    bmPI2U            equ    00000100b
  0008          =1   243    bmPI3D            equ    00001000b
  0010          =1   244    bmPI3U            equ    00010000b
  0020          =1   245    bmPI4             equ    00100000b
                =1   246    
                =1   247    $include (macroLib.inc)
                =1   248    ;*******************************************************************************
                =1   249    ;   Sofrverovy breakpoint
                =1   250    ;-------------------------------------------------------------------------------
                =1   251    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   252    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   253    ;     nastaveny na hodnotu <INT1>
                =1   254    ;
                =1   255    ;     Emulator -> Configuration -> Single step interrupt
                =1   256    ;
                =1   257    _BP_    MACRO 
                =1   258            clr     P3.3
                =1   259            setb    EX1
                =1   260            nop
                =1   261    ENDM
                =1   262    
                =1   263    
                =1   264    ;*******************************************************************************
                =1   265    ;   CFCSS - kontrolne instrukcie
                =1   266    ;-------------------------------------------------------------------------------
                =1   267    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   268    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   269    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   270    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   271    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   272    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   273    ;
                =1   274    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   275            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   276            IF (Dx <> -1)
                =1   277                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   278                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   279            ENDIF    
                =1   280            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   281            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   282            IF (D1val <> -1)
                =1   283                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   284            ELSE
                =1   285                mov         D1, #32        ;; Nastavenie priznaku <D1> na hodnotu mimo rozsahu 
                                                                               
                =1   286            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   287            IF (D2val <> -1)
DEBUG                                                                                                         PAGE 6

                =1   288                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   289            ELSE
                =1   290                mov         D2, #32        ;; Nastavenie priznaku <D2> na hodnotu mimo rozsahu 
                                                                               
                =1   291            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   292            mov       A, #s
                =1   293            IF (DEBUG_VYPISY)
                =1   294                lcall     PRINTCHAR        ;; Vypis aktualneho <s> na seriovu linku
                =1   295            ENDIF
                =1   296    ENDM
                =1   297    
                =1   298    
                =1   299    ;*******************************************************************************
                =1   300    ;   Instrukcie pre casovace a pocitadla
                =1   301    ;-------------------------------------------------------------------------------
                =1   302    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   303    ;     priznak <T2_F>    
                =1   304    ;
                =1   305    TIMER2  MACRO  VAL
                =1   306               mov           T2_C, #VAL                              ;; 3 sekundy
                =1   307                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   308                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   309    ENDM
                =1   310    
                =1   311    
                =1   312    ;*******************************************************************************
                =1   313    ;   Sprava KEEPALIVE
                =1   314    ;-------------------------------------------------------------------------------
                =1   315    ;     Odošle správu keepalive (00h, 00h, 7eh)
                =1   316    ;
                =1   317    SEND_KEEPALIVE   MACRO
                =1   318          mov     A, #0h
                =1   319          lcall   PRINTCHAR
                =1   320          lcall   PRINTCHAR 
                =1   321          mov     A, #7Eh 
                =1   322          lcall   PRINTCHAR 
                =1   323    ENDM
                =1   324    
                =1   325    ;*******************************************************************************
                =1   326    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   327    ;-------------------------------------------------------------------------------
                =1   328    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   329    ;
                =1   330    
                =1   331    ; Long jump if zero
                =1   332    LJZ     MACRO   NAVESTIE
                =1   333            jnz     $+5
                =1   334            ljmp    NAVESTIE
                =1   335            nop
                =1   336    ENDM
                =1   337    
                =1   338    ; Long jump if not zero
                =1   339    LJNZ    MACRO   NAVESTIE
                =1   340            jz      $+5
                =1   341            ljmp    NAVESTIE
                =1   342            nop
DEBUG                                                                                                         PAGE 7

                =1   343    ENDM
                =1   344    
                =1   345    ; Long jump if bit set
                =1   346    LJB     MACRO   TESTBIT, NAVESTIE
                =1   347            jnb     TESTBIT, $+6
                =1   348            ljmp    NAVESTIE
                =1   349            nop
                =1   350    ENDM
                =1   351    
                =1   352    ; Long jump if bit not set
                =1   353    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   354            jb      TESTBIT, $+6
                =1   355            ljmp    NAVESTIE
                =1   356            nop
                =1   357    ENDM
                =1   358    
                =1   359    ; Compare & long jump if not equal
                =1   360    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   361            cjne    OP1, OP2, $+6
                =1   362            jmp     $+6
                =1   363            ljmp    NAVESTIE
                =1   364            nop
                =1   365    ENDM
                =1   366    
                =1   367    ; Compare & jump if equal
                =1   368    CJE     MACRO   OP1, OP2, NAVESTIE
                =1   369            cjne    OP1, OP2, $+6
                =1   370            ljmp     NAVESTIE
                =1   371            nop
                =1   372    ENDM
                =1   373    
                =1   374    ; Long call if bit set
                =1   375    LCALLB  MACRO   TESTBIT, NAVESTIE
                =1   376            jnb     TESTBIT, $+6
                =1   377            lcall   NAVESTIE
                =1   378            nop
                =1   379    ENDM
                =1   380    
                =1   381    ; Compare & Long call if equal
                =1   382    CLCALLE MACRO   OP1, OP2, NAVESTIE
                =1   383            cjne    OP1, OP2, $+6
                =1   384            lcall   NAVESTIE
                =1   385            nop
                =1   386    ENDM
                =1   387    
                =1   388    ;*******************************************************************************
                =1   389    ;   Modifikacie instrukcii x51
                =1   390    ;-------------------------------------------------------------------------------
                =1   391    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   392    ;
                =1   393    
                =1   394    ;Logical and (bit operands)
                =1   395    ANLB   MACRO   BIT1, BIT2
                =1   396            mov   C, BIT1
                =1   397            anl   C, /BIT2
                =1   398            mov   BIT1, C
                =1   399    ENDM
                =1   400    
DEBUG                                                                                                         PAGE 8

                =1   401    ; Compare & long jump if equal
                =1   402    LCJE     MACRO   OP1, OP2, NAVESTIE
                =1   403            cjne    OP1, OP2, $+7
                =1   404            jmp    NAVESTIE
                =1   405            nop
                =1   406    ENDM
                =1   407    
                =1   408    
                =1   409    ;*******************************************************************************
                =1   410    ;   Privolavace, signalizácia polohy a smeru kabiny
                =1   411    ;-------------------------------------------------------------------------------
                =1   412    ;
                =1   413    ;   Signalizacia polohy kabiny
                =1   414    ;
                =1   415    ;     Signalizuje polohu kabiny na signalizacnom paneli.  
                =1   416    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   417    ;     Vykonane zmeny sa zapisu na porty     
                =1   418    ;
                =1   419    POLOHA_LED  MACRO  POLOHA
                =1   420            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   421            setb    FLED&POLOHA
                =1   422            lcall   WRITEPORTS
                =1   423    ENDM
                =1   424    
                =1   425    ;   Zrusenie volby vybraneho poschodia
                =1   426    ;
                =1   427    ;     Zrusi volbu vybraneho poschodia <POSCH>. Volba   
                =1   428    ;     sa zrusi v kabine ako aj v oboch smeroch na poschodi.
                =1   429    ;
                =1   430    ZRUS_POSCH  MACRO POSCH
                =1   431            clr     PKO&POSCH       ;; vynulovanie volby poschodia na ktorom stojim
                =1   432            clr     PO&POSCH&U      ;;
                =1   433            clr     PO&POSCH&D      ;;
                =1   434            lcall   WRITEPORTS
                =1   435    ENDM
                =1   436    
                =1   437    ;   Rozsvietenie kabinoveho svetla a smerovej signalizacie 
                =1   438    ;
                =1   439    ;     Rozsvieti kabinove svetlo a obe sibky smerovej
                =1   440    ;     signalizacie ak sa v kabine nachadza obsluhyschopna
                =1   441    ;     osoba. V opacnom pripade svetlo a signalizaciu
                =1   442    ;     zhasne.
                =1   443    ;
                =1   444    KABINOVE_SVETLO MACRO
                =1   445            mov      C, DP          ;; Ak je nieko v kabine,
                =1   446            orl      C, DPZK        ;;
                =1   447            orl      C, DPK         ;;
                =1   448            mov      KS, C          ;;   - v kabine zapalime svetlo. Ak nie, bude zhasnute.
                =1   449            mov      LEDU, C        ;;   - Rozsvietime signalizaciu do oboch smerov. Ak nie, zha
                                                                               sneme.
                =1   450            mov      LEDD, C        ;;
                =1   451            lcall   WRITEPORTS      ;;
                =1   452    ENDM
                =1   453    
                =1   454    ;   Rozsvieti obe smerove LED diody (signalizacia, ze kabina stoji)
                =1   455    ;
                =1   456    ROZSVIET_SMER_LED MACRO
DEBUG                                                                                                         PAGE 9

                =1   457            setb    LEDU            ;
                =1   458            setb    LEDD            ;
                =1   459            lcall   WRITEPORTS      ;
                =1   460    ENDM
                =1   461    
                =1   462    ;   Zistenie, ci obsluhyschopna osoba zvolila poschodie
                =1   463    ;      
                =1   464    ;     Zistenie, či obsluhyschopna osoba v kabine vytahu 
                =1   465    ;     stlacila niektoru z volieb poschodi v kabine.
                =1   466    ;     V pripade, ze v kabine sa nachadza obsluhyschopna 
                =1   467    ;     osoba a volba zatial nebola uskutocnena, skoci sa 
                =1   468    ;     na <NAVESTIE>      
                =1   469    ;        
                =1   470    JE_VYBRATE_POSCHODIE MACRO NAVESTIE
                =1   471            mov      C, DP         ;; Ak sa nachadza v kabine osoba, 
                =1   472            orl      C, DPZK        ;;
                =1   473            orl      C, DPK         ;;
                =1   474            jnc      $+8            ;;
                =1   475            mov      A, INPORTA     ;;
                =1   476            anl      A, #00011110b  ;; ...a nie je vybrata ziadna volba (v kabine)
                =1   477            jz       NAVESTIE       ;; skoc na navestie
                =1   478    ENDM
                =1   479    
                =1   480    
                =1   481    ;*******************************************************************************
                =1   482    ;   Rychlost a smer pohybu motora
                =1   483    ;-------------------------------------------------------------------------------
                =1   484    ;
                =1   485    ;   Nastavenie smeru pohybu motora - hore
                =1   486    SET_UP MACRO
                =1   487            setb     UP
                =1   488            clr      DOWN
                =1   489            setb     LEDU
                =1   490            clr      LEDD 
                =1   491    ENDM
                =1   492    
                =1   493    ;   Nastavenie smeru pohybu motora - dole
                =1   494    SET_DOWN MACRO
                =1   495            clr     UP
                =1   496            setb    DOWN
                =1   497            clr     LEDU
                =1   498            setb    LEDD 
                =1   499    ENDM
                =1   500    
                =1   501    ;   Nastavenie rychlosti pohybu motora - rychlo
                =1   502    SET_FAST MACRO
                =1   503            setb     FAST
                =1   504            clr      SLOW
                =1   505            setb     KS      
                =1   506    ENDM
                =1   507    
                =1   508    ;   Nastavenie smeru pohybu motora - hore
                =1   509    SET_SLOW MACRO
                =1   510            setb     SLOW
                =1   511            clr      FAST
                =1   512            setb     KS
                =1   513    ENDM
                =1   514     
DEBUG                                                                                                         PAGE 10

                =1   515      
                     516                       
                     517    
                     518    ; Definicie registrov pre Keil uVision
  00C8               519    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00C9               520    T2MOD  DATA  0C9H  ;TIMER 2 MODE
  00CA               521    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               522    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               523    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               524    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               525    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
  00A6               526    WDTRST DATA  0A6H  ;Watchdog timer
                     527    
                     528    
  0000               529    COUNT           SET    0
  0000               530    DEBUG_VYPISY    SET    0
                     531    
                     532    ;*******************************************************************************
                     533    ;   Oznacenie poruchoveho poschodia 
                     534    ;-------------------------------------------------------------------------------
                     535    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     536    ;
                     537    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     538                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     539                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     540            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
                     541            COUNT    SET    COUNT+1                   
                     542            
                     543            jb      TESTBIT, ENDD&LABEL
                     544            
                     545            IF (TESTBIT EQ MB2)
                     546                mov   PORUCHA, #3 ;porucha 011 - EZ
                     547            ENDIF 
                     548            IF (TESTBIT EQ MB1)
                     549                mov   PORUCHA, #1 ;porucha 001 - E1S
                     550            ENDIF 
                     551            
                     552            jnb     PKI&POSCH, $+9
                     553            clr     FAST
                     554            setb    SLOW
                     555            setb    STOPPED         
                     556            setb    FLOORBIT&_U
                     557            setb    FLOORBIT&_D
                     558            inc     FLOORBIT&_C
                     559                        clr     PKO&POSCH                           ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     560            clr     PO&POSCH&U            
                     561            clr     PO&POSCH&D              
                     562                        lcall   WRITEPORTS
                     563            ljmp    NAVESTIE
                     564    ENDD&LABEL:
                     565            nop
DEBUG                                                                                                         PAGE 11

                     566    ENDM
                     567    
                     568    ;*******************************************************************************
                     569    ;   Odstranenie oznacenia poruchoveho poschodia 
                     570    ;-------------------------------------------------------------------------------
                     571    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     572    ;
                     573    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     574            clr    FLOORBIT&_U
                     575            clr    FLOORBIT&_D
                     576            ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
                     577            nop
                     578    ENDM
                     579    
                     580    ;*******************************************************************************
                     581    ;   Osetrenie zakmitov clonky
                     582    ;-------------------------------------------------------------------------------
                     583    ;        
                     584    ;
                     585    ZAKMITC MACRO   TYPCLONKY
                     586            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     587            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     588            jnb     TYPCLONKY, $-3  ; 
                     589            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     590    ENDM
                     591    
                     592    ZASTAV  MACRO  C_POSCH, SMER
                     593                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     594            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     595            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     596            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     597            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     598            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     599            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     600            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
                     601            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     602            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     603    ENDM
                     604    
                     605    NAJNIZSIE  MACRO
                     606            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     607            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     608            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     609    
                     610            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     611            ANLB    ACC.2, ERRF2_D  ; |
                     612            ANLB    ACC.3, ERRF2_D  ; |
DEBUG                                                                                                         PAGE 12

                     613            ANLB    ACC.4, ERRF3_D  ; |
                     614            ;ANLB    ACC.5, ERRF3_D  ; |
                     615    
                     616            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     617     ; LL1: 
                     618            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     619            clr     C               ; Inak shiftnem o 2
                     620            rlc     A               ;
                     621            clr     C               ;
                     622            rlc     A               ;
                     623            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     624    ; LL2:
                     625            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     626    ENDM
                     627    
                     628    NAJVYSSIE  MACRO
                     629            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     630            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     631            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     632            
                     633            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     634            ANLB    ACC.3, ERRF2_U  ; |
                     635            ANLB    ACC.4, ERRF3_U  ; |
                     636            ANLB    ACC.5, ERRF3_U  ; |
                     637            ;ANLB    ACC.6, ERRF4_U  ; |
                     638            
                     639            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     640     ; LL1: 
                     641            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     642            clr     C               ; Inak shiftnem o 2
                     643            rrc     A               ;
                     644            clr     C               ;
                     645            rrc     A               ;
                     646            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     647    ; LL2:
                     648            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     649            clr     C               ;
                     650            subb    A, R0           ;
                     651    ENDM
                     652    
                     653    VYSSIE_KABINA  MACRO  POSCH
                     654            mov     A, INPORTA
                     655            anl     A, #00011110b
                     656            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     657            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     658            xrl     B, #0FFH
                     659            anl     A, B
                     660            clr     C
                     661            rrc     A
                     662    ;LL1    
DEBUG                                                                                                         PAGE 13

                     663            mov     R0, #&POSCH
                     664            clr     C
                     665            rrc     A
                     666            djnz    R0, $-2;LL1
                     667    ENDM
                     668    
                     669    NIZSIE_KABINA  MACRO  POSCH
                     670            mov     A, #5
                     671            clr     C
                     672            subb    A, #&POSCH
                     673            mov     R0, A
                     674            mov     A, INPORTA
                     675            anl     A, #00011110b
                     676            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     677            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     678            xrl     B, #0FFH
                     679            anl     A, B
                     680            clr     C
                     681            rlc     A
                     682            clr     C
                     683            rlc     A
                     684            clr     C
                     685            rlc     A
                     686    ;LL1   
                     687            clr     C
                     688            rlc     A
                     689            djnz    R0, $-2;LL1
                     690    ENDM
                     691    
                     692    
                     693    
                     694    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               695    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     696                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     697                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
  0014               698    TIMER0CONST     equ     20      ; pouziva sa pri Timer0, ktory sluzi na rozblikanie LEDiek p
                                                                               ri poruche. Hodnota 20 je 1 sekunda (1=50
                                                                               ms)
                     699    ;osetrenie vektorov preruseni
0000                 700            org     0000h           ; adresa odkial startuje program po resete
0000 020033          701            ljmp    START           ; skok na zaciatok kodu programu
                     702            
000B                 703            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 0210C1          704            ljmp    INT_TIMER0      ; pre casovac T0
                     705            
0023                 706            org       0023h           ; v tejto casti pamati je vektor prerusenia
0023 021277          707                        ljmp          SERIAL_INT              ; seriovej linky 
                     708        
002B                 709            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 021258          710                        ljmp    INT_TIMER2      ; pre casovac T2   
                     711                  
0033                 712            org     0033h           ; od tejto adresy sa zacina kod programu
                     713            
0033                 714    START:
0033                 715    RESET:  
                     716            ; riadiace signaly do pasivnej urovne 
DEBUG                                                                                                         PAGE 14

0033 D2B6            717            setb    WRNOT
0035 D2B7            718            setb    RDNOT
0037 753300          719            mov     STOPTIMER, #0
003A 758150          720            mov     SP, #STACK
                     721    
                     722            ; pockame si na inicializaciu obvodov 8255  
003D 7900            723            mov     R1, #0 
003F 7AFF            724            mov     R2, #0ffh
0041 D9FE            725            djnz    R1, $
0043 DAFC            726            djnz    R2, $-2
                     727            
                     728            ; teraz ich mozeme nastavit
0045 75809B          729            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          730            mov     p2, #i8255INCW
004B C2B6            731            clr     WRNOT
004D 00              732            nop
004E 00              733            nop
004F 00              734            nop
0050 00              735            nop
0051 D2B6            736            setb    WRNOT
0053 758080          737            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          738            mov     p2, #i8255OUTCW
0059 C2B6            739            clr     WRNOT
005B 00              740            nop
005C 00              741            nop
005D 00              742            nop
005E 00              743            nop
005F D2B6            744            setb    WRNOT
                     745            
                     746            ; nastavenie preruseni 
0061 C28E            747            clr     TR1                 ; zastavi sa citac T1
0063 759852          748            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     749                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     750                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     751                                        ; RI=0 (prijimaci register - nebol prijaty znak)
                     752            ;mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu                    
                                                                                            <<< 
0066 758921          753            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     754                                        ; T1: mod 1 - 16 bitove pocitadlo
                     755                                        ; GATE=0 (programove riadenie casovaca)
                     756                                        ; C/T#=0 interne hodiny/12
                     757                                        ; T0: mod 1 - 16 bitove pocitadlo
                     758                                        ; GATE=0 (programove riadenie casovaca)
                     759                                        ; C/T#=0 interne hodiny/12
0069 758740          760            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006C 758B00          761            mov     TL1, #000h          ; inicializacia casovaca T1
006F 758DFA          762            mov     TH1, #0FAh          ; 
0072 758A00          763            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h            
                                                                                    <<<
0075 758C4C          764            mov     TH0, #04Ch                                      ;                           
                                                                                                                        
                                                                                   <<<
0078 75C800          765                        mov           T2CON,  #0                        ; Auto-reload mod
007B 75CA00          766                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
DEBUG                                                                                                         PAGE 15

                                                                               592/12*1 = 0,9216 MHz
007E 75CB4C          767                        mov           RCAP2H, #4Ch;             ; (50ms)
0081 D2AD            768                        setb          ET2                                           ; Enable Tim
                                                                               er2 interrupt
                     769            
                     770            
                     771            
0083 D28C            772            setb    TR0                 ;                                                       
                                                                                            <<<
0085 C2A9            773            clr     ET0
0087 D28E            774            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     775            
                     776            ;clr     TI
                     777            ;clr     RI
                     778            ;setb    TRE
0089 D2AC            779            setb      ES                    ; enable serial interrupt       
008B 754500          780                        mov           MSG_PTR_REC, #0h
008E C261            781                        clr           S_RI
                     782            
                     783    
                     784            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
0090 752800          785            mov     INPORTA, #0
0093 75211E          786            mov     INPORTB, #01eh      ; vsetky clonky pasivne
0096 752200          787            mov     INPORTC, #0
0099 75231E          788            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
009C 7524F0          789            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
009F 7525FF          790            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
00A2 D218            791            setb    KS
00A4 C238            792            clr     STOPPED
00A6 1211E7          793            call    WRITEPORTS          ; zapis novu informaciu
                     794    
00A9 752300          795            mov     OUTPORTA, #0
00AC 752400          796            mov     OUTPORTB, #0
00AF 752500          797            mov     OUTPORTC, #0
00B2 1211E7          798            call    WRITEPORTS          ; zapis novu informaciu
                     799            
                     800            ;----------------------------------------------------
                     801            ;mov     DPTR, #STR_RESET    ; vypis info 
                     802            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     803            
                     804            ;TIMER2  200
                     805            ;jnb              T2_F, $                               ; Uz presiel cas?
                     806            
                     807            ;clr     DOWN                ; ZASTAVIME KABINU
                     808            ;clr     FAST                ; a rychlo
                     809            ;clr     SLOW                ;                           
                     810            ;clr     UP                  ;
                     811            ;lcall   WRITEPORTS          ; zapis informaciu 
                     812            ;mov     DPTR, #STR_WDT      ; vypis info 
                     813            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     814            ;mov     WDTRST, #01Eh
                     815            ;mov     WDTRST, #0E1h
                     816            
                     817            ;----------------------------------------------------
                     818    
00B5 752800          819            mov     INPORTA, #0
00B8 752100          820            mov     INPORTB, #0         
DEBUG                                                                                                         PAGE 16

00BB 752200          821            mov     INPORTC, #0
00BE 121180          822            call    READPORTS           ; prvotne nacitanie udajov
                     823            
00C1 752A00          824            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00C4 752B00          825            mov     ERRFLOOR_D, #0h      
                     826    
                     827            IF (DEBUG_VYPISY)
                     828                mov     DPTR, #STR_INIT         ; vypis info 
                     829                lcall   DISPSTR                 ; o inicializacii
                     830            ENDIF
                     831            
                     832                   
00C7                 833    CALIB:
                     834            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     835            ;setb    TR0
00C7 121180          836            lcall   READPORTS                   ; precitaj, co je na portoch
00CA 300C13          837            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00CD D221            838            setb    DOWN                        ; inak pod dole
00CF D222            839            setb    FAST                        ; a rychlo
00D1 C223            840            clr     SLOW                        ;
00D3 C220            841            clr     UP                
00D5 1211E7          842            lcall   WRITEPORTS                  ; zapis informaciu 
00D8                 843    CALIBLOOP:
00D8 121180          844            lcall   READPORTS                   ; 
00DB 300C02          845            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00DE 80F8            846            jmp     CALIBLOOP
00E0                 847    CALIBEND:                              
00E0 C222            848            clr     FAST                        ; zastavime v tomto smere
00E2 C221            849            clr     DOWN                        ;
00E4 D223            850            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00E6 D220            851            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00E8 1211E7          852            lcall   WRITEPORTS 
00EB                 853    CALIBEND2:
00EB 121180          854            lcall   READPORTS                   ; 
00EE 2009FA          855            jb      MB1, CALIBEND2              ; 
00F1 C223            856            clr     SLOW                        ; A teraz sme uz naozaj spravne
00F3 C220            857            clr     UP                          ; 
00F5 D224            858            setb    FLED1
00F7 1211E7          859            lcall   WRITEPORTS                  ; zapis informaciu
                     860            ;clr     TR0
                     861            ;_BP_
                     862            IF (DEBUG_VYPISY)
                     863                mov     DPTR, #STR_INIT             ; vypis info o kalibracii
                     864                lcall   DISPSTR                     ;
                     865            ENDIF
00FA                 866    MAIN:
                     867    
                     868    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     869    ; ****************************************************************************
                     870    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     871    ; ----------------------------------------------------------------------------
                     872    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     873    ; ----------------------------------------------------------------------------
                     874    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     875    ; ****************************************************************************
                     876    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
DEBUG                                                                                                         PAGE 17

                     877    ; ----------------------------------------------------------------------------
                     878    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     879    ; ----------------------------------------------------------------------------
                     880    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     881    ; ****************************************************************************
                     882    ; POSITION
                     883    ; ****************************************************************************
                     884    
                     885    
                     886    
                     887            ;mov     R5, #0
                     888            ;mov     R6, #20
00FA D2A9            889            setb    ET0;                                                                        
                                                                                                                        
                                                                                                           ;<<<<<<<<<<<<
                                                                               <<<<<<
                     890            
00FC 754381          891            mov             MSG_PTR_R, #081h
00FF 7544C1          892            mov             MSG_PTR_S, #0C1h
0102 78C0            893            mov   R0, #0C0H                          
0104 7600            894            mov   @R0, #0h
0106 754700          895            mov   PORUCHA, #0
                     896    
                     897                                                                                              
                     898            ;Inicializacia priznakov (CFCSS)
0109 753C1E          899            mov             G, #30
010C 753D00          900                        mov         D1, #0
010F 753E00          901            mov             D2, #0
                     902            IF (DEBUG_VYPISY)
                     903                mov   DPTR, #STR_CFC_START         ; vypis info 
                     904                lcall DISPSTR         ;
                     905            ENDIF
                     906                          
                     907    
                     908    
                     909    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     910    
0112                 911    FLOOR1:
                     912            ;--------------------------
                     913 +1         CFCSS     29, 3, -1, -1, D1
0112 633C03          914 +1         xrl             G,  #3             
                     915 +1         IF (D1 <> -1)
0115 E53D            916 +1             mov   A,  D1         
0117 623C            917 +1             xrl   G,  A          
                     918 +1         ENDIF    
0119 E53C            919 +1         mov   A,  G              
                     920 +2         LCJNE A,  #29, CFCERR     
011B B41D03          921 +2         cjne    A, #29, $+6
011E 020124          922 +2         jmp     $+6
0121 02108F          923 +2         ljmp    CFCERR
0124 00              924 +2         nop
                     925 +1         IF (-1 <> -1)
                     926 +1             mov         D1, #-1     
                     927 +1         ELSE
0125 753D20          928 +1             mov         D1, #32        
                     929 +1         ENDIF                    
                     930 +1         IF (-1 <> -1)
DEBUG                                                                                                         PAGE 18

                     931 +1             mov         D2, #-1     
                     932 +1         ELSE
0128 753E20          933 +1             mov         D2, #32        
                     934 +1         ENDIF                    
012B 741D            935 +1         mov       A, #29
                     936 +1         IF (DEBUG_VYPISY)
                     937 +1             lcall     PRINTCHAR        
                     938 +1         ENDIF
                     940            ;--------------------------
                     941 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
012D 53240F          942 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0130 D224            943 +1         setb    FLED1
0132 1211E7          944 +1         lcall   WRITEPORTS
0135 C238            946            clr     STOPPED
                     947 +1         TIMER2  60              ; (Timer - 3s)
0137 752D3C          948 +1            mov           T2_C, #60                              
013A C27A            949 +1                  clr       T2_F                                  
013C D2CA            950 +1                  setb      TR2                                             
013E C264            952            clr     FLOORTIME
                     953 +1         ROZSVIET_SMER_LED
0140 D22F            954 +1         setb    LEDU            ;
0142 D22E            955 +1         setb    LEDD            ;
0144 1211E7          956 +1         lcall   WRITEPORTS      ;
0147 754600          958            mov     POSCHODIE, #00h ; 0000 000 - posch. 1
014A 121180          959    F1S:    lcall   READPORTS       ; nacitanie dat
                     960 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
014D 200A03          961 +1         jb      MB2, $+6
0150 02107B          962 +1         ljmp    ERRFLOOR
0153 00              963 +1         nop
                     965 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0154 200B03          966 +1         jb      SKRH, $+6
0157 02107B          967 +1         ljmp    ERRFLOOR
015A 00              968 +1         nop
                     970 +1         ZRUS_POSCH 1
015B C219            971 +1         clr     PKO1       
015D C228            972 +1         clr     PO1U      
015F C228            973 +1         clr     PO1D      
0161 1211E7          974 +1         lcall   WRITEPORTS
                     976    
                     977 +1         LCALLB          S_RI, RCV_MESSAGE
0164 306103          978 +1         jnb     S_RI, $+6
0167 1212AC          979 +1         lcall   RCV_MESSAGE
016A 00              980 +1         nop
                     982            
016B 206403          983            jb       FLOORTIME, $+6 ; Ak uz raz presiel stanoveny cas na poschodi, nasledujucu i
                                                                               nstrukciu preskakujeme
016E 307AD9          984            jnb                T2_F, F1S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
0171 D264            985            setb     FLOORTIME      ; Nastav priznak, ze uz sme cakaly 3 s, Teraz sa uz mozme po
                                                                               hnut kedykolvek
                     986            
0173 307A14          987            jnb      T2_F, F1_KEEPALIVE_CONT
                     988 +1         TIMER2  60              ; ...a neurobim to dalsie 3 sekundy
0176 752D3C          989 +1            mov           T2_C, #60                              
0179 C27A            990 +1                  clr       T2_F                                  
017B D2CA            991 +1                  setb      TR2                                             
DEBUG                                                                                                         PAGE 19

                     993 +1         SEND_KEEPALIVE          ; Poslanie KEEPALIVE spravy       
017D 7400            994 +1       mov     A, #0h
017F 12126F          995 +1       lcall   PRINTCHAR
0182 12126F          996 +1       lcall   PRINTCHAR 
0185 747E            997 +1       mov     A, #7Eh 
0187 12126F          998 +1       lcall   PRINTCHAR 
018A                1000    F1_KEEPALIVE_CONT:
                    1001            ;jmp     F1S  
                    1002                           
                    1003 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
018A A20D           1004 +1         mov      C, DP          
018C 720E           1005 +1         orl      C, DPZK        
018E 720F           1006 +1         orl      C, DPK         
0190 9218           1007 +1         mov      KS, C          
0192 922F           1008 +1         mov      LEDU, C        
0194 922E           1009 +1         mov      LEDD, C        
0196 1211E7         1010 +1         lcall   WRITEPORTS      
0199 200FAE         1012            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
019C 3045AB         1013            jnb     DOORCLSD, F1S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1014 +1         JE_VYBRATE_POSCHODIE F1S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
019F A20D           1015 +1         mov      C, DP         
01A1 720E           1016 +1         orl      C, DPZK        
01A3 720F           1017 +1         orl      C, DPK         
01A5 5006           1018 +1         jnc      $+8            
01A7 E528           1019 +1         mov      A, INPORTA     
01A9 541E           1020 +1         anl      A, #00011110b  
01AB 609D           1021 +1         jz       F1S       
01AD                1023    F1C:        
01AD E528           1024            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
01AF 852AF0         1025            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
01B2 53F00C         1026            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
01B5 63F0FF         1027            xrl     B, #0FFH        ; | |
01B8 55F0           1028            anl     A, B            ; | |
01BA 541C           1029            anl     A, #00011100b   ; |
01BC 701A           1030            jnz     F1OK            ; ak ano, podme na to
01BE E522           1031            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
01C0 543E           1032            anl     A, #00111110b   ;
                    1033            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                    1034 +1         ANLB    ACC.2, ERRF2_U  ; |
01C2 A2E2           1035 +1         mov   C, ACC.2
01C4 B052           1036 +1         anl   C, /ERRF2_U
01C6 92E2           1037 +1         mov   ACC.2, C
                    1039 +1         ANLB    ACC.3, ERRF3_U  ; |
01C8 A2E3           1040 +1         mov   C, ACC.3
01CA B053           1041 +1         anl   C, /ERRF3_U
01CC 92E3           1042 +1         mov   ACC.3, C
                    1044 +1         ANLB    ACC.4, ERRF3_U  ; |
01CE A2E4           1045 +1         mov   C, ACC.4
01D0 B053           1046 +1         anl   C, /ERRF3_U
01D2 92E4           1047 +1         mov   ACC.4, C
                    1049            ;ANLB    ACC.5, ERRF4_U  ; |
01D4 7002           1050            jnz     F1OK            ; ak ano, podme na to
01D6 214A           1051            jmp     F1S             ; Nemam sa kde hnut, opakujem
01D8 901775         1052    F1OK:   mov     DPTR, #COM_BUSY ; Poslanie BUSY spravy 
DEBUG                                                                                                         PAGE 20

01DB 121222         1053            lcall   DISPSTR         ;
                    1054 +1         SET_UP                  ; rychly pohyb hore
01DE D220           1055 +1         setb     UP
01E0 C221           1056 +1         clr      DOWN
01E2 D22F           1057 +1         setb     LEDU
01E4 C22E           1058 +1         clr      LEDD 
                    1060 +1         SET_FAST                ; 
01E6 D222           1061 +1         setb     FAST
01E8 C223           1062 +1         clr      SLOW
01EA D218           1063 +1         setb     KS      
01EC 1211E7         1065            lcall   WRITEPORTS      ; 
01EF 0201F2         1066            jmp     UP1             ; prejdi do stavu UP1
                    1067            
                    1068            
01F2                1069    UP1:
                    1070            ;--------------------------
                    1071 +1         CFCSS     20, 9, 27, -1, -1
01F2 633C09         1072 +1         xrl             G,  #9             
                    1073 +1         IF (-1 <> -1)
                    1074 +1             mov   A,  -1         
                    1075 +1             xrl   G,  A          
                    1076 +1         ENDIF    
01F5 E53C           1077 +1         mov   A,  G              
                    1078 +2         LCJNE A,  #20, CFCERR     
01F7 B41403         1079 +2         cjne    A, #20, $+6
01FA 020200         1080 +2         jmp     $+6
01FD 02108F         1081 +2         ljmp    CFCERR
0200 00             1082 +2         nop
                    1083 +1         IF (27 <> -1)
0201 753D1B         1084 +1             mov         D1, #27     
                    1085 +1         ELSE
                    1086 +1             mov         D1, #32        
                    1087 +1         ENDIF                    
                    1088 +1         IF (-1 <> -1)
                    1089 +1             mov         D2, #-1     
                    1090 +1         ELSE
0204 753E20         1091 +1             mov         D2, #32        
                    1092 +1         ENDIF                    
0207 7414           1093 +1         mov       A, #20
                    1094 +1         IF (DEBUG_VYPISY)
                    1095 +1             lcall     PRINTCHAR        
                    1096 +1         ENDIF
                    1098            ;--------------------------
                    1099 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0209 53240F         1100 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
020C D224           1101 +1         setb    FLED1
020E 1211E7         1102 +1         lcall   WRITEPORTS
                    1104 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0211 1210E4         1105 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0214 121180         1106 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0217 3009FA         1107 +1         jnb     MB1, $-3  ; 
021A 1210E4         1108 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
021D 121180         1110    UP1A:   lcall   READPORTS       ; nacitanie dat
                    1111 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0220 200B03         1112 +1         jb      SKRH, $+6
DEBUG                                                                                                         PAGE 21

0223 02105F         1113 +1         ljmp    ERR_SKRH
0226 00             1114 +1         nop
                    1116 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1117 +1                                                                                             
                                                                                                                 
                    1118 +1                                                                                             
                                                                                                                 
                    1119 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001              1120 +1         COUNT    SET    COUNT+1                   
                    1121 +1         
0227 20091E         1122 +1         jb      MB1, ENDD0
                    1123 +1         
                    1124 +1         IF (MB1 EQ MB2)
                    1125 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1126 +1         ENDIF 
                    1127 +1         IF (MB1 EQ MB1)
022A 754701         1128 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1129 +1         ENDIF 
                    1130 +1         
022D 304206         1131 +1         jnb     PKI2, $+9
0230 C222           1132 +1         clr     FAST
0232 D223           1133 +1         setb    SLOW
0234 D238           1134 +1         setb    STOPPED         
0236 D252           1135 +1         setb    ERRF12_U
0238 D259           1136 +1         setb    ERRF12_D
023A 0539           1137 +1         inc     ERRF12_C
023C C21A           1138 +1                     clr     PKO2                           
023E C22A           1139 +1         clr     PO2U            
0240 C229           1140 +1         clr     PO2D              
0242 1211E7         1141 +1                     lcall   WRITEPORTS
0245 020562         1142 +1         ljmp    UP2
0248                1143 +1 ENDD0:
0248 00             1144 +1         nop
0249 200AD1         1146            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                    1147 +1         CLR_FLOOR_ERR   ERRF12
024C C252           1148 +1         clr    ERRF12_U
024E C259           1149 +1         clr    ERRF12_D
                    1150 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0250 00             1151 +1         nop
                    1153 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0251 1210E4         1154 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0254 121180         1155 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0257 300AFA         1156 +1         jnb     MB2, $-3  ; 
025A 1210E4         1157 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1159            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
025D 1211E7         1160            lcall   WRITEPORTS      ;
0260 020263         1161            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                    1162            
                    1163            
0263                1164    UP1_MB2:
                    1165            ;--------------------------
                    1166 +1         CFCSS     2, 22, 13, -1, -1
0263 633C16         1167 +1         xrl             G,  #22             
                    1168 +1         IF (-1 <> -1)
                    1169 +1             mov   A,  -1         
                    1170 +1             xrl   G,  A          
DEBUG                                                                                                         PAGE 22

                    1171 +1         ENDIF    
0266 E53C           1172 +1         mov   A,  G              
                    1173 +2         LCJNE A,  #2, CFCERR     
0268 B40203         1174 +2         cjne    A, #2, $+6
026B 020271         1175 +2         jmp     $+6
026E 02108F         1176 +2         ljmp    CFCERR
0271 00             1177 +2         nop
                    1178 +1         IF (13 <> -1)
0272 753D0D         1179 +1             mov         D1, #13     
                    1180 +1         ELSE
                    1181 +1             mov         D1, #32        
                    1182 +1         ENDIF                    
                    1183 +1         IF (-1 <> -1)
                    1184 +1             mov         D2, #-1     
                    1185 +1         ELSE
0275 753E20         1186 +1             mov         D2, #32        
                    1187 +1         ENDIF                    
0278 7402           1188 +1         mov       A, #2
                    1189 +1         IF (DEBUG_VYPISY)
                    1190 +1             lcall     PRINTCHAR        
                    1191 +1         ENDIF
                    1193            ;--------------------------
                    1194 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
027A 1210E4         1195 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
027D 121180         1196 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0280 300AFA         1197 +1         jnb     MB2, $-3  ; 
0283 1210E4         1198 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0286 121180         1200    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                    1201 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0289 200B03         1202 +1         jb      SKRH, $+6
028C 02105F         1203 +1         ljmp    ERR_SKRH
028F 00             1204 +1         nop
                    1206 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT   ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    1207 +1                                                                                             
                                                                                                                 
                    1208 +1                                                                                             
                                                                                                                 
                    1209 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002              1210 +1         COUNT    SET    COUNT+1                   
                    1211 +1         
0290 20091E         1212 +1         jb      MB1, ENDD1
                    1213 +1         
                    1214 +1         IF (MB1 EQ MB2)
                    1215 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1216 +1         ENDIF 
                    1217 +1         IF (MB1 EQ MB1)
0293 754701         1218 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1219 +1         ENDIF 
                    1220 +1         
0296 304206         1221 +1         jnb     PKI2, $+9
0299 C222           1222 +1         clr     FAST
029B D223           1223 +1         setb    SLOW
029D D238           1224 +1         setb    STOPPED         
029F D252           1225 +1         setb    ERRF12_U
02A1 D259           1226 +1         setb    ERRF12_D
02A3 0539           1227 +1         inc     ERRF12_C
DEBUG                                                                                                         PAGE 23

02A5 C21A           1228 +1                     clr     PKO2                           
02A7 C22A           1229 +1         clr     PO2U            
02A9 C229           1230 +1         clr     PO2D              
02AB 1211E7         1231 +1                     lcall   WRITEPORTS
02AE 020562         1232 +1         ljmp    UP2
02B1                1233 +1 ENDD1:
02B1 00             1234 +1         nop
02B2 200AD1         1236            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                    1237 +1         CLR_FLOOR_ERR   ERRF12   
02B5 C252           1238 +1         clr    ERRF12_U
02B7 C259           1239 +1         clr    ERRF12_D
                    1240 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
02B9 00             1241 +1         nop
                    1243            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
02BA 1211E7         1244            lcall   WRITEPORTS      ;   
                    1245 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
02BD 1210E4         1246 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
02C0 121180         1247 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
02C3 300AFA         1248 +1         jnb     MB2, $-3  ; 
02C6 1210E4         1249 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1251    
02C9                1252    UP1_MB2_CFC:     
                    1253            ;--------------------------
                    1254 +1         CFCSS     12, 14, -1, -1, -1
02C9 633C0E         1255 +1         xrl             G,  #14             
                    1256 +1         IF (-1 <> -1)
                    1257 +1             mov   A,  -1         
                    1258 +1             xrl   G,  A          
                    1259 +1         ENDIF    
02CC E53C           1260 +1         mov   A,  G              
                    1261 +2         LCJNE A,  #12, CFCERR     
02CE B40C03         1262 +2         cjne    A, #12, $+6
02D1 0202D7         1263 +2         jmp     $+6
02D4 02108F         1264 +2         ljmp    CFCERR
02D7 00             1265 +2         nop
                    1266 +1         IF (-1 <> -1)
                    1267 +1             mov         D1, #-1     
                    1268 +1         ELSE
02D8 753D20         1269 +1             mov         D1, #32        
                    1270 +1         ENDIF                    
                    1271 +1         IF (-1 <> -1)
                    1272 +1             mov         D2, #-1     
                    1273 +1         ELSE
02DB 753E20         1274 +1             mov         D2, #32        
                    1275 +1         ENDIF                    
02DE 740C           1276 +1         mov       A, #12
                    1277 +1         IF (DEBUG_VYPISY)
                    1278 +1             lcall     PRINTCHAR        
                    1279 +1         ENDIF
                    1281            ;--------------------------
                    1282 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    1283 +1                                         
02E0 C3             1284 +1         clr     C                       
02E1 7400           1285 +1         mov     A, #0h                  
02E3 7212           1286 +1         orl     C, PI2U      
02E5 B00E           1287 +1         anl     C, /DPZK                
DEBUG                                                                                                         PAGE 24

02E7 7242           1288 +1         orl     C, PKI2          
02E9 B052           1289 +1         anl     C, /ERRF2_U 
02EB 720F           1290 +1         orl     C, DPK                  
02ED 7238           1291 +1         orl     C, STOPPED              
02EF 3400           1292 +1         addc    A, #0h                  
02F1 704B           1294            jnz     U1_MB2C       ;-; Ak ano, zastav
                    1295 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
02F3 E522           1296 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
02F5 33             1297 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
02F6 547E           1298 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1299 +1         
                    1300 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1301 +2         ANLB    ACC.3, ERRF2_U  ; |
02F8 A2E3           1302 +2         mov   C, ACC.3
02FA B052           1303 +2         anl   C, /ERRF2_U
02FC 92E3           1304 +2         mov   ACC.3, C
                    1305 +2         ANLB    ACC.4, ERRF3_U  ; |
02FE A2E4           1306 +2         mov   C, ACC.4
0300 B053           1307 +2         anl   C, /ERRF3_U
0302 92E4           1308 +2         mov   ACC.4, C
                    1309 +2         ANLB    ACC.5, ERRF3_U  ; |
0304 A2E5           1310 +2         mov   C, ACC.5
0306 B053           1311 +2         anl   C, /ERRF3_U
0308 92E5           1312 +2         mov   ACC.5, C
                    1313 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1314 +1         
030A 7805           1315 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1316 +1  ; LL1: 
030C 6006           1317 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
030E C3             1318 +1         clr     C               ; Inak shiftnem o 2
030F 13             1319 +1         rrc     A               ;
0310 C3             1320 +1         clr     C               ;
0311 13             1321 +1         rrc     A               ;
0312 D8F8           1322 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1323 +1 ; LL2:
0314 7405           1324 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
0316 C3             1325 +1         clr     C               ;
0317 98             1326 +1         subb    A, R0           ;
                    1328 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
0318 B40203         1329 +1         cjne    A, #2, $+6
031B 020321         1330 +1         jmp     $+6
031E 020348         1331 +1         ljmp    UP1_MB1
0321 00             1332 +1         nop
                    1334 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0322 E528           1335 +1         mov     A, INPORTA
0324 541E           1336 +1         anl     A, #00011110b
0326 852AF0         1337 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
0329 53F00C         1338 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
032C 63F0FF         1339 +1         xrl     B, #0FFH
032F 55F0           1340 +1         anl     A, B
DEBUG                                                                                                         PAGE 25

0331 C3             1341 +1         clr     C
0332 13             1342 +1         rrc     A
                    1343 +1 ;LL1    
0333 7802           1344 +1         mov     R0, #2
0335 C3             1345 +1         clr     C
0336 13             1346 +1         rrc     A
0337 D8FC           1347 +1         djnz    R0, $-2;LL1
0339 6003           1349            jz      U1_MB2C         ; |   ak neni zastavujem         
033B 020348         1350            jmp     UP1_MB1          ; |   inak nezastavim        
033E D223           1351    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
0340 C222           1352            clr     FAST            ; 
0342 1211E7         1353            lcall   WRITEPORTS      ;         
0345 02039D         1354            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1355            
                    1356            
0348                1357    UP1_MB1:
                    1358            ;--------------------------
                    1359 +1         CFCSS     6, 10, 9, 14, -1
0348 633C0A         1360 +1         xrl             G,  #10             
                    1361 +1         IF (-1 <> -1)
                    1362 +1             mov   A,  -1         
                    1363 +1             xrl   G,  A          
                    1364 +1         ENDIF    
034B E53C           1365 +1         mov   A,  G              
                    1366 +2         LCJNE A,  #6, CFCERR     
034D B40603         1367 +2         cjne    A, #6, $+6
0350 020356         1368 +2         jmp     $+6
0353 02108F         1369 +2         ljmp    CFCERR
0356 00             1370 +2         nop
                    1371 +1         IF (9 <> -1)
0357 753D09         1372 +1             mov         D1, #9     
                    1373 +1         ELSE
                    1374 +1             mov         D1, #32        
                    1375 +1         ENDIF                    
                    1376 +1         IF (14 <> -1)
035A 753E0E         1377 +1             mov         D2, #14     
                    1378 +1         ELSE
                    1379 +1             mov         D2, #32        
                    1380 +1         ENDIF                    
035D 7406           1381 +1         mov       A, #6
                    1382 +1         IF (DEBUG_VYPISY)
                    1383 +1             lcall     PRINTCHAR        
                    1384 +1         ENDIF
                    1386            ;--------------------------
                    1387 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
035F 1210E4         1388 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0362 121180         1389 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0365 300AFA         1390 +1         jnb     MB2, $-3  ; 
0368 1210E4         1391 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
036B 121180         1393    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1394 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
036E 200B03         1395 +1         jb      SKRH, $+6
0371 02105F         1396 +1         ljmp    ERR_SKRH
0374 00             1397 +1         nop
                    1399 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1400 +1                                                                                             
DEBUG                                                                                                         PAGE 26

                                                                                                                 
                    1401 +1                                                                                             
                                                                                                                 
                    1402 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1403 +1         COUNT    SET    COUNT+1                   
                    1404 +1         
0375 200A1E         1405 +1         jb      MB2, ENDD2
                    1406 +1         
                    1407 +1         IF (MB2 EQ MB2)
0378 754703         1408 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1409 +1         ENDIF 
                    1410 +1         IF (MB2 EQ MB1)
                    1411 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1412 +1         ENDIF 
                    1413 +1         
037B 304206         1414 +1         jnb     PKI2, $+9
037E C222           1415 +1         clr     FAST
0380 D223           1416 +1         setb    SLOW
0382 D238           1417 +1         setb    STOPPED         
0384 D252           1418 +1         setb    ERRF2_U
0386 D25A           1419 +1         setb    ERRF2_D
0388 0536           1420 +1         inc     ERRF2_C
038A C21A           1421 +1                     clr     PKO2                           
038C C22A           1422 +1         clr     PO2U            
038E C229           1423 +1         clr     PO2D              
0390 1211E7         1424 +1                     lcall   WRITEPORTS
0393 0205D7         1425 +1         ljmp    UP2_MB2
0396                1426 +1 ENDD2:
0396 00             1427 +1         nop
0397 2009D1         1429            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
039A 020562         1430            ljmp    UP2             ; |   inak nezastavim        
                    1431    
039D                1432    UP1_STOP:
                    1433            ;--------------------------
                    1434 +1         CFCSS     28, 16, 9, 20, -1
039D 633C10         1435 +1         xrl             G,  #16             
                    1436 +1         IF (-1 <> -1)
                    1437 +1             mov   A,  -1         
                    1438 +1             xrl   G,  A          
                    1439 +1         ENDIF    
03A0 E53C           1440 +1         mov   A,  G              
                    1441 +2         LCJNE A,  #28, CFCERR     
03A2 B41C03         1442 +2         cjne    A, #28, $+6
03A5 0203AB         1443 +2         jmp     $+6
03A8 02108F         1444 +2         ljmp    CFCERR
03AB 00             1445 +2         nop
                    1446 +1         IF (9 <> -1)
03AC 753D09         1447 +1             mov         D1, #9     
                    1448 +1         ELSE
                    1449 +1             mov         D1, #32        
                    1450 +1         ENDIF                    
                    1451 +1         IF (20 <> -1)
03AF 753E14         1452 +1             mov         D2, #20     
                    1453 +1         ELSE
                    1454 +1             mov         D2, #32        
                    1455 +1         ENDIF                    
03B2 741C           1456 +1         mov       A, #28
                    1457 +1         IF (DEBUG_VYPISY)
DEBUG                                                                                                         PAGE 27

                    1458 +1             lcall     PRINTCHAR        
                    1459 +1         ENDIF
                    1461            ;--------------------------
03B4 121180         1462    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1463 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
03B7 200B03         1464 +1         jb      SKRH, $+6
03BA 02105F         1465 +1         ljmp    ERR_SKRH
03BD 00             1466 +1         nop
                    1468 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1469 +1                                                                                             
                                                                                                                 
                    1470 +1                                                                                             
                                                                                                                 
                    1471 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1472 +1         COUNT    SET    COUNT+1                   
                    1473 +1         
03BE 200A1E         1474 +1         jb      MB2, ENDD3
                    1475 +1         
                    1476 +1         IF (MB2 EQ MB2)
03C1 754703         1477 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1478 +1         ENDIF 
                    1479 +1         IF (MB2 EQ MB1)
                    1480 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1481 +1         ENDIF 
                    1482 +1         
03C4 304206         1483 +1         jnb     PKI2, $+9
03C7 C222           1484 +1         clr     FAST
03C9 D223           1485 +1         setb    SLOW
03CB D238           1486 +1         setb    STOPPED         
03CD D252           1487 +1         setb    ERRF2_U
03CF D25A           1488 +1         setb    ERRF2_D
03D1 0536           1489 +1         inc     ERRF2_C
03D3 C21A           1490 +1                     clr     PKO2                           
03D5 C22A           1491 +1         clr     PO2U            
03D7 C229           1492 +1         clr     PO2D              
03D9 1211E7         1493 +1                     lcall   WRITEPORTS
03DC 0205D7         1494 +1         ljmp    UP2_MB2
03DF                1495 +1 ENDD3:
03DF 00             1496 +1         nop
03E0 2009D1         1498            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
03E3 C220           1499            clr     UP              ; zastav motor
03E5 D23A           1500            setb    UPOld           ;       (a zalohuj) 
03E7 C23B           1501            clr     DOWNOld         ;       (a zalohuj)
03E9 C222           1502            clr     FAST            ; 
03EB 1211E7         1503            lcall   WRITEPORTS      ; 
03EE 0203F1         1504            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1505    
                    1506    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1507    
03F1                1508    FLOOR2:
                    1509            ;--------------------------
                    1510 +1         CFCSS     15, 26, 0, 30, D1
03F1 633C1A         1511 +1         xrl             G,  #26             
                    1512 +1         IF (D1 <> -1)
03F4 E53D           1513 +1             mov   A,  D1         
03F6 623C           1514 +1             xrl   G,  A          
DEBUG                                                                                                         PAGE 28

                    1515 +1         ENDIF    
03F8 E53C           1516 +1         mov   A,  G              
                    1517 +2         LCJNE A,  #15, CFCERR     
03FA B40F03         1518 +2         cjne    A, #15, $+6
03FD 020403         1519 +2         jmp     $+6
0400 02108F         1520 +2         ljmp    CFCERR
0403 00             1521 +2         nop
                    1522 +1         IF (0 <> -1)
0404 753D00         1523 +1             mov         D1, #0     
                    1524 +1         ELSE
                    1525 +1             mov         D1, #32        
                    1526 +1         ENDIF                    
                    1527 +1         IF (30 <> -1)
0407 753E1E         1528 +1             mov         D2, #30     
                    1529 +1         ELSE
                    1530 +1             mov         D2, #32        
                    1531 +1         ENDIF                    
040A 740F           1532 +1         mov       A, #15
                    1533 +1         IF (DEBUG_VYPISY)
                    1534 +1             lcall     PRINTCHAR        
                    1535 +1         ENDIF
                    1537            ;--------------------------
                    1538 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
040C 53240F         1539 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
040F D225           1540 +1         setb    FLED2
0411 1211E7         1541 +1         lcall   WRITEPORTS
0414 C238           1543            clr     STOPPED
                    1544 +1         TIMER2  60              ; (Timer - 3s)
0416 752D3C         1545 +1            mov           T2_C, #60                              
0419 C27A           1546 +1                  clr       T2_F                                  
041B D2CA           1547 +1                  setb      TR2                                             
041D C264           1549            clr     FLOORTIME
                    1550 +1         ROZSVIET_SMER_LED
041F D22F           1551 +1         setb    LEDU            ;
0421 D22E           1552 +1         setb    LEDD            ;
0423 1211E7         1553 +1         lcall   WRITEPORTS      ;
0426 754640         1555            mov     POSCHODIE, #40h ; 0100 0000 - posch. 2
0429 121180         1556    F2S:    lcall   READPORTS     ;-; nacitanie dat
                    1557 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
042C 200A03         1558 +1         jb      MB2, $+6
042F 02107B         1559 +1         ljmp    ERRFLOOR
0432 00             1560 +1         nop
                    1562 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0433 200B03         1563 +1         jb      SKRH, $+6
0436 02107B         1564 +1         ljmp    ERRFLOOR
0439 00             1565 +1         nop
                    1567 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
043A 200C03         1568 +1         jb      SKRD, $+6
043D 02107B         1569 +1         ljmp    ERRFLOOR
0440 00             1570 +1         nop
                    1572 +1         ZRUS_POSCH 2
0441 C21A           1573 +1         clr     PKO2       
0443 C22A           1574 +1         clr     PO2U      
0445 C229           1575 +1         clr     PO2D      
0447 1211E7         1576 +1         lcall   WRITEPORTS
                    1578            
DEBUG                                                                                                         PAGE 29

                    1579 +1         LCALLB          S_RI, RCV_MESSAGE
044A 306103         1580 +1         jnb     S_RI, $+6
044D 1212AC         1581 +1         lcall   RCV_MESSAGE
0450 00             1582 +1         nop
                    1584            
0451 206403         1585            jb       FLOORTIME, $+6 ; Ak uz raz presiel stanoveny cas na poschodi, nasledujucu i
                                                                               nstrukciu preskakujeme
0454 307AD2         1586            jnb                T2_F, F2S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
0457 D264           1587            setb     FLOORTIME      ; Nastav priznak, ze uz sme cakaly 3 s, Teraz sa uz mozme po
                                                                               hnut kedykolvek
                    1588            
0459 307A14         1589            jnb      T2_F, F2_KEEPALIVE_CONT
                    1590 +1         TIMER2  60              ; ...a neurobim to dalsie 3 sekundy
045C 752D3C         1591 +1            mov           T2_C, #60                              
045F C27A           1592 +1                  clr       T2_F                                  
0461 D2CA           1593 +1                  setb      TR2                                             
                    1595 +1         SEND_KEEPALIVE          ; Poslanie KEEPALIVE spravy       
0463 7400           1596 +1       mov     A, #0h
0465 12126F         1597 +1       lcall   PRINTCHAR
0468 12126F         1598 +1       lcall   PRINTCHAR 
046B 747E           1599 +1       mov     A, #7Eh 
046D 12126F         1600 +1       lcall   PRINTCHAR 
0470                1602    F2_KEEPALIVE_CONT:
                    1603 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0470 A20D           1604 +1         mov      C, DP          
0472 720E           1605 +1         orl      C, DPZK        
0474 720F           1606 +1         orl      C, DPK         
0476 9218           1607 +1         mov      KS, C          
0478 922F           1608 +1         mov      LEDU, C        
047A 922E           1609 +1         mov      LEDD, C        
047C 1211E7         1610 +1         lcall   WRITEPORTS      
047F 200FA7         1612            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0482 3045A4         1613            jnb     DOORCLSD, F2S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1614 +1         JE_VYBRATE_POSCHODIE F2S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0485 A20D           1615 +1         mov      C, DP         
0487 720E           1616 +1         orl      C, DPZK        
0489 720F           1617 +1         orl      C, DPK         
048B 5006           1618 +1         jnc      $+8            
048D E528           1619 +1         mov      A, INPORTA     
048F 541E           1620 +1         anl      A, #00011110b  
0491 6096           1621 +1         jz       F2S       
                    1623            ;clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
                    1624            ;clr     PO2U            ;
                    1625            ;clr     PO2D            ;
                    1626            ;lcall   WRITEPORTS      ;
                    1627            ;jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1628            ;_BP_
0493 782A           1629            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
0495 79F8           1630            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
0497 7AF8           1631            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
0499 203A0A         1632            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
049C E9             1633            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
DEBUG                                                                                                         PAGE 30

049D F4             1634            cpl     A               ;       |
049E F9             1635            mov     R1, A           ;       |
049F EA             1636            mov     A, R2           ;       A znegujeme aj masku sachty
04A0 F4             1637            cpl     A               ;       |
04A1 FA             1638            mov     R2, A           ;       |  
04A2 E8             1639            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
04A3 6401           1640            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
04A5 F8             1641            mov     R0, A           ;       |  
04A6                1642    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
04A6 E528           1643            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
04A8 86F0           1644            mov     B, @R0          ;  | Maskujem chybne poschodia
04AA 53F00C         1645            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04AD 63F0FF         1646            xrl     B, #0FFH        ;  |
04B0 55F0           1647            anl     A, B            ;  |
04B2 541A           1648            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
04B4 59             1649            anl     A, R1           ;  | 
                    1650 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04B5 6003           1651 +1         jz      $+5
04B7 02052E         1652 +1         ljmp    F2
04BA 00             1653 +1         nop
                    1655                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
04BB E528           1656            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
04BD 86F0           1657            mov     B, @R0          ;  | Maskujem chybne poschodia
04BF 53F00C         1658            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04C2 63F0FF         1659            xrl     B, #0FFH        ;  | |
04C5 55F0           1660            anl     A, B            ;  | |
04C7 541A           1661            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
04C9 7021           1662            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
04CB E522           1663            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
04CD 5439           1664            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
04CF 5A             1665            anl     A, R2           ;  |   
04D0 86F0           1666            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1667            ;ANLB    ACC.0, B.1      ;  | 
                    1668 +1         ANLB    ACC.1, B.2      ;  | 
04D2 A2E1           1669 +1         mov   C, ACC.1
04D4 B0F2           1670 +1         anl   C, /B.2
04D6 92E1           1671 +1         mov   ACC.1, C
                    1673 +1         ANLB    ACC.2, B.2      ;  |
04D8 A2E2           1674 +1         mov   C, ACC.2
04DA B0F2           1675 +1         anl   C, /B.2
04DC 92E2           1676 +1         mov   ACC.2, C
                    1678 +1         ANLB    ACC.3, B.3      ;  |
04DE A2E3           1679 +1         mov   C, ACC.3
04E0 B0F3           1680 +1         anl   C, /B.3
04E2 92E3           1681 +1         mov   ACC.3, C
                    1683 +1         ANLB    ACC.4, B.3      ;  |
04E4 A2E4           1684 +1         mov   C, ACC.4
04E6 B0F3           1685 +1         anl   C, /B.3
04E8 92E4           1686 +1         mov   ACC.4, C
                    1688            ;ANLB    ACC.5, B.4      ;  |
04EA 7042           1689            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1690            ; Pohyb v opacnom smere (nevieme v ktorom)
DEBUG                                                                                                         PAGE 31

04EC E8             1691    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
04ED 6401           1692            xrl     A, #01h         ;  |
04EF F8             1693            mov     R0, A           ;  |
04F0 B23A           1694            cpl     UPOld           ;  Znegujem stary posun
04F2 B23B           1695            cpl     DOWNOld         ;  |
04F4 E9             1696            mov     A, R1           ;  Znegujeme masky
04F5 F4             1697            cpl     A               ;  |
04F6 F9             1698            mov     R1, A           ;  |
04F7 EA             1699            mov     A, R2           ;  |
04F8 F4             1700            cpl     A               ;  |
04F9 FA             1701            mov     R2, A           ;  |               
04FA E528           1702            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
04FC 86F0           1703            mov     B, @R0          ;  | Maskujem chybne poschodia
04FE 53F00C         1704            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0501 63F0FF         1705            xrl     B, #0FFH        ;  | |
0504 55F0           1706            anl     A, B            ;  | |
0506 541A           1707            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
0508 59             1708            anl     A, R1           ;  | 
0509 7023           1709            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
050B E522           1710            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
050D 5439           1711            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
050F 5A             1712            anl     A, R2           ;  | 
0510 86F0           1713            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1714            ;ANLB    ACC.0, B.1      ;  | 
                    1715 +1         ANLB    ACC.1, B.2      ;  | 
0512 A2E1           1716 +1         mov   C, ACC.1
0514 B0F2           1717 +1         anl   C, /B.2
0516 92E1           1718 +1         mov   ACC.1, C
                    1720 +1         ANLB    ACC.2, B.2      ;  |
0518 A2E2           1721 +1         mov   C, ACC.2
051A B0F2           1722 +1         anl   C, /B.2
051C 92E2           1723 +1         mov   ACC.2, C
                    1725 +1         ANLB    ACC.3, B.3      ;  |
051E A2E3           1726 +1         mov   C, ACC.3
0520 B0F3           1727 +1         anl   C, /B.3
0522 92E3           1728 +1         mov   ACC.3, C
                    1730 +1         ANLB    ACC.4, B.3      ;  |
0524 A2E4           1731 +1         mov   C, ACC.4
0526 B0F3           1732 +1         anl   C, /B.3
0528 92E4           1733 +1         mov   ACC.4, C
                    1735            ;ANLB    ACC.5, B.4      ;  |
052A 7002           1736            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
052C 8129           1737            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
052E 901775         1738    F2:     mov     DPTR, #COM_BUSY ; Poslanie BUSY spravy 
0531 121222         1739            lcall   DISPSTR         ;
0534 203A03         1740            jb      UPOld, F2UP     ;   
0537 02054E         1741            jmp     F2DOWN          ;
                    1742 +1 F2UP:   SET_UP                  ; rychly pohyb hore
053A D220           1743 +1         setb     UP
053C C221           1744 +1         clr      DOWN
053E D22F           1745 +1         setb     LEDU
0540 C22E           1746 +1         clr      LEDD 
                    1748 +1         SET_FAST                ; 
0542 D222           1749 +1         setb     FAST
DEBUG                                                                                                         PAGE 32

0544 C223           1750 +1         clr      SLOW
0546 D218           1751 +1         setb     KS      
0548 1211E7         1753            lcall   WRITEPORTS      ;   
054B 020562         1754            jmp     UP2           ;-; prejdi do stavu UP2    
                    1755 +1 F2DOWN: SET_DOWN                  ; rychly pohyb dole
054E C220           1756 +1         clr     UP
0550 D221           1757 +1         setb    DOWN
0552 C22F           1758 +1         clr     LEDU
0554 D22E           1759 +1         setb    LEDD 
                    1761 +1         SET_FAST                ; 
0556 D222           1762 +1         setb     FAST
0558 C223           1763 +1         clr      SLOW
055A D218           1764 +1         setb     KS      
055C 1211E7         1766            lcall   WRITEPORTS      ; 
055F 020769         1767            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1768            
                    1769                
0562                1770    UP2:
                    1771            ;--------------------------
                    1772 +1         CFCSS     8, 7, 18, 0, D1
0562 633C07         1773 +1         xrl             G,  #7             
                    1774 +1         IF (D1 <> -1)
0565 E53D           1775 +1             mov   A,  D1         
0567 623C           1776 +1             xrl   G,  A          
                    1777 +1         ENDIF    
0569 E53C           1778 +1         mov   A,  G              
                    1779 +2         LCJNE A,  #8, CFCERR     
056B B40803         1780 +2         cjne    A, #8, $+6
056E 020574         1781 +2         jmp     $+6
0571 02108F         1782 +2         ljmp    CFCERR
0574 00             1783 +2         nop
                    1784 +1         IF (18 <> -1)
0575 753D12         1785 +1             mov         D1, #18     
                    1786 +1         ELSE
                    1787 +1             mov         D1, #32        
                    1788 +1         ENDIF                    
                    1789 +1         IF (0 <> -1)
0578 753E00         1790 +1             mov         D2, #0     
                    1791 +1         ELSE
                    1792 +1             mov         D2, #32        
                    1793 +1         ENDIF                    
057B 7408           1794 +1         mov       A, #8
                    1795 +1         IF (DEBUG_VYPISY)
                    1796 +1             lcall     PRINTCHAR        
                    1797 +1         ENDIF
                    1799            ;--------------------------
                    1800 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
057D 53240F         1801 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0580 D225           1802 +1         setb    FLED2
0582 1211E7         1803 +1         lcall   WRITEPORTS
                    1805 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0585 1210E4         1806 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0588 121180         1807 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
058B 3009FA         1808 +1         jnb     MB1, $-3  ; 
058E 1210E4         1809 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
DEBUG                                                                                                         PAGE 33

0591 121180         1811    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1812 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0594 200B03         1813 +1         jb      SKRH, $+6
0597 02105F         1814 +1         ljmp    ERR_SKRH
059A 00             1815 +1         nop
                    1817 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1818 +1                                                                                             
                                                                                                                 
                    1819 +1                                                                                             
                                                                                                                 
                    1820 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1821 +1         COUNT    SET    COUNT+1                   
                    1822 +1         
059B 20091E         1823 +1         jb      MB1, ENDD4
                    1824 +1         
                    1825 +1         IF (MB1 EQ MB2)
                    1826 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1827 +1         ENDIF 
                    1828 +1         IF (MB1 EQ MB1)
059E 754701         1829 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1830 +1         ENDIF 
                    1831 +1         
05A1 304306         1832 +1         jnb     PKI3, $+9
05A4 C222           1833 +1         clr     FAST
05A6 D223           1834 +1         setb    SLOW
05A8 D238           1835 +1         setb    STOPPED         
05AA D253           1836 +1         setb    ERRF23_U
05AC D25A           1837 +1         setb    ERRF23_D
05AE 053A           1838 +1         inc     ERRF23_C
05B0 C21B           1839 +1                     clr     PKO3                           
05B2 C22C           1840 +1         clr     PO3U            
05B4 C22B           1841 +1         clr     PO3D              
05B6 1211E7         1842 +1                     lcall   WRITEPORTS
05B9 020A1C         1843 +1         ljmp    UP3
05BC                1844 +1 ENDD4:
05BC 00             1845 +1         nop
05BD 200AD1         1847            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1848 +1         CLR_FLOOR_ERR   ERRF23
05C0 C253           1849 +1         clr    ERRF23_U
05C2 C25A           1850 +1         clr    ERRF23_D
                    1851 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
05C4 00             1852 +1         nop
                    1854 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
05C5 1210E4         1855 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05C8 121180         1856 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05CB 300AFA         1857 +1         jnb     MB2, $-3  ; 
05CE 1210E4         1858 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1860            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
05D1 1211E7         1861            lcall   WRITEPORTS      ;
05D4 0205D7         1862            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1863            
                    1864            
05D7                1865    UP2_MB2:
                    1866            ;--------------------------
                    1867 +1         CFCSS     18, 26, 8, -1, D2
05D7 633C1A         1868 +1         xrl             G,  #26             
DEBUG                                                                                                         PAGE 34

                    1869 +1         IF (D2 <> -1)
05DA E53E           1870 +1             mov   A,  D2         
05DC 623C           1871 +1             xrl   G,  A          
                    1872 +1         ENDIF    
05DE E53C           1873 +1         mov   A,  G              
                    1874 +2         LCJNE A,  #18, CFCERR     
05E0 B41203         1875 +2         cjne    A, #18, $+6
05E3 0205E9         1876 +2         jmp     $+6
05E6 02108F         1877 +2         ljmp    CFCERR
05E9 00             1878 +2         nop
                    1879 +1         IF (8 <> -1)
05EA 753D08         1880 +1             mov         D1, #8     
                    1881 +1         ELSE
                    1882 +1             mov         D1, #32        
                    1883 +1         ENDIF                    
                    1884 +1         IF (-1 <> -1)
                    1885 +1             mov         D2, #-1     
                    1886 +1         ELSE
05ED 753E20         1887 +1             mov         D2, #32        
                    1888 +1         ENDIF                    
05F0 7412           1889 +1         mov       A, #18
                    1890 +1         IF (DEBUG_VYPISY)
                    1891 +1             lcall     PRINTCHAR        
                    1892 +1         ENDIF
                    1894            ;--------------------------
                    1895 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
05F2 1210E4         1896 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05F5 121180         1897 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05F8 300AFA         1898 +1         jnb     MB2, $-3  ; 
05FB 1210E4         1899 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
05FE 121180         1901    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1902 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0601 200B03         1903 +1         jb      SKRH, $+6
0604 02105F         1904 +1         ljmp    ERR_SKRH
0607 00             1905 +1         nop
                    1907 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT ; >>> CHYBA, Vypadla spomalovacia clonka
                                                                                (narazil som na zastavovaciu) <<<
                    1908 +1                                                                                             
                                                                                                                 
                    1909 +1                                                                                             
                                                                                                                 
                    1910 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1911 +1         COUNT    SET    COUNT+1                   
                    1912 +1         
0608 20091E         1913 +1         jb      MB1, ENDD5
                    1914 +1         
                    1915 +1         IF (MB1 EQ MB2)
                    1916 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1917 +1         ENDIF 
                    1918 +1         IF (MB1 EQ MB1)
060B 754701         1919 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1920 +1         ENDIF 
                    1921 +1         
060E 304306         1922 +1         jnb     PKI3, $+9
0611 C222           1923 +1         clr     FAST
0613 D223           1924 +1         setb    SLOW
0615 D238           1925 +1         setb    STOPPED         
DEBUG                                                                                                         PAGE 35

0617 D253           1926 +1         setb    ERRF23_U
0619 D25A           1927 +1         setb    ERRF23_D
061B 053A           1928 +1         inc     ERRF23_C
061D C21B           1929 +1                     clr     PKO3                           
061F C22C           1930 +1         clr     PO3U            
0621 C22B           1931 +1         clr     PO3D              
0623 1211E7         1932 +1                     lcall   WRITEPORTS
0626 020A1C         1933 +1         ljmp    UP3
0629                1934 +1 ENDD5:
0629 00             1935 +1         nop
062A 200AD1         1937            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
                    1938 +1         CLR_FLOOR_ERR   ERRF23       
062D C253           1939 +1         clr    ERRF23_U
062F C25A           1940 +1         clr    ERRF23_D
                    1941 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0631 00             1942 +1         nop
                    1944            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0632 1211E7         1945            lcall   WRITEPORTS      ;
                    1946 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0635 1210E4         1947 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0638 121180         1948 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
063B 300AFA         1949 +1         jnb     MB2, $-3  ; 
063E 1210E4         1950 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1952            
0641                1953    UP2_MB2_CFC:     
                    1954            ;--------------------------
                    1955 +1         CFCSS     1, 19, -1, -1, -1
0641 633C13         1956 +1         xrl             G,  #19             
                    1957 +1         IF (-1 <> -1)
                    1958 +1             mov   A,  -1         
                    1959 +1             xrl   G,  A          
                    1960 +1         ENDIF    
0644 E53C           1961 +1         mov   A,  G              
                    1962 +2         LCJNE A,  #1, CFCERR     
0646 B40103         1963 +2         cjne    A, #1, $+6
0649 02064F         1964 +2         jmp     $+6
064C 02108F         1965 +2         ljmp    CFCERR
064F 00             1966 +2         nop
                    1967 +1         IF (-1 <> -1)
                    1968 +1             mov         D1, #-1     
                    1969 +1         ELSE
0650 753D20         1970 +1             mov         D1, #32        
                    1971 +1         ENDIF                    
                    1972 +1         IF (-1 <> -1)
                    1973 +1             mov         D2, #-1     
                    1974 +1         ELSE
0653 753E20         1975 +1             mov         D2, #32        
                    1976 +1         ENDIF                    
0656 7401           1977 +1         mov       A, #1
                    1978 +1         IF (DEBUG_VYPISY)
                    1979 +1             lcall     PRINTCHAR        
                    1980 +1         ENDIF
                    1982            ;--------------------------        
                    1983 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1984 +1                                         
0658 C3             1985 +1         clr     C                       
DEBUG                                                                                                         PAGE 36

0659 7400           1986 +1         mov     A, #0h                  
065B 7214           1987 +1         orl     C, PI3U      
065D B00E           1988 +1         anl     C, /DPZK                
065F 7243           1989 +1         orl     C, PKI3          
0661 B053           1990 +1         anl     C, /ERRF3_U 
0663 720F           1991 +1         orl     C, DPK                  
0665 7238           1992 +1         orl     C, STOPPED              
0667 3400           1993 +1         addc    A, #0h                  
0669 704B           1995            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1996 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
066B E522           1997 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
066D 33             1998 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
066E 547E           1999 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    2000 +1         
                    2001 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    2002 +2         ANLB    ACC.3, ERRF2_U  ; |
0670 A2E3           2003 +2         mov   C, ACC.3
0672 B052           2004 +2         anl   C, /ERRF2_U
0674 92E3           2005 +2         mov   ACC.3, C
                    2006 +2         ANLB    ACC.4, ERRF3_U  ; |
0676 A2E4           2007 +2         mov   C, ACC.4
0678 B053           2008 +2         anl   C, /ERRF3_U
067A 92E4           2009 +2         mov   ACC.4, C
                    2010 +2         ANLB    ACC.5, ERRF3_U  ; |
067C A2E5           2011 +2         mov   C, ACC.5
067E B053           2012 +2         anl   C, /ERRF3_U
0680 92E5           2013 +2         mov   ACC.5, C
                    2014 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    2015 +1         
0682 7805           2016 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    2017 +1  ; LL1: 
0684 6006           2018 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0686 C3             2019 +1         clr     C               ; Inak shiftnem o 2
0687 13             2020 +1         rrc     A               ;
0688 C3             2021 +1         clr     C               ;
0689 13             2022 +1         rrc     A               ;
068A D8F8           2023 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    2024 +1 ; LL2:
068C 7405           2025 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
068E C3             2026 +1         clr     C               ;
068F 98             2027 +1         subb    A, R0           ;
                    2029 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
0690 B40303         2030 +1         cjne    A, #3, $+6
0693 020699         2031 +1         jmp     $+6
0696 0206C0         2032 +1         ljmp    UP2_MB1
0699 00             2033 +1         nop
                    2035 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
069A E528           2036 +1         mov     A, INPORTA
069C 541E           2037 +1         anl     A, #00011110b
069E 852AF0         2038 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
DEBUG                                                                                                         PAGE 37

06A1 53F00C         2039 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
06A4 63F0FF         2040 +1         xrl     B, #0FFH
06A7 55F0           2041 +1         anl     A, B
06A9 C3             2042 +1         clr     C
06AA 13             2043 +1         rrc     A
                    2044 +1 ;LL1    
06AB 7803           2045 +1         mov     R0, #3
06AD C3             2046 +1         clr     C
06AE 13             2047 +1         rrc     A
06AF D8FC           2048 +1         djnz    R0, $-2;LL1
06B1 6003           2050            jz      U2_MB2C         ; |   ak neni zastavujem  
06B3 0206C0         2051            ljmp    UP2_MB1         ; |   inak nezastavim
06B6 D223           2052    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
06B8 C222           2053            clr     FAST            ; 
06BA 1211E7         2054            lcall   WRITEPORTS      ;
06BD 020715         2055            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    2056          
06C0                2057    UP2_MB1:
                    2058            ;--------------------------
                    2059 +1         CFCSS     26, 27, 0, 17, -1
06C0 633C1B         2060 +1         xrl             G,  #27             
                    2061 +1         IF (-1 <> -1)
                    2062 +1             mov   A,  -1         
                    2063 +1             xrl   G,  A          
                    2064 +1         ENDIF    
06C3 E53C           2065 +1         mov   A,  G              
                    2066 +2         LCJNE A,  #26, CFCERR     
06C5 B41A03         2067 +2         cjne    A, #26, $+6
06C8 0206CE         2068 +2         jmp     $+6
06CB 02108F         2069 +2         ljmp    CFCERR
06CE 00             2070 +2         nop
                    2071 +1         IF (0 <> -1)
06CF 753D00         2072 +1             mov         D1, #0     
                    2073 +1         ELSE
                    2074 +1             mov         D1, #32        
                    2075 +1         ENDIF                    
                    2076 +1         IF (17 <> -1)
06D2 753E11         2077 +1             mov         D2, #17     
                    2078 +1         ELSE
                    2079 +1             mov         D2, #32        
                    2080 +1         ENDIF                    
06D5 741A           2081 +1         mov       A, #26
                    2082 +1         IF (DEBUG_VYPISY)
                    2083 +1             lcall     PRINTCHAR        
                    2084 +1         ENDIF
                    2086            ;--------------------------
                    2087 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
06D7 1210E4         2088 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
06DA 121180         2089 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06DD 300AFA         2090 +1         jnb     MB2, $-3  ; 
06E0 1210E4         2091 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
06E3 121180         2093    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    2094 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
06E6 200B03         2095 +1         jb      SKRH, $+6
06E9 02105F         2096 +1         ljmp    ERR_SKRH
06EC 00             2097 +1         nop
                    2099 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia cl
DEBUG                                                                                                         PAGE 38

                                                                               onka (narazil som na spomalovaciu) <<<
                    2100 +1                                                                                             
                                                                                                                 
                    2101 +1                                                                                             
                                                                                                                 
                    2102 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              2103 +1         COUNT    SET    COUNT+1                   
                    2104 +1         
06ED 200A1E         2105 +1         jb      MB2, ENDD6
                    2106 +1         
                    2107 +1         IF (MB2 EQ MB2)
06F0 754703         2108 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2109 +1         ENDIF 
                    2110 +1         IF (MB2 EQ MB1)
                    2111 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2112 +1         ENDIF 
                    2113 +1         
06F3 304306         2114 +1         jnb     PKI3, $+9
06F6 C222           2115 +1         clr     FAST
06F8 D223           2116 +1         setb    SLOW
06FA D238           2117 +1         setb    STOPPED         
06FC D253           2118 +1         setb    ERRF3_U
06FE D25B           2119 +1         setb    ERRF3_D
0700 0537           2120 +1         inc     ERRF3_C
0702 C21B           2121 +1                     clr     PKO3                           
0704 C22C           2122 +1         clr     PO3U            
0706 C22B           2123 +1         clr     PO3D              
0708 1211E7         2124 +1                     lcall   WRITEPORTS
070B 020AA4         2125 +1         ljmp    UP3_MB2
070E                2126 +1 ENDD6:
070E 00             2127 +1         nop
070F 2009D1         2129            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
0712 020A1C         2130            ljmp    UP3             ; 
                    2131    
                    2132    
0715                2133    UP2_STOP:
                    2134            ;--------------------------
                    2135 +1         CFCSS     4, 5, 9, 15, -1
0715 633C05         2136 +1         xrl             G,  #5             
                    2137 +1         IF (-1 <> -1)
                    2138 +1             mov   A,  -1         
                    2139 +1             xrl   G,  A          
                    2140 +1         ENDIF    
0718 E53C           2141 +1         mov   A,  G              
                    2142 +2         LCJNE A,  #4, CFCERR     
071A B40403         2143 +2         cjne    A, #4, $+6
071D 020723         2144 +2         jmp     $+6
0720 02108F         2145 +2         ljmp    CFCERR
0723 00             2146 +2         nop
                    2147 +1         IF (9 <> -1)
0724 753D09         2148 +1             mov         D1, #9     
                    2149 +1         ELSE
                    2150 +1             mov         D1, #32        
                    2151 +1         ENDIF                    
                    2152 +1         IF (15 <> -1)
0727 753E0F         2153 +1             mov         D2, #15     
                    2154 +1         ELSE
                    2155 +1             mov         D2, #32        
DEBUG                                                                                                         PAGE 39

                    2156 +1         ENDIF                    
072A 7404           2157 +1         mov       A, #4
                    2158 +1         IF (DEBUG_VYPISY)
                    2159 +1             lcall     PRINTCHAR        
                    2160 +1         ENDIF
                    2162            ;--------------------------
072C                2163    UP2_STOP_C:
072C 121180         2164            lcall   READPORTS       ; nacitanie dat
                    2165 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
072F 200B03         2166 +1         jb      SKRH, $+6
0732 02105F         2167 +1         ljmp    ERR_SKRH
0735 00             2168 +1         nop
                    2170 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    2171 +1                                                                                             
                                                                                                                 
                    2172 +1                                                                                             
                                                                                                                 
                    2173 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              2174 +1         COUNT    SET    COUNT+1                   
                    2175 +1         
0736 200A1E         2176 +1         jb      MB2, ENDD7
                    2177 +1         
                    2178 +1         IF (MB2 EQ MB2)
0739 754703         2179 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2180 +1         ENDIF 
                    2181 +1         IF (MB2 EQ MB1)
                    2182 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2183 +1         ENDIF 
                    2184 +1         
073C 304306         2185 +1         jnb     PKI3, $+9
073F C222           2186 +1         clr     FAST
0741 D223           2187 +1         setb    SLOW
0743 D238           2188 +1         setb    STOPPED         
0745 D253           2189 +1         setb    ERRF3_U
0747 D25B           2190 +1         setb    ERRF3_D
0749 0537           2191 +1         inc     ERRF3_C
074B C21B           2192 +1                     clr     PKO3                           
074D C22C           2193 +1         clr     PO3U            
074F C22B           2194 +1         clr     PO3D              
0751 1211E7         2195 +1                     lcall   WRITEPORTS
0754 020AA4         2196 +1         ljmp    UP3_MB2
0757                2197 +1 ENDD7:
0757 00             2198 +1         nop
0758 2009D1         2200            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
075B C220           2201            clr     UP              ; zastav motor
075D D23A           2202            setb    UPOld           ;       (a zalohuj)
075F C23B           2203            clr     DOWNOld         ;       (a zalohuj)
0761 C222           2204            clr     FAST            ; 
0763 1211E7         2205            lcall   WRITEPORTS      ; 
0766 0208AB         2206            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    2207            
0769                2208    DOWN2:
                    2209            ;--------------------------
                    2210 +1         CFCSS     24, 9, 6, 9, D2
0769 633C09         2211 +1         xrl             G,  #9             
                    2212 +1         IF (D2 <> -1)
076C E53E           2213 +1             mov   A,  D2         
DEBUG                                                                                                         PAGE 40

076E 623C           2214 +1             xrl   G,  A          
                    2215 +1         ENDIF    
0770 E53C           2216 +1         mov   A,  G              
                    2217 +2         LCJNE A,  #24, CFCERR     
0772 B41803         2218 +2         cjne    A, #24, $+6
0775 02077B         2219 +2         jmp     $+6
0778 02108F         2220 +2         ljmp    CFCERR
077B 00             2221 +2         nop
                    2222 +1         IF (6 <> -1)
077C 753D06         2223 +1             mov         D1, #6     
                    2224 +1         ELSE
                    2225 +1             mov         D1, #32        
                    2226 +1         ENDIF                    
                    2227 +1         IF (9 <> -1)
077F 753E09         2228 +1             mov         D2, #9     
                    2229 +1         ELSE
                    2230 +1             mov         D2, #32        
                    2231 +1         ENDIF                    
0782 7418           2232 +1         mov       A, #24
                    2233 +1         IF (DEBUG_VYPISY)
                    2234 +1             lcall     PRINTCHAR        
                    2235 +1         ENDIF
                    2237            ;--------------------------
                    2238 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0784 53240F         2239 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0787 D225           2240 +1         setb    FLED2
0789 1211E7         2241 +1         lcall   WRITEPORTS
                    2243 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
078C 1210E4         2244 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
078F 121180         2245 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0792 3009FA         2246 +1         jnb     MB1, $-3  ; 
0795 1210E4         2247 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0798 121180         2249    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    2250 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
079B 200C03         2251 +1         jb      SKRD, $+6
079E 021043         2252 +1         ljmp    ERR_SKRD
07A1 00             2253 +1         nop
                    2255 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2256 +1                                                                                             
                                                                                                                 
                    2257 +1                                                                                             
                                                                                                                 
                    2258 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              2259 +1         COUNT    SET    COUNT+1                   
                    2260 +1         
07A2 20091E         2261 +1         jb      MB1, ENDD8
                    2262 +1         
                    2263 +1         IF (MB1 EQ MB2)
                    2264 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2265 +1         ENDIF 
                    2266 +1         IF (MB1 EQ MB1)
07A5 754701         2267 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2268 +1         ENDIF 
DEBUG                                                                                                         PAGE 41

                    2269 +1         
07A8 304106         2270 +1         jnb     PKI1, $+9
07AB C222           2271 +1         clr     FAST
07AD D223           2272 +1         setb    SLOW
07AF D238           2273 +1         setb    STOPPED         
07B1 D252           2274 +1         setb    ERRF12_U
07B3 D259           2275 +1         setb    ERRF12_D
07B5 0539           2276 +1         inc     ERRF12_C
07B7 C219           2277 +1                     clr     PKO1                           
07B9 C228           2278 +1         clr     PO1U            
07BB C228           2279 +1         clr     PO1D              
07BD 1211E7         2280 +1                     lcall   WRITEPORTS
07C0 0207C7         2281 +1         ljmp    DOWN2ERR
07C3                2282 +1 ENDD8:
07C3 00             2283 +1         nop
07C4 0207D6         2285            jmp     DOWN2ERR_CONTINUE
07C7                2286    DOWN2ERR:
07C7 C221           2287            clr     DOWN            ; zastav motor
07C9 D23B           2288            setb    DOWNOld         ;       (a zalohuj)
07CB C23A           2289            clr     UPOld           ;       (a zalohuj)
07CD C222           2290            clr     FAST            ; 
07CF C223           2291            clr     SLOW            ;
07D1 1211E7         2292            lcall   WRITEPORTS      ; 
07D4 2112           2293            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
07D6                2294    DOWN2ERR_CONTINUE:
07D6 200ABF         2295            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    2296 +1         CLR_FLOOR_ERR   ERRF12
07D9 C252           2297 +1         clr    ERRF12_U
07DB C259           2298 +1         clr    ERRF12_D
                    2299 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
07DD 00             2300 +1         nop
                    2302 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
07DE 1210E4         2303 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07E1 121180         2304 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07E4 300AFA         2305 +1         jnb     MB2, $-3  ; 
07E7 1210E4         2306 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2308            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
07EA 1211E7         2309            lcall   WRITEPORTS      ;
07ED 0207F0         2310            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    2311    
                    2312    
07F0                2313    DOWN2_MB2:
                    2314            ;--------------------------
                    2315 +1         CFCSS     31, 14, 1, -1, D2
07F0 633C0E         2316 +1         xrl             G,  #14             
                    2317 +1         IF (D2 <> -1)
07F3 E53E           2318 +1             mov   A,  D2         
07F5 623C           2319 +1             xrl   G,  A          
                    2320 +1         ENDIF    
07F7 E53C           2321 +1         mov   A,  G              
                    2322 +2         LCJNE A,  #31, CFCERR     
07F9 B41F03         2323 +2         cjne    A, #31, $+6
07FC 020802         2324 +2         jmp     $+6
07FF 02108F         2325 +2         ljmp    CFCERR
0802 00             2326 +2         nop
                    2327 +1         IF (1 <> -1)
0803 753D01         2328 +1             mov         D1, #1     
DEBUG                                                                                                         PAGE 42

                    2329 +1         ELSE
                    2330 +1             mov         D1, #32        
                    2331 +1         ENDIF                    
                    2332 +1         IF (-1 <> -1)
                    2333 +1             mov         D2, #-1     
                    2334 +1         ELSE
0806 753E20         2335 +1             mov         D2, #32        
                    2336 +1         ENDIF                    
0809 741F           2337 +1         mov       A, #31
                    2338 +1         IF (DEBUG_VYPISY)
                    2339 +1             lcall     PRINTCHAR        
                    2340 +1         ENDIF
                    2342            ;--------------------------
                    2343 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
080B 1210E4         2344 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
080E 121180         2345 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0811 300AFA         2346 +1         jnb     MB2, $-3  ; 
0814 1210E4         2347 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0817                2349    DOWN2_MB2A:
0817 121180         2350            lcall   READPORTS       ; nacitanie dat
                    2351 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
081A 200C03         2352 +1         jb      SKRD, $+6
081D 021043         2353 +1         ljmp    ERR_SKRD
0820 00             2354 +1         nop
                    2356 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT ; >>> CHYBA, Vypadla spomalovac
                                                                               ia clonka (narazil som na zastavovaciu) <
                                                                               <<
                    2357 +1                                                                                             
                                                                                                                 
                    2358 +1                                                                                             
                                                                                                                 
                    2359 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              2360 +1         COUNT    SET    COUNT+1                   
                    2361 +1         
0821 20091E         2362 +1         jb      MB1, ENDD9
                    2363 +1         
                    2364 +1         IF (MB1 EQ MB2)
                    2365 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2366 +1         ENDIF 
                    2367 +1         IF (MB1 EQ MB1)
0824 754701         2368 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2369 +1         ENDIF 
                    2370 +1         
0827 304106         2371 +1         jnb     PKI1, $+9
082A C222           2372 +1         clr     FAST
082C D223           2373 +1         setb    SLOW
082E D238           2374 +1         setb    STOPPED         
0830 D252           2375 +1         setb    ERRF12_U
0832 D259           2376 +1         setb    ERRF12_D
0834 0539           2377 +1         inc     ERRF12_C
0836 C219           2378 +1                     clr     PKO1                           
0838 C228           2379 +1         clr     PO1U            
083A C228           2380 +1         clr     PO1D              
083C 1211E7         2381 +1                     lcall   WRITEPORTS
083F 020846         2382 +1         ljmp    DOWN2_MB2ERR
0842                2383 +1 ENDD9:
0842 00             2384 +1         nop
DEBUG                                                                                                         PAGE 43

0843 020856         2386            jmp     DOWN2_MB2ERR_CONTINUE
0846                2387    DOWN2_MB2ERR:
0846 C221           2388            clr     DOWN            ; zastav motor
0848 D23B           2389            setb    DOWNOld         ;       (a zalohuj)
084A C23A           2390            clr     UPOld           ;       (a zalohuj)
084C C222           2391            clr     FAST            ; 
084E C223           2392            clr     SLOW            ;
0850 1211E7         2393            lcall   WRITEPORTS      ; 
0853 020112         2394            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0856                2395    DOWN2_MB2ERR_CONTINUE:
0856 200ABE         2396            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2397 +1         CLR_FLOOR_ERR   ERRF12      
0859 C252           2398 +1         clr    ERRF12_U
085B C259           2399 +1         clr    ERRF12_D
                    2400 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
085D 00             2401 +1         nop
                    2403            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
085E 1211E7         2404            lcall   WRITEPORTS      ;
                    2405 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0861 1210E4         2406 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0864 121180         2407 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0867 300AFA         2408 +1         jnb     MB2, $-3  ; 
086A 1210E4         2409 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2411    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2412    ;        anl     A, #00000010b ;-;
                    2413    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
086D D223           2414            setb    SLOW            ;       Ak ano, spomalme
086F C222           2415            clr     FAST            ; 
0871 1211E7         2416            lcall   WRITEPORTS      ;
0874 020877         2417            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
0877                2418    DOWN2_MB1:    
                    2419            ;--------------------------
                    2420 +1         CFCSS     14, 17, 16, -1, -1
0877 633C11         2421 +1         xrl             G,  #17             
                    2422 +1         IF (-1 <> -1)
                    2423 +1             mov   A,  -1         
                    2424 +1             xrl   G,  A          
                    2425 +1         ENDIF    
087A E53C           2426 +1         mov   A,  G              
                    2427 +2         LCJNE A,  #14, CFCERR     
087C B40E03         2428 +2         cjne    A, #14, $+6
087F 020885         2429 +2         jmp     $+6
0882 02108F         2430 +2         ljmp    CFCERR
0885 00             2431 +2         nop
                    2432 +1         IF (16 <> -1)
0886 753D10         2433 +1             mov         D1, #16     
                    2434 +1         ELSE
                    2435 +1             mov         D1, #32        
                    2436 +1         ENDIF                    
                    2437 +1         IF (-1 <> -1)
                    2438 +1             mov         D2, #-1     
                    2439 +1         ELSE
0889 753E20         2440 +1             mov         D2, #32        
                    2441 +1         ENDIF                    
088C 740E           2442 +1         mov       A, #14
                    2443 +1         IF (DEBUG_VYPISY)
                    2444 +1             lcall     PRINTCHAR        
DEBUG                                                                                                         PAGE 44

                    2445 +1         ENDIF
                    2447            ;--------------------------
088E 121180         2448    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
0891 300907         2449            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0894 200CF7         2450            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
0897 D259           2451            setb    ERRF1_D
0899 0535           2452            inc     ERRF1_C
                    2453    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
089B C238           2454    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
089D C221           2455            clr     DOWN            ; zastav motor
089F D23B           2456            setb    DOWNOld         ;       (a zalohuj)
08A1 C23A           2457            clr     UPOld           ;       (a zalohuj)
08A3 C222           2458            clr     FAST            ; 
08A5 1211E7         2459            lcall   WRITEPORTS      ; 
08A8 020112         2460            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    2461    
                    2462    
                    2463    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    2464    
08AB                2465    FLOOR3:
                    2466            ;--------------------------
                    2467 +1         CFCSS     10, 7, 16, 19, D1
08AB 633C07         2468 +1         xrl             G,  #7             
                    2469 +1         IF (D1 <> -1)
08AE E53D           2470 +1             mov   A,  D1         
08B0 623C           2471 +1             xrl   G,  A          
                    2472 +1         ENDIF    
08B2 E53C           2473 +1         mov   A,  G              
                    2474 +2         LCJNE A,  #10, CFCERR     
08B4 B40A03         2475 +2         cjne    A, #10, $+6
08B7 0208BD         2476 +2         jmp     $+6
08BA 02108F         2477 +2         ljmp    CFCERR
08BD 00             2478 +2         nop
                    2479 +1         IF (16 <> -1)
08BE 753D10         2480 +1             mov         D1, #16     
                    2481 +1         ELSE
                    2482 +1             mov         D1, #32        
                    2483 +1         ENDIF                    
                    2484 +1         IF (19 <> -1)
08C1 753E13         2485 +1             mov         D2, #19     
                    2486 +1         ELSE
                    2487 +1             mov         D2, #32        
                    2488 +1         ENDIF                    
08C4 740A           2489 +1         mov       A, #10
                    2490 +1         IF (DEBUG_VYPISY)
                    2491 +1             lcall     PRINTCHAR        
                    2492 +1         ENDIF
                    2494            ;--------------------------
                    2495 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
08C6 53240F         2496 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
08C9 D226           2497 +1         setb    FLED3
08CB 1211E7         2498 +1         lcall   WRITEPORTS
08CE C238           2500            clr     STOPPED
DEBUG                                                                                                         PAGE 45

                    2501 +1         TIMER2  60              ; (Timer - 3s)
08D0 752D3C         2502 +1            mov           T2_C, #60                              
08D3 C27A           2503 +1                  clr       T2_F                                  
08D5 D2CA           2504 +1                  setb      TR2                                             
08D7 C264           2506            clr     FLOORTIME
                    2507 +1         ROZSVIET_SMER_LED
08D9 D22F           2508 +1         setb    LEDU            ;
08DB D22E           2509 +1         setb    LEDD            ;
08DD 1211E7         2510 +1         lcall   WRITEPORTS      ;
08E0 754680         2512            mov     POSCHODIE, #80h ; 1000 0000 - posch. 3
08E3 121180         2513    F3S:    lcall   READPORTS     ;-; nacitanie dat
                    2514 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08E6 200A03         2515 +1         jb      MB2, $+6
08E9 02107B         2516 +1         ljmp    ERRFLOOR
08EC 00             2517 +1         nop
                    2519 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08ED 200B03         2520 +1         jb      SKRH, $+6
08F0 02107B         2521 +1         ljmp    ERRFLOOR
08F3 00             2522 +1         nop
                    2524 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08F4 200C03         2525 +1         jb      SKRD, $+6
08F7 02107B         2526 +1         ljmp    ERRFLOOR
08FA 00             2527 +1         nop
                    2529 +1         ZRUS_POSCH 3
08FB C21B           2530 +1         clr     PKO3       
08FD C22C           2531 +1         clr     PO3U      
08FF C22B           2532 +1         clr     PO3D      
0901 1211E7         2533 +1         lcall   WRITEPORTS
                    2535            
                    2536 +1         LCALLB          S_RI, RCV_MESSAGE
0904 306103         2537 +1         jnb     S_RI, $+6
0907 1212AC         2538 +1         lcall   RCV_MESSAGE
090A 00             2539 +1         nop
                    2541            
090B 206403         2542            jb       FLOORTIME, $+6 ; Ak uz raz presiel stanoveny cas na poschodi, nasledujucu i
                                                                               nstrukciu preskakujeme
090E 307AD2         2543            jnb                T2_F, F3S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
0911 D264           2544            setb     FLOORTIME      ; Nastav priznak, ze uz sme cakaly 3 s, Teraz sa uz mozme po
                                                                               hnut kedykolvek
                    2545            
0913 307A14         2546            jnb      T2_F, F3_KEEPALIVE_CONT
                    2547 +1         TIMER2  60              ; ...a neurobim to dalsie 3 sekundy
0916 752D3C         2548 +1            mov           T2_C, #60                              
0919 C27A           2549 +1                  clr       T2_F                                  
091B D2CA           2550 +1                  setb      TR2                                             
                    2552 +1         SEND_KEEPALIVE          ; Poslanie KEEPALIVE spravy       
091D 7400           2553 +1       mov     A, #0h
091F 12126F         2554 +1       lcall   PRINTCHAR
0922 12126F         2555 +1       lcall   PRINTCHAR 
0925 747E           2556 +1       mov     A, #7Eh 
0927 12126F         2557 +1       lcall   PRINTCHAR 
092A                2559    F3_KEEPALIVE_CONT:
                    2560 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
092A A20D           2561 +1         mov      C, DP          
092C 720E           2562 +1         orl      C, DPZK        
092E 720F           2563 +1         orl      C, DPK         
DEBUG                                                                                                         PAGE 46

0930 9218           2564 +1         mov      KS, C          
0932 922F           2565 +1         mov      LEDU, C        
0934 922E           2566 +1         mov      LEDD, C        
0936 1211E7         2567 +1         lcall   WRITEPORTS      
0939 200FA7         2569            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
093C 3045A4         2570            jnb     DOORCLSD, F3S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    2571 +1         JE_VYBRATE_POSCHODIE F3S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.          
093F A20D           2572 +1         mov      C, DP         
0941 720E           2573 +1         orl      C, DPZK        
0943 720F           2574 +1         orl      C, DPK         
0945 5006           2575 +1         jnc      $+8            
0947 E528           2576 +1         mov      A, INPORTA     
0949 541E           2577 +1         anl      A, #00011110b  
094B 6096           2578 +1         jz       F3S       
                    2580            ;clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
                    2581            ;clr     PO3U            ;
                    2582            ;clr     PO3D            ;
                    2583            ;lcall   WRITEPORTS      ;
                    2584            ;jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
094D 782A           2585            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
094F 79F0           2586            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
0951 7AE0           2587            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
0953 203A0A         2588            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
0956 E9             2589            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
0957 F4             2590            cpl     A               ;       |
0958 F9             2591            mov     R1, A           ;       |
0959 EA             2592            mov     A, R2           ;       A znegujeme aj masku sachty
095A F4             2593            cpl     A               ;       |
095B FA             2594            mov     R2, A           ;       |     
095C E8             2595            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
095D 6401           2596            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
095F F8             2597            mov     R0, A           ;       |    
0960                2598    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
0960 E528           2599            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0962 86F0           2600            mov     B, @R0          ;  | Maskujem chybne poschodia
0964 53F00C         2601            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
0967 63F0FF         2602            xrl     B, #0FFH        ;  | |
096A 55F0           2603            anl     A, B            ;  | |
096C 5416           2604            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
096E 59             2605            anl     A, R1           ;  | 
                    2606 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
096F 6003           2607 +1         jz      $+5
0971 0209E8         2608 +1         ljmp    F3
0974 00             2609 +1         nop
                    2611                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0975 E528           2612            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0977 86F0           2613            mov     B, @R0          ;  | Maskujem chybne poschodia
0979 53F00C         2614            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
097C 63F0FF         2615            xrl     B, #0FFH        ;  | |
DEBUG                                                                                                         PAGE 47

097F 55F0           2616            anl     A, B            ;  | |
0981 5416           2617            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
0983 7021           2618            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0985 E522           2619            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0987 5427           2620            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0989 5A             2621            anl     A, R2           ;  |   
098A 86F0           2622            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2623            ;ANLB    ACC.0, B.1      ;  | 
                    2624 +1         ANLB    ACC.1, B.2      ;  | 
098C A2E1           2625 +1         mov   C, ACC.1
098E B0F2           2626 +1         anl   C, /B.2
0990 92E1           2627 +1         mov   ACC.1, C
                    2629 +1         ANLB    ACC.2, B.2      ;  |
0992 A2E2           2630 +1         mov   C, ACC.2
0994 B0F2           2631 +1         anl   C, /B.2
0996 92E2           2632 +1         mov   ACC.2, C
                    2634 +1         ANLB    ACC.3, B.3      ;  |
0998 A2E3           2635 +1         mov   C, ACC.3
099A B0F3           2636 +1         anl   C, /B.3
099C 92E3           2637 +1         mov   ACC.3, C
                    2639 +1         ANLB    ACC.4, B.3      ;  |
099E A2E4           2640 +1         mov   C, ACC.4
09A0 B0F3           2641 +1         anl   C, /B.3
09A2 92E4           2642 +1         mov   ACC.4, C
                    2644            ;ANLB    ACC.5, B.4      ;  |
09A4 7042           2645            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2646            ; Pohyb v opacnom smere (nevieme v ktorom)
09A6 E8             2647    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
09A7 6401           2648            xrl     A, #01h         ;  |
09A9 F8             2649            mov     R0, A           ;  |
09AA B23A           2650            cpl     UPOld           ;  Znegujem stary posun
09AC B23B           2651            cpl     DOWNOld         ;  |
09AE E9             2652            mov     A, R1           ;  Znegujeme masky
09AF F4             2653            cpl     A               ;  |
09B0 F9             2654            mov     R1, A           ;  |
09B1 EA             2655            mov     A, R2           ;  |
09B2 F4             2656            cpl     A               ;  |
09B3 FA             2657            mov     R2, A           ;  |               
09B4 E528           2658            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
09B6 86F0           2659            mov     B, @R0          ;  | Maskujem chybne poschodia
09B8 53F00C         2660            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
09BB 63F0FF         2661            xrl     B, #0FFH        ;  | |
09BE 55F0           2662            anl     A, B            ;  | |
09C0 5416           2663            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
09C2 59             2664            anl     A, R1           ;  | 
09C3 7023           2665            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
09C5 E522           2666            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
09C7 5427           2667            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
09C9 5A             2668            anl     A, R2           ;  | 
09CA 86F0           2669            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2670            ;ANLB    ACC.0, B.1      ;  | 
                    2671 +1         ANLB    ACC.1, B.2      ;  | 
09CC A2E1           2672 +1         mov   C, ACC.1
DEBUG                                                                                                         PAGE 48

09CE B0F2           2673 +1         anl   C, /B.2
09D0 92E1           2674 +1         mov   ACC.1, C
                    2676 +1         ANLB    ACC.2, B.2      ;  |
09D2 A2E2           2677 +1         mov   C, ACC.2
09D4 B0F2           2678 +1         anl   C, /B.2
09D6 92E2           2679 +1         mov   ACC.2, C
                    2681 +1         ANLB    ACC.3, B.3      ;  |
09D8 A2E3           2682 +1         mov   C, ACC.3
09DA B0F3           2683 +1         anl   C, /B.3
09DC 92E3           2684 +1         mov   ACC.3, C
                    2686 +1         ANLB    ACC.4, B.3      ;  |
09DE A2E4           2687 +1         mov   C, ACC.4
09E0 B0F3           2688 +1         anl   C, /B.3
09E2 92E4           2689 +1         mov   ACC.4, C
                    2691            ;ANLB    ACC.5, B.4      ;  |
09E4 7002           2692            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
09E6 01E3           2693            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
09E8 901775         2694    F3:     mov     DPTR, #COM_BUSY ; Poslanie BUSY spravy 
09EB 121222         2695            lcall   DISPSTR         ;
09EE 203A03         2696            jb      UPOld, F3UP     ;   
09F1 020A08         2697            jmp     F3DOWN          ;
                    2698 +1 F3UP:   SET_UP                  ; rychly pohyb hore
09F4 D220           2699 +1         setb     UP
09F6 C221           2700 +1         clr      DOWN
09F8 D22F           2701 +1         setb     LEDU
09FA C22E           2702 +1         clr      LEDD 
                    2704 +1         SET_FAST                ; 
09FC D222           2705 +1         setb     FAST
09FE C223           2706 +1         clr      SLOW
0A00 D218           2707 +1         setb     KS      
0A02 1211E7         2709            lcall   WRITEPORTS      ; 
0A05 020A1C         2710            jmp     UP3           ;-; prejdi do stavu UP2    
                    2711 +1 F3DOWN: SET_DOWN                  ; rychly pohyb dole
0A08 C220           2712 +1         clr     UP
0A0A D221           2713 +1         setb    DOWN
0A0C C22F           2714 +1         clr     LEDU
0A0E D22E           2715 +1         setb    LEDD 
                    2717 +1         SET_FAST                ; 
0A10 D222           2718 +1         setb     FAST
0A12 C223           2719 +1         clr      SLOW
0A14 D218           2720 +1         setb     KS      
0A16 1211E7         2722            lcall   WRITEPORTS      ; 
0A19 020B6B         2723            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2724         
                    2725         
0A1C                2726    UP3:
                    2727            ;--------------------------
                    2728 +1         CFCSS     11, 17, 14, 0, D1
0A1C 633C11         2729 +1         xrl             G,  #17             
                    2730 +1         IF (D1 <> -1)
0A1F E53D           2731 +1             mov   A,  D1         
0A21 623C           2732 +1             xrl   G,  A          
                    2733 +1         ENDIF    
0A23 E53C           2734 +1         mov   A,  G              
                    2735 +2         LCJNE A,  #11, CFCERR     
0A25 B40B03         2736 +2         cjne    A, #11, $+6
0A28 020A2E         2737 +2         jmp     $+6
0A2B 02108F         2738 +2         ljmp    CFCERR
DEBUG                                                                                                         PAGE 49

0A2E 00             2739 +2         nop
                    2740 +1         IF (14 <> -1)
0A2F 753D0E         2741 +1             mov         D1, #14     
                    2742 +1         ELSE
                    2743 +1             mov         D1, #32        
                    2744 +1         ENDIF                    
                    2745 +1         IF (0 <> -1)
0A32 753E00         2746 +1             mov         D2, #0     
                    2747 +1         ELSE
                    2748 +1             mov         D2, #32        
                    2749 +1         ENDIF                    
0A35 740B           2750 +1         mov       A, #11
                    2751 +1         IF (DEBUG_VYPISY)
                    2752 +1             lcall     PRINTCHAR        
                    2753 +1         ENDIF
                    2755            ;--------------------------
                    2756 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0A37 53240F         2757 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0A3A D226           2758 +1         setb    FLED3
0A3C 1211E7         2759 +1         lcall   WRITEPORTS
                    2761 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0A3F 1210E4         2762 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A42 121180         2763 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A45 3009FA         2764 +1         jnb     MB1, $-3  ; 
0A48 1210E4         2765 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A4B 121180         2767    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2768 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0A4E 200B03         2769 +1         jb      SKRH, $+6
0A51 02105F         2770 +1         ljmp    ERR_SKRH
0A54 00             2771 +1         nop
                    2773 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie 
                                                                               clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2774 +1                                                                                             
                                                                                                                 
                    2775 +1                                                                                             
                                                                                                                 
                    2776 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2777 +1         COUNT    SET    COUNT+1                   
                    2778 +1         
0A55 20091E         2779 +1         jb      MB1, ENDD10
                    2780 +1         
                    2781 +1         IF (MB1 EQ MB2)
                    2782 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2783 +1         ENDIF 
                    2784 +1         IF (MB1 EQ MB1)
0A58 754701         2785 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2786 +1         ENDIF 
                    2787 +1         
0A5B 304406         2788 +1         jnb     PKI4, $+9
0A5E C222           2789 +1         clr     FAST
0A60 D223           2790 +1         setb    SLOW
0A62 D238           2791 +1         setb    STOPPED         
0A64 D254           2792 +1         setb    ERRF34_U
0A66 D25B           2793 +1         setb    ERRF34_D
DEBUG                                                                                                         PAGE 50

0A68 053B           2794 +1         inc     ERRF34_C
0A6A C21C           2795 +1                     clr     PKO4                           
0A6C C22D           2796 +1         clr     PO4U            
0A6E C22D           2797 +1         clr     PO4D              
0A70 1211E7         2798 +1                     lcall   WRITEPORTS
0A73 020A7A         2799 +1         ljmp    UP3ERR
0A76                2800 +1 ENDD10:
0A76 00             2801 +1         nop
0A77 020A8A         2803            jmp     UP3ERR_CONTINUE
0A7A                2804    UP3ERR:
0A7A C220           2805            clr     UP              ; zastav motor
0A7C D23A           2806            setb    UPOld           ;       (a zalohuj)
0A7E C23B           2807            clr     DOWNOld         ;       (a zalohuj)
0A80 C222           2808            clr     FAST            ;
0A82 C223           2809            clr     SLOW            ;
0A84 1211E7         2810            lcall   WRITEPORTS      ; 
0A87 020D6B         2811            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0A8A                2812    UP3ERR_CONTINUE:
0A8A 200ABE         2813            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2814 +1         CLR_FLOOR_ERR   ERRF34
0A8D C254           2815 +1         clr    ERRF34_U
0A8F C25B           2816 +1         clr    ERRF34_D
                    2817 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0A91 00             2818 +1         nop
                    2820 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0A92 1210E4         2821 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A95 121180         2822 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A98 300AFA         2823 +1         jnb     MB2, $-3  ; 
0A9B 1210E4         2824 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2826            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0A9E 1211E7         2827            lcall   WRITEPORTS      ;
0AA1 020AA4         2828            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2829    
0AA4                2830    UP3_MB2:
                    2831            ;--------------------------
                    2832 +1         CFCSS     3, 8, 6, -1, D2
0AA4 633C08         2833 +1         xrl             G,  #8             
                    2834 +1         IF (D2 <> -1)
0AA7 E53E           2835 +1             mov   A,  D2         
0AA9 623C           2836 +1             xrl   G,  A          
                    2837 +1         ENDIF    
0AAB E53C           2838 +1         mov   A,  G              
                    2839 +2         LCJNE A,  #3, CFCERR     
0AAD B40303         2840 +2         cjne    A, #3, $+6
0AB0 020AB6         2841 +2         jmp     $+6
0AB3 02108F         2842 +2         ljmp    CFCERR
0AB6 00             2843 +2         nop
                    2844 +1         IF (6 <> -1)
0AB7 753D06         2845 +1             mov         D1, #6     
                    2846 +1         ELSE
                    2847 +1             mov         D1, #32        
                    2848 +1         ENDIF                    
                    2849 +1         IF (-1 <> -1)
                    2850 +1             mov         D2, #-1     
                    2851 +1         ELSE
0ABA 753E20         2852 +1             mov         D2, #32        
                    2853 +1         ENDIF                    
DEBUG                                                                                                         PAGE 51

0ABD 7403           2854 +1         mov       A, #3
                    2855 +1         IF (DEBUG_VYPISY)
                    2856 +1             lcall     PRINTCHAR        
                    2857 +1         ENDIF
                    2859            ;--------------------------
                    2860 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0ABF 1210E4         2861 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AC2 121180         2862 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AC5 300AFA         2863 +1         jnb     MB2, $-3  ; 
0AC8 1210E4         2864 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0ACB                2866    UP3_MB2A:
0ACB 121180         2867            lcall   READPORTS       ; nacitanie dat
                    2868 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0ACE 200B03         2869 +1         jb      SKRH, $+6
0AD1 02105F         2870 +1         ljmp    ERR_SKRH
0AD4 00             2871 +1         nop
                    2873 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT ; >>> CHYBA, Vypadla spomalovacia
                                                                                clonka (narazil som na zastavovaciu) <<<
                                                                               
                    2874 +1                                                                                             
                                                                                                                 
                    2875 +1                                                                                             
                                                                                                                 
                    2876 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2877 +1         COUNT    SET    COUNT+1                   
                    2878 +1         
0AD5 20091E         2879 +1         jb      MB1, ENDD11
                    2880 +1         
                    2881 +1         IF (MB1 EQ MB2)
                    2882 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2883 +1         ENDIF 
                    2884 +1         IF (MB1 EQ MB1)
0AD8 754701         2885 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2886 +1         ENDIF 
                    2887 +1         
0ADB 304406         2888 +1         jnb     PKI4, $+9
0ADE C222           2889 +1         clr     FAST
0AE0 D223           2890 +1         setb    SLOW
0AE2 D238           2891 +1         setb    STOPPED         
0AE4 D254           2892 +1         setb    ERRF34_U
0AE6 D25B           2893 +1         setb    ERRF34_D
0AE8 053B           2894 +1         inc     ERRF34_C
0AEA C21C           2895 +1                     clr     PKO4                           
0AEC C22D           2896 +1         clr     PO4U            
0AEE C22D           2897 +1         clr     PO4D              
0AF0 1211E7         2898 +1                     lcall   WRITEPORTS
0AF3 020AFA         2899 +1         ljmp    UP3_MB2ERR
0AF6                2900 +1 ENDD11:
0AF6 00             2901 +1         nop
0AF7 020B0A         2903            jmp     UP3_MB2ERR_CONTINUE
0AFA                2904    UP3_MB2ERR:
0AFA C220           2905            clr     UP              ; zastav motor
0AFC D23A           2906            setb    UPOld           ;       (a zalohuj)
0AFE C23B           2907            clr     DOWNOld         ;       (a zalohuj)
0B00 C222           2908            clr     FAST            ;
0B02 C223           2909            clr     SLOW            ;
0B04 1211E7         2910            lcall   WRITEPORTS      ; 
DEBUG                                                                                                         PAGE 52

0B07 020D6B         2911            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0B0A                2912    UP3_MB2ERR_CONTINUE:
0B0A 200ABE         2913            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2914 +1         CLR_FLOOR_ERR   ERRF34      
0B0D C254           2915 +1         clr    ERRF34_U
0B0F C25B           2916 +1         clr    ERRF34_D
                    2917 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0B11 00             2918 +1         nop
                    2920            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0B12 1211E7         2921            lcall   WRITEPORTS      ;
                    2922 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0B15 1210E4         2923 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B18 121180         2924 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B1B 300AFA         2925 +1         jnb     MB2, $-3  ; 
0B1E 1210E4         2926 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2928    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2929    ;        anl     A, #00010000b ;-;
                    2930    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0B21 D223           2931            setb    SLOW            ;       Ak ano, spomalme
0B23 C222           2932            clr     FAST            ; 
0B25 1211E7         2933            lcall   WRITEPORTS      ;
0B28 020B2B         2934            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2935    
                    2936    
0B2B                2937    UP3_MB1:
                    2938            ;--------------------------
                    2939 +1         CFCSS     5, 6, 0, -1, -1
0B2B 633C06         2940 +1         xrl             G,  #6             
                    2941 +1         IF (-1 <> -1)
                    2942 +1             mov   A,  -1         
                    2943 +1             xrl   G,  A          
                    2944 +1         ENDIF    
0B2E E53C           2945 +1         mov   A,  G              
                    2946 +2         LCJNE A,  #5, CFCERR     
0B30 B40503         2947 +2         cjne    A, #5, $+6
0B33 020B39         2948 +2         jmp     $+6
0B36 02108F         2949 +2         ljmp    CFCERR
0B39 00             2950 +2         nop
                    2951 +1         IF (0 <> -1)
0B3A 753D00         2952 +1             mov         D1, #0     
                    2953 +1         ELSE
                    2954 +1             mov         D1, #32        
                    2955 +1         ENDIF                    
                    2956 +1         IF (-1 <> -1)
                    2957 +1             mov         D2, #-1     
                    2958 +1         ELSE
0B3D 753E20         2959 +1             mov         D2, #32        
                    2960 +1         ENDIF                    
0B40 7405           2961 +1         mov       A, #5
                    2962 +1         IF (DEBUG_VYPISY)
                    2963 +1             lcall     PRINTCHAR        
                    2964 +1         ENDIF
                    2966            ;--------------------------
                    2967 +1         ZAKMITC MB2
0B42 1210E4         2968 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B45 121180         2969 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B48 300AFA         2970 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 53

0B4B 1210E4         2971 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B4E 121180         2973    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0B51 300907         2974            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0B54 200BF7         2975            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0B57 D254           2976            setb    ERRF4_U
0B59 0538           2977            inc     ERRF4_C
                    2978    ;        jmp     U3_MB1C 
                    2979    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2980    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0B5B C238           2981    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0B5D C220           2982            clr     UP              ; zastav motor
0B5F D23A           2983            setb    UPOld           ;       (a zalohuj)
0B61 C23B           2984            clr     DOWNOld         ;       (a zalohuj)
0B63 C222           2985            clr     FAST            ; 
0B65 1211E7         2986            lcall   WRITEPORTS      ; 
0B68 020D6B         2987            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2988    
                    2989    
0B6B                2990    DOWN3:
                    2991            ;--------------------------
                    2992 +1         CFCSS     27, 2, 22, 10, D2
0B6B 633C02         2993 +1         xrl             G,  #2             
                    2994 +1         IF (D2 <> -1)
0B6E E53E           2995 +1             mov   A,  D2         
0B70 623C           2996 +1             xrl   G,  A          
                    2997 +1         ENDIF    
0B72 E53C           2998 +1         mov   A,  G              
                    2999 +2         LCJNE A,  #27, CFCERR     
0B74 B41B03         3000 +2         cjne    A, #27, $+6
0B77 020B7D         3001 +2         jmp     $+6
0B7A 02108F         3002 +2         ljmp    CFCERR
0B7D 00             3003 +2         nop
                    3004 +1         IF (22 <> -1)
0B7E 753D16         3005 +1             mov         D1, #22     
                    3006 +1         ELSE
                    3007 +1             mov         D1, #32        
                    3008 +1         ENDIF                    
                    3009 +1         IF (10 <> -1)
0B81 753E0A         3010 +1             mov         D2, #10     
                    3011 +1         ELSE
                    3012 +1             mov         D2, #32        
                    3013 +1         ENDIF                    
0B84 741B           3014 +1         mov       A, #27
                    3015 +1         IF (DEBUG_VYPISY)
                    3016 +1             lcall     PRINTCHAR        
                    3017 +1         ENDIF
                    3019            ;--------------------------
                    3020 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0B86 53240F         3021 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0B89 D226           3022 +1         setb    FLED3
0B8B 1211E7         3023 +1         lcall   WRITEPORTS
                    3025 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
DEBUG                                                                                                         PAGE 54

0B8E 1210E4         3026 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B91 121180         3027 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B94 3009FA         3028 +1         jnb     MB1, $-3  ; 
0B97 1210E4         3029 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B9A 121180         3031    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    3032 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B9D 200C03         3033 +1         jb      SKRD, $+6
0BA0 021043         3034 +1         ljmp    ERR_SKRD
0BA3 00             3035 +1         nop
                    3037 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie c
                                                                               lonky (narazil som na zastavovaciu) <<<
                    3038 +1                                                                                             
                                                                                                                 
                    3039 +1                                                                                             
                                                                                                                 
                    3040 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              3041 +1         COUNT    SET    COUNT+1                   
                    3042 +1         
0BA4 20091E         3043 +1         jb      MB1, ENDD12
                    3044 +1         
                    3045 +1         IF (MB1 EQ MB2)
                    3046 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3047 +1         ENDIF 
                    3048 +1         IF (MB1 EQ MB1)
0BA7 754701         3049 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3050 +1         ENDIF 
                    3051 +1         
0BAA 304206         3052 +1         jnb     PKI2, $+9
0BAD C222           3053 +1         clr     FAST
0BAF D223           3054 +1         setb    SLOW
0BB1 D238           3055 +1         setb    STOPPED         
0BB3 D253           3056 +1         setb    ERRF23_U
0BB5 D25A           3057 +1         setb    ERRF23_D
0BB7 053A           3058 +1         inc     ERRF23_C
0BB9 C21A           3059 +1                     clr     PKO2                           
0BBB C22A           3060 +1         clr     PO2U            
0BBD C229           3061 +1         clr     PO2D              
0BBF 1211E7         3062 +1                     lcall   WRITEPORTS
0BC2 020769         3063 +1         ljmp    DOWN2
0BC5                3064 +1 ENDD12:
0BC5 00             3065 +1         nop
0BC6 200AD1         3067            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    3068 +1         CLR_FLOOR_ERR   ERRF23
0BC9 C253           3069 +1         clr    ERRF23_U
0BCB C25A           3070 +1         clr    ERRF23_D
                    3071 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0BCD 00             3072 +1         nop
                    3074 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0BCE 1210E4         3075 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BD1 121180         3076 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BD4 300AFA         3077 +1         jnb     MB2, $-3  ; 
0BD7 1210E4         3078 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3080            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0BDA 1211E7         3081            lcall   WRITEPORTS      ;
0BDD 020BE0         3082            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    3083    
DEBUG                                                                                                         PAGE 55

                    3084    
0BE0                3085    DOWN3_MB2:
                    3086            ;--------------------------
                    3087 +1         CFCSS     9, 4, -1, 24, D1
0BE0 633C04         3088 +1         xrl             G,  #4             
                    3089 +1         IF (D1 <> -1)
0BE3 E53D           3090 +1             mov   A,  D1         
0BE5 623C           3091 +1             xrl   G,  A          
                    3092 +1         ENDIF    
0BE7 E53C           3093 +1         mov   A,  G              
                    3094 +2         LCJNE A,  #9, CFCERR     
0BE9 B40903         3095 +2         cjne    A, #9, $+6
0BEC 020BF2         3096 +2         jmp     $+6
0BEF 02108F         3097 +2         ljmp    CFCERR
0BF2 00             3098 +2         nop
                    3099 +1         IF (-1 <> -1)
                    3100 +1             mov         D1, #-1     
                    3101 +1         ELSE
0BF3 753D20         3102 +1             mov         D1, #32        
                    3103 +1         ENDIF                    
                    3104 +1         IF (24 <> -1)
0BF6 753E18         3105 +1             mov         D2, #24     
                    3106 +1         ELSE
                    3107 +1             mov         D2, #32        
                    3108 +1         ENDIF                    
0BF9 7409           3109 +1         mov       A, #9
                    3110 +1         IF (DEBUG_VYPISY)
                    3111 +1             lcall     PRINTCHAR        
                    3112 +1         ENDIF
                    3114            ;--------------------------
                    3115 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0BFB 1210E4         3116 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BFE 121180         3117 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0C01 300AFA         3118 +1         jnb     MB2, $-3  ; 
0C04 1210E4         3119 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0C07                3121    DOWN3_MB2A:
0C07 121180         3122            lcall   READPORTS       ; nacitanie dat
                    3123 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C0A 200C03         3124 +1         jb      SKRD, $+6
0C0D 021043         3125 +1         ljmp    ERR_SKRD
0C10 00             3126 +1         nop
                    3128 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    3129 +1                                                                                             
                                                                                                                 
                    3130 +1                                                                                             
                                                                                                                 
                    3131 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              3132 +1         COUNT    SET    COUNT+1                   
                    3133 +1         
0C11 20091E         3134 +1         jb      MB1, ENDD13
                    3135 +1         
                    3136 +1         IF (MB1 EQ MB2)
                    3137 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3138 +1         ENDIF 
                    3139 +1         IF (MB1 EQ MB1)
0C14 754701         3140 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
DEBUG                                                                                                         PAGE 56

                    3141 +1         ENDIF 
                    3142 +1         
0C17 304206         3143 +1         jnb     PKI2, $+9
0C1A C222           3144 +1         clr     FAST
0C1C D223           3145 +1         setb    SLOW
0C1E D238           3146 +1         setb    STOPPED         
0C20 D253           3147 +1         setb    ERRF23_U
0C22 D25A           3148 +1         setb    ERRF23_D
0C24 053A           3149 +1         inc     ERRF23_C
0C26 C21A           3150 +1                     clr     PKO2                           
0C28 C22A           3151 +1         clr     PO2U            
0C2A C229           3152 +1         clr     PO2D              
0C2C 1211E7         3153 +1                     lcall   WRITEPORTS
0C2F 020769         3154 +1         ljmp    DOWN2
0C32                3155 +1 ENDD13:
0C32 00             3156 +1         nop
0C33 200AD1         3158            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    3159 +1         CLR_FLOOR_ERR   ERRF23      
0C36 C253           3160 +1         clr    ERRF23_U
0C38 C25A           3161 +1         clr    ERRF23_D
                    3162 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0C3A 00             3163 +1         nop
                    3165            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0C3B 1211E7         3166            lcall   WRITEPORTS      ;
                    3167 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0C3E 1210E4         3168 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0C41 121180         3169 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0C44 300AFA         3170 +1         jnb     MB2, $-3  ; 
0C47 1210E4         3171 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3173    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3174    ;        anl     A, #00000100b ;-;
                    3175    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0C4A                3176    DOWN3_MB2_CFC:
                    3177            ;--------------------------
                    3178 +1         CFCSS     16, 25, -1, -1, -1
0C4A 633C19         3179 +1         xrl             G,  #25             
                    3180 +1         IF (-1 <> -1)
                    3181 +1             mov   A,  -1         
                    3182 +1             xrl   G,  A          
                    3183 +1         ENDIF    
0C4D E53C           3184 +1         mov   A,  G              
                    3185 +2         LCJNE A,  #16, CFCERR     
0C4F B41003         3186 +2         cjne    A, #16, $+6
0C52 020C58         3187 +2         jmp     $+6
0C55 02108F         3188 +2         ljmp    CFCERR
0C58 00             3189 +2         nop
                    3190 +1         IF (-1 <> -1)
                    3191 +1             mov         D1, #-1     
                    3192 +1         ELSE
0C59 753D20         3193 +1             mov         D1, #32        
                    3194 +1         ENDIF                    
                    3195 +1         IF (-1 <> -1)
                    3196 +1             mov         D2, #-1     
                    3197 +1         ELSE
0C5C 753E20         3198 +1             mov         D2, #32        
                    3199 +1         ENDIF                    
0C5F 7410           3200 +1         mov       A, #16
DEBUG                                                                                                         PAGE 57

                    3201 +1         IF (DEBUG_VYPISY)
                    3202 +1             lcall     PRINTCHAR        
                    3203 +1         ENDIF
                    3205            ;--------------------------
                    3206 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    3207 +1                                         
0C61 C3             3208 +1         clr     C                       
0C62 7400           3209 +1         mov     A, #0h                  
0C64 7211           3210 +1         orl     C, PI2D      
0C66 B00E           3211 +1         anl     C, /DPZK                
0C68 7242           3212 +1         orl     C, PKI2          
0C6A B05A           3213 +1         anl     C, /ERRF2_D 
0C6C 720F           3214 +1         orl     C, DPK                  
0C6E 7238           3215 +1         orl     C, STOPPED              
0C70 3400           3216 +1         addc    A, #0h                  
0C72 7050           3218            jnz     D3_MB2C         ; Ak ano, zastav
                    3219 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0C74 E522           3220 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0C76 33             3221 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0C77 547E           3222 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3223 +1 
                    3224 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3225 +2         ANLB    ACC.2, ERRF2_D  ; |
0C79 A2E2           3226 +2         mov   C, ACC.2
0C7B B05A           3227 +2         anl   C, /ERRF2_D
0C7D 92E2           3228 +2         mov   ACC.2, C
                    3229 +2         ANLB    ACC.3, ERRF2_D  ; |
0C7F A2E3           3230 +2         mov   C, ACC.3
0C81 B05A           3231 +2         anl   C, /ERRF2_D
0C83 92E3           3232 +2         mov   ACC.3, C
                    3233 +2         ANLB    ACC.4, ERRF3_D  ; |
0C85 A2E4           3234 +2         mov   C, ACC.4
0C87 B05B           3235 +2         anl   C, /ERRF3_D
0C89 92E4           3236 +2         mov   ACC.4, C
                    3237 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3238 +1 
0C8B 7805           3239 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3240 +1  ; LL1: 
0C8D 6006           3241 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0C8F C3             3242 +1         clr     C               ; Inak shiftnem o 2
0C90 33             3243 +1         rlc     A               ;
0C91 C3             3244 +1         clr     C               ;
0C92 33             3245 +1         rlc     A               ;
0C93 D8F8           3246 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3247 +1 ; LL2:
0C95 E8             3248 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3250 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0C96 B40203         3251 +1         cjne    A, #2, $+6
0C99 020C9F         3252 +1         jmp     $+6
0C9C 020CCE         3253 +1         ljmp    DOWN3_MB1
0C9F 00             3254 +1         nop
DEBUG                                                                                                         PAGE 58

                    3256 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0CA0 7405           3257 +1         mov     A, #5
0CA2 C3             3258 +1         clr     C
0CA3 9402           3259 +1         subb    A, #2
0CA5 F8             3260 +1         mov     R0, A
0CA6 E528           3261 +1         mov     A, INPORTA
0CA8 541E           3262 +1         anl     A, #00011110b
0CAA 852BF0         3263 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0CAD 53F00C         3264 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0CB0 63F0FF         3265 +1         xrl     B, #0FFH
0CB3 55F0           3266 +1         anl     A, B
0CB5 C3             3267 +1         clr     C
0CB6 33             3268 +1         rlc     A
0CB7 C3             3269 +1         clr     C
0CB8 33             3270 +1         rlc     A
0CB9 C3             3271 +1         clr     C
0CBA 33             3272 +1         rlc     A
                    3273 +1 ;LL1   
0CBB C3             3274 +1         clr     C
0CBC 33             3275 +1         rlc     A
0CBD D8FC           3276 +1         djnz    R0, $-2;LL1
0CBF 6003           3278            jz      D3_MB2C         ; |   ak neni zastavujem                  
0CC1 020CCE         3279            ljmp    DOWN3_MB1       ;-; |        
0CC4 D223           3280    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0CC6 C222           3281            clr     FAST            ; 
0CC8 1211E7         3282            lcall   WRITEPORTS      ;
0CCB 020D17         3283            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    3284    
                    3285    
0CCE                3286    DOWN3_MB1:    
                    3287            ;--------------------------
                    3288 +1         CFCSS     17, 1, -1, 0, -1
0CCE 633C01         3289 +1         xrl             G,  #1             
                    3290 +1         IF (-1 <> -1)
                    3291 +1             mov   A,  -1         
                    3292 +1             xrl   G,  A          
                    3293 +1         ENDIF    
0CD1 E53C           3294 +1         mov   A,  G              
                    3295 +2         LCJNE A,  #17, CFCERR     
0CD3 B41103         3296 +2         cjne    A, #17, $+6
0CD6 020CDC         3297 +2         jmp     $+6
0CD9 02108F         3298 +2         ljmp    CFCERR
0CDC 00             3299 +2         nop
                    3300 +1         IF (-1 <> -1)
                    3301 +1             mov         D1, #-1     
                    3302 +1         ELSE
0CDD 753D20         3303 +1             mov         D1, #32        
                    3304 +1         ENDIF                    
                    3305 +1         IF (0 <> -1)
0CE0 753E00         3306 +1             mov         D2, #0     
                    3307 +1         ELSE
                    3308 +1             mov         D2, #32        
                    3309 +1         ENDIF                    
0CE3 7411           3310 +1         mov       A, #17
                    3311 +1         IF (DEBUG_VYPISY)
                    3312 +1             lcall     PRINTCHAR        
DEBUG                                                                                                         PAGE 59

                    3313 +1         ENDIF
                    3315            ;--------------------------
0CE5 121180         3316    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3317 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0CE8 200C03         3318 +1         jb      SKRD, $+6
0CEB 021043         3319 +1         ljmp    ERR_SKRD
0CEE 00             3320 +1         nop
                    3322 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3323 +1                                                                                             
                                                                                                                 
                    3324 +1                                                                                             
                                                                                                                 
                    3325 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              3326 +1         COUNT    SET    COUNT+1                   
                    3327 +1         
0CEF 200A1E         3328 +1         jb      MB2, ENDD14
                    3329 +1         
                    3330 +1         IF (MB2 EQ MB2)
0CF2 754703         3331 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3332 +1         ENDIF 
                    3333 +1         IF (MB2 EQ MB1)
                    3334 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3335 +1         ENDIF 
                    3336 +1         
0CF5 304206         3337 +1         jnb     PKI2, $+9
0CF8 C222           3338 +1         clr     FAST
0CFA D223           3339 +1         setb    SLOW
0CFC D238           3340 +1         setb    STOPPED         
0CFE D252           3341 +1         setb    ERRF2_U
0D00 D25A           3342 +1         setb    ERRF2_D
0D02 0536           3343 +1         inc     ERRF2_C
0D04 C21A           3344 +1                     clr     PKO2                           
0D06 C22A           3345 +1         clr     PO2U            
0D08 C229           3346 +1         clr     PO2D              
0D0A 1211E7         3347 +1                     lcall   WRITEPORTS
0D0D 0207F0         3348 +1         ljmp    DOWN2_MB2
0D10                3349 +1 ENDD14:
0D10 00             3350 +1         nop
0D11 2009D1         3352            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    3353    ;        CLR_FLOOR_ERR   ERRF2
                    3354    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3355    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    3356    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    3357    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3358    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    3359    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3360    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0D14 020769         3361            ljmp    DOWN2         ;-; |        
                    3362    ;D3_MB1C: clr     DOWN            ; zastav motor
                    3363    ;        setb    DOWNOld         ;       (a zalohuj)
                    3364    ;        clr     UPOld           ;       (a zalohuj)
                    3365    ;        clr     FAST            ; 
DEBUG                                                                                                         PAGE 60

                    3366    ;        lcall   WRITEPORTS      ; 
                    3367    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0D17                3368    DOWN3_STOP: 
                    3369            ;--------------------------
                    3370 +1         CFCSS     21, 5, 0, 4, -1
0D17 633C05         3371 +1         xrl             G,  #5             
                    3372 +1         IF (-1 <> -1)
                    3373 +1             mov   A,  -1         
                    3374 +1             xrl   G,  A          
                    3375 +1         ENDIF    
0D1A E53C           3376 +1         mov   A,  G              
                    3377 +2         LCJNE A,  #21, CFCERR     
0D1C B41503         3378 +2         cjne    A, #21, $+6
0D1F 020D25         3379 +2         jmp     $+6
0D22 02108F         3380 +2         ljmp    CFCERR
0D25 00             3381 +2         nop
                    3382 +1         IF (0 <> -1)
0D26 753D00         3383 +1             mov         D1, #0     
                    3384 +1         ELSE
                    3385 +1             mov         D1, #32        
                    3386 +1         ENDIF                    
                    3387 +1         IF (4 <> -1)
0D29 753E04         3388 +1             mov         D2, #4     
                    3389 +1         ELSE
                    3390 +1             mov         D2, #32        
                    3391 +1         ENDIF                    
0D2C 7415           3392 +1         mov       A, #21
                    3393 +1         IF (DEBUG_VYPISY)
                    3394 +1             lcall     PRINTCHAR        
                    3395 +1         ENDIF
                    3397            ;--------------------------
0D2E 121180         3398    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3399 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D31 200C03         3400 +1         jb      SKRD, $+6
0D34 021043         3401 +1         ljmp    ERR_SKRD
0D37 00             3402 +1         nop
                    3404 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia c
                                                                               lonka (narazil som na spomalovaciu) <<<
                    3405 +1                                                                                             
                                                                                                                 
                    3406 +1                                                                                             
                                                                                                                 
                    3407 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              3408 +1         COUNT    SET    COUNT+1                   
                    3409 +1         
0D38 200A1E         3410 +1         jb      MB2, ENDD15
                    3411 +1         
                    3412 +1         IF (MB2 EQ MB2)
0D3B 754703         3413 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3414 +1         ENDIF 
                    3415 +1         IF (MB2 EQ MB1)
                    3416 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3417 +1         ENDIF 
                    3418 +1         
0D3E 304206         3419 +1         jnb     PKI2, $+9
0D41 C222           3420 +1         clr     FAST
0D43 D223           3421 +1         setb    SLOW
0D45 D238           3422 +1         setb    STOPPED         
DEBUG                                                                                                         PAGE 61

0D47 D252           3423 +1         setb    ERRF2_U
0D49 D25A           3424 +1         setb    ERRF2_D
0D4B 0536           3425 +1         inc     ERRF2_C
0D4D C21A           3426 +1                     clr     PKO2                           
0D4F C22A           3427 +1         clr     PO2U            
0D51 C229           3428 +1         clr     PO2D              
0D53 1211E7         3429 +1                     lcall   WRITEPORTS
0D56 0207F0         3430 +1         ljmp    DOWN2_MB2
0D59                3431 +1 ENDD15:
0D59 00             3432 +1         nop
0D5A 2009D1         3434            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    3435    ;        CLR_FLOOR_ERR   ERRF2     
0D5D C221           3436            clr     DOWN            ; zastav motor
0D5F D23B           3437            setb    DOWNOld         ;       (a zalohuj)
0D61 C23A           3438            clr     UPOld           ;       (a zalohuj)
0D63 C222           3439            clr     FAST            ; 
0D65 1211E7         3440            lcall   WRITEPORTS      ; 
0D68 0203F1         3441            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    3442    
                    3443            
                    3444    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    3445    
0D6B                3446    FLOOR4:
                    3447            ;--------------------------
                    3448 +1         CFCSS     19, 22, -1, -1, D1
0D6B 633C16         3449 +1         xrl             G,  #22             
                    3450 +1         IF (D1 <> -1)
0D6E E53D           3451 +1             mov   A,  D1         
0D70 623C           3452 +1             xrl   G,  A          
                    3453 +1         ENDIF    
0D72 E53C           3454 +1         mov   A,  G              
                    3455 +2         LCJNE A,  #19, CFCERR     
0D74 B41303         3456 +2         cjne    A, #19, $+6
0D77 020D7D         3457 +2         jmp     $+6
0D7A 02108F         3458 +2         ljmp    CFCERR
0D7D 00             3459 +2         nop
                    3460 +1         IF (-1 <> -1)
                    3461 +1             mov         D1, #-1     
                    3462 +1         ELSE
0D7E 753D20         3463 +1             mov         D1, #32        
                    3464 +1         ENDIF                    
                    3465 +1         IF (-1 <> -1)
                    3466 +1             mov         D2, #-1     
                    3467 +1         ELSE
0D81 753E20         3468 +1             mov         D2, #32        
                    3469 +1         ENDIF                    
0D84 7413           3470 +1         mov       A, #19
                    3471 +1         IF (DEBUG_VYPISY)
                    3472 +1             lcall     PRINTCHAR        
                    3473 +1         ENDIF
                    3475            ;--------------------------
                    3476 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0D86 53240F         3477 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0D89 D227           3478 +1         setb    FLED4
0D8B 1211E7         3479 +1         lcall   WRITEPORTS
DEBUG                                                                                                         PAGE 62

0D8E C238           3481            clr     STOPPED
                    3482 +1         TIMER2  60              ; (Timer - 3s)
0D90 752D3C         3483 +1            mov           T2_C, #60                              
0D93 C27A           3484 +1                  clr       T2_F                                  
0D95 D2CA           3485 +1                  setb      TR2                                             
0D97 C264           3487            clr     FLOORTIME
                    3488 +1         ROZSVIET_SMER_LED
0D99 D22F           3489 +1         setb    LEDU            ;
0D9B D22E           3490 +1         setb    LEDD            ;
0D9D 1211E7         3491 +1         lcall   WRITEPORTS      ;
0DA0 7546C0         3493            mov     POSCHODIE, #0C0h ; 1100 0000 - posch. 4
0DA3 121180         3494    F4S:    lcall   READPORTS     ;-; nacitanie dat
                    3495 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0DA6 200A03         3496 +1         jb      MB2, $+6
0DA9 02107B         3497 +1         ljmp    ERRFLOOR
0DAC 00             3498 +1         nop
                    3500 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0DAD 200C03         3501 +1         jb      SKRD, $+6
0DB0 02107B         3502 +1         ljmp    ERRFLOOR
0DB3 00             3503 +1         nop
                    3505 +1         ZRUS_POSCH 4
0DB4 C21C           3506 +1         clr     PKO4       
0DB6 C22D           3507 +1         clr     PO4U      
0DB8 C22D           3508 +1         clr     PO4D      
0DBA 1211E7         3509 +1         lcall   WRITEPORTS
                    3511            
                    3512 +1         LCALLB          S_RI, RCV_MESSAGE
0DBD 306103         3513 +1         jnb     S_RI, $+6
0DC0 1212AC         3514 +1         lcall   RCV_MESSAGE
0DC3 00             3515 +1         nop
                    3517            
0DC4 206403         3518            jb       FLOORTIME, $+6 ; Ak uz raz presiel stanoveny cas na poschodi, nasledujucu i
                                                                               nstrukciu preskakujeme
0DC7 307AD9         3519            jnb                T2_F, F4S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
0DCA D264           3520            setb     FLOORTIME      ; Nastav priznak, ze uz sme cakaly 3 s, Teraz sa uz mozme po
                                                                               hnut kedykolvek
                    3521            
0DCC 307A14         3522            jnb      T2_F, F4_KEEPALIVE_CONT
                    3523 +1         TIMER2  60              ; ...a neurobim to dalsie 3 sekundy
0DCF 752D3C         3524 +1            mov           T2_C, #60                              
0DD2 C27A           3525 +1                  clr       T2_F                                  
0DD4 D2CA           3526 +1                  setb      TR2                                             
                    3528 +1         SEND_KEEPALIVE          ; Poslanie KEEPALIVE spravy       
0DD6 7400           3529 +1       mov     A, #0h
0DD8 12126F         3530 +1       lcall   PRINTCHAR
0DDB 12126F         3531 +1       lcall   PRINTCHAR 
0DDE 747E           3532 +1       mov     A, #7Eh 
0DE0 12126F         3533 +1       lcall   PRINTCHAR 
0DE3                3535    F4_KEEPALIVE_CONT:
                    3536 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0DE3 A20D           3537 +1         mov      C, DP          
0DE5 720E           3538 +1         orl      C, DPZK        
0DE7 720F           3539 +1         orl      C, DPK         
0DE9 9218           3540 +1         mov      KS, C          
0DEB 922F           3541 +1         mov      LEDU, C        
0DED 922E           3542 +1         mov      LEDD, C        
DEBUG                                                                                                         PAGE 63

0DEF 1211E7         3543 +1         lcall   WRITEPORTS      
0DF2 200FAE         3545            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0DF5 3045AB         3546            jnb     DOORCLSD, F4S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    3547 +1         JE_VYBRATE_POSCHODIE F4S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0DF8 A20D           3548 +1         mov      C, DP         
0DFA 720E           3549 +1         orl      C, DPZK        
0DFC 720F           3550 +1         orl      C, DPK         
0DFE 5006           3551 +1         jnc      $+8            
0E00 E528           3552 +1         mov      A, INPORTA     
0E02 541E           3553 +1         anl      A, #00011110b  
0E04 609D           3554 +1         jz       F4S       
                    3556            ;clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
                    3557            ;clr     PO4            ;
                    3558            ;lcall   WRITEPORTS      ;
                    3559            ;jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0E06 E528           3560            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0E08 852BF0         3561            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0E0B 53F00C         3562            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0E0E 63F0FF         3563            xrl     B, #0FFH        ; | |
0E11 55F0           3564            anl     A, B            ; | |
0E13 540E           3565            anl     A, #00001110b ;-;
0E15 701A           3566            jnz     F4OK          ;-; ak ano, ideme na to
0E17 E522           3567            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0E19 541F           3568            anl     A, #00011111b ;-;
                    3569            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    3570 +1         ANLB    ACC.1, ERRF2_D  ; |
0E1B A2E1           3571 +1         mov   C, ACC.1
0E1D B05A           3572 +1         anl   C, /ERRF2_D
0E1F 92E1           3573 +1         mov   ACC.1, C
                    3575 +1         ANLB    ACC.2, ERRF2_D  ; |
0E21 A2E2           3576 +1         mov   C, ACC.2
0E23 B05A           3577 +1         anl   C, /ERRF2_D
0E25 92E2           3578 +1         mov   ACC.2, C
                    3580 +1         ANLB    ACC.3, ERRF3_D  ; |
0E27 A2E3           3581 +1         mov   C, ACC.3
0E29 B05B           3582 +1         anl   C, /ERRF3_D
0E2B 92E3           3583 +1         mov   ACC.3, C
                    3585            ;ANLB    ACC.4, ERRF3_D  ; |
0E2D 7002           3586            jnz     F4OK          ;-; ak ano, ideme na to
0E2F A1A3           3587            jmp     F4S             ; Nemam sa kde hnut, opakujem
0E31 901775         3588    F4OK:   mov     DPTR, #COM_BUSY ; Poslanie BUSY spravy 
0E34 121222         3589            lcall   DISPSTR         ;
                    3590 +1         SET_DOWN                ; rychly pohyb dole
0E37 C220           3591 +1         clr     UP
0E39 D221           3592 +1         setb    DOWN
0E3B C22F           3593 +1         clr     LEDU
0E3D D22E           3594 +1         setb    LEDD 
                    3596 +1         SET_FAST                ; 
0E3F D222           3597 +1         setb     FAST
0E41 C223           3598 +1         clr      SLOW
0E43 D218           3599 +1         setb     KS      
0E45 1211E7         3601            lcall   WRITEPORTS      ; 
0E48 020E4B         3602            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
                    3603    
                    3604    
DEBUG                                                                                                         PAGE 64

0E4B                3605    DOWN4:
                    3606            ;--------------------------
                    3607 +1         CFCSS     22, 5, -1, 15, -1
0E4B 633C05         3608 +1         xrl             G,  #5             
                    3609 +1         IF (-1 <> -1)
                    3610 +1             mov   A,  -1         
                    3611 +1             xrl   G,  A          
                    3612 +1         ENDIF    
0E4E E53C           3613 +1         mov   A,  G              
                    3614 +2         LCJNE A,  #22, CFCERR     
0E50 B41603         3615 +2         cjne    A, #22, $+6
0E53 020E59         3616 +2         jmp     $+6
0E56 02108F         3617 +2         ljmp    CFCERR
0E59 00             3618 +2         nop
                    3619 +1         IF (-1 <> -1)
                    3620 +1             mov         D1, #-1     
                    3621 +1         ELSE
0E5A 753D20         3622 +1             mov         D1, #32        
                    3623 +1         ENDIF                    
                    3624 +1         IF (15 <> -1)
0E5D 753E0F         3625 +1             mov         D2, #15     
                    3626 +1         ELSE
                    3627 +1             mov         D2, #32        
                    3628 +1         ENDIF                    
0E60 7416           3629 +1         mov       A, #22
                    3630 +1         IF (DEBUG_VYPISY)
                    3631 +1             lcall     PRINTCHAR        
                    3632 +1         ENDIF
                    3634            ;--------------------------
                    3635 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0E62 53240F         3636 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0E65 D227           3637 +1         setb    FLED4
0E67 1211E7         3638 +1         lcall   WRITEPORTS
                    3640 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0E6A 1210E4         3641 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E6D 121180         3642 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E70 3009FA         3643 +1         jnb     MB1, $-3  ; 
0E73 1210E4         3644 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E76 121180         3646    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    3647 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E79 200C03         3648 +1         jb      SKRD, $+6
0E7C 021043         3649 +1         ljmp    ERR_SKRD
0E7F 00             3650 +1         nop
                    3652 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    3653 +1                                                                                             
                                                                                                                 
                    3654 +1                                                                                             
                                                                                                                 
                    3655 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              3656 +1         COUNT    SET    COUNT+1                   
                    3657 +1         
0E80 20091E         3658 +1         jb      MB1, ENDD16
                    3659 +1         
DEBUG                                                                                                         PAGE 65

                    3660 +1         IF (MB1 EQ MB2)
                    3661 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3662 +1         ENDIF 
                    3663 +1         IF (MB1 EQ MB1)
0E83 754701         3664 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3665 +1         ENDIF 
                    3666 +1         
0E86 304306         3667 +1         jnb     PKI3, $+9
0E89 C222           3668 +1         clr     FAST
0E8B D223           3669 +1         setb    SLOW
0E8D D238           3670 +1         setb    STOPPED         
0E8F D254           3671 +1         setb    ERRF34_U
0E91 D25B           3672 +1         setb    ERRF34_D
0E93 053B           3673 +1         inc     ERRF34_C
0E95 C21B           3674 +1                     clr     PKO3                           
0E97 C22C           3675 +1         clr     PO3U            
0E99 C22B           3676 +1         clr     PO3D              
0E9B 1211E7         3677 +1                     lcall   WRITEPORTS
0E9E 020B6B         3678 +1         ljmp    DOWN3
0EA1                3679 +1 ENDD16:
0EA1 00             3680 +1         nop
0EA2 200AD1         3682            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    3683 +1         CLR_FLOOR_ERR   ERRF34
0EA5 C254           3684 +1         clr    ERRF34_U
0EA7 C25B           3685 +1         clr    ERRF34_D
                    3686 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0EA9 00             3687 +1         nop
                    3689 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0EAA 1210E4         3690 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EAD 121180         3691 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EB0 300AFA         3692 +1         jnb     MB2, $-3  ; 
0EB3 1210E4         3693 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3695            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0EB6 1211E7         3696            lcall   WRITEPORTS      ;
0EB9 020EBC         3697            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    3698            
                    3699            
0EBC                3700    DOWN4_MB2:
                    3701            ;--------------------------
                    3702 +1         CFCSS     23, 1, -1, 14, -1
0EBC 633C01         3703 +1         xrl             G,  #1             
                    3704 +1         IF (-1 <> -1)
                    3705 +1             mov   A,  -1         
                    3706 +1             xrl   G,  A          
                    3707 +1         ENDIF    
0EBF E53C           3708 +1         mov   A,  G              
                    3709 +2         LCJNE A,  #23, CFCERR     
0EC1 B41703         3710 +2         cjne    A, #23, $+6
0EC4 020ECA         3711 +2         jmp     $+6
0EC7 02108F         3712 +2         ljmp    CFCERR
0ECA 00             3713 +2         nop
                    3714 +1         IF (-1 <> -1)
                    3715 +1             mov         D1, #-1     
                    3716 +1         ELSE
0ECB 753D20         3717 +1             mov         D1, #32        
                    3718 +1         ENDIF                    
                    3719 +1         IF (14 <> -1)
DEBUG                                                                                                         PAGE 66

0ECE 753E0E         3720 +1             mov         D2, #14     
                    3721 +1         ELSE
                    3722 +1             mov         D2, #32        
                    3723 +1         ENDIF                    
0ED1 7417           3724 +1         mov       A, #23
                    3725 +1         IF (DEBUG_VYPISY)
                    3726 +1             lcall     PRINTCHAR        
                    3727 +1         ENDIF
                    3729            ;--------------------------
                    3730 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0ED3 1210E4         3731 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0ED6 121180         3732 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0ED9 300AFA         3733 +1         jnb     MB2, $-3  ; 
0EDC 1210E4         3734 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0EDF                3736    DOWN4_MB2A:
0EDF 121180         3737            lcall   READPORTS       ; nacitanie dat
                    3738 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0EE2 200C03         3739 +1         jb      SKRD, $+6
0EE5 021043         3740 +1         ljmp    ERR_SKRD
0EE8 00             3741 +1         nop
                    3743 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadla spomalovacia c
                                                                               lonka (narazil som na zastavovaciu) <<<
                    3744 +1                                                                                             
                                                                                                                 
                    3745 +1                                                                                             
                                                                                                                 
                    3746 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3747 +1         COUNT    SET    COUNT+1                   
                    3748 +1         
0EE9 20091E         3749 +1         jb      MB1, ENDD17
                    3750 +1         
                    3751 +1         IF (MB1 EQ MB2)
                    3752 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3753 +1         ENDIF 
                    3754 +1         IF (MB1 EQ MB1)
0EEC 754701         3755 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3756 +1         ENDIF 
                    3757 +1         
0EEF 304306         3758 +1         jnb     PKI3, $+9
0EF2 C222           3759 +1         clr     FAST
0EF4 D223           3760 +1         setb    SLOW
0EF6 D238           3761 +1         setb    STOPPED         
0EF8 D254           3762 +1         setb    ERRF34_U
0EFA D25B           3763 +1         setb    ERRF34_D
0EFC 053B           3764 +1         inc     ERRF34_C
0EFE C21B           3765 +1                     clr     PKO3                           
0F00 C22C           3766 +1         clr     PO3U            
0F02 C22B           3767 +1         clr     PO3D              
0F04 1211E7         3768 +1                     lcall   WRITEPORTS
0F07 020B6B         3769 +1         ljmp    DOWN3
0F0A                3770 +1 ENDD17:
0F0A 00             3771 +1         nop
0F0B 200AD1         3773            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3774 +1         CLR_FLOOR_ERR   ERRF34       
0F0E C254           3775 +1         clr    ERRF34_U
0F10 C25B           3776 +1         clr    ERRF34_D
                    3777 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
DEBUG                                                                                                         PAGE 67

0F12 00             3778 +1         nop
                    3780            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0F13 1211E7         3781            lcall   WRITEPORTS      ;
                    3782 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0F16 1210E4         3783 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0F19 121180         3784 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0F1C 300AFA         3785 +1         jnb     MB2, $-3  ; 
0F1F 1210E4         3786 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3788    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3789    ;        anl     A, #00001000b ;-;
                    3790    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0F22                3791    DOWN4_MB2_CFC:
                    3792            ;--------------------------
                    3793 +1         CFCSS     7, 16, -1, -1, -1
0F22 633C10         3794 +1         xrl             G,  #16             
                    3795 +1         IF (-1 <> -1)
                    3796 +1             mov   A,  -1         
                    3797 +1             xrl   G,  A          
                    3798 +1         ENDIF    
0F25 E53C           3799 +1         mov   A,  G              
                    3800 +2         LCJNE A,  #7, CFCERR     
0F27 B40703         3801 +2         cjne    A, #7, $+6
0F2A 020F30         3802 +2         jmp     $+6
0F2D 02108F         3803 +2         ljmp    CFCERR
0F30 00             3804 +2         nop
                    3805 +1         IF (-1 <> -1)
                    3806 +1             mov         D1, #-1     
                    3807 +1         ELSE
0F31 753D20         3808 +1             mov         D1, #32        
                    3809 +1         ENDIF                    
                    3810 +1         IF (-1 <> -1)
                    3811 +1             mov         D2, #-1     
                    3812 +1         ELSE
0F34 753E20         3813 +1             mov         D2, #32        
                    3814 +1         ENDIF                    
0F37 7407           3815 +1         mov       A, #7
                    3816 +1         IF (DEBUG_VYPISY)
                    3817 +1             lcall     PRINTCHAR        
                    3818 +1         ENDIF
                    3820            ;--------------------------
                    3821 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3822 +1                                         
0F39 C3             3823 +1         clr     C                       
0F3A 7400           3824 +1         mov     A, #0h                  
0F3C 7213           3825 +1         orl     C, PI3D      
0F3E B00E           3826 +1         anl     C, /DPZK                
0F40 7243           3827 +1         orl     C, PKI3          
0F42 B05B           3828 +1         anl     C, /ERRF3_D 
0F44 720F           3829 +1         orl     C, DPK                  
0F46 7238           3830 +1         orl     C, STOPPED              
0F48 3400           3831 +1         addc    A, #0h                  
0F4A 7050           3833            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3834 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0F4C E522           3835 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0F4E 33             3836 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
DEBUG                                                                                                         PAGE 68

                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0F4F 547E           3837 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3838 +1 
                    3839 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3840 +2         ANLB    ACC.2, ERRF2_D  ; |
0F51 A2E2           3841 +2         mov   C, ACC.2
0F53 B05A           3842 +2         anl   C, /ERRF2_D
0F55 92E2           3843 +2         mov   ACC.2, C
                    3844 +2         ANLB    ACC.3, ERRF2_D  ; |
0F57 A2E3           3845 +2         mov   C, ACC.3
0F59 B05A           3846 +2         anl   C, /ERRF2_D
0F5B 92E3           3847 +2         mov   ACC.3, C
                    3848 +2         ANLB    ACC.4, ERRF3_D  ; |
0F5D A2E4           3849 +2         mov   C, ACC.4
0F5F B05B           3850 +2         anl   C, /ERRF3_D
0F61 92E4           3851 +2         mov   ACC.4, C
                    3852 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3853 +1 
0F63 7805           3854 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3855 +1  ; LL1: 
0F65 6006           3856 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0F67 C3             3857 +1         clr     C               ; Inak shiftnem o 2
0F68 33             3858 +1         rlc     A               ;
0F69 C3             3859 +1         clr     C               ;
0F6A 33             3860 +1         rlc     A               ;
0F6B D8F8           3861 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3862 +1 ; LL2:
0F6D E8             3863 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3865 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0F6E B40303         3866 +1         cjne    A, #3, $+6
0F71 020F77         3867 +1         jmp     $+6
0F74 020FA6         3868 +1         ljmp    DOWN4_MB1
0F77 00             3869 +1         nop
                    3871 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0F78 7405           3872 +1         mov     A, #5
0F7A C3             3873 +1         clr     C
0F7B 9403           3874 +1         subb    A, #3
0F7D F8             3875 +1         mov     R0, A
0F7E E528           3876 +1         mov     A, INPORTA
0F80 541E           3877 +1         anl     A, #00011110b
0F82 852BF0         3878 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0F85 53F00C         3879 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0F88 63F0FF         3880 +1         xrl     B, #0FFH
0F8B 55F0           3881 +1         anl     A, B
0F8D C3             3882 +1         clr     C
0F8E 33             3883 +1         rlc     A
0F8F C3             3884 +1         clr     C
0F90 33             3885 +1         rlc     A
0F91 C3             3886 +1         clr     C
0F92 33             3887 +1         rlc     A
                    3888 +1 ;LL1   
0F93 C3             3889 +1         clr     C
DEBUG                                                                                                         PAGE 69

0F94 33             3890 +1         rlc     A
0F95 D8FC           3891 +1         djnz    R0, $-2;LL1
0F97 6003           3893            jz      D4_MB2C         ; |   ak neni zastavujem          
0F99 020FA6         3894            ljmp    DOWN4_MB1       ;-; |       
0F9C D223           3895    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0F9E C222           3896            clr     FAST            ; 
0FA0 1211E7         3897            lcall   WRITEPORTS      ;
0FA3 020FEF         3898            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3899            
                    3900            
0FA6                3901    DOWN4_MB1:    
                    3902            ;--------------------------
                    3903 +1         CFCSS     25, 30, 20, 0, -1
0FA6 633C1E         3904 +1         xrl             G,  #30             
                    3905 +1         IF (-1 <> -1)
                    3906 +1             mov   A,  -1         
                    3907 +1             xrl   G,  A          
                    3908 +1         ENDIF    
0FA9 E53C           3909 +1         mov   A,  G              
                    3910 +2         LCJNE A,  #25, CFCERR     
0FAB B41903         3911 +2         cjne    A, #25, $+6
0FAE 020FB4         3912 +2         jmp     $+6
0FB1 02108F         3913 +2         ljmp    CFCERR
0FB4 00             3914 +2         nop
                    3915 +1         IF (20 <> -1)
0FB5 753D14         3916 +1             mov         D1, #20     
                    3917 +1         ELSE
                    3918 +1             mov         D1, #32        
                    3919 +1         ENDIF                    
                    3920 +1         IF (0 <> -1)
0FB8 753E00         3921 +1             mov         D2, #0     
                    3922 +1         ELSE
                    3923 +1             mov         D2, #32        
                    3924 +1         ENDIF                    
0FBB 7419           3925 +1         mov       A, #25
                    3926 +1         IF (DEBUG_VYPISY)
                    3927 +1             lcall     PRINTCHAR        
                    3928 +1         ENDIF
                    3930            ;--------------------------
0FBD 121180         3931    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3932 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0FC0 200C03         3933 +1         jb      SKRD, $+6
0FC3 021043         3934 +1         ljmp    ERR_SKRD
0FC6 00             3935 +1         nop
                    3937 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3938 +1                                                                                             
                                                                                                                 
                    3939 +1                                                                                             
                                                                                                                 
                    3940 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3941 +1         COUNT    SET    COUNT+1                   
                    3942 +1         
0FC7 200A1E         3943 +1         jb      MB2, ENDD18
                    3944 +1         
                    3945 +1         IF (MB2 EQ MB2)
0FCA 754703         3946 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
DEBUG                                                                                                         PAGE 70

                    3947 +1         ENDIF 
                    3948 +1         IF (MB2 EQ MB1)
                    3949 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3950 +1         ENDIF 
                    3951 +1         
0FCD 304306         3952 +1         jnb     PKI3, $+9
0FD0 C222           3953 +1         clr     FAST
0FD2 D223           3954 +1         setb    SLOW
0FD4 D238           3955 +1         setb    STOPPED         
0FD6 D253           3956 +1         setb    ERRF3_U
0FD8 D25B           3957 +1         setb    ERRF3_D
0FDA 0537           3958 +1         inc     ERRF3_C
0FDC C21B           3959 +1                     clr     PKO3                           
0FDE C22C           3960 +1         clr     PO3U            
0FE0 C22B           3961 +1         clr     PO3D              
0FE2 1211E7         3962 +1                     lcall   WRITEPORTS
0FE5 020BE0         3963 +1         ljmp    DOWN3_MB2
0FE8                3964 +1 ENDD18:
0FE8 00             3965 +1         nop
0FE9 2009D1         3967            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3968    ;        CLR_FLOOR_ERR   ERRF3
                    3969    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3970    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3971    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3972    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3973    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3974    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3975    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
0FEC 020B6B         3976            ljmp    DOWN3         ;-; |       
                    3977    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3978    ;        setb    DOWNOld         ;       (a zalohuj)
                    3979    ;        clr     UPOld           ;       (a zalohuj)
                    3980    ;        clr     FAST            ; 
                    3981    ;        lcall   WRITEPORTS      ; 
                    3982    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3983    
                    3984                    
0FEF                3985    DOWN4_STOP:    
                    3986            ;--------------------------
                    3987 +1         CFCSS     13, 10, 0, -1, -1
0FEF 633C0A         3988 +1         xrl             G,  #10             
                    3989 +1         IF (-1 <> -1)
                    3990 +1             mov   A,  -1         
                    3991 +1             xrl   G,  A          
                    3992 +1         ENDIF    
0FF2 E53C           3993 +1         mov   A,  G              
                    3994 +2         LCJNE A,  #13, CFCERR     
0FF4 B40D03         3995 +2         cjne    A, #13, $+6
0FF7 020FFD         3996 +2         jmp     $+6
0FFA 02108F         3997 +2         ljmp    CFCERR
0FFD 00             3998 +2         nop
                    3999 +1         IF (0 <> -1)
0FFE 753D00         4000 +1             mov         D1, #0     
                    4001 +1         ELSE
DEBUG                                                                                                         PAGE 71

                    4002 +1             mov         D1, #32        
                    4003 +1         ENDIF                    
                    4004 +1         IF (-1 <> -1)
                    4005 +1             mov         D2, #-1     
                    4006 +1         ELSE
1001 753E20         4007 +1             mov         D2, #32        
                    4008 +1         ENDIF                    
1004 740D           4009 +1         mov       A, #13
                    4010 +1         IF (DEBUG_VYPISY)
                    4011 +1             lcall     PRINTCHAR        
                    4012 +1         ENDIF
                    4014            ;--------------------------
1006 121180         4015    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    4016 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
1009 200C03         4017 +1         jb      SKRD, $+6
100C 021043         4018 +1         ljmp    ERR_SKRD
100F 00             4019 +1         nop
                    4021 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    4022 +1                                                                                             
                                                                                                                 
                    4023 +1                                                                                             
                                                                                                                 
                    4024 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              4025 +1         COUNT    SET    COUNT+1                   
                    4026 +1         
1010 200A1E         4027 +1         jb      MB2, ENDD19
                    4028 +1         
                    4029 +1         IF (MB2 EQ MB2)
1013 754703         4030 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    4031 +1         ENDIF 
                    4032 +1         IF (MB2 EQ MB1)
                    4033 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    4034 +1         ENDIF 
                    4035 +1         
1016 304306         4036 +1         jnb     PKI3, $+9
1019 C222           4037 +1         clr     FAST
101B D223           4038 +1         setb    SLOW
101D D238           4039 +1         setb    STOPPED         
101F D253           4040 +1         setb    ERRF3_U
1021 D25B           4041 +1         setb    ERRF3_D
1023 0537           4042 +1         inc     ERRF3_C
1025 C21B           4043 +1                     clr     PKO3                           
1027 C22C           4044 +1         clr     PO3U            
1029 C22B           4045 +1         clr     PO3D              
102B 1211E7         4046 +1                     lcall   WRITEPORTS
102E 020BE0         4047 +1         ljmp    DOWN3_MB2
1031                4048 +1 ENDD19:
1031 00             4049 +1         nop
1032 2009D1         4051            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    4052    ;        CLR_FLOOR_ERR   ERRF3
1035 C221           4053            clr     DOWN            ; zastav motor
1037 D23B           4054            setb    DOWNOld         ;       (a zalohuj)
1039 C23A           4055            clr     UPOld           ;       (a zalohuj)
103B C222           4056            clr     FAST            ; 
103D 1211E7         4057            lcall   WRITEPORTS      ; 
1040 0208AB         4058            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
DEBUG                                                                                                         PAGE 72

                    4059      
                    4060      
                    4061      
                    4062    
                    4063            
1043                4064    ERR_SKRD:    
1043 C221           4065            clr     DOWN            ; zastav motor
1045 C222           4066            clr     FAST            ; 
1047 1211E7         4067            lcall   WRITEPORTS      ; 
                    4068            IF (DEBUG_VYPISY)
                    4069                mov     DPTR, #STR_ERR_SKRD         ; vypis info o neocakavanom nacitani synchro
                                                                               nizacnej clonky
                    4070                lcall   DISPSTR         ;
                    4071            ENDIF
104A 754705         4072            mov     PORUCHA, #5
104D 1213D1         4073            lcall   MSG05
1050 12135E         4074            lcall   SND_MESSAGE
                    4075            
                    4076            ; Nastavenie spravneho priznaku G a D     
1053 753C1E         4077            mov     G, #30          ;
1056 753D00         4078            mov     D1, #0           ;
1059 753E00         4079            mov     D2, #0           ;
105C 020112         4080            ljmp    FLOOR1    
                    4081            
105F                4082    ERR_SKRH: 
105F C222           4083            clr     FAST            ; zastav motor
1061 C223           4084            clr     SLOW            ; 
1063 1211E7         4085            lcall   WRITEPORTS      ; 
                    4086            IF (DEBUG_VYPISY)
                    4087                mov     DPTR, #STR_ERR_SKRH         ; vypis info o neocakavanom nacitani synchro
                                                                               nizacnej clonky
                    4088                lcall   DISPSTR         ;
                    4089            ENDIF
1066 754704         4090            mov     PORUCHA, #4
1069 1213D1         4091            lcall   MSG05
106C 12135E         4092            lcall   SND_MESSAGE
                    4093            
                    4094            ; Nastavenie spravneho priznaku G a D     
106F 753C05         4095            mov     G, #5           ;
1072 753D00         4096            mov     D1, #0           ;
1075 753E00         4097            mov     D2, #0           ;
1078 020D6B         4098            ljmp    FLOOR4 
                    4099            
107B                4100    ERRFLOOR:
107B C222           4101            clr     FAST            ; zastav motor
107D C223           4102            clr     SLOW            ; 
107F 1211E7         4103            lcall   WRITEPORTS      ; 
                    4104            IF (DEBUG_VYPISY)
                    4105                mov     DPTR, #STR_ERR_FLOOR         ; vypis info o neocakavanom pohnuti sa kabi
                                                                               ny z poschodia
                    4106                lcall   DISPSTR         ;
                    4107            ENDIF
                    4108            ; rozblikaj vsetky LEDky
                    4109            ; pockaj kym vsetci vystupia
                    4110            ; pockaj este 3 sakundy
                    4111 +1         TIMER2  60
1082 752D3C         4112 +1            mov           T2_C, #60                              
1085 C27A           4113 +1                  clr       T2_F                                  
DEBUG                                                                                                         PAGE 73

1087 D2CA           4114 +1                  setb      TR2                                             
1089 307AFD         4116            jnb               T2_F, $                       ; 
                    4117            ;zresetuj
108C 020033         4118            ljmp     START
                    4119            
                    4120    
                    4121               
108F                4122    CFCERR:
108F C220           4123            clr     UP              ; zastav motor
1091 C221           4124            clr     DOWN            ; 
1093 C222           4125            clr     FAST            ; 
1095 C223           4126            clr     SLOW            ; 
1097 1211E7         4127            lcall   WRITEPORTS      ; 
                    4128            IF (DEBUG_VYPISY)
                    4129                mov     DPTR, #STR_ERR_CFC         ; vypis info o zisteni chyby toku programu
                    4130                lcall   DISPSTR         ;  
                    4131            ENDIF
109A 121401         4132            lcall   MSG06
109D 12135E         4133            lcall   SND_MESSAGE
                    4134                    
10A0                4135    ENDPROG:
                    4136 +1         TIMER2  20
10A0 752D14         4137 +1            mov           T2_C, #20                              
10A3 C27A           4138 +1                  clr       T2_F                                  
10A5 D2CA           4139 +1                  setb      TR2                                             
10A7 307AFD         4141            jnb     T2_F, $
10AA D218           4142            setb    KS
10AC 1211E7         4143            call    WRITEPORTS     
                    4144 +1         TIMER2  20
10AF 752D14         4145 +1            mov           T2_C, #20                              
10B2 C27A           4146 +1                  clr       T2_F                                  
10B4 D2CA           4147 +1                  setb      TR2                                             
10B6 307AFD         4149            jnb     T2_F, $
10B9 C218           4150            clr     KS
10BB 1211E7         4151            call    WRITEPORTS
10BE 80E0           4152            jmp     ENDPROG 
                    4153    
10C0 22             4154            ret
                    4155            
                    4156            
                    4157            
                    4158    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4159    ; INT_TIMER0
                    4160    ; Obsluha prerusenia timera 0
                    4161    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
10C1                4162    INT_TIMER0:
10C1 C0D0           4163            push    PSW
10C3 C0E0           4164            push    ACC
10C5 C0F0           4165            push    B
                    4166            ;push    OUTPORTC
                    4167            
10C7 E52E           4168            mov     A, T0_C ;R5
10C9 152E           4169            dec     T0_C    ;R5
10CB 6002           4170            jz      INT_TIMER0_MAIN    
10CD 800E           4171            sjmp    INT_TIMER0_END
10CF                4172    INT_TIMER0_MAIN:
10CF 752E14         4173            mov     T0_C, #TIMER0CONST ;R5, A
10D2 E52A           4174            mov     A, ERRFLOOR_U
DEBUG                                                                                                         PAGE 74

10D4 452B           4175            orl     A, ERRFLOOR_D
10D6 541E           4176            anl     A, #00011110b
10D8 23             4177            rl      A
10D9 23             4178            rl      A
10DA 23             4179            rl      A    
10DB 6224           4180            xrl     OUTPORTB, A     
                    4181                          
                    4182            ;clr    EA
                    4183            ;mov     p0, OUTPORTB 
                    4184            ;mov     p2, #i8255OUTB
                    4185            ;clr     WRNOT
                    4186            ;nop
                    4187            ;nop
                    4188            ;nop
                    4189            ;nop
                    4190            ;setb    WRNOT
                    4191            ;setb    EA
                    4192         
10DD                4193    INT_TIMER0_END:
                    4194            ;pop     OUTPORTC
10DD D0F0           4195            pop     B       
10DF D0E0           4196            pop     ACC
10E1 D0D0           4197            pop     PSW
10E3 32             4198            reti 
                    4199            
                    4200    ;INT_TIMER0:
                    4201    ;        push    ACC
                    4202    ;        mov     A, R7  
                    4203    ;        dec     R7               
                    4204    ;        jnz     INT_TIMER0_END     
                    4205    ;        mov     R7, #20h
                    4206    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    4207    ;        setb    LEDU
                    4208    ;        setb    LEDD
                    4209    ;        jmp     INT_TIMER0_WRITE
                    4210    ;INT_TIMER0_CLEAR:        
                    4211    ;        ;clr     LEDU
                    4212    ;        ;clr     LEDD
                    4213    ;INT_TIMER0_WRITE: 
                    4214    ;        lcall   WRITEPORTS
                    4215    ;INT_TIMER0_END: 
                    4216    ;        setb    LEDU
                    4217    ;        lcall   WRITEPORTS       
                    4218    ;        pop     ACC
                    4219    ;        reti
                    4220            
                    4221            
                    4222    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    4223    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    4224    ; 11.0592MHz/2000 = zdrzanie 1 ms
10E4                4225    TIME10MS:
10E4 C0D0           4226            push    PSW
10E6 C001           4227            push    1 ;R1
10E8 C002           4228            push    2 ;R2
                    4229    
                    4230    ;        mov     R1,#063h        ; 2
                    4231    ;                                ; *** 100x
                    4232    ;TIME0:  mov     R2,#0FFh        ; 2 
DEBUG                                                                                                         PAGE 75

                    4233    ;TIME1:  djnz    R2,TIME1        ; 256*2   
                    4234    ;        mov     R2,#0FFh        ; 2       
                    4235    ;TIME2:  djnz    R2,TIME2        ; 256*2 
                    4236    ;        mov     R2,#024h        ; 2       
                    4237    ;TIME3:  djnz    R2,TIME3        ; 36*2
                    4238    ;        nop                     ; 1
                    4239    ;        djnz    R1,TIME0        ; 2
                    4240    ;                                ; ***
                    4241    ;        mov     R1,#02Ah        ; 2 
                    4242    ;TIME4:  djnz    R1,TIME4        ; 43*2
                    4243    
                    4244 +1         TIMER2  1
10EA 752D01         4245 +1            mov           T2_C, #1                              
10ED C27A           4246 +1                  clr       T2_F                                  
10EF D2CA           4247 +1                  setb      TR2                                             
10F1                4249    TIME:   ;mov     WDTRST, #01Eh
                    4250            ;mov     WDTRST, #0E1h
10F1 30CA03         4251            jnb     TR2, TIMEEND 
10F4 307AFA         4252            jnb               T2_F, TIME                                     ;pockame, kym prejd
                                                                               e 50-100 ms. 
10F7                4253    TIMEEND:          
10F7 D002           4254            pop     2 ;R2
10F9 D001           4255            pop     1 ;R1
10FB D0D0           4256            pop     PSW
10FD 22             4257            ret                     ; koniec
                    4258            
                    4259            
                    4260    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4261    ; STOP
                    4262    ; osetri stlacenie tlacidla STOP
                    4263    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10FE                4264    STOP:
10FE C0D0           4265            push    PSW
1100 C0E0           4266            push    ACC
                    4267            
                    4268            
1102 D238           4269            setb    STOPPED
1104 C222           4270            clr     FAST
1106 C223           4271            clr     SLOW
1108 74E1           4272            mov     A, #11100001b
110A 5223           4273            anl     OUTPORTA, A 
110C C025           4274            push    OUTPORTC     ; ulozenie stavu smerovej signalizacie
110E D22F           4275            setb    LEDU
1110 D22E           4276            setb    LEDD
1112 1211E7         4277            lcall   WRITEPORTS
                    4278            
                    4279            ;lcall   WAITFORTIMER
                    4280 +1         TIMER2  40
1115 752D28         4281 +1            mov           T2_C, #40                              
1118 C27A           4282 +1                  clr       T2_F                                  
111A D2CA           4283 +1                  setb      TR2                                             
111C 12113C         4285    STOPC:  lcall   READPORTS1
111F E528           4286            mov     A, INPORTA
1121 541E           4287            anl     A, #00011110b
1123 60F7           4288            jz      STOPC
1125 307AF4         4289            jnb     T2_F, STOPC 
                    4290                 
                    4291                 
DEBUG                                                                                                         PAGE 76

1128 C22F           4292            clr     LEDU        
112A C22E           4293            clr     LEDD     
112C D0E0           4294            pop     ACC         ; obnovenie stavu smerovej signalizacie  
112E 55C0           4295            anl     A, 0C0h
1130 4225           4296            orl     OUTPORTC, A
                    4297            
1132 D223           4298            setb    SLOW
1134 1211E7         4299            lcall   WRITEPORTS
                    4300            
                    4301            
1137 D0E0           4302            pop    ACC
1139 D0D0           4303            pop    PSW
113B 22             4304            ret        
                    4305            
                    4306    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4307    ; READPORTS1
                    4308    ; precita nove hodnoty na portoch
                    4309    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
113C                4310    READPORTS1:
113C C0D0           4311            push    PSW
113E C2AF           4312            clr     EA                  ;Treba zakazat prerusenia
                    4313            
                    4314            ;mov     WDTRST, #01Eh
                    4315            ;mov     WDTRST, #0E1h
                    4316            
1140 75A080         4317            mov     p2, #i8255INA       ; citaj data z portu A
1143 75803F         4318            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
1146 C2B7           4319            clr     RDNOT
1148 00             4320            nop
1149 00             4321            nop
114A 00             4322            nop
114B 00             4323            nop
114C 858028         4324            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
114F D2B7           4325            setb    RDNOT
                    4326            
1151 75A081         4327            mov     p2, #i8255INB       ; citaj data z portu B
1154 7580FE         4328            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1157 C2B7           4329            clr     RDNOT
1159 00             4330            nop
115A 00             4331            nop
115B 00             4332            nop
115C 00             4333            nop
115D 858021         4334            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1160 D2B7           4335            setb    RDNOT
                    4336    
1162 75A082         4337            mov     p2, #i8255INC       ; citaj data z portu C
1165 75803F         4338            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1168 C2B7           4339            clr     RDNOT
116A 00             4340            nop
116B 00             4341            nop
116C 00             4342            nop
116D 00             4343            nop
116E 858022         4344            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1171 D2B7           4345            setb    RDNOT
1173 00             4346            nop
1174 00             4347            nop
1175 00             4348            nop
DEBUG                                                                                                         PAGE 77

1176 00             4349            nop
1177 00             4350            nop
1178 00             4351            nop
1179 00             4352            nop
117A 00             4353            nop
117B D2AF           4354            setb    EA                 ;znovu spustime prerusenia .
117D D0D0           4355            pop     PSW
117F 22             4356            ret
                    4357    
                    4358    
                    4359    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4360    ; READPORTS
                    4361    ; precita nove hodnoty na portoch
                    4362    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1180                4363    READPORTS:
1180 C0D0           4364            push    PSW
1182 C0E0           4365            push    ACC
                    4366    
1184 C2AF           4367            clr     EA                  ;Treba zakazat prerusenia
                    4368            
                    4369            ;mov     WDTRST, #01Eh
                    4370            ;mov     WDTRST, #0E1h
                    4371            
1186 75A080         4372            mov     p2, #i8255INA       ; citaj data z portu A
1189 75803F         4373            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
118C C2B7           4374            clr     RDNOT
118E 00             4375            nop
118F 00             4376            nop
1190 00             4377            nop
1191 00             4378            nop
1192 858028         4379            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1195 D2B7           4380            setb    RDNOT
                    4381            
1197 75A081         4382            mov     p2, #i8255INB       ; citaj data z portu B
119A 7580FE         4383            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
119D C2B7           4384            clr     RDNOT
119F 00             4385            nop
11A0 00             4386            nop
11A1 00             4387            nop
11A2 00             4388            nop
11A3 858021         4389            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
11A6 D2B7           4390            setb    RDNOT
                    4391    
11A8 75A082         4392            mov     p2, #i8255INC       ; citaj data z portu C
11AB 75803F         4393            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
11AE C2B7           4394            clr     RDNOT
11B0 00             4395            nop
11B1 00             4396            nop
11B2 00             4397            nop
11B3 00             4398            nop
11B4 858022         4399            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
11B7 D2B7           4400            setb    RDNOT
11B9 00             4401            nop
11BA 00             4402            nop
11BB 00             4403            nop
11BC 00             4404            nop
11BD 00             4405            nop
DEBUG                                                                                                         PAGE 78

11BE 00             4406            nop
11BF 00             4407            nop
11C0 00             4408            nop
11C1 D2AF           4409            setb    EA                 ;znovu spustime prerusenia
                    4410            
                    4411            
                    4412            
                    4413            
11C3 300F04         4414            jnb     DPK, READPORTS_C1
11C6 C222           4415            clr     FAST
11C8 D223           4416            setb    SLOW
11CA                4417    READPORTS_C1:         
11CA 204003         4418            jb      STOPNOT, READPORTS_C
11CD 1210FE         4419            lcall   STOP
11D0                4420    READPORTS_C:        
11D0 E528           4421            mov     A, INPORTA
11D2 541E           4422            anl     A, #00011110b
11D4 4223           4423            orl     OUTPORTA, A
11D6 1211E7         4424            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
11D9 E522           4425            mov     A, INPORTC
11DB 543F           4426            anl     A, #00111111b
11DD 4225           4427            orl     OUTPORTC, A
11DF 1211E7         4428            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    4429            
11E2 D0E0           4430            pop    ACC
11E4 D0D0           4431            pop    PSW
11E6 22             4432            ret
                    4433            
                    4434    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4435    ; WRITEPORTS
                    4436    ; spravi zalohu vystupnych registrov a posle data von
                    4437    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11E7                4438    WRITEPORTS:
11E7 C0D0           4439            push    PSW
11E9 C2AF           4440            clr     EA                  ;Treba zakazat prerusenia
                    4441            
11EB 852380         4442            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
11EE 75A0C0         4443            mov     p2, #i8255OUTA
11F1 C2B6           4444            clr     WRNOT
11F3 00             4445            nop
11F4 00             4446            nop
11F5 00             4447            nop
11F6 00             4448            nop
11F7 D2B6           4449            setb    WRNOT
                    4450            
11F9 852480         4451            mov     p0, OUTPORTB        ; potom port B
11FC 75A0C1         4452            mov     p2, #i8255OUTB
11FF C2B6           4453            clr     WRNOT
1201 00             4454            nop
1202 00             4455            nop
1203 00             4456            nop
1204 00             4457            nop
1205 D2B6           4458            setb    WRNOT
                    4459    
1207 852580         4460            mov     p0, OUTPORTC        ; a nakoniec port C
120A 75A0C2         4461            mov     p2, #i8255OUTC
120D C2B6           4462            clr     WRNOT
120F 00             4463            nop
DEBUG                                                                                                         PAGE 79

1210 00             4464            nop
1211 00             4465            nop
1212 00             4466            nop
1213 D2B6           4467            setb    WRNOT
1215 00             4468            nop
1216 00             4469            nop
1217 00             4470            nop
1218 00             4471            nop
1219 00             4472            nop
121A 00             4473            nop
121B 00             4474            nop
121C 00             4475            nop
121D D2AF           4476            setb     EA                  ;Treba zakazat prerusenia
121F D0D0           4477            pop     PSW
1221 22             4478            ret
                    4479    
                    4480    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4481    
                    4482    
                    4483    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4484    ; DISPSTR
                    4485    ; posle na seriovu linku retazec na adrese DPTR
                    4486    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1222                4487    DISPSTR:
1222 C0D0           4488            push    PSW
1224 C0E0           4489            push    ACC
1226 C083           4490            push    DPH
1228 C082           4491            push    DPL
122A                4492    DSPS_LOOP: 
                    4493            ;mov     WDTRST, #01Eh
                    4494            ;mov     WDTRST, #0E1h          
122A E4             4495            clr     A
122B 93             4496            movc    A, @A+DPTR
122C 6006           4497            jz      DSPS_END
                    4498            ;jnb     TI, $ 
                    4499            ;clr     TI
                    4500            ;mov     SBUF, A
                    4501            
122E 12126F         4502            lcall   PRINTCHAR
1231 A3             4503            inc     DPTR
1232 80F6           4504            sjmp    DSPS_LOOP
1234                4505    DSPS_END:
1234 D082           4506            pop     DPL
1236 D083           4507            pop     DPH
1238 D0E0           4508            pop     ACC
123A D0D0           4509            pop     PSW
123C 22             4510            ret
                    4511            
                    4512    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4513    ; DISPSTR - no wdt
                    4514    ; posle na seriovu linku retazec na adrese DPTR
                    4515    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
123D                4516    DISPSTRNOWDT:
123D C0D0           4517            push    PSW
123F C0E0           4518            push    ACC
1241 C083           4519            push    DPH
1243 C082           4520            push    DPL
1245                4521    DSPSNWDT_LOOP:           
DEBUG                                                                                                         PAGE 80

1245 E4             4522            clr     A
1246 93             4523            movc    A, @A+DPTR
1247 6006           4524            jz      DSPSNWDT_END
                    4525            ;jnb     TI, $ 
                    4526            ;clr     TI
                    4527            ;mov     SBUF, A
1249 12126F         4528            lcall   PRINTCHAR
124C A3             4529            inc     DPTR
124D 80F6           4530            sjmp    DSPSNWDT_LOOP
124F                4531    DSPSNWDT_END:
124F D082           4532            pop     DPL
1251 D083           4533            pop     DPH
1253 D0E0           4534            pop     ACC
1255 D0D0           4535            pop     PSW
1257 22             4536            ret
                    4537                                         
                    4538                                         
                =1  4539            $include (procLib.inc)     
                =1  4540    ;*******************************************************************************
                =1  4541    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  4542    ;-------------------------------------------------------------------------------
                =1  4543    ;
                =1  4544    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  4545    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  4546    ;     a nastavi sa priznak <T2_F>
                =1  4547    ; 
                =1  4548    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  4549    ;
                =1  4550    ;                mov             T2_C, #60                               ;3 sekundy
                =1  4551    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  4552    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  4553    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  4554    ;
                =1  4555    ;
                =1  4556    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
1258            =1  4557    INT_TIMER2:
1258 C2CF       =1  4558                        clr     TF2
125A C0E0       =1  4559            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  4560                       
125C E52D       =1  4561            mov     A, T2_C                             ;
125E 6005       =1  4562            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
1260 14         =1  4563                        dec           A                 ; dekrementovanie registra T2_C 
1261 F52D       =1  4564            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  4565                        
1263 8007       =1  4566            sjmp    INT_TIMER2_END          ;
1265            =1  4567    INT_TIMER2_MAIN:
1265 C2CA       =1  4568                        clr           TR2                                         ; zastavime po
                                                                               citadlo
1267 752D00     =1  4569            mov     T2_C, #0                            ; Resetujeme pocitadlo
126A D27A       =1  4570                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
126C            =1  4571    INT_TIMER2_END:     
126C D0E0       =1  4572            pop     ACC                                     
DEBUG                                                                                                         PAGE 81

126E 32         =1  4573            reti 
                =1  4574            
                =1  4575            
                =1  4576    ;*******************************************************************************
                =1  4577    ;   Vypis znaku na seriovu linku
                =1  4578    ;-------------------------------------------------------------------------------
                =1  4579    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4580    ;
126F            =1  4581    PRINTCHAR:
                =1  4582        ;jnb     TI, $ 
                =1  4583        ;clr     TI
126F 106302     =1  4584    _1: JBC   TRE, _2
1272 80FB       =1  4585        JMP   _1
1274            =1  4586    _2:  
1274 F599       =1  4587                    mov     SBUF, A
                =1  4588        ;setb    EA
1276 22         =1  4589        ret
                =1  4590        
                =1  4591    ;*******************************************************************************
                =1  4592    ;   Nacitanie znaku zo seriovej linky
                =1  4593    ;-------------------------------------------------------------------------------
                =1  4594    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4595    ;    
                =1  4596    ;READCHAR:
                =1  4597    ;               jnb     RI, $
                =1  4598    ;    clr     RI
                =1  4599    ;    mov     A, SBUF
                =1  4600    ;    ret
                =1  4601    
                =1  4602    
                =1  4603    
                =1  4604    ;*******************************************************************************
                =1  4605    ;   Obsluha prerusenia seriovej linky
                =1  4606    ;-------------------------------------------------------------------------------
                =1  4607    ;     Ide o prerusenie seriovej linky. Ak je k dispozicii znak, 
                =1  4608    ;     ulozi ho do buffra.
                =1  4609    ;     V pripade, ze je nacitany znak konca ramca, vynuluje 
                =1  4610    ;     ukazovatel do buffra a nastavi priznak S_RI   
                =1  4611    ;  
1277            =1  4612    SERIAL_INT:
                =1  4613                    ;clr            EA
1277 C0D0       =1  4614        push    PSW
1279 C0E0       =1  4615                    push    ACC
127B C001       =1  4616                    push    1 ;R1
                =1  4617        
                =1  4618        
127D 30981E     =1  4619                    jnb             RI, SERIAL_INT_TI                                       ; Ak
                                                                                neslo o recieve interrupt, ideme na tran
                                                                               smit interrupt
1280 C298       =1  4620                    clr             RI
1282 E599       =1  4621                    mov             A, SBUF
1284 B47E08     =1  4622                    cjne    A, #07Eh, SERIAL_INT_RCV
1287            =1  4623    SERIAL_INT_EOF:         
1287 754500     =1  4624                    mov             MSG_PTR_REC, #0
128A D261       =1  4625                    setb    S_RI
128C 02129E     =1  4626                    jmp             SERIAL_INT_TI
128F            =1  4627    SERIAL_INT_RCV:         
128F 20610C     =1  4628        jb          S_RI, SERIAL_INT_TI                             ; ak sme este stale neznulov
DEBUG                                                                                                         PAGE 82

                                                                               ali priznak prijatej spravy, nenacitavame
                                                                                dalsiu
1292 C0E0       =1  4629                    push    ACC
1294 7480       =1  4630                    mov             A, #80h
1296 2545       =1  4631                    add             A, MSG_PTR_REC
1298 F9         =1  4632                    mov             R1, A
1299 D0E0       =1  4633                    pop     ACC
129B F7         =1  4634                    mov             @R1, A
129C 0545       =1  4635                    inc             MSG_PTR_REC
                =1  4636                    ;jmp            SERIAL_INT_END
129E            =1  4637    SERIAL_INT_TI:
129E 309904     =1  4638        jnb    TI, SERIAL_INT_END
12A1 D263       =1  4639        setb  TRE        ;<------------
12A3 C299       =1  4640                    clr             TI
12A5            =1  4641    SERIAL_INT_END:
                =1  4642    
12A5 D001       =1  4643                    pop     1 ;R1
12A7 D0E0       =1  4644                    pop     ACC
12A9 D0D0       =1  4645        pop     PSW
                =1  4646                    ;setb   EA
12AB 32         =1  4647                    reti
                =1  4648        
                =1  4649                    
                =1  4650        
                =1  4651        
                =1  4652        
                =1  4653                            
                =1  4654                    ; nacitanie a odpoved na spravu
12AC            =1  4655    RCV_MESSAGE:    
12AC C0D0       =1  4656        push    PSW
12AE C0C8       =1  4657        push    T2CON
12B0 C02D       =1  4658        push    T2_C
12B2 C02F       =1  4659        push    T2
                =1  4660        
12B4            =1  4661    RCV_MESSAGE1:
                =1  4662            ;       Prijatie spravy
                =1  4663 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
12B4 752D50     =1  4664 +1            mov           T2_C, #80                              
12B7 C27A       =1  4665 +1                  clr       T2_F                                  
12B9 D2CA       =1  4666 +1                  setb      TR2                                             
12BB            =1  4668    RCV_LOOP:
12BB 207A60     =1  4669                    jb              T2_F, RCV_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
12BE 121180     =1  4670                    lcall   READPORTS
12C1 3061F7     =1  4671        jnb         S_RI, RCV_LOOP  
                =1  4672        
                =1  4673        ;Ak ide o busy, keepalive alebo ACK/NACK spravu, ignorujeme.
12C4 7880       =1  4674        mov     R0, #80H
12C6 E6         =1  4675        mov           A, @R0
                =1  4676 +1     cje     A, #000h, RCV_MESSAGE_END
12C7 B40003     =1  4677 +1         cjne    A, #000h, $+6
12CA 02131E     =1  4678 +1         ljmp     RCV_MESSAGE_END
12CD 00         =1  4679 +1         nop
DEBUG                                                                                                         PAGE 83

                =1  4681 +1     cje     A, #0FDh, RCV_MESSAGE_END  
12CE B4FD03     =1  4682 +1         cjne    A, #0FDh, $+6
12D1 02131E     =1  4683 +1         ljmp     RCV_MESSAGE_END
12D4 00         =1  4684 +1         nop
                =1  4686 +1     cje     A, #0FEh, RCV_MESSAGE_END  
12D5 B4FE03     =1  4687 +1         cjne    A, #0FEh, $+6
12D8 02131E     =1  4688 +1         ljmp     RCV_MESSAGE_END
12DB 00         =1  4689 +1         nop
                =1  4691 +1     cje     A, #0FFh, RCV_MESSAGE_END  
12DC B4FF03     =1  4692 +1         cjne    A, #0FFh, $+6
12DF 02131E     =1  4693 +1         ljmp     RCV_MESSAGE_END
12E2 00         =1  4694 +1         nop
                =1  4696                    
                =1  4697            ;       Vypocet CRC                                             ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
12E3 7880       =1  4698                    mov     R0, #80H                                ;       Adresa prveho bajtu 
                                                                               prijatej spravy (Count)
12E5 E6         =1  4699                    mov             A, @R0                                  ;
12E6 75F002     =1  4700                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
12E9 A4         =1  4701                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
12EA 04         =1  4702                    inc     A                                               ;       
12EB F542       =1  4703                    mov             MSG_LEN, A                              ;
12ED AA42       =1  4704                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
12EF 7880       =1  4705                    mov     R0, #80H                                ;       R2 = dlzka bloku, 
12F1 12144C     =1  4706                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
                                                                                bloku                                   
                                                                                                                        
                                                                                                ;<<<<<<<<<<<<<<<<<<<
12F4 B47E01     =1  4707                    cjne    A, #7Eh, RCV_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
12F7 04         =1  4708                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
12F8            =1  4709    RCV_CONT:       
                =1  4710            ;       Kontrola spravnosti CRC
12F8 F5F0       =1  4711                    mov             B, A                                    ; Prave vypocitane C
                                                                               RC zalohujeme do B
12FA E542       =1  4712                    mov             A, MSG_LEN                              ; Nacita sa prijate 
                                                                               CRC
12FC 4480       =1  4713                    orl             A, #80h                                 ;       80h + MSG_LE
                                                                               N (dlzka spravy) + 1 
12FE F8         =1  4714                    mov             R0, A                                   ;                   
                                                                                    
12FF E6         =1  4715                    mov             A, @R0                                  ;
1300 B5F009     =1  4716                    cjne    A, B, NACK                              ; Porovnanie CRC. Ak sa nezh
                                                                               oduje, posiela sa NACK
                =1  4717    
                =1  4718            ;       Poslanie ACK
1303            =1  4719    ACK:
1303 901779     =1  4720            mov     DPTR, #COM_ACK          ; Posle sa predpripravena sprava ACK 
1306 121222     =1  4721            lcall   DISPSTR                 ; a pokracuje sa spracovanim prijatej spravy        
                                                                                   
1309 021316     =1  4722                    jmp             PROCESS
                =1  4723                    
                =1  4724                    
                =1  4725            ;       Poslanie NACK
130C            =1  4726    NACK:
130C 90177D     =1  4727        mov     DPTR, #COM_NACK         ; Posle sa predpripravena sprava NACK
DEBUG                                                                                                         PAGE 84

130F 121222     =1  4728        lcall   DISPSTR                         ; a skoci sa na zaciatok tejto rutiny pre prijat
                                                                               ie novej spravy
1312 C261       =1  4729                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
1314 809E       =1  4730                    jmp             RCV_MESSAGE1
                =1  4731    
                =1  4732            ;       Priprava odpovede
1316            =1  4733    PROCESS:
                =1  4734                    
1316 C261       =1  4735                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
                =1  4736                    
                =1  4737    ;               mov             A, #08h
                =1  4738    ;               mov             R0, #0C0h
                =1  4739    ;SLOOP: mov             @R0, A
                =1  4740    ;               inc             R0
                =1  4741    ;               dec             A
                =1  4742    ;               jnz             SLOOP
                =1  4743    ;               mov             @R0, #0h
                =1  4744                    
                =1  4745                    ;mov     R0, #0C0h                  ; Odoslanie odpovede
                =1  4746                    ;lcall  DISPSTRI                            ; z vyrovnavacej pamate urcenej 
                                                                               pre odpoved D:0C0h
                =1  4747                    
                =1  4748        
1318 121329     =1  4749        lcall PREP_MESSAGE
131B 12135E     =1  4750                    lcall   SND_MESSAGE                             ;odoslanie spravy           
                                                                                                                        
                                                                                                                        
                                                                                                           <<<<<<<<<<
                =1  4751                    
                =1  4752                    
131E            =1  4753    RCV_MESSAGE_END:
131E C261       =1  4754        clr           S_RI                              ; Prijata sprava bola tym padom spracova
                                                                               na, mozme vynulovat priznak S_RI
1320 D02F       =1  4755        pop     T2
1322 D02D       =1  4756        pop     T2_C
1324 D0C8       =1  4757        pop     T2CON
1326 D0D0       =1  4758        pop     PSW
1328 22         =1  4759                    ret
                =1  4760    
                =1  4761    
                =1  4762    
                =1  4763    
                =1  4764    ;-------ODPOVED---------------------------------------------------------
                =1  4765    
1329            =1  4766    PREP_MESSAGE:
1329 C0D0       =1  4767                    push    PSW
132B C000       =1  4768        push    0 ;R0
132D C001       =1  4769        push    1 ;R1
132F C005       =1  4770        push    5 ;R5
                =1  4771    
                =1  4772    ;       ;       Priprava odpovede
                =1  4773    ;               mov             A, #08h
                =1  4774    ;               mov             R0, #0C0h
                =1  4775    ;S2LOOP:        mov             @R0, A
DEBUG                                                                                                         PAGE 85

                =1  4776    ;               inc             R0
                =1  4777    ;               dec             A
                =1  4778    ;               jnz             S2LOOP
                =1  4779    ;               mov             @R0, #0h
                =1  4780    ;       ;       Priprava odpovede
                =1  4781                    
                =1  4782                    
                =1  4783                    ;Zistenie, o aky typ spravy ide
1331 7544C1     =1  4784                    mov             MSG_PTR_S, #0C1h
1334 78C0       =1  4785                    mov             R0, #0C0h
1336 7600       =1  4786                    mov             @R0, #0
1338 7880       =1  4787                    mov             R0, #80h
133A E6         =1  4788                    mov     A,  @R0
133B F9         =1  4789                    mov             R1, A 
133C 7881       =1  4790                    mov             R0, #81h
133E 8843       =1  4791                    mov     MSG_PTR_R,  R0
1340            =1  4792    SND_DATA_LOOP:
1340 E6         =1  4793                    mov             A, @R0
                =1  4794 +1                 CLCALLE A, #0, MSG04
1341 B40003     =1  4795 +1         cjne    A, #0, $+6
1344 1213BA     =1  4796 +1         lcall   MSG04
1347 00         =1  4797 +1         nop
                =1  4799 +1                 CLCALLE A, #1, MSG05
1348 B40103     =1  4800 +1         cjne    A, #1, $+6
134B 1213D1     =1  4801 +1         lcall   MSG05
134E 00         =1  4802 +1         nop
134F 08         =1  4804                    inc             R0
1350 08         =1  4805                    inc             R0
1351 19         =1  4806                    dec             R1
1352 E9         =1  4807                    mov             A, R1
1353 70EB       =1  4808                    jnz             SND_DATA_LOOP
                =1  4809        
1355 D005       =1  4810        pop    5 ;R5
1357 D001       =1  4811        pop    1 ;R1
1359 D000       =1  4812        pop    0 ;R0
135B D0D0       =1  4813        pop    PSW
135D 22         =1  4814        ret
                =1  4815    
135E            =1  4816    SND_MESSAGE:
135E C0D0       =1  4817                    push    PSW
1360 C000       =1  4818        push    0 ;R0
1362 C001       =1  4819        push    1 ;R1
1364 C005       =1  4820        push    5 ;R5    
                =1  4821                    
                =1  4822                    ;       Vypocet CRC                                     ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
1366 78C0       =1  4823                    mov     R0, #0C0H                               ;       Adresa prveho bajtu 
                                                                               spravy (Count)
1368 E6         =1  4824                    mov             A, @R0                                  ;
1369 75F002     =1  4825                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
136C A4         =1  4826                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
136D 04         =1  4827                    inc     A                                               ;       
136E F542       =1  4828                    mov             MSG_LEN, A                              ;
1370 AA42       =1  4829                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
1372 78C0       =1  4830                    mov     R0, #0C0H                               ;       R2 = dlzka bloku, 
1374 12144C     =1  4831                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
DEBUG                                                                                                         PAGE 86

                                                                                bloku
1377 B47E01     =1  4832                    cjne    A, #7Eh, SND_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
137A 04         =1  4833                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
137B            =1  4834    SND_CONT:                                                               ;
137B F6         =1  4835                    mov             @R0, A                                  ; Ulozenie CRC8 do b
                                                                               uffra
                =1  4836                    
                =1  4837                    
                =1  4838                    
137C 7D05       =1  4839                    mov             R5, #5                                  ;max. 5 pokusov o zn
                                                                               ovuodoslanie spravy
137E            =1  4840    SND:            
137E 78C0       =1  4841                    mov     R0, #0C0h                   ; Odoslanie odpovede
1380 12141F     =1  4842                    lcall   DISPMSG                         ; z vyrovnavacej pamate urcenej pre 
                                                                               odpoved D:0C0h
1383 1D         =1  4843                    dec             R5                                              ; a zaznamen
                                                                               ame, ze sme poslali spravu
                =1  4844                    
                =1  4845                    ;clr            S_RI                            ; Prijata sprava bola tym pa
                                                                               dom spracovana, mozme vynulovat priznak S
                                                                               _RI
                =1  4846                    
                =1  4847 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
1384 752D50     =1  4848 +1            mov           T2_C, #80                              
1387 C27A       =1  4849 +1                  clr       T2_F                                  
1389 D2CA       =1  4850 +1                  setb      TR2                                             
138B            =1  4852    SND_LOOP:
138B 121180     =1  4853        lcall   READPORTS
138E 207A19     =1  4854                    jb              T2_F, SND_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
1391 ED         =1  4855                    mov             A, R5
1392 6016       =1  4856                    jz              SND_MESSAGE_END   ; Ak sme uz spravu preposielali 5. krat, k
                                                                               oncime
1394 3061F4     =1  4857                    jnb             S_RI, SND_LOOP  
                =1  4858                    
1397 C261       =1  4859                    clr             S_RI                                    ; Prijata sprava bol
                                                                               a tym padom spracovana, mozme vynulovat p
                                                                               riznak S_RI
                =1  4860    
1399 7880       =1  4861                    mov             R0, #80h
139B E6         =1  4862                    mov     A,  @R0
                =1  4863 +1                 cje             A,  #0FEh, SND_MESSAGE_END
139C B4FE03     =1  4864 +1         cjne    A, #0FEh, $+6
139F 0213AA     =1  4865 +1         ljmp     SND_MESSAGE_END
13A2 00         =1  4866 +1         nop
                =1  4868 +1                 cje             A,  #0FFh, SND
13A3 B4FF03     =1  4869 +1         cjne    A, #0FFh, $+6
13A6 02137E     =1  4870 +1         ljmp     SND
13A9 00         =1  4871 +1         nop
                =1  4873    
13AA            =1  4874    SND_MESSAGE_END:
13AA 7544C1     =1  4875        mov           MSG_PTR_S, #0C1h
DEBUG                                                                                                         PAGE 87

13AD 78C0       =1  4876        mov     R0, #0C0H                    
13AF 7600       =1  4877        mov     @R0, #0h 
                =1  4878    
13B1 D005       =1  4879        pop     5 ;R5
13B3 D001       =1  4880        pop     1 ;R1
13B5 D000       =1  4881        pop     0 ;R0
13B7 D0D0       =1  4882        pop     PSW
13B9 22         =1  4883                    ret
                =1  4884    
                =1  4885    
                =1  4886    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4887    ; Sprava #4 - odpoved na spravu #0
                =1  4888    ; 
                =1  4889    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
13BA            =1  4890    MSG04:
13BA C000       =1  4891                    push    0 ;R0
13BC C0E0       =1  4892                    push    ACC
13BE A844       =1  4893                    mov             R0, MSG_PTR_S
13C0 7604       =1  4894                    mov             @R0, #4h
13C2 08         =1  4895                    inc             R0
13C3 7600       =1  4896                    mov             @R0, #00000000b
                =1  4897                    
13C5 78C0       =1  4898                    mov             R0, #0C0h
13C7 06         =1  4899                    inc             @R0
                =1  4900                    
13C8 0544       =1  4901                    inc             MSG_PTR_S
13CA 0544       =1  4902                    inc             MSG_PTR_S
                =1  4903                    
13CC D0E0       =1  4904                    pop     ACC
13CE D000       =1  4905                    pop     0 ;R0
13D0 22         =1  4906                    ret
                =1  4907            
                =1  4908    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4909    ; Sprava #5 - odpoved na spravu #1
                =1  4910    ; 
                =1  4911    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
13D1            =1  4912    MSG05:
13D1 C000       =1  4913                    push    0 ;R0
13D3 C0E0       =1  4914                    push    ACC
13D5 C0F0       =1  4915        push    B
                =1  4916        
13D7 A844       =1  4917                    mov             R0, MSG_PTR_S
13D9 7605       =1  4918                    mov             @R0, #5h
13DB 08         =1  4919                    inc             R0
                =1  4920        
13DC E546       =1  4921        mov   A, POSCHODIE                  ; poschodie, na ktorom sa nachadzame
13DE 4547       =1  4922        orl   A, PORUCHA                    ; posledna rozpoznana porucha
                =1  4923        
13E0            =1  4924    MSG01_DP:
13E0 300D02     =1  4925        jnb   DP, MSG01_DPZK
13E3 4408       =1  4926        orl   A, #08h
13E5            =1  4927    MSG01_DPZK:
13E5 300E02     =1  4928        jnb   DPZK, MSG01_DPK
13E8 4410       =1  4929        orl   A, #10h
13EA            =1  4930    MSG01_DPK:     
13EA 300F02     =1  4931        jnb   DPK, MSG01_CONT
13ED 4418       =1  4932        orl   A, #18h
13EF            =1  4933    MSG01_CONT:
DEBUG                                                                                                         PAGE 88

                =1  4934            
13EF F6         =1  4935                    mov             @R0, A
13F0 754700     =1  4936        mov   PORUCHA, #0 ;porucha 000 - bez poruchy (vynulujem poruchy)
                =1  4937                    
13F3 78C0       =1  4938                    mov             R0, #0C0h
13F5 06         =1  4939                    inc             @R0
                =1  4940                    
13F6 0544       =1  4941                    inc             MSG_PTR_S
13F8 0544       =1  4942                    inc             MSG_PTR_S
                =1  4943                    
13FA D0F0       =1  4944        pop     B
13FC D0E0       =1  4945                    pop     ACC
13FE D000       =1  4946                    pop     0 ;R0
1400 22         =1  4947                    ret
                =1  4948    
                =1  4949    
                =1  4950    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4951    ; Sprava #6 - porucha KTP
                =1  4952    ; 
                =1  4953    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
1401            =1  4954    MSG06:
1401 C000       =1  4955                    push    0 ;R0
1403 C0E0       =1  4956                    push    ACC
1405 C0F0       =1  4957        push    B
                =1  4958        
1407 A844       =1  4959                    mov             R0, MSG_PTR_S
1409 7606       =1  4960                    mov             @R0, #6h
140B 08         =1  4961                    inc             R0
                =1  4962        
140C E53C       =1  4963        mov   A, G                          ; Aktualny priznak G
140E 543F       =1  4964        anl   A, #3Fh                       ; Horne dva bity musia byt vzdy 0
                =1  4965        
1410 F6         =1  4966                    mov             @R0, A
                =1  4967                    
1411 78C0       =1  4968                    mov             R0, #0C0h
1413 06         =1  4969                    inc             @R0
                =1  4970                    
1414 0544       =1  4971                    inc             MSG_PTR_S
1416 0544       =1  4972                    inc             MSG_PTR_S
                =1  4973                    
1418 D0F0       =1  4974        pop     B
141A D0E0       =1  4975                    pop     ACC
141C D000       =1  4976                    pop     0 ;R0
141E 22         =1  4977                    ret
                =1  4978    
                =1  4979    
                =1  4980    
                =1  4981    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4982    ; DISPMSG
                =1  4983    ; posle na seriovu linku retazec z buff (ROM, nepriame adresovanie)
                =1  4984    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
141F            =1  4985    DISPMSG:
141F C0D0       =1  4986        push    PSW
1421 C0E0       =1  4987        push    ACC
1423 C000       =1  4988                    push    0; R0
1425 C001       =1  4989                    push    1; R1
                =1  4990                    
1427 79C0       =1  4991                    mov             R1, #0C0h
DEBUG                                                                                                         PAGE 89

1429 E7         =1  4992                    mov             A, @R1
142A 75F002     =1  4993                    mov             B, #2
142D A4         =1  4994                    mul             AB
142E 04         =1  4995                    inc             A
142F 04         =1  4996                    inc             A
1430 F9         =1  4997                    mov             R1, A
1431 78C0       =1  4998        mov   R0, #0C0h
                =1  4999                    
1433            =1  5000    DISPMSG_LOOP:           
1433 E9         =1  5001                    mov     A, R1
1434 6008       =1  5002        jz      DISPMSG_END
1436 E6         =1  5003                    mov     A, @R0
                =1  5004                    ;jnb     TI, $
                =1  5005                    ;clr     TI
                =1  5006        ;    mov     SBUF, A
1437 12126F     =1  5007        lcall   PRINTCHAR
143A 08         =1  5008        inc     R0
143B 19         =1  5009                    dec               R1
143C 80F5       =1  5010        sjmp    DISPMSG_LOOP
143E            =1  5011    DISPMSG_END:
143E 747E       =1  5012                    mov     A, #07Eh                ; odoslanie kridlovej znacky
                =1  5013                    ;jnb     TI, $
                =1  5014                    ;clr     TI
                =1  5015        ;    mov     SBUF, A
1440 12126F     =1  5016                    lcall   PRINTCHAR
                =1  5017        
                =1  5018        
1443 D001       =1  5019                    pop     1; R1
1445 D000       =1  5020                    pop     0; R0
1447 D0E0       =1  5021        pop     ACC
1449 D0D0       =1  5022        pop     PSW
144B 22         =1  5023        ret
                =1  5024    
                =1  5025    
                =1  5026    ;****************************************************************************
                =1  5027    ;
                =1  5028    ;  Description:
                =1  5029    ;       Calculates Value In Acc Into The Running CRC In 'B', Using The Table
                =1  5030    ;       Method.  (Faster But Larger)
                =1  5031    ;
                =1  5032    ;  Entry Requirements:
                =1  5033    ;       Acc Has Value To Add To CRC
                =1  5034    ;       'B' Contains Running CRC Value
                =1  5035    ;
                =1  5036    ;  On Exit:
                =1  5037    ;       'B' Has Updated CRC Value
                =1  5038    ;
                =1  5039    ;  Affected:
                =1  5040    ;       PSW.CY, B
                =1  5041    ;
                =1  5042    ;  Stack:
                =1  5043    ;       3 Bytes, Not Including Called Routines
                =1  5044    ;
                =1  5045    ;  Comments:
                =1  5046    ;       None
                =1  5047    
                =1  5048    
                =1  5049    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DEBUG                                                                                                         PAGE 90

                =1  5050    ; CALC_CRCX
                =1  5051    ; Vypocita CRC retazca s adresou v R0 a s dlzkou v R2
                =1  5052    ; Vysledok vrati do A
                =1  5053    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
144C            =1  5054    CALC_CRCX:
144C C0D0       =1  5055        push    PSW
144E C0F0       =1  5056                    push    B
                =1  5057                    ;mov            R0, A
                =1  5058                    
1450 75F000     =1  5059                    mov       B, #00h;
1453            =1  5060    CRCX_LOOP:      
1453 BA0003     =1  5061                    cjne      R2, #0h, CRCX_CONT
1456 021462     =1  5062                    jmp               CRCX_END
1459            =1  5063    CRCX_CONT:              
1459 E4         =1  5064        clr     A
145A E6         =1  5065        mov         A, @R0  
145B 121469     =1  5066        lcall         CRC8_ADD_TABLE;
145E 08         =1  5067        inc     R0
145F 1A         =1  5068                    dec               R2
1460 80F1       =1  5069                    jmp               CRCX_LOOP
1462            =1  5070    CRCX_END:
1462 E5F0       =1  5071                    mov               A, B
                =1  5072        
1464 D0F0       =1  5073                    pop     B
1466 D0D0       =1  5074        pop     PSW
1468 22         =1  5075        ret
                =1  5076            
                =1  5077    
1469            =1  5078    CRC8_ADD_TABLE:  
1469 C083       =1  5079                    push    dph                     ; Save DPH
146B C082       =1  5080                    push    dpl                     ; Save DPL
146D C0E0       =1  5081                    push    acc                     ; Save Acc
                =1  5082    ;
146F 90147E     =1  5083                    mov     dptr, #CRC8_DATA         ; Point To Table
1472 65F0       =1  5084                    xrl     a,b                     ; XOR In CRC
1474 93         =1  5085                    movc    a,@a+dptr               ; Get New CRC Byte
1475 F5F0       =1  5086                    mov     b,a                     ; Store Back
                =1  5087    ;
1477 D0E0       =1  5088                    pop     acc                     ; Recover Acc
1479 D082       =1  5089                    pop     dpl                     ; Recover DPL
147B D083       =1  5090                    pop     dph                     ; Recover DPH
147D 22         =1  5091                    ret                             ; Return To Caller
                =1  5092                    
147E 005EBCE2   =1  5093    CRC8_DATA:      db      000h, 05eh, 0bch, 0e2h, 061h, 03fh, 0ddh, 083h
1482 613FDD83   
1486 C29C7E20   =1  5094                    db      0c2h, 09ch, 07eh, 020h, 0a3h, 0fdh, 01fh, 041h
148A A3FD1F41   
148E 9DC3217F   =1  5095                    db      09dh, 0c3h, 021h, 07fh, 0fch, 0a2h, 040h, 01eh
1492 FCA2401E   
1496 5F01E3BD   =1  5096                    db      05fh, 001h, 0e3h, 0bdh, 03eh, 060h, 082h, 0dch
149A 3E6082DC   
149E 237D9FC1   =1  5097                    db      023h, 07dh, 09fh, 0c1h, 042h, 01ch, 0feh, 0a0h
14A2 421CFEA0   
14A6 E1BF5D03   =1  5098                    db      0e1h, 0bfh, 05dh, 003h, 080h, 0deh, 03ch, 062h
14AA 80DE3C62   
14AE BEE0025C   =1  5099                    db      0beh, 0e0h, 002h, 05ch, 0dfh, 081h, 063h, 03dh
14B2 DF81633D   
14B6 7C22C09E   =1  5100                    db      07ch, 022h, 0c0h, 09eh, 01dh, 043h, 0a1h, 0ffh
DEBUG                                                                                                         PAGE 91

14BA 1D43A1FF   
14BE 4618FAA4   =1  5101                    db      046h, 018h, 0fah, 0a4h, 027h, 079h, 09bh, 0c5h
14C2 27799BC5   
14C6 84DA3866   =1  5102                    db      084h, 0dah, 038h, 066h, 0e5h, 0bbh, 059h, 007h
14CA E5BB5907   
14CE DB856739   =1  5103                    db      0dbh, 085h, 067h, 039h, 0bah, 0e4h, 006h, 058h
14D2 BAE40658   
14D6 1947A5FB   =1  5104                    db      019h, 047h, 0a5h, 0fbh, 078h, 026h, 0c4h, 09ah
14DA 7826C49A   
14DE 653BD987   =1  5105                    db      065h, 03bh, 0d9h, 087h, 004h, 05ah, 0b8h, 0e6h
14E2 045AB8E6   
14E6 A7F91B45   =1  5106                    db      0a7h, 0f9h, 01bh, 045h, 0c6h, 098h, 07ah, 024h
14EA C6987A24   
14EE F8A6441A   =1  5107                    db      0f8h, 0a6h, 044h, 01ah, 099h, 0c7h, 025h, 07bh
14F2 99C7257B   
14F6 3A6486D8   =1  5108                    db      03ah, 064h, 086h, 0d8h, 05bh, 005h, 0e7h, 0b9h
14FA 5B05E7B9   
14FE 8CD2306E   =1  5109                    db      08ch, 0d2h, 030h, 06eh, 0edh, 0b3h, 051h, 00fh
1502 EDB3510F   
1506 4E10F2AC   =1  5110                    db      04eh, 010h, 0f2h, 0ach, 02fh, 071h, 093h, 0cdh
150A 2F7193CD   
150E 114FADF3   =1  5111                    db      011h, 04fh, 0adh, 0f3h, 070h, 02eh, 0cch, 092h
1512 702ECC92   
1516 D38D6F31   =1  5112                    db      0d3h, 08dh, 06fh, 031h, 0b2h, 0ech, 00eh, 050h
151A B2EC0E50   
151E AFF1134D   =1  5113                    db      0afh, 0f1h, 013h, 04dh, 0ceh, 090h, 072h, 02ch
1522 CE90722C   
1526 6D33D18F   =1  5114                    db      06dh, 033h, 0d1h, 08fh, 00ch, 052h, 0b0h, 0eeh
152A 0C52B0EE   
152E 326C8ED0   =1  5115                    db      032h, 06ch, 08eh, 0d0h, 053h, 00dh, 0efh, 0b1h
1532 530DEFB1   
1536 F0AE4C12   =1  5116                    db      0f0h, 0aeh, 04ch, 012h, 091h, 0cfh, 02dh, 073h
153A 91CF2D73   
153E CA947628   =1  5117                    db      0cah, 094h, 076h, 028h, 0abh, 0f5h, 017h, 049h
1542 ABF51749   
1546 0856B4EA   =1  5118                    db      008h, 056h, 0b4h, 0eah, 069h, 037h, 0d5h, 08bh
154A 6937D58B   
154E 5709EBB5   =1  5119                    db      057h, 009h, 0ebh, 0b5h, 036h, 068h, 08ah, 0d4h
1552 36688AD4   
1556 95CB2977   =1  5120                    db      095h, 0cbh, 029h, 077h, 0f4h, 0aah, 048h, 016h
155A F4AA4816   
155E E9B7550B   =1  5121                    db      0e9h, 0b7h, 055h, 00bh, 088h, 0d6h, 034h, 06ah
1562 88D6346A   
1566 2B7597C9   =1  5122                    db      02bh, 075h, 097h, 0c9h, 04ah, 014h, 0f6h, 0a8h
156A 4A14F6A8   
156E 742AC896   =1  5123                    db      074h, 02ah, 0c8h, 096h, 015h, 04bh, 0a9h, 0f7h
1572 154BA9F7   
1576 B6E80A54   =1  5124                    db      0b6h, 0e8h, 00ah, 054h, 0d7h, 089h, 06bh, 035h                
157A D7896B35   
                =1  5125                    
                    5126    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    5127    
157E 0D0A5269       5128    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
1582 61646961   
1586 63692073   
158A 79737465   
158E 6D206A65   
1592 20696E69   
DEBUG                                                                                                         PAGE 92

1596 6369616C   
159A 697A6F76   
159E 616E792E   
15A2 0D0A00     
15A5 0D0A5A61       5129    STR_WDT:          db  0dh, 0ah, 'Zapinam WDT...', 0dh, 0ah, 00h
15A9 70696E61   
15AD 6D205744   
15B1 542E2E2E   
15B5 0D0A00     
15B8 0D0A4361       5130    STR_RESET:          db  0dh, 0ah, 'Cakam 10 sekund...', 0dh, 0ah, 00h
15BC 6B616D20   
15C0 31302073   
15C4 656B756E   
15C8 642E2E2E   
15CC 0D0A00     
15CF 52696164       5131    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
15D3 69616369   
15D7 20737973   
15DB 74656D20   
15DF 6A652072   
15E3 65696E69   
15E7 6369616C   
15EB 697A6F76   
15EF 616E7920   
15F3 706F2073   
15F7 746C6163   
15FB 656E6920   
15FF 746C6163   
1603 69646C61   
1607 2053544F   
160B 502E0D0A   
160F 00         
1610 4B616C69       5132    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
1614 62726163   
1618 69612076   
161C 79746168   
1620 75206A65   
1624 20756B6F   
1628 6E63656E   
162C 612E0D0A   
1630 00         
1631 43687962       5133    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
1635 61212056   
1639 79706164   
163D 6C612073   
1641 706F6D61   
1645 6C6F7661   
1649 63696120   
164D 636C6F6E   
1651 6B61210D   
1655 0A00       
1657 43687962       5134    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
165B 61212056   
165F 79706164   
1663 6C692064   
1667 76652073   
166B 706F6D61   
DEBUG                                                                                                         PAGE 93

166F 6C6F7661   
1673 63696520   
1677 636C6F6E   
167B 6B79210D   
167F 0A00       
1681 43687962       5135    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
1685 61212056   
1689 79706164   
168D 6C61207A   
1691 61737461   
1695 766F7661   
1699 63696120   
169D 636C6F6E   
16A1 6B61210D   
16A5 0A00       
16A7 43687962       5136    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
16AB 6121204E   
16AF 656F6361   
16B3 6B617661   
16B7 6E65206E   
16BB 61636974   
16BF 616E6965   
16C3 20686F72   
16C7 6E656A20   
16CB 73706F6D   
16CF 616C6F76   
16D3 6163656A   
16D7 20636C6F   
16DB 6E6B7921   
16DF 0D0A00     
16E2 43687962       5137    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
16E6 6121204E   
16EA 656F6361   
16EE 6B617661   
16F2 6E65206E   
16F6 61636974   
16FA 616E6965   
16FE 20646F6C   
1702 6E656A20   
1706 73706F6D   
170A 616C6F76   
170E 6163656A   
1712 20636C6F   
1716 6E6B7921   
171A 0D0A00     
171D 43687962       5138    STR_ERR_FLOOR:     db  'Chyba! Neocakavane pohnutie kabyny z poschodia!', 0dh, 0ah, 00h
1721 6121204E   
1725 656F6361   
1729 6B617661   
172D 6E652070   
1731 6F686E75   
1735 74696520   
1739 6B616279   
173D 6E79207A   
1741 20706F73   
1745 63686F64   
DEBUG                                                                                                         PAGE 94

1749 6961210D   
174D 0A00       
174F 53707573       5139    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
1753 74616D20   
1757 4B54502E   
175B 2E2E0D0A   
175F 00         
1760 446F736C       5140    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
1764 6F206B20   
1768 7A6D656E   
176C 65204B54   
1770 50210D0A   
1774 00         
                    5141    
                    5142    ;COM_KEEPALIVE:    db  000h, 00h, 7Eh, 00h
1775 FD897E00       5143    COM_BUSY:                     db  0FDh, 89h, 7Eh, 00h
1779 FE6B7E00       5144    COM_ACK:                      db  0FEh, 6Bh, 7Eh, 00h
177D FF357E00       5145    COM_NACK:                     db  0FFh, 35h, 7Eh, 00h
                    5146    
                    5147    
----                5148            DSEG
0050                5149            org     50h            ;Pozor!
0050                5150    STACK:  DS      10h
                    5151    
                    5152    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 95

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
ACK. . . . . . . . . . . . . . .  C ADDR  1303H  NOT USED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALC_CRCX. . . . . . . . . . . .  C ADDR  144CH  
CALIB. . . . . . . . . . . . . .  C ADDR  00C7H  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00E0H  
CALIBEND2. . . . . . . . . . . .  C ADDR  00EBH  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00D8H  
CFCERR . . . . . . . . . . . . .  C ADDR  108FH  
COM_ACK. . . . . . . . . . . . .  C ADDR  1779H  
COM_BUSY . . . . . . . . . . . .  C ADDR  1775H  
COM_NACK . . . . . . . . . . . .  C ADDR  177DH  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CRC8_ADD_TABLE . . . . . . . . .  C ADDR  1469H  
CRC8_DATA. . . . . . . . . . . .  C ADDR  147EH  
CRCX_CONT. . . . . . . . . . . .  C ADDR  1459H  
CRCX_END . . . . . . . . . . . .  C ADDR  1462H  
CRCX_LOOP. . . . . . . . . . . .  C ADDR  1453H  
DEBUG                                                                                                         PAGE 96

CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  089BH  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0CC4H  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0F9CH  
DEBUG_VYPISY . . . . . . . . . .    NUMB  0000H  REDEFINABLE  
DISPMSG. . . . . . . . . . . . .  C ADDR  141FH  
DISPMSG_END. . . . . . . . . . .  C ADDR  143EH  
DISPMSG_LOOP . . . . . . . . . .  C ADDR  1433H  
DISPSTR. . . . . . . . . . . . .  C ADDR  1222H  
DISPSTRNOWDT . . . . . . . . . .  C ADDR  123DH  NOT USED  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  0769H  
DOWN2ERR . . . . . . . . . . . .  C ADDR  07C7H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  07D6H  
DOWN2_C. . . . . . . . . . . . .  C ADDR  0798H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  0877H  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  088EH  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  07F0H  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  0817H  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  0846H  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  0856H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0B6BH  
DOWN3A . . . . . . . . . . . . .  C ADDR  0B9AH  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0CCEH  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0CE5H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0BE0H  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0C07H  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0C4AH  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0D17H  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0D2EH  
DOWN4. . . . . . . . . . . . . .  C ADDR  0E4BH  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0E76H  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0FA6H  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0FBDH  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0EBCH  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0EDFH  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0F22H  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  0FEFH  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  1006H  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPH. . . . . . . . . . . . . . .  D ADDR  0083H  PREDEFINED  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPL. . . . . . . . . . . . . . .  D ADDR  0082H  PREDEFINED  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPSNWDT_END . . . . . . . . . .  C ADDR  124FH  
DSPSNWDT_LOOP. . . . . . . . . .  C ADDR  1245H  
DSPS_END . . . . . . . . . . . .  C ADDR  1234H  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  122AH  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  0248H  
ENDD1. . . . . . . . . . . . . .  C ADDR  02B1H  
ENDD10 . . . . . . . . . . . . .  C ADDR  0A76H  
ENDD11 . . . . . . . . . . . . .  C ADDR  0AF6H  
DEBUG                                                                                                         PAGE 97

ENDD12 . . . . . . . . . . . . .  C ADDR  0BC5H  
ENDD13 . . . . . . . . . . . . .  C ADDR  0C32H  
ENDD14 . . . . . . . . . . . . .  C ADDR  0D10H  
ENDD15 . . . . . . . . . . . . .  C ADDR  0D59H  
ENDD16 . . . . . . . . . . . . .  C ADDR  0EA1H  
ENDD17 . . . . . . . . . . . . .  C ADDR  0F0AH  
ENDD18 . . . . . . . . . . . . .  C ADDR  0FE8H  
ENDD19 . . . . . . . . . . . . .  C ADDR  1031H  
ENDD2. . . . . . . . . . . . . .  C ADDR  0396H  
ENDD3. . . . . . . . . . . . . .  C ADDR  03DFH  
ENDD4. . . . . . . . . . . . . .  C ADDR  05BCH  
ENDD5. . . . . . . . . . . . . .  C ADDR  0629H  
ENDD6. . . . . . . . . . . . . .  C ADDR  070EH  
ENDD7. . . . . . . . . . . . . .  C ADDR  0757H  
ENDD8. . . . . . . . . . . . . .  C ADDR  07C3H  
ENDD9. . . . . . . . . . . . . .  C ADDR  0842H  
ENDPROG. . . . . . . . . . . . .  C ADDR  10A0H  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR . . . . . . . . . . . .  C ADDR  107BH  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERRSIG . . . . . . . . . . . . .  D ADDR  0041H  NOT USED  
ERRSKRD_C. . . . . . . . . . . .  D ADDR  0040H  NOT USED  
ERRSKRH_C. . . . . . . . . . . .  D ADDR  003FH  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  1043H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  105FH  
ES . . . . . . . . . . . . . . .  B ADDR  00ACH  PREDEFINED  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
F1C. . . . . . . . . . . . . . .  C ADDR  01ADH  NOT USED  
F1OK . . . . . . . . . . . . . .  C ADDR  01D8H  
F1S. . . . . . . . . . . . . . .  C ADDR  014AH  
F1_KEEPALIVE_CONT. . . . . . . .  C ADDR  018AH  
F2 . . . . . . . . . . . . . . .  C ADDR  052EH  
F2DOWN . . . . . . . . . . . . .  C ADDR  054EH  
F2OK . . . . . . . . . . . . . .  C ADDR  04A6H  
F2S. . . . . . . . . . . . . . .  C ADDR  0429H  
F2SW . . . . . . . . . . . . . .  C ADDR  04ECH  
DEBUG                                                                                                         PAGE 98

F2UP . . . . . . . . . . . . . .  C ADDR  053AH  
F2_KEEPALIVE_CONT. . . . . . . .  C ADDR  0470H  
F3 . . . . . . . . . . . . . . .  C ADDR  09E8H  
F3DOWN . . . . . . . . . . . . .  C ADDR  0A08H  
F3OK . . . . . . . . . . . . . .  C ADDR  0960H  
F3S. . . . . . . . . . . . . . .  C ADDR  08E3H  
F3SW . . . . . . . . . . . . . .  C ADDR  09A6H  
F3UP . . . . . . . . . . . . . .  C ADDR  09F4H  
F3_KEEPALIVE_CONT. . . . . . . .  C ADDR  092AH  
F4OK . . . . . . . . . . . . . .  C ADDR  0E31H  
F4S. . . . . . . . . . . . . . .  C ADDR  0DA3H  
F4_KEEPALIVE_CONT. . . . . . . .  C ADDR  0DE3H  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  0112H  
FLOOR2 . . . . . . . . . . . . .  C ADDR  03F1H  
FLOOR3 . . . . . . . . . . . . .  C ADDR  08ABH  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0D6BH  
FLOORTIME. . . . . . . . . . . .  B ADDR  0064H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  10C1H  
INT_TIMER0_END . . . . . . . . .  C ADDR  10DDH  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  10CFH  
INT_TIMER2 . . . . . . . . . . .  C ADDR  1258H  
INT_TIMER2_END . . . . . . . . .  C ADDR  126CH  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  1265H  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  00FAH  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
MSG01_CONT . . . . . . . . . . .  C ADDR  13EFH  
MSG01_DP . . . . . . . . . . . .  C ADDR  13E0H  NOT USED  
MSG01_DPK. . . . . . . . . . . .  C ADDR  13EAH  
MSG01_DPZK . . . . . . . . . . .  C ADDR  13E5H  
MSG04. . . . . . . . . . . . . .  C ADDR  13BAH  
MSG05. . . . . . . . . . . . . .  C ADDR  13D1H  
DEBUG                                                                                                         PAGE 99

MSG06. . . . . . . . . . . . . .  C ADDR  1401H  
MSG_LEN. . . . . . . . . . . . .  D ADDR  0042H  
MSG_PTR_R. . . . . . . . . . . .  D ADDR  0043H  
MSG_PTR_REC. . . . . . . . . . .  D ADDR  0045H  
MSG_PTR_S. . . . . . . . . . . .  D ADDR  0044H  
NACK . . . . . . . . . . . . . .  C ADDR  130CH  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  NOT USED  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  NOT USED  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
PORUCHA. . . . . . . . . . . . .  D ADDR  0047H  
POSCHODIE. . . . . . . . . . . .  D ADDR  0046H  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
PREP_MESSAGE . . . . . . . . . .  C ADDR  1329H  
PRINTCHAR. . . . . . . . . . . .  C ADDR  126FH  
PROCESS. . . . . . . . . . . . .  C ADDR  1316H  
PSW. . . . . . . . . . . . . . .  D ADDR  00D0H  PREDEFINED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RCV_CONT . . . . . . . . . . . .  C ADDR  12F8H  
RCV_LOOP . . . . . . . . . . . .  C ADDR  12BBH  
RCV_MESSAGE. . . . . . . . . . .  C ADDR  12ACH  
RCV_MESSAGE1 . . . . . . . . . .  C ADDR  12B4H  
RCV_MESSAGE_END. . . . . . . . .  C ADDR  131EH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READPORTS. . . . . . . . . . . .  C ADDR  1180H  
READPORTS1 . . . . . . . . . . .  C ADDR  113CH  
READPORTS_C. . . . . . . . . . .  C ADDR  11D0H  
READPORTS_C1 . . . . . . . . . .  C ADDR  11CAH  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
RI . . . . . . . . . . . . . . .  B ADDR  0098H  PREDEFINED  
DEBUG                                                                                                         PAGE 100

SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SERIAL_INT . . . . . . . . . . .  C ADDR  1277H  
SERIAL_INT_END . . . . . . . . .  C ADDR  12A5H  
SERIAL_INT_EOF . . . . . . . . .  C ADDR  1287H  NOT USED  
SERIAL_INT_RCV . . . . . . . . .  C ADDR  128FH  
SERIAL_INT_TI. . . . . . . . . .  C ADDR  129EH  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SND. . . . . . . . . . . . . . .  C ADDR  137EH  
SND_CONT . . . . . . . . . . . .  C ADDR  137BH  
SND_DATA_LOOP. . . . . . . . . .  C ADDR  1340H  
SND_LOOP . . . . . . . . . . . .  C ADDR  138BH  
SND_MESSAGE. . . . . . . . . . .  C ADDR  135EH  
SND_MESSAGE_END. . . . . . . . .  C ADDR  13AAH  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0050H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  10FEH  
STOPC. . . . . . . . . . . . . .  C ADDR  111CH  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  1610H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  174FH  NOT USED  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  1631H  NOT USED  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  1657H  NOT USED  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  1760H  NOT USED  
STR_ERR_FLOOR. . . . . . . . . .  C ADDR  171DH  NOT USED  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  16E2H  NOT USED  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  16A7H  NOT USED  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  1681H  NOT USED  
STR_INIT . . . . . . . . . . . .  C ADDR  157EH  NOT USED  
STR_RESET. . . . . . . . . . . .  C ADDR  15B8H  NOT USED  
STR_STOP . . . . . . . . . . . .  C ADDR  15CFH  NOT USED  
STR_WDT. . . . . . . . . . . . .  C ADDR  15A5H  NOT USED  
S_RI . . . . . . . . . . . . . .  B ADDR  0061H  
T0_C . . . . . . . . . . . . . .  D ADDR  002EH  
T0_F . . . . . . . . . . . . . .  B ADDR  0060H  NOT USED  
T2 . . . . . . . . . . . . . . .  D ADDR  002FH  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
T2MOD. . . . . . . . . . . . . .  D ADDR  00C9H  NOT USED  
T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  007AH  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME . . . . . . . . . . . . . .  C ADDR  10F1H  
TIME10MS . . . . . . . . . . . .  C ADDR  10E4H  
TIMEEND. . . . . . . . . . . . .  C ADDR  10F7H  
TIMER0CONST. . . . . . . . . . .    NUMB  0014H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
DEBUG                                                                                                         PAGE 101

TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
TRE. . . . . . . . . . . . . . .  B ADDR  0063H  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  033EH  
U2_MB2C. . . . . . . . . . . . .  C ADDR  06B6H  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0B5BH  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  01F2H  
UP1A . . . . . . . . . . . . . .  C ADDR  021DH  
UP1_MB1. . . . . . . . . . . . .  C ADDR  0348H  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  036BH  
UP1_MB2. . . . . . . . . . . . .  C ADDR  0263H  
UP1_MB2A . . . . . . . . . . . .  C ADDR  0286H  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  02C9H  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  039DH  
UP1_STOP_C . . . . . . . . . . .  C ADDR  03B4H  
UP2. . . . . . . . . . . . . . .  C ADDR  0562H  
UP2A . . . . . . . . . . . . . .  C ADDR  0591H  
UP2_MB1. . . . . . . . . . . . .  C ADDR  06C0H  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  06E3H  
UP2_MB2. . . . . . . . . . . . .  C ADDR  05D7H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  05FEH  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  0641H  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  0715H  
UP2_STOP_C . . . . . . . . . . .  C ADDR  072CH  
UP3. . . . . . . . . . . . . . .  C ADDR  0A1CH  
UP3A . . . . . . . . . . . . . .  C ADDR  0A4BH  
UP3ERR . . . . . . . . . . . . .  C ADDR  0A7AH  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0A8AH  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0B2BH  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0B4EH  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0AA4H  
UP3_MB2A . . . . . . . . . . . .  C ADDR  0ACBH  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0AFAH  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0B0AH  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WDTRST . . . . . . . . . . . . .  D ADDR  00A6H  NOT USED  
WRITEPORTS . . . . . . . . . . .  C ADDR  11E7H  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
_1 . . . . . . . . . . . . . . .  C ADDR  126FH  
_2 . . . . . . . . . . . . . . .  C ADDR  1274H  
