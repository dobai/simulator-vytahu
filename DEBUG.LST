DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    
                =1    41    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    42    i8255INA        equ     080h
  0081          =1    43    i8255INB        equ     081h
  0082          =1    44    i8255INC        equ     082h
  0083          =1    45    i8255INCW       equ     083h
  00C0          =1    46    i8255OUTA       equ     0c0h
  00C1          =1    47    i8255OUTB       equ     0c1h
  00C2          =1    48    i8255OUTC       equ     0c2h
  00C3          =1    49    i8255OUTCW      equ     0c3h
                =1    50    
                =1    51    ; bitovo adresovatelne bunky
                =1    52    ;               data    20h    ; toto vyuziva emulator
  0021          =1    53    INPORTB         data    21h    ; nutne kvoli emulatoru!!! 
  0022          =1    54    INPORTC         data    22h
  0023          =1    55    OUTPORTA        data    23h
  0024          =1    56    OUTPORTB        data    24h
  0025          =1    57    OUTPORTC        data    25h
  0026          =1    58    INPORTBold      data    26h
DEBUG                                                                                                         PAGE 2

  0027          =1    59    CTRLREG         data    27h
  0028          =1    60    INPORTA         data    28h
                =1    61    ;               data    29h
  002A          =1    62    ERRFLOOR_U      data    2Ah
  002B          =1    63    ERRFLOOR_D      data    2Bh
  002C          =1    64    T_F                       data    2Ch
  002D          =1    65    T2_C                    data      2Dh      ;toto tu nemusi byt, netreba mi bitovo adresovate
                                                                               lne
  002E          =1    66    T0_C            data      2Eh
                =1    67    ;               data    2Fh  
                =1    68    ; general purpose RAM (including STACK)
  0030          =1    69    POSITION        data    30h
  0031          =1    70    LOWEST          data    31h
  0032          =1    71    HIGHEST         data    32h
  0033          =1    72    STOPTIMER       data    33h
  0034          =1    73    OUTPORTBold     data    34h
  0035          =1    74    ERRF1_C         data    35h
  0036          =1    75    ERRF2_C         data    36h
  0037          =1    76    ERRF3_C         data    37h
  0038          =1    77    ERRF4_C         data    38h
  0039          =1    78    ERRF12_C        data    39h
  003A          =1    79    ERRF23_C        data    3Ah
  003B          =1    80    ERRF34_C        data    3Bh
  003C          =1    81    G                           data    3Ch
  003D          =1    82    D1                  data    3Dh
  003E          =1    83    D2              data    3Eh
  003F          =1    84    ERRSKRH_C       data    3Fh
  0040          =1    85    ERRSKRD_C       data    40h 
  0041          =1    86    ERRSIG          data    41h
                =1    87       
  0042          =1    88    MSG_LEN                     data          42h
  0043          =1    89    MSG_PTR_L                   data          43h
  0044          =1    90    MSG_PTR_H                   data          44h
  0045          =1    91    MSG_PTR_REC               data    45h
                =1    92    
                =1    93                 
                =1    94    
                =1    95    
                =1    96    ;                       50h - vyssie - stack!
                =1    97    
                =1    98    
                =1    99    
  0060          =1   100    T0_F                    bit         T_F.0
  0062          =1   101    T2_F                    bit         T_F.2
  0061          =1   102    S_RI                          bit                 T_F.1
  0063          =1   103    TRE             bit     T_F.3
                =1   104    
  0051          =1   105    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1   106    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1   107    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1   108    ERRF4_U         bit     ERRFLOOR_U.4  
                =1   109    
  0052          =1   110    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1   111    ERRF23_U        bit     ERRFLOOR_U.3
  0054          =1   112    ERRF34_U        bit     ERRFLOOR_U.4   
                =1   113    
  0059          =1   114    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1   115    ERRF2_D         bit     ERRFLOOR_D.2
DEBUG                                                                                                         PAGE 3

  005B          =1   116    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1   117    ERRF4_D         bit     ERRFLOOR_D.4   
                =1   118    
  0059          =1   119    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1   120    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1   121    ERRF34_D        bit     ERRFLOOR_D.3
                =1   122    
  0040          =1   123    STOPNOT         bit     INPORTA.0
  0041          =1   124    PKI1            bit     INPORTA.1
  0042          =1   125    PKI2            bit     INPORTA.2
  0043          =1   126    PKI3            bit     INPORTA.3
  0044          =1   127    PKI4            bit     INPORTA.4
  0045          =1   128    DOORCLSD        bit     INPORTA.5 
                =1   129    
  0009          =1   130    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   131    MB2             bit     INPORTB.2
  000B          =1   132    SKRH            bit     INPORTB.3
  000C          =1   133    SKRD            bit     INPORTB.4
  000D          =1   134    DP              bit     INPORTB.5
  000E          =1   135    DPZK            bit     INPORTB.6
  000F          =1   136    DPK             bit     INPORTB.7
                =1   137    
  0031          =1   138    MB1old          bit     INPORTBold.1
  0032          =1   139    MB2old          bit     INPORTBold.2
  0033          =1   140    SKRHold         bit     INPORTBold.3
  0034          =1   141    SKRDold         bit     INPORTBold.4
                =1   142    
  0010          =1   143    PI1             bit     INPORTC.0
  0011          =1   144    PI2D            bit     INPORTC.1
  0012          =1   145    PI2U            bit     INPORTC.2
  0013          =1   146    PI3D            bit     INPORTC.3
  0014          =1   147    PI3U            bit     INPORTC.4
  0015          =1   148    PI4             bit     INPORTC.5
                =1   149    
  0018          =1   150    KS              bit     OUTPORTA.0
  0019          =1   151    PKO1            bit     OUTPORTA.1
  001A          =1   152    PKO2            bit     OUTPORTA.2
  001B          =1   153    PKO3            bit     OUTPORTA.3
  001C          =1   154    PKO4            bit     OUTPORTA.4
                =1   155    
  0020          =1   156    UP              bit     OUTPORTB.0
  0021          =1   157    DOWN            bit     OUTPORTB.1
  0022          =1   158    FAST            bit     OUTPORTB.2
  0023          =1   159    SLOW            bit     OUTPORTB.3
  0024          =1   160    FLED1           bit     OUTPORTB.4
  0025          =1   161    FLED2           bit     OUTPORTB.5
  0026          =1   162    FLED3           bit     OUTPORTB.6
  0027          =1   163    FLED4           bit     OUTPORTB.7
                =1   164    
  0028          =1   165    PO1U            bit     OUTPORTC.0
  0028          =1   166    PO1D            bit     OUTPORTC.0
  0028          =1   167    PO1             bit     OUTPORTC.0
  0029          =1   168    PO2D            bit     OUTPORTC.1
  002A          =1   169    PO2U            bit     OUTPORTC.2
  002B          =1   170    PO3D            bit     OUTPORTC.3
  002C          =1   171    PO3U            bit     OUTPORTC.4
  002D          =1   172    PO4             bit     OUTPORTC.5
  002D          =1   173    PO4U            bit     OUTPORTC.5
DEBUG                                                                                                         PAGE 4

  002D          =1   174    PO4D            bit     OUTPORTC.5
  002E          =1   175    LEDD            bit     OUTPORTC.6
  002F          =1   176    LEDU            bit     OUTPORTC.7
                =1   177    
  0038          =1   178    STOPPED         bit     CTRLREG.0
  0039          =1   179    DOORCLSDold     bit     CTRLREG.1
  003A          =1   180    UPold           bit     CTRLREG.2
  003B          =1   181    DOWNold         bit     CTRLREG.3
  003C          =1   182    FASTold         bit     CTRLREG.4
  003D          =1   183    SLOWold         bit     CTRLREG.5
                =1   184    
  00B6          =1   185    WRNOT           bit     0B6h        ; p3.6
  00B7          =1   186    RDNOT           bit     0B7h        ; p3.7
                =1   187    
                =1   188    ; bitove masky
                =1   189    ; 8255OUT 
                =1   190    ; port A
  0001          =1   191    bmKS              equ    00000001b
  0002          =1   192    bmPKO1            equ    00000010b
  0004          =1   193    bmPKO2            equ    00000100b
  0008          =1   194    bmPKO3            equ    00001000b
  0010          =1   195    bmPKO4            equ    00010000b
                =1   196    
                =1   197    ; port B
  0001          =1   198    bmUP              equ    00000001b
  0002          =1   199    bmDOWN            equ    00000010b
  0004          =1   200    bmFAST            equ    00000100b
  0008          =1   201    bmSLOW            equ    00001000b
  0010          =1   202    bmFLED1           equ    00010000b
  0020          =1   203    bmFLED2           equ    00100000b
  0040          =1   204    bmFLED3           equ    01000000b
  0080          =1   205    bmFLED4           equ    10000000b
                =1   206    
                =1   207    ; port C
  0001          =1   208    bmPO1             equ    00000001b
  0002          =1   209    bmPO2D            equ    00000010b
  0004          =1   210    bmPO2U            equ    00000100b
  0008          =1   211    bmPO3D            equ    00001000b
  0010          =1   212    bmPO3U            equ    00010000b
  0020          =1   213    bmPO4             equ    00100000b
  0040          =1   214    bmLEDD            equ    01000000b
  0080          =1   215    bmLEDU            equ    10000000b
                =1   216    
                =1   217    ; 8255IN
                =1   218    ; port A
  0001          =1   219    bmSTOP            equ    00000001b
  0002          =1   220    bmPKI1            equ    00000010b
  0004          =1   221    bmPKI2            equ    00000100b
  0008          =1   222    bmPKI3            equ    00001000b
  0010          =1   223    bmPKI4            equ    00010000b
  0020          =1   224    bmDOORCLSD        equ    00100000b
                =1   225    
                =1   226    ; port B
  0002          =1   227    bmMB1I            equ    00000010b
  0004          =1   228    bmMB2I            equ    00000100b
  0008          =1   229    bmSKRHI           equ    00001000b
  0010          =1   230    bmSKRHD           equ    00010000b
  0020          =1   231    bmDPI             equ    00100000b
DEBUG                                                                                                         PAGE 5

  0040          =1   232    bmDPZKI           equ    01000000b
  0080          =1   233    bmDPKI            equ    10000000b
                =1   234    
                =1   235    ; port C
  0001          =1   236    bmPI1             equ    00000001b
  0002          =1   237    bmPI2D            equ    00000010b
  0004          =1   238    bmPI2U            equ    00000100b
  0008          =1   239    bmPI3D            equ    00001000b
  0010          =1   240    bmPI3U            equ    00010000b
  0020          =1   241    bmPI4             equ    00100000b
                =1   242    
                =1   243    $include (macroLib.inc)
                =1   244    ;*******************************************************************************
                =1   245    ;   Sofrverovy breakpoint
                =1   246    ;-------------------------------------------------------------------------------
                =1   247    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   248    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   249    ;     nastaveny na hodnotu <INT1>
                =1   250    ;
                =1   251    ;     Emulator -> Configuration -> Single step interrupt
                =1   252    ;
                =1   253    _BP_    MACRO 
                =1   254            clr     P3.3
                =1   255            setb    EX1
                =1   256            nop
                =1   257    ENDM
                =1   258    
                =1   259    
                =1   260    ;*******************************************************************************
                =1   261    ;   CFCSS - kontrolne instrukcie
                =1   262    ;-------------------------------------------------------------------------------
                =1   263    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   264    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   265    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   266    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   267    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   268    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   269    ;
                =1   270    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   271            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   272            IF (Dx <> -1)
                =1   273                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   274                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   275            ENDIF    
                =1   276            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   277            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   278            IF (D1val <> -1)
                =1   279                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   280            ELSE
                =1   281                mov         D1, #32        ;; Nastavenie priznaku <D1> na hodnotu mimo rozsahu 
                                                                               
                =1   282            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   283            IF (D2val <> -1)
                =1   284                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   285            ELSE
                =1   286                mov         D2, #32        ;; Nastavenie priznaku <D2> na hodnotu mimo rozsahu 
                                                                               
DEBUG                                                                                                         PAGE 6

                =1   287            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   288            mov       A, #s
                =1   289            lcall     PRINTCHAR        ;; Vypis aktualneho <s> na seriovu linku
                =1   290    ENDM
                =1   291    
                =1   292    
                =1   293    ;*******************************************************************************
                =1   294    ;   Instrukcie pre casovace a pocitadla
                =1   295    ;-------------------------------------------------------------------------------
                =1   296    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   297    ;     priznak <T2_F>    
                =1   298    ;
                =1   299    TIMER2  MACRO  VAL
                =1   300               mov           T2_C, #VAL                              ;; 3 sekundy
                =1   301                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   302                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   303    ENDM
                =1   304    
                =1   305    
                =1   306    
                =1   307    
                =1   308    ;*******************************************************************************
                =1   309    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   310    ;-------------------------------------------------------------------------------
                =1   311    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   312    ;
                =1   313    
                =1   314    ; Long jump if zero
                =1   315    LJZ     MACRO   NAVESTIE
                =1   316            jnz     $+5
                =1   317            ljmp    NAVESTIE
                =1   318            nop
                =1   319    ENDM
                =1   320    
                =1   321    ; Long jump if not zero
                =1   322    LJNZ    MACRO   NAVESTIE
                =1   323            jz      $+5
                =1   324            ljmp    NAVESTIE
                =1   325            nop
                =1   326    ENDM
                =1   327    
                =1   328    ; Long jump if bit set
                =1   329    LJB     MACRO   TESTBIT, NAVESTIE
                =1   330            jnb     TESTBIT, $+6
                =1   331            ljmp    NAVESTIE
                =1   332            nop
                =1   333    ENDM
                =1   334    
                =1   335    ; Long jump if bit not set
                =1   336    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   337            jb      TESTBIT, $+6
                =1   338            ljmp    NAVESTIE
                =1   339            nop
                =1   340    ENDM
                =1   341    
                =1   342    ; Compare & long jump if not equal
DEBUG                                                                                                         PAGE 7

                =1   343    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   344            cjne    OP1, OP2, $+6
                =1   345            jmp     $+6
                =1   346            ljmp    NAVESTIE
                =1   347            nop
                =1   348    ENDM
                =1   349    
                =1   350    ; Long call if bit set
                =1   351    LCALLB  MACRO   TESTBIT, NAVESTIE
                =1   352            jnb     TESTBIT, $+6
                =1   353            lcall   NAVESTIE
                =1   354            nop
                =1   355    ENDM
                =1   356    
                =1   357    ;*******************************************************************************
                =1   358    ;   Modifikacie instrukcii x51
                =1   359    ;-------------------------------------------------------------------------------
                =1   360    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   361    ;
                =1   362    
                =1   363    ;Logical and (bit operands)
                =1   364    ANLB   MACRO   BIT1, BIT2
                =1   365            mov   C, BIT1
                =1   366            anl   C, /BIT2
                =1   367            mov   BIT1, C
                =1   368    ENDM
                =1   369    
                =1   370    ; Compare & long jump if equal
                =1   371    LCJE     MACRO   OP1, OP2, NAVESTIE
                =1   372            cjne    OP1, OP2, $+7
                =1   373            jmp    NAVESTIE
                =1   374            nop
                =1   375    ENDM
                =1   376    
                =1   377    
                =1   378    ;*******************************************************************************
                =1   379    ;   Privolavace, signalizácia polohy a smeru kabiny
                =1   380    ;-------------------------------------------------------------------------------
                =1   381    ;
                =1   382    ;   Signalizacia polohy kabiny
                =1   383    ;
                =1   384    ;     Signalizuje polohu kabiny na signalizacnom paneli.  
                =1   385    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   386    ;     Vykonane zmeny sa zapisu na porty     
                =1   387    ;
                =1   388    POLOHA_LED  MACRO  POLOHA
                =1   389            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   390            setb    FLED&POLOHA
                =1   391            lcall   WRITEPORTS
                =1   392    ENDM
                =1   393    
                =1   394    ;   Zrusenie volby vybraneho poschodia
                =1   395    ;
                =1   396    ;     Zrusi volbu vybraneho poschodia <POSCH>. Volba   
                =1   397    ;     sa zrusi v kabine ako aj v oboch smeroch na poschodi.
                =1   398    ;
                =1   399    ZRUS_POSCH  MACRO POSCH
DEBUG                                                                                                         PAGE 8

                =1   400            clr     PKO&POSCH       ;; vynulovanie volby poschodia na ktorom stojim
                =1   401            clr     PO&POSCH&U      ;;
                =1   402            clr     PO&POSCH&D      ;;
                =1   403            lcall   WRITEPORTS
                =1   404    ENDM
                =1   405    
                =1   406    ;   Rozsvietenie kabinoveho svetla a smerovej signalizacie 
                =1   407    ;
                =1   408    ;     Rozsvieti kabinove svetlo a obe sibky smerovej
                =1   409    ;     signalizacie ak sa v kabine nachadza obsluhyschopna
                =1   410    ;     osoba. V opacnom pripade svetlo a signalizaciu
                =1   411    ;     zhasne.
                =1   412    ;
                =1   413    KABINOVE_SVETLO MACRO
                =1   414            mov      C, DP          ;; Ak je nieko v kabine,
                =1   415            orl      C, DPZK        ;;
                =1   416            orl      C, DPK         ;;
                =1   417            mov      KS, C          ;;   - v kabine zapalime svetlo. Ak nie, bude zhasnute.
                =1   418            mov      LEDU, C        ;;   - Rozsvietime signalizaciu do oboch smerov. Ak nie, zha
                                                                               sneme.
                =1   419            mov      LEDD, C        ;;
                =1   420            lcall   WRITEPORTS      ;;
                =1   421    ENDM
                =1   422    
                =1   423    ;   Rozsvieti obe smerove LED diody (signalizacia, ze kabina stoji)
                =1   424    ;
                =1   425    ROZSVIET_SMER_LED MACRO
                =1   426            setb    LEDU            ;
                =1   427            setb    LEDD            ;
                =1   428            lcall   WRITEPORTS      ;
                =1   429    ENDM
                =1   430    
                =1   431    ;   Zistenie, ci obsluhyschopna osoba zvolila poschodie
                =1   432    ;      
                =1   433    ;     Zistenie, či obsluhyschopna osoba v kabine vytahu 
                =1   434    ;     stlacila niektoru z volieb poschodi v kabine.
                =1   435    ;     V pripade, ze v kabine sa nachadza obsluhyschopna 
                =1   436    ;     osoba a volba zatial nebola uskutocnena, skoci sa 
                =1   437    ;     na <NAVESTIE>      
                =1   438    ;        
                =1   439    JE_VYBRATE_POSCHODIE MACRO NAVESTIE
                =1   440            mov      C, DP         ;; Ak sa nachadza v kabine osoba, 
                =1   441            orl      C, DPZK        ;;
                =1   442            orl      C, DPK         ;;
                =1   443            jnc      $+8            ;;
                =1   444            mov      A, INPORTA     ;;
                =1   445            anl      A, #00011110b  ;; ...a nie je vybrata ziadna volba (v kabine)
                =1   446            jz       NAVESTIE       ;; skoc na navestie
                =1   447    ENDM
                =1   448    
                =1   449    
                =1   450    ;*******************************************************************************
                =1   451    ;   Rychlost a smer pohybu motora
                =1   452    ;-------------------------------------------------------------------------------
                =1   453    ;
                =1   454    ;   Nastavenie smeru pohybu motora - hore
                =1   455    SET_UP MACRO
                =1   456            setb     UP
DEBUG                                                                                                         PAGE 9

                =1   457            clr      DOWN
                =1   458            setb     LEDU
                =1   459            clr      LEDD 
                =1   460    ENDM
                =1   461    
                =1   462    ;   Nastavenie smeru pohybu motora - dole
                =1   463    SET_DOWN MACRO
                =1   464            clr     UP
                =1   465            setb    DOWN
                =1   466            clr     LEDU
                =1   467            setb    LEDD 
                =1   468    ENDM
                =1   469    
                =1   470    ;   Nastavenie rychlosti pohybu motora - rychlo
                =1   471    SET_FAST MACRO
                =1   472            setb     FAST
                =1   473            clr      SLOW
                =1   474            setb     KS      
                =1   475    ENDM
                =1   476    
                =1   477    ;   Nastavenie smeru pohybu motora - hore
                =1   478    SET_SLOW MACRO
                =1   479            setb     SLOW
                =1   480            clr      FAST
                =1   481            setb     KS
                =1   482    ENDM
                =1   483     
                =1   484      
                     485                       
                     486    
                     487    ; Definicie registrov pre Keil uVision
  00C8               488    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00C9               489    T2MOD  DATA  0C9H  ;TIMER 2 MODE
  00CA               490    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               491    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               492    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               493    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               494    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
  00A6               495    WDTRST DATA  0A6H  ;Watchdog timer
                     496    
                     497    
  0000               498    COUNT    SET    0
                     499    
                     500    ;*******************************************************************************
                     501    ;   Oznacenie poruchoveho poschodia 
                     502    ;-------------------------------------------------------------------------------
                     503    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     504    ;
                     505    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     506                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     507                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     508            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
DEBUG                                                                                                         PAGE 10

                     509            COUNT    SET    COUNT+1                   
                     510            
                     511            jb      TESTBIT, ENDD&LABEL
                     512            jnb     PKI&POSCH, $+7
                     513            clr     FAST
                     514            setb    SLOW
                     515            setb    STOPPED         
                     516            setb    FLOORBIT&_U
                     517            setb    FLOORBIT&_D
                     518            inc     FLOORBIT&_C
                     519                    clr     PKO&POSCH                               ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     520            clr     PO&POSCH&U            
                     521            clr     PO&POSCH&D              
                     522                    lcall   WRITEPORTS
                     523            ljmp    NAVESTIE
                     524    ENDD&LABEL:
                     525            nop
                     526    ENDM
                     527    
                     528    ;*******************************************************************************
                     529    ;   Odstranenie oznacenia poruchoveho poschodia 
                     530    ;-------------------------------------------------------------------------------
                     531    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     532    ;
                     533    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     534            clr    FLOORBIT&_U
                     535            clr    FLOORBIT&_D
                     536            nop
                     537    ENDM
                     538    
                     539    ;*******************************************************************************
                     540    ;   Osetrenie zakmitov clonky
                     541    ;-------------------------------------------------------------------------------
                     542    ;        
                     543    ;
                     544    ZAKMITC MACRO   TYPCLONKY
                     545            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     546            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     547            jnb     TYPCLONKY, $-3  ; 
                     548            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     549    ENDM
                     550    
                     551    ZASTAV  MACRO  C_POSCH, SMER
                     552                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     553            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     554            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     555            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     556            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     557            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     558            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     559            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
DEBUG                                                                                                         PAGE 11

                     560            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     561            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     562    ENDM
                     563    
                     564    NAJNIZSIE  MACRO
                     565            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     566            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     567            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     568    
                     569            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     570            ANLB    ACC.2, ERRF2_D  ; |
                     571            ANLB    ACC.3, ERRF2_D  ; |
                     572            ANLB    ACC.4, ERRF3_D  ; |
                     573            ;ANLB    ACC.5, ERRF3_D  ; |
                     574    
                     575            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     576     ; LL1: 
                     577            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     578            clr     C               ; Inak shiftnem o 2
                     579            rlc     A               ;
                     580            clr     C               ;
                     581            rlc     A               ;
                     582            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     583    ; LL2:
                     584            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     585    ENDM
                     586    
                     587    NAJVYSSIE  MACRO
                     588            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     589            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     590            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     591            
                     592            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     593            ANLB    ACC.3, ERRF2_U  ; |
                     594            ANLB    ACC.4, ERRF3_U  ; |
                     595            ANLB    ACC.5, ERRF3_U  ; |
                     596            ;ANLB    ACC.6, ERRF4_U  ; |
                     597            
                     598            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     599     ; LL1: 
                     600            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     601            clr     C               ; Inak shiftnem o 2
                     602            rrc     A               ;
                     603            clr     C               ;
                     604            rrc     A               ;
DEBUG                                                                                                         PAGE 12

                     605            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     606    ; LL2:
                     607            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     608            clr     C               ;
                     609            subb    A, R0           ;
                     610    ENDM
                     611    
                     612    VYSSIE_KABINA  MACRO  POSCH
                     613            mov     A, INPORTA
                     614            anl     A, #00011110b
                     615            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     616            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     617            xrl     B, #0FFH
                     618            anl     A, B
                     619            clr     C
                     620            rrc     A
                     621    ;LL1    
                     622            mov     R0, #&POSCH
                     623            clr     C
                     624            rrc     A
                     625            djnz    R0, $-2;LL1
                     626    ENDM
                     627    
                     628    NIZSIE_KABINA  MACRO  POSCH
                     629            mov     A, #5
                     630            clr     C
                     631            subb    A, #&POSCH
                     632            mov     R0, A
                     633            mov     A, INPORTA
                     634            anl     A, #00011110b
                     635            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     636            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     637            xrl     B, #0FFH
                     638            anl     A, B
                     639            clr     C
                     640            rlc     A
                     641            clr     C
                     642            rlc     A
                     643            clr     C
                     644            rlc     A
                     645    ;LL1   
                     646            clr     C
                     647            rlc     A
                     648            djnz    R0, $-2;LL1
                     649    ENDM
                     650    
                     651    
                     652    
                     653    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               654    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     655                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     656                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
  0014               657    TIMER0CONST     equ     20      ; pouziva sa pri Timer0, ktory sluzi na rozblikanie LEDiek p
                                                                               ri poruche. Hodnota 20 je 1 sekunda (1=50
                                                                               ms)
                     658    ;osetrenie vektorov preruseni
DEBUG                                                                                                         PAGE 13

0000                 659            org     0000h           ; adresa odkial startuje program po resete
0000 020033          660            ljmp    START           ; skok na zaciatok kodu programu
                     661            
000B                 662            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 021024          663            ljmp    INT_TIMER0      ; pre casovac T0
                     664            
                     665            ;org      0023h           ; v tejto casti pamati je vektor prerusenia
                     666            ;           ljmp          SERIAL_INT              ; seriovej linky 
                     667        
002B                 668            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 0211DE          669                        ljmp    INT_TIMER2      ; pre casovac T2   
                     670                  
0033                 671            org     0033h           ; od tejto adresy sa zacina kod programu
                     672            
0033                 673    START:
0033                 674    RESET:  
                     675            ; riadiace signaly do pasivnej urovne 
0033 D2B6            676            setb    WRNOT
0035 D2B7            677            setb    RDNOT
0037 753300          678            mov     STOPTIMER, #0
003A 758150          679            mov     SP, #STACK
                     680    
                     681            ; pockame si na inicializaciu obvodov 8255  
003D 7900            682            mov     R1, #0 
003F 7AFF            683            mov     R2, #0ffh
0041 D9FE            684            djnz    R1, $
0043 DAFC            685            djnz    R2, $-2
                     686            
                     687            ; teraz ich mozeme nastavit
0045 75809B          688            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          689            mov     p2, #i8255INCW
004B C2B6            690            clr     WRNOT
004D 00              691            nop
004E 00              692            nop
004F 00              693            nop
0050 00              694            nop
0051 D2B6            695            setb    WRNOT
0053 758080          696            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          697            mov     p2, #i8255OUTCW
0059 C2B6            698            clr     WRNOT
005B 00              699            nop
005C 00              700            nop
005D 00              701            nop
005E 00              702            nop
005F D2B6            703            setb    WRNOT
                     704            
                     705            ; nastavenie preruseni 
0061 C28E            706            clr     TR1                 ; zastavi sa citac T1
0063 759852          707            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     708                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     709                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     710                                        ; RI=0 (prijimaci register - nebol prijaty znak)
                     711            ;mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu                    
                                                                                            <<< 
0066 758921          712            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     713                                        ; T1: mod 1 - 16 bitove pocitadlo
DEBUG                                                                                                         PAGE 14

                     714                                        ; GATE=0 (programove riadenie casovaca)
                     715                                        ; C/T#=0 interne hodiny/12
                     716                                        ; T0: mod 1 - 16 bitove pocitadlo
                     717                                        ; GATE=0 (programove riadenie casovaca)
                     718                                        ; C/T#=0 interne hodiny/12
0069 758740          719            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006C 758B00          720            mov     TL1, #000h          ; inicializacia casovaca T1
006F 758DFA          721            mov     TH1, #0FAh          ; 
0072 758A00          722            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h            
                                                                                    <<<
0075 758C4C          723            mov     TH0, #04Ch                                      ;                           
                                                                                                                        
                                                                                   <<<
0078 75C800          724                        mov           T2CON,  #0                        ; Auto-reload mod
007B 75CA00          725                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
                                                                               592/12*1 = 0,9216 MHz
007E 75CB4C          726                        mov           RCAP2H, #4Ch;             ; (50ms)
0081 D2AD            727                        setb          ET2                                           ; Enable Tim
                                                                               er2 interrupt
                     728            
                     729            
                     730            
0083 D28C            731            setb    TR0                 ;                                                       
                                                                                            <<<
0085 C2A9            732            clr     ET0
0087 D28E            733            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     734            
                     735            
                     736            
                     737    
                     738    
                     739            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
0089 752800          740            mov     INPORTA, #0
008C 75211E          741            mov     INPORTB, #01eh      ; vsetky clonky pasivne
008F 752200          742            mov     INPORTC, #0
0092 75231E          743            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
0095 7524F0          744            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
0098 7525FF          745            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
009B D218            746            setb    KS
009D C238            747            clr     STOPPED
009F 12116D          748            call    WRITEPORTS          ; zapis novu informaciu
                     749    
00A2 752300          750            mov     OUTPORTA, #0
00A5 752400          751            mov     OUTPORTB, #0
00A8 752500          752            mov     OUTPORTC, #0
00AB 12116D          753            call    WRITEPORTS          ; zapis novu informaciu
                     754            
                     755            ;----------------------------------------------------
                     756            ;mov     DPTR, #STR_RESET    ; vypis info 
                     757            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     758            
                     759            ;TIMER2  200
                     760            ;jnb              T2_F, $                               ; Uz presiel cas?
                     761            
                     762            ;clr     DOWN                ; ZASTAVIME KABINU
DEBUG                                                                                                         PAGE 15

                     763            ;clr     FAST                ; a rychlo
                     764            ;clr     SLOW                ;                           
                     765            ;clr     UP                  ;
                     766            ;lcall   WRITEPORTS          ; zapis informaciu 
                     767            ;mov     DPTR, #STR_WDT      ; vypis info 
                     768            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     769            ;mov     WDTRST, #01Eh
                     770            ;mov     WDTRST, #0E1h
                     771            
                     772            ;----------------------------------------------------
                     773    
00AE 752800          774            mov     INPORTA, #0
00B1 752100          775            mov     INPORTB, #0         
00B4 752200          776            mov     INPORTC, #0
00B7 121106          777            call    READPORTS           ; prvotne nacitanie udajov
                     778            
00BA 752A00          779            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00BD 752B00          780            mov     ERRFLOOR_D, #0h      
                     781    
                     782            
00C0 901205          783            mov     DPTR, #STR_INIT         ; vypis info 
00C3 1211A8          784            lcall   DISPSTR                 ; o inicializacii
                     785            
                     786                   
00C6                 787    CALIB:
                     788            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     789            ;setb    TR0
00C6 121106          790            lcall   READPORTS                   ; precitaj, co je na portoch
00C9 300C13          791            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00CC D221            792            setb    DOWN                        ; inak pod dole
00CE D222            793            setb    FAST                        ; a rychlo
00D0 C223            794            clr     SLOW                        ;
00D2 C220            795            clr     UP                
00D4 12116D          796            lcall   WRITEPORTS                  ; zapis informaciu 
00D7                 797    CALIBLOOP:
00D7 121106          798            lcall   READPORTS                   ; 
00DA 300C02          799            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00DD 80F8            800            jmp     CALIBLOOP
00DF                 801    CALIBEND:                              
00DF C222            802            clr     FAST                        ; zastavime v tomto smere
00E1 C221            803            clr     DOWN                        ;
00E3 D223            804            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00E5 D220            805            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00E7 12116D          806            lcall   WRITEPORTS 
00EA                 807    CALIBEND2:
00EA 121106          808            lcall   READPORTS                   ; 
00ED 2009FA          809            jb      MB1, CALIBEND2              ; 
00F0 C223            810            clr     SLOW                        ; A teraz sme uz naozaj spravne
00F2 C220            811            clr     UP                          ; 
00F4 D224            812            setb    FLED1
00F6 12116D          813            lcall   WRITEPORTS                  ; zapis informaciu
                     814            ;clr     TR0
                     815            ;_BP_
00F9 901205          816            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
00FC 1211A8          817            lcall   DISPSTR                     ;
00FF                 818    MAIN:
DEBUG                                                                                                         PAGE 16

                     819    
                     820    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     821    ; ****************************************************************************
                     822    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     823    ; ----------------------------------------------------------------------------
                     824    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     825    ; ----------------------------------------------------------------------------
                     826    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     827    ; ****************************************************************************
                     828    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                     829    ; ----------------------------------------------------------------------------
                     830    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     831    ; ----------------------------------------------------------------------------
                     832    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     833    ; ****************************************************************************
                     834    ; POSITION
                     835    ; ****************************************************************************
                     836    
                     837    
                     838    
                     839            ;mov     R5, #0
                     840            ;mov     R6, #20
00FF D2A9            841            setb    ET0;
                     842            
                     843            ;Inicializacia priznakov (CFCSS)
0101 753C1E          844            mov             G, #30
0104 753D00          845                        mov         D1, #0
0107 753E00          846            mov             D2, #0
010A 9013D6          847            mov   DPTR, #STR_CFC_START         ; vypis info 
010D 1211A8          848            lcall DISPSTR         ;
                     849                          
                     850    
                     851    
                     852    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     853    
0110                 854    FLOOR1:
                     855            ;--------------------------
                     856 +1         CFCSS     29, 3, -1, -1, D1
0110 633C03          857 +1         xrl             G,  #3             
                     858 +1         IF (D1 <> -1)
0113 E53D            859 +1             mov   A,  D1         
0115 623C            860 +1             xrl   G,  A          
                     861 +1         ENDIF    
0117 E53C            862 +1         mov   A,  G              
                     863 +2         LCJNE A,  #29, CFCERR     
0119 B41D03          864 +2         cjne    A, #29, $+6
011C 020122          865 +2         jmp     $+6
011F 020FF2          866 +2         ljmp    CFCERR
0122 00              867 +2         nop
                     868 +1         IF (-1 <> -1)
                     869 +1             mov         D1, #-1     
                     870 +1         ELSE
0123 753D20          871 +1             mov         D1, #32        
                     872 +1         ENDIF                    
                     873 +1         IF (-1 <> -1)
                     874 +1             mov         D2, #-1     
                     875 +1         ELSE
DEBUG                                                                                                         PAGE 17

0126 753E20          876 +1             mov         D2, #32        
                     877 +1         ENDIF                    
0129 741D            878 +1         mov       A, #29
012B 1211F5          879 +1         lcall     PRINTCHAR        
                     881            ;--------------------------
                     882 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
012E 53240F          883 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0131 D224            884 +1         setb    FLED1
0133 12116D          885 +1         lcall   WRITEPORTS
0136 C238            887            clr     STOPPED
                     888 +1         TIMER2  60              ; (Timer - 3s)
0138 752D3C          889 +1            mov           T2_C, #60                              
013B C262            890 +1                  clr       T2_F                                  
013D D2CA            891 +1                  setb      TR2                                             
                     893 +1         ROZSVIET_SMER_LED
013F D22F            894 +1         setb    LEDU            ;
0141 D22E            895 +1         setb    LEDD            ;
0143 12116D          896 +1         lcall   WRITEPORTS      ;
0146 121106          898    F1S:    lcall   READPORTS       ; nacitanie dat
                     899 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0149 200A03          900 +1         jb      MB2, $+6
014C 020FD8          901 +1         ljmp    ERRFLOOR
014F 00              902 +1         nop
                     904 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0150 200B03          905 +1         jb      SKRH, $+6
0153 020FD8          906 +1         ljmp    ERRFLOOR
0156 00              907 +1         nop
                     909 +1         ZRUS_POSCH 1
0157 C219            910 +1         clr     PKO1       
0159 C228            911 +1         clr     PO1U      
015B C228            912 +1         clr     PO1D      
015D 12116D          913 +1         lcall   WRITEPORTS
0160 3062E3          915            jnb                T2_F, F1S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                     916 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0163 A20D            917 +1         mov      C, DP          
0165 720E            918 +1         orl      C, DPZK        
0167 720F            919 +1         orl      C, DPK         
0169 9218            920 +1         mov      KS, C          
016B 922F            921 +1         mov      LEDU, C        
016D 922E            922 +1         mov      LEDD, C        
016F 12116D          923 +1         lcall   WRITEPORTS      
0172 200FD1          925            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0175 3045CE          926            jnb     DOORCLSD, F1S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                     927 +1         JE_VYBRATE_POSCHODIE F1S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0178 A20D            928 +1         mov      C, DP         
017A 720E            929 +1         orl      C, DPZK        
017C 720F            930 +1         orl      C, DPK         
017E 5006            931 +1         jnc      $+8            
0180 E528            932 +1         mov      A, INPORTA     
0182 541E            933 +1         anl      A, #00011110b  
0184 60C0            934 +1         jz       F1S       
0186                 936    F1C:        
0186 E528            937            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
DEBUG                                                                                                         PAGE 18

                                                                               rom stojim (Kabina)
0188 852AF0          938            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
018B 53F00C          939            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
018E 63F0FF          940            xrl     B, #0FFH        ; | |
0191 55F0            941            anl     A, B            ; | |
0193 541C            942            anl     A, #00011100b   ; |
0195 701A            943            jnz     F1OK            ; ak ano, podme na to
0197 E522            944            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
0199 543E            945            anl     A, #00111110b   ;
                     946            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                     947 +1         ANLB    ACC.2, ERRF2_U  ; |
019B A2E2            948 +1         mov   C, ACC.2
019D B052            949 +1         anl   C, /ERRF2_U
019F 92E2            950 +1         mov   ACC.2, C
                     952 +1         ANLB    ACC.3, ERRF3_U  ; |
01A1 A2E3            953 +1         mov   C, ACC.3
01A3 B053            954 +1         anl   C, /ERRF3_U
01A5 92E3            955 +1         mov   ACC.3, C
                     957 +1         ANLB    ACC.4, ERRF3_U  ; |
01A7 A2E4            958 +1         mov   C, ACC.4
01A9 B053            959 +1         anl   C, /ERRF3_U
01AB 92E4            960 +1         mov   ACC.4, C
                     962            ;ANLB    ACC.5, ERRF4_U  ; |
01AD 7002            963            jnz     F1OK            ; ak ano, podme na to
01AF 8095            964            jmp     F1S             ; Nemam sa kde hnut, opakujem
                     965 +1 F1OK:   SET_UP                  ; rychly pohyb hore
01B1 D220            966 +1         setb     UP
01B3 C221            967 +1         clr      DOWN
01B5 D22F            968 +1         setb     LEDU
01B7 C22E            969 +1         clr      LEDD 
                     971 +1         SET_FAST                ; 
01B9 D222            972 +1         setb     FAST
01BB C223            973 +1         clr      SLOW
01BD D218            974 +1         setb     KS      
01BF 12116D          976            lcall   WRITEPORTS      ; 
01C2 0201C5          977            jmp     UP1             ; prejdi do stavu UP1
                     978            
                     979            
01C5                 980    UP1:
                     981            ;--------------------------
                     982 +1         CFCSS     20, 9, 27, -1, -1
01C5 633C09          983 +1         xrl             G,  #9             
                     984 +1         IF (-1 <> -1)
                     985 +1             mov   A,  -1         
                     986 +1             xrl   G,  A          
                     987 +1         ENDIF    
01C8 E53C            988 +1         mov   A,  G              
                     989 +2         LCJNE A,  #20, CFCERR     
01CA B41403          990 +2         cjne    A, #20, $+6
01CD 0201D3          991 +2         jmp     $+6
01D0 020FF2          992 +2         ljmp    CFCERR
01D3 00              993 +2         nop
                     994 +1         IF (27 <> -1)
01D4 753D1B          995 +1             mov         D1, #27     
                     996 +1         ELSE
                     997 +1             mov         D1, #32        
                     998 +1         ENDIF                    
DEBUG                                                                                                         PAGE 19

                     999 +1         IF (-1 <> -1)
                    1000 +1             mov         D2, #-1     
                    1001 +1         ELSE
01D7 753E20         1002 +1             mov         D2, #32        
                    1003 +1         ENDIF                    
01DA 7414           1004 +1         mov       A, #20
01DC 1211F5         1005 +1         lcall     PRINTCHAR        
                    1007            ;--------------------------
                    1008 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
01DF 53240F         1009 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
01E2 D224           1010 +1         setb    FLED1
01E4 12116D         1011 +1         lcall   WRITEPORTS
                    1013 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
01E7 12106A         1014 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
01EA 121106         1015 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
01ED 3009FA         1016 +1         jnb     MB1, $-3  ; 
01F0 12106A         1017 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
01F3 121106         1019    UP1A:   lcall   READPORTS       ; nacitanie dat
                    1020 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
01F6 200B03         1021 +1         jb      SKRH, $+6
01F9 020FBF         1022 +1         ljmp    ERR_SKRH
01FC 00             1023 +1         nop
                    1025 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1026 +1                                                                                             
                                                                                                                 
                    1027 +1                                                                                             
                                                                                                                 
                    1028 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001              1029 +1         COUNT    SET    COUNT+1                   
                    1030 +1         
01FD 20091B         1031 +1         jb      MB1, ENDD0
0200 304204         1032 +1         jnb     PKI2, $+7
0203 C222           1033 +1         clr     FAST
0205 D223           1034 +1         setb    SLOW
0207 D238           1035 +1         setb    STOPPED         
0209 D252           1036 +1         setb    ERRF12_U
020B D259           1037 +1         setb    ERRF12_D
020D 0539           1038 +1         inc     ERRF12_C
020F C21A           1039 +1                 clr     PKO2                               
0211 C22A           1040 +1         clr     PO2U            
0213 C229           1041 +1         clr     PO2D              
0215 12116D         1042 +1                 lcall   WRITEPORTS
0218 02050D         1043 +1         ljmp    UP2
021B                1044 +1 ENDD0:
021B 00             1045 +1         nop
021C 200AD4         1047            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                    1048 +1         CLR_FLOOR_ERR   ERRF12
021F C252           1049 +1         clr    ERRF12_U
0221 C259           1050 +1         clr    ERRF12_D
0223 00             1051 +1         nop
                    1053 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0224 12106A         1054 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0227 121106         1055 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
022A 300AFA         1056 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 20

022D 12106A         1057 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1059            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0230 12116D         1060            lcall   WRITEPORTS      ;
0233 020236         1061            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                    1062            
                    1063            
0236                1064    UP1_MB2:
                    1065            ;--------------------------
                    1066 +1         CFCSS     2, 22, 13, -1, -1
0236 633C16         1067 +1         xrl             G,  #22             
                    1068 +1         IF (-1 <> -1)
                    1069 +1             mov   A,  -1         
                    1070 +1             xrl   G,  A          
                    1071 +1         ENDIF    
0239 E53C           1072 +1         mov   A,  G              
                    1073 +2         LCJNE A,  #2, CFCERR     
023B B40203         1074 +2         cjne    A, #2, $+6
023E 020244         1075 +2         jmp     $+6
0241 020FF2         1076 +2         ljmp    CFCERR
0244 00             1077 +2         nop
                    1078 +1         IF (13 <> -1)
0245 753D0D         1079 +1             mov         D1, #13     
                    1080 +1         ELSE
                    1081 +1             mov         D1, #32        
                    1082 +1         ENDIF                    
                    1083 +1         IF (-1 <> -1)
                    1084 +1             mov         D2, #-1     
                    1085 +1         ELSE
0248 753E20         1086 +1             mov         D2, #32        
                    1087 +1         ENDIF                    
024B 7402           1088 +1         mov       A, #2
024D 1211F5         1089 +1         lcall     PRINTCHAR        
                    1091            ;--------------------------
                    1092 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
0250 12106A         1093 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0253 121106         1094 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0256 300AFA         1095 +1         jnb     MB2, $-3  ; 
0259 12106A         1096 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
025C 121106         1098    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                    1099 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
025F 200B03         1100 +1         jb      SKRH, $+6
0262 020FBF         1101 +1         ljmp    ERR_SKRH
0265 00             1102 +1         nop
                    1104            ; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na zastavovaciu) <<<
                    1105 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
                    1106 +1                                                                                             
                                                                                                                 
                    1107 +1                                                                                             
                                                                                                                 
                    1108 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002              1109 +1         COUNT    SET    COUNT+1                   
                    1110 +1         
0266 20091B         1111 +1         jb      MB1, ENDD1
0269 304204         1112 +1         jnb     PKI2, $+7
026C C222           1113 +1         clr     FAST
026E D223           1114 +1         setb    SLOW
DEBUG                                                                                                         PAGE 21

0270 D238           1115 +1         setb    STOPPED         
0272 D252           1116 +1         setb    ERRF12_U
0274 D259           1117 +1         setb    ERRF12_D
0276 0539           1118 +1         inc     ERRF12_C
0278 C21A           1119 +1                 clr     PKO2                               
027A C22A           1120 +1         clr     PO2U            
027C C229           1121 +1         clr     PO2D              
027E 12116D         1122 +1                 lcall   WRITEPORTS
0281 02050D         1123 +1         ljmp    UP2
0284                1124 +1 ENDD1:
0284 00             1125 +1         nop
0285 200AD4         1127            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                    1128 +1         CLR_FLOOR_ERR   ERRF12   
0288 C252           1129 +1         clr    ERRF12_U
028A C259           1130 +1         clr    ERRF12_D
028C 00             1131 +1         nop
                    1133            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
028D 12116D         1134            lcall   WRITEPORTS      ;   
                    1135 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0290 12106A         1136 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0293 121106         1137 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0296 300AFA         1138 +1         jnb     MB2, $-3  ; 
0299 12106A         1139 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1141    
029C                1142    UP1_MB2_CFC:     
                    1143            ;--------------------------
                    1144 +1         CFCSS     12, 14, -1, -1, -1
029C 633C0E         1145 +1         xrl             G,  #14             
                    1146 +1         IF (-1 <> -1)
                    1147 +1             mov   A,  -1         
                    1148 +1             xrl   G,  A          
                    1149 +1         ENDIF    
029F E53C           1150 +1         mov   A,  G              
                    1151 +2         LCJNE A,  #12, CFCERR     
02A1 B40C03         1152 +2         cjne    A, #12, $+6
02A4 0202AA         1153 +2         jmp     $+6
02A7 020FF2         1154 +2         ljmp    CFCERR
02AA 00             1155 +2         nop
                    1156 +1         IF (-1 <> -1)
                    1157 +1             mov         D1, #-1     
                    1158 +1         ELSE
02AB 753D20         1159 +1             mov         D1, #32        
                    1160 +1         ENDIF                    
                    1161 +1         IF (-1 <> -1)
                    1162 +1             mov         D2, #-1     
                    1163 +1         ELSE
02AE 753E20         1164 +1             mov         D2, #32        
                    1165 +1         ENDIF                    
02B1 740C           1166 +1         mov       A, #12
02B3 1211F5         1167 +1         lcall     PRINTCHAR        
                    1169            ;--------------------------
                    1170 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    1171 +1                                         
02B6 C3             1172 +1         clr     C                       
02B7 7400           1173 +1         mov     A, #0h                  
02B9 7212           1174 +1         orl     C, PI2U      
DEBUG                                                                                                         PAGE 22

02BB B00E           1175 +1         anl     C, /DPZK                
02BD 7242           1176 +1         orl     C, PKI2          
02BF B052           1177 +1         anl     C, /ERRF2_U 
02C1 720F           1178 +1         orl     C, DPK                  
02C3 7238           1179 +1         orl     C, STOPPED              
02C5 3400           1180 +1         addc    A, #0h                  
02C7 704B           1182            jnz     U1_MB2C       ;-; Ak ano, zastav
                    1183 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
02C9 E522           1184 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
02CB 33             1185 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
02CC 547E           1186 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1187 +1         
                    1188 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1189 +2         ANLB    ACC.3, ERRF2_U  ; |
02CE A2E3           1190 +2         mov   C, ACC.3
02D0 B052           1191 +2         anl   C, /ERRF2_U
02D2 92E3           1192 +2         mov   ACC.3, C
                    1193 +2         ANLB    ACC.4, ERRF3_U  ; |
02D4 A2E4           1194 +2         mov   C, ACC.4
02D6 B053           1195 +2         anl   C, /ERRF3_U
02D8 92E4           1196 +2         mov   ACC.4, C
                    1197 +2         ANLB    ACC.5, ERRF3_U  ; |
02DA A2E5           1198 +2         mov   C, ACC.5
02DC B053           1199 +2         anl   C, /ERRF3_U
02DE 92E5           1200 +2         mov   ACC.5, C
                    1201 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1202 +1         
02E0 7805           1203 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1204 +1  ; LL1: 
02E2 6006           1205 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
02E4 C3             1206 +1         clr     C               ; Inak shiftnem o 2
02E5 13             1207 +1         rrc     A               ;
02E6 C3             1208 +1         clr     C               ;
02E7 13             1209 +1         rrc     A               ;
02E8 D8F8           1210 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1211 +1 ; LL2:
02EA 7405           1212 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
02EC C3             1213 +1         clr     C               ;
02ED 98             1214 +1         subb    A, R0           ;
                    1216 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
02EE B40203         1217 +1         cjne    A, #2, $+6
02F1 0202F7         1218 +1         jmp     $+6
02F4 02031E         1219 +1         ljmp    UP1_MB1
02F7 00             1220 +1         nop
                    1222 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
02F8 E528           1223 +1         mov     A, INPORTA
02FA 541E           1224 +1         anl     A, #00011110b
02FC 852AF0         1225 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
02FF 53F00C         1226 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0302 63F0FF         1227 +1         xrl     B, #0FFH
DEBUG                                                                                                         PAGE 23

0305 55F0           1228 +1         anl     A, B
0307 C3             1229 +1         clr     C
0308 13             1230 +1         rrc     A
                    1231 +1 ;LL1    
0309 7802           1232 +1         mov     R0, #2
030B C3             1233 +1         clr     C
030C 13             1234 +1         rrc     A
030D D8FC           1235 +1         djnz    R0, $-2;LL1
030F 6003           1237            jz      U1_MB2C         ; |   ak neni zastavujem         
0311 02031E         1238            jmp     UP1_MB1          ; |   inak nezastavim        
0314 D223           1239    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
0316 C222           1240            clr     FAST            ; 
0318 12116D         1241            lcall   WRITEPORTS      ;         
031B 020373         1242            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1243            
                    1244            
031E                1245    UP1_MB1:
                    1246            ;--------------------------
                    1247 +1         CFCSS     6, 10, 9, 14, -1
031E 633C0A         1248 +1         xrl             G,  #10             
                    1249 +1         IF (-1 <> -1)
                    1250 +1             mov   A,  -1         
                    1251 +1             xrl   G,  A          
                    1252 +1         ENDIF    
0321 E53C           1253 +1         mov   A,  G              
                    1254 +2         LCJNE A,  #6, CFCERR     
0323 B40603         1255 +2         cjne    A, #6, $+6
0326 02032C         1256 +2         jmp     $+6
0329 020FF2         1257 +2         ljmp    CFCERR
032C 00             1258 +2         nop
                    1259 +1         IF (9 <> -1)
032D 753D09         1260 +1             mov         D1, #9     
                    1261 +1         ELSE
                    1262 +1             mov         D1, #32        
                    1263 +1         ENDIF                    
                    1264 +1         IF (14 <> -1)
0330 753E0E         1265 +1             mov         D2, #14     
                    1266 +1         ELSE
                    1267 +1             mov         D2, #32        
                    1268 +1         ENDIF                    
0333 7406           1269 +1         mov       A, #6
0335 1211F5         1270 +1         lcall     PRINTCHAR        
                    1272            ;--------------------------
                    1273 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0338 12106A         1274 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
033B 121106         1275 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
033E 300AFA         1276 +1         jnb     MB2, $-3  ; 
0341 12106A         1277 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0344 121106         1279    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1280 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0347 200B03         1281 +1         jb      SKRH, $+6
034A 020FBF         1282 +1         ljmp    ERR_SKRH
034D 00             1283 +1         nop
                    1285 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1286 +1                                                                                             
                                                                                                                 
DEBUG                                                                                                         PAGE 24

                    1287 +1                                                                                             
                                                                                                                 
                    1288 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1289 +1         COUNT    SET    COUNT+1                   
                    1290 +1         
034E 200A1B         1291 +1         jb      MB2, ENDD2
0351 304204         1292 +1         jnb     PKI2, $+7
0354 C222           1293 +1         clr     FAST
0356 D223           1294 +1         setb    SLOW
0358 D238           1295 +1         setb    STOPPED         
035A D252           1296 +1         setb    ERRF2_U
035C D25A           1297 +1         setb    ERRF2_D
035E 0536           1298 +1         inc     ERRF2_C
0360 C21A           1299 +1                 clr     PKO2                               
0362 C22A           1300 +1         clr     PO2U            
0364 C229           1301 +1         clr     PO2D              
0366 12116D         1302 +1                 lcall   WRITEPORTS
0369 020582         1303 +1         ljmp    UP2_MB2
036C                1304 +1 ENDD2:
036C 00             1305 +1         nop
036D 2009D4         1307            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
0370 02050D         1308            ljmp    UP2             ; |   inak nezastavim        
                    1309    
0373                1310    UP1_STOP:
                    1311            ;--------------------------
                    1312 +1         CFCSS     28, 16, 9, 20, -1
0373 633C10         1313 +1         xrl             G,  #16             
                    1314 +1         IF (-1 <> -1)
                    1315 +1             mov   A,  -1         
                    1316 +1             xrl   G,  A          
                    1317 +1         ENDIF    
0376 E53C           1318 +1         mov   A,  G              
                    1319 +2         LCJNE A,  #28, CFCERR     
0378 B41C03         1320 +2         cjne    A, #28, $+6
037B 020381         1321 +2         jmp     $+6
037E 020FF2         1322 +2         ljmp    CFCERR
0381 00             1323 +2         nop
                    1324 +1         IF (9 <> -1)
0382 753D09         1325 +1             mov         D1, #9     
                    1326 +1         ELSE
                    1327 +1             mov         D1, #32        
                    1328 +1         ENDIF                    
                    1329 +1         IF (20 <> -1)
0385 753E14         1330 +1             mov         D2, #20     
                    1331 +1         ELSE
                    1332 +1             mov         D2, #32        
                    1333 +1         ENDIF                    
0388 741C           1334 +1         mov       A, #28
038A 1211F5         1335 +1         lcall     PRINTCHAR        
                    1337            ;--------------------------
038D 121106         1338    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1339 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0390 200B03         1340 +1         jb      SKRH, $+6
0393 020FBF         1341 +1         ljmp    ERR_SKRH
0396 00             1342 +1         nop
                    1344 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1345 +1                                                                                             
DEBUG                                                                                                         PAGE 25

                                                                                                                 
                    1346 +1                                                                                             
                                                                                                                 
                    1347 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1348 +1         COUNT    SET    COUNT+1                   
                    1349 +1         
0397 200A1B         1350 +1         jb      MB2, ENDD3
039A 304204         1351 +1         jnb     PKI2, $+7
039D C222           1352 +1         clr     FAST
039F D223           1353 +1         setb    SLOW
03A1 D238           1354 +1         setb    STOPPED         
03A3 D252           1355 +1         setb    ERRF2_U
03A5 D25A           1356 +1         setb    ERRF2_D
03A7 0536           1357 +1         inc     ERRF2_C
03A9 C21A           1358 +1                 clr     PKO2                               
03AB C22A           1359 +1         clr     PO2U            
03AD C229           1360 +1         clr     PO2D              
03AF 12116D         1361 +1                 lcall   WRITEPORTS
03B2 020582         1362 +1         ljmp    UP2_MB2
03B5                1363 +1 ENDD3:
03B5 00             1364 +1         nop
03B6 2009D4         1366            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
03B9 C220           1367            clr     UP              ; zastav motor
03BB D23A           1368            setb    UPOld           ;       (a zalohuj) 
03BD C23B           1369            clr     DOWNOld         ;       (a zalohuj)
03BF C222           1370            clr     FAST            ; 
03C1 12116D         1371            lcall   WRITEPORTS      ; 
03C4 0203C7         1372            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1373    
                    1374    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1375    
03C7                1376    FLOOR2:
                    1377            ;--------------------------
                    1378 +1         CFCSS     15, 26, 0, 30, D1
03C7 633C1A         1379 +1         xrl             G,  #26             
                    1380 +1         IF (D1 <> -1)
03CA E53D           1381 +1             mov   A,  D1         
03CC 623C           1382 +1             xrl   G,  A          
                    1383 +1         ENDIF    
03CE E53C           1384 +1         mov   A,  G              
                    1385 +2         LCJNE A,  #15, CFCERR     
03D0 B40F03         1386 +2         cjne    A, #15, $+6
03D3 0203D9         1387 +2         jmp     $+6
03D6 020FF2         1388 +2         ljmp    CFCERR
03D9 00             1389 +2         nop
                    1390 +1         IF (0 <> -1)
03DA 753D00         1391 +1             mov         D1, #0     
                    1392 +1         ELSE
                    1393 +1             mov         D1, #32        
                    1394 +1         ENDIF                    
                    1395 +1         IF (30 <> -1)
03DD 753E1E         1396 +1             mov         D2, #30     
                    1397 +1         ELSE
                    1398 +1             mov         D2, #32        
                    1399 +1         ENDIF                    
03E0 740F           1400 +1         mov       A, #15
03E2 1211F5         1401 +1         lcall     PRINTCHAR        
DEBUG                                                                                                         PAGE 26

                    1403            ;--------------------------
                    1404 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
03E5 53240F         1405 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
03E8 D225           1406 +1         setb    FLED2
03EA 12116D         1407 +1         lcall   WRITEPORTS
03ED C238           1409            clr     STOPPED
                    1410 +1         TIMER2  60              ; (Timer - 3s)
03EF 752D3C         1411 +1            mov           T2_C, #60                              
03F2 C262           1412 +1                  clr       T2_F                                  
03F4 D2CA           1413 +1                  setb      TR2                                             
                    1415 +1         ROZSVIET_SMER_LED
03F6 D22F           1416 +1         setb    LEDU            ;
03F8 D22E           1417 +1         setb    LEDD            ;
03FA 12116D         1418 +1         lcall   WRITEPORTS      ;
03FD 121106         1420    F2S:    lcall   READPORTS     ;-; nacitanie dat
                    1421 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0400 200A03         1422 +1         jb      MB2, $+6
0403 020FD8         1423 +1         ljmp    ERRFLOOR
0406 00             1424 +1         nop
                    1426 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0407 200B03         1427 +1         jb      SKRH, $+6
040A 020FD8         1428 +1         ljmp    ERRFLOOR
040D 00             1429 +1         nop
                    1431 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
040E 200C03         1432 +1         jb      SKRD, $+6
0411 020FD8         1433 +1         ljmp    ERRFLOOR
0414 00             1434 +1         nop
                    1436 +1         ZRUS_POSCH 2
0415 C21A           1437 +1         clr     PKO2       
0417 C22A           1438 +1         clr     PO2U      
0419 C229           1439 +1         clr     PO2D      
041B 12116D         1440 +1         lcall   WRITEPORTS
041E 3062DC         1442            jnb                T2_F, F2S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    1443 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0421 A20D           1444 +1         mov      C, DP          
0423 720E           1445 +1         orl      C, DPZK        
0425 720F           1446 +1         orl      C, DPK         
0427 9218           1447 +1         mov      KS, C          
0429 922F           1448 +1         mov      LEDU, C        
042B 922E           1449 +1         mov      LEDD, C        
042D 12116D         1450 +1         lcall   WRITEPORTS      
0430 200FCA         1452            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0433 3045C7         1453            jnb     DOORCLSD, F2S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1454 +1         JE_VYBRATE_POSCHODIE F2S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0436 A20D           1455 +1         mov      C, DP         
0438 720E           1456 +1         orl      C, DPZK        
043A 720F           1457 +1         orl      C, DPK         
043C 5006           1458 +1         jnc      $+8            
043E E528           1459 +1         mov      A, INPORTA     
0440 541E           1460 +1         anl      A, #00011110b  
0442 60B9           1461 +1         jz       F2S       
                    1463            ;clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
                    1464            ;clr     PO2U            ;
DEBUG                                                                                                         PAGE 27

                    1465            ;clr     PO2D            ;
                    1466            ;lcall   WRITEPORTS      ;
                    1467            ;jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1468            ;_BP_
0444 782A           1469            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
0446 79F8           1470            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
0448 7AF8           1471            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
044A 203A0A         1472            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
044D E9             1473            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
044E F4             1474            cpl     A               ;       |
044F F9             1475            mov     R1, A           ;       |
0450 EA             1476            mov     A, R2           ;       A znegujeme aj masku sachty
0451 F4             1477            cpl     A               ;       |
0452 FA             1478            mov     R2, A           ;       |  
0453 E8             1479            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
0454 6401           1480            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
0456 F8             1481            mov     R0, A           ;       |  
0457                1482    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
0457 E528           1483            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0459 86F0           1484            mov     B, @R0          ;  | Maskujem chybne poschodia
045B 53F00C         1485            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
045E 63F0FF         1486            xrl     B, #0FFH        ;  |
0461 55F0           1487            anl     A, B            ;  |
0463 541A           1488            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0465 59             1489            anl     A, R1           ;  | 
                    1490 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0466 6003           1491 +1         jz      $+5
0468 0204DF         1492 +1         ljmp    F2
046B 00             1493 +1         nop
                    1495                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
046C E528           1496            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
046E 86F0           1497            mov     B, @R0          ;  | Maskujem chybne poschodia
0470 53F00C         1498            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0473 63F0FF         1499            xrl     B, #0FFH        ;  | |
0476 55F0           1500            anl     A, B            ;  | |
0478 541A           1501            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
047A 7021           1502            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
047C E522           1503            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
047E 5439           1504            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0480 5A             1505            anl     A, R2           ;  |   
0481 86F0           1506            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1507            ;ANLB    ACC.0, B.1      ;  | 
                    1508 +1         ANLB    ACC.1, B.2      ;  | 
0483 A2E1           1509 +1         mov   C, ACC.1
0485 B0F2           1510 +1         anl   C, /B.2
0487 92E1           1511 +1         mov   ACC.1, C
                    1513 +1         ANLB    ACC.2, B.2      ;  |
0489 A2E2           1514 +1         mov   C, ACC.2
048B B0F2           1515 +1         anl   C, /B.2
DEBUG                                                                                                         PAGE 28

048D 92E2           1516 +1         mov   ACC.2, C
                    1518 +1         ANLB    ACC.3, B.3      ;  |
048F A2E3           1519 +1         mov   C, ACC.3
0491 B0F3           1520 +1         anl   C, /B.3
0493 92E3           1521 +1         mov   ACC.3, C
                    1523 +1         ANLB    ACC.4, B.3      ;  |
0495 A2E4           1524 +1         mov   C, ACC.4
0497 B0F3           1525 +1         anl   C, /B.3
0499 92E4           1526 +1         mov   ACC.4, C
                    1528            ;ANLB    ACC.5, B.4      ;  |
049B 7042           1529            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1530            ; Pohyb v opacnom smere (nevieme v ktorom)
049D E8             1531    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
049E 6401           1532            xrl     A, #01h         ;  |
04A0 F8             1533            mov     R0, A           ;  |
04A1 B23A           1534            cpl     UPOld           ;  Znegujem stary posun
04A3 B23B           1535            cpl     DOWNOld         ;  |
04A5 E9             1536            mov     A, R1           ;  Znegujeme masky
04A6 F4             1537            cpl     A               ;  |
04A7 F9             1538            mov     R1, A           ;  |
04A8 EA             1539            mov     A, R2           ;  |
04A9 F4             1540            cpl     A               ;  |
04AA FA             1541            mov     R2, A           ;  |               
04AB E528           1542            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
04AD 86F0           1543            mov     B, @R0          ;  | Maskujem chybne poschodia
04AF 53F00C         1544            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04B2 63F0FF         1545            xrl     B, #0FFH        ;  | |
04B5 55F0           1546            anl     A, B            ;  | |
04B7 541A           1547            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
04B9 59             1548            anl     A, R1           ;  | 
04BA 7023           1549            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04BC E522           1550            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
04BE 5439           1551            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
04C0 5A             1552            anl     A, R2           ;  | 
04C1 86F0           1553            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1554            ;ANLB    ACC.0, B.1      ;  | 
                    1555 +1         ANLB    ACC.1, B.2      ;  | 
04C3 A2E1           1556 +1         mov   C, ACC.1
04C5 B0F2           1557 +1         anl   C, /B.2
04C7 92E1           1558 +1         mov   ACC.1, C
                    1560 +1         ANLB    ACC.2, B.2      ;  |
04C9 A2E2           1561 +1         mov   C, ACC.2
04CB B0F2           1562 +1         anl   C, /B.2
04CD 92E2           1563 +1         mov   ACC.2, C
                    1565 +1         ANLB    ACC.3, B.3      ;  |
04CF A2E3           1566 +1         mov   C, ACC.3
04D1 B0F3           1567 +1         anl   C, /B.3
04D3 92E3           1568 +1         mov   ACC.3, C
                    1570 +1         ANLB    ACC.4, B.3      ;  |
04D5 A2E4           1571 +1         mov   C, ACC.4
04D7 B0F3           1572 +1         anl   C, /B.3
04D9 92E4           1573 +1         mov   ACC.4, C
                    1575            ;ANLB    ACC.5, B.4      ;  |
04DB 7002           1576            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
DEBUG                                                                                                         PAGE 29

04DD 61FD           1577            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
04DF 203A03         1578    F2:     jb      UPOld, F2UP     ;   
04E2 0204F9         1579            jmp     F2DOWN          ;
                    1580 +1 F2UP:   SET_UP                  ; rychly pohyb hore
04E5 D220           1581 +1         setb     UP
04E7 C221           1582 +1         clr      DOWN
04E9 D22F           1583 +1         setb     LEDU
04EB C22E           1584 +1         clr      LEDD 
                    1586 +1         SET_FAST                ; 
04ED D222           1587 +1         setb     FAST
04EF C223           1588 +1         clr      SLOW
04F1 D218           1589 +1         setb     KS      
04F3 12116D         1591            lcall   WRITEPORTS      ;   
04F6 02050D         1592            jmp     UP2           ;-; prejdi do stavu UP2    
                    1593 +1 F2DOWN: SET_DOWN                  ; rychly pohyb dole
04F9 C220           1594 +1         clr     UP
04FB D221           1595 +1         setb    DOWN
04FD C22F           1596 +1         clr     LEDU
04FF D22E           1597 +1         setb    LEDD 
                    1599 +1         SET_FAST                ; 
0501 D222           1600 +1         setb     FAST
0503 C223           1601 +1         clr      SLOW
0505 D218           1602 +1         setb     KS      
0507 12116D         1604            lcall   WRITEPORTS      ; 
050A 020717         1605            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1606            
                    1607                
050D                1608    UP2:
                    1609            ;--------------------------
                    1610 +1         CFCSS     8, 7, 18, 0, D1
050D 633C07         1611 +1         xrl             G,  #7             
                    1612 +1         IF (D1 <> -1)
0510 E53D           1613 +1             mov   A,  D1         
0512 623C           1614 +1             xrl   G,  A          
                    1615 +1         ENDIF    
0514 E53C           1616 +1         mov   A,  G              
                    1617 +2         LCJNE A,  #8, CFCERR     
0516 B40803         1618 +2         cjne    A, #8, $+6
0519 02051F         1619 +2         jmp     $+6
051C 020FF2         1620 +2         ljmp    CFCERR
051F 00             1621 +2         nop
                    1622 +1         IF (18 <> -1)
0520 753D12         1623 +1             mov         D1, #18     
                    1624 +1         ELSE
                    1625 +1             mov         D1, #32        
                    1626 +1         ENDIF                    
                    1627 +1         IF (0 <> -1)
0523 753E00         1628 +1             mov         D2, #0     
                    1629 +1         ELSE
                    1630 +1             mov         D2, #32        
                    1631 +1         ENDIF                    
0526 7408           1632 +1         mov       A, #8
0528 1211F5         1633 +1         lcall     PRINTCHAR        
                    1635            ;--------------------------
                    1636 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
052B 53240F         1637 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
DEBUG                                                                                                         PAGE 30

052E D225           1638 +1         setb    FLED2
0530 12116D         1639 +1         lcall   WRITEPORTS
                    1641 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0533 12106A         1642 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0536 121106         1643 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0539 3009FA         1644 +1         jnb     MB1, $-3  ; 
053C 12106A         1645 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
053F 121106         1647    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1648 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0542 200B03         1649 +1         jb      SKRH, $+6
0545 020FBF         1650 +1         ljmp    ERR_SKRH
0548 00             1651 +1         nop
                    1653 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1654 +1                                                                                             
                                                                                                                 
                    1655 +1                                                                                             
                                                                                                                 
                    1656 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1657 +1         COUNT    SET    COUNT+1                   
                    1658 +1         
0549 20091B         1659 +1         jb      MB1, ENDD4
054C 304304         1660 +1         jnb     PKI3, $+7
054F C222           1661 +1         clr     FAST
0551 D223           1662 +1         setb    SLOW
0553 D238           1663 +1         setb    STOPPED         
0555 D253           1664 +1         setb    ERRF23_U
0557 D25A           1665 +1         setb    ERRF23_D
0559 053A           1666 +1         inc     ERRF23_C
055B C21B           1667 +1                 clr     PKO3                               
055D C22C           1668 +1         clr     PO3U            
055F C22B           1669 +1         clr     PO3D              
0561 12116D         1670 +1                 lcall   WRITEPORTS
0564 0209A2         1671 +1         ljmp    UP3
0567                1672 +1 ENDD4:
0567 00             1673 +1         nop
0568 200AD4         1675            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1676 +1         CLR_FLOOR_ERR   ERRF23
056B C253           1677 +1         clr    ERRF23_U
056D C25A           1678 +1         clr    ERRF23_D
056F 00             1679 +1         nop
                    1681 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0570 12106A         1682 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0573 121106         1683 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0576 300AFA         1684 +1         jnb     MB2, $-3  ; 
0579 12106A         1685 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1687            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
057C 12116D         1688            lcall   WRITEPORTS      ;
057F 020582         1689            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1690            
                    1691            
0582                1692    UP2_MB2:
                    1693            ;--------------------------
                    1694 +1         CFCSS     18, 26, 8, -1, D2
0582 633C1A         1695 +1         xrl             G,  #26             
                    1696 +1         IF (D2 <> -1)
DEBUG                                                                                                         PAGE 31

0585 E53E           1697 +1             mov   A,  D2         
0587 623C           1698 +1             xrl   G,  A          
                    1699 +1         ENDIF    
0589 E53C           1700 +1         mov   A,  G              
                    1701 +2         LCJNE A,  #18, CFCERR     
058B B41203         1702 +2         cjne    A, #18, $+6
058E 020594         1703 +2         jmp     $+6
0591 020FF2         1704 +2         ljmp    CFCERR
0594 00             1705 +2         nop
                    1706 +1         IF (8 <> -1)
0595 753D08         1707 +1             mov         D1, #8     
                    1708 +1         ELSE
                    1709 +1             mov         D1, #32        
                    1710 +1         ENDIF                    
                    1711 +1         IF (-1 <> -1)
                    1712 +1             mov         D2, #-1     
                    1713 +1         ELSE
0598 753E20         1714 +1             mov         D2, #32        
                    1715 +1         ENDIF                    
059B 7412           1716 +1         mov       A, #18
059D 1211F5         1717 +1         lcall     PRINTCHAR        
                    1719            ;--------------------------
                    1720 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
05A0 12106A         1721 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05A3 121106         1722 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05A6 300AFA         1723 +1         jnb     MB2, $-3  ; 
05A9 12106A         1724 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
05AC 121106         1726    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1727 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
05AF 200B03         1728 +1         jb      SKRH, $+6
05B2 020FBF         1729 +1         ljmp    ERR_SKRH
05B5 00             1730 +1         nop
                    1732 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT ; >>> CHYBA, Vypadla spomalovacia clonka
                                                                                (narazil som na zastavovaciu) <<<
                    1733 +1                                                                                             
                                                                                                                 
                    1734 +1                                                                                             
                                                                                                                 
                    1735 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1736 +1         COUNT    SET    COUNT+1                   
                    1737 +1         
05B6 20091B         1738 +1         jb      MB1, ENDD5
05B9 304304         1739 +1         jnb     PKI3, $+7
05BC C222           1740 +1         clr     FAST
05BE D223           1741 +1         setb    SLOW
05C0 D238           1742 +1         setb    STOPPED         
05C2 D253           1743 +1         setb    ERRF23_U
05C4 D25A           1744 +1         setb    ERRF23_D
05C6 053A           1745 +1         inc     ERRF23_C
05C8 C21B           1746 +1                 clr     PKO3                               
05CA C22C           1747 +1         clr     PO3U            
05CC C22B           1748 +1         clr     PO3D              
05CE 12116D         1749 +1                 lcall   WRITEPORTS
05D1 0209A2         1750 +1         ljmp    UP3
05D4                1751 +1 ENDD5:
05D4 00             1752 +1         nop
05D5 200AD4         1754            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
DEBUG                                                                                                         PAGE 32

                    1755 +1         CLR_FLOOR_ERR   ERRF23       
05D8 C253           1756 +1         clr    ERRF23_U
05DA C25A           1757 +1         clr    ERRF23_D
05DC 00             1758 +1         nop
                    1760            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
05DD 12116D         1761            lcall   WRITEPORTS      ;
                    1762 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
05E0 12106A         1763 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05E3 121106         1764 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05E6 300AFA         1765 +1         jnb     MB2, $-3  ; 
05E9 12106A         1766 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1768            
05EC                1769    UP2_MB2_CFC:     
                    1770            ;--------------------------
                    1771 +1         CFCSS     1, 19, -1, -1, -1
05EC 633C13         1772 +1         xrl             G,  #19             
                    1773 +1         IF (-1 <> -1)
                    1774 +1             mov   A,  -1         
                    1775 +1             xrl   G,  A          
                    1776 +1         ENDIF    
05EF E53C           1777 +1         mov   A,  G              
                    1778 +2         LCJNE A,  #1, CFCERR     
05F1 B40103         1779 +2         cjne    A, #1, $+6
05F4 0205FA         1780 +2         jmp     $+6
05F7 020FF2         1781 +2         ljmp    CFCERR
05FA 00             1782 +2         nop
                    1783 +1         IF (-1 <> -1)
                    1784 +1             mov         D1, #-1     
                    1785 +1         ELSE
05FB 753D20         1786 +1             mov         D1, #32        
                    1787 +1         ENDIF                    
                    1788 +1         IF (-1 <> -1)
                    1789 +1             mov         D2, #-1     
                    1790 +1         ELSE
05FE 753E20         1791 +1             mov         D2, #32        
                    1792 +1         ENDIF                    
0601 7401           1793 +1         mov       A, #1
0603 1211F5         1794 +1         lcall     PRINTCHAR        
                    1796            ;--------------------------        
                    1797 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1798 +1                                         
0606 C3             1799 +1         clr     C                       
0607 7400           1800 +1         mov     A, #0h                  
0609 7214           1801 +1         orl     C, PI3U      
060B B00E           1802 +1         anl     C, /DPZK                
060D 7243           1803 +1         orl     C, PKI3          
060F B053           1804 +1         anl     C, /ERRF3_U 
0611 720F           1805 +1         orl     C, DPK                  
0613 7238           1806 +1         orl     C, STOPPED              
0615 3400           1807 +1         addc    A, #0h                  
0617 704B           1809            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1810 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0619 E522           1811 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
061B 33             1812 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
DEBUG                                                                                                         PAGE 33

                                                                                X | 
061C 547E           1813 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1814 +1         
                    1815 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1816 +2         ANLB    ACC.3, ERRF2_U  ; |
061E A2E3           1817 +2         mov   C, ACC.3
0620 B052           1818 +2         anl   C, /ERRF2_U
0622 92E3           1819 +2         mov   ACC.3, C
                    1820 +2         ANLB    ACC.4, ERRF3_U  ; |
0624 A2E4           1821 +2         mov   C, ACC.4
0626 B053           1822 +2         anl   C, /ERRF3_U
0628 92E4           1823 +2         mov   ACC.4, C
                    1824 +2         ANLB    ACC.5, ERRF3_U  ; |
062A A2E5           1825 +2         mov   C, ACC.5
062C B053           1826 +2         anl   C, /ERRF3_U
062E 92E5           1827 +2         mov   ACC.5, C
                    1828 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1829 +1         
0630 7805           1830 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1831 +1  ; LL1: 
0632 6006           1832 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0634 C3             1833 +1         clr     C               ; Inak shiftnem o 2
0635 13             1834 +1         rrc     A               ;
0636 C3             1835 +1         clr     C               ;
0637 13             1836 +1         rrc     A               ;
0638 D8F8           1837 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1838 +1 ; LL2:
063A 7405           1839 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
063C C3             1840 +1         clr     C               ;
063D 98             1841 +1         subb    A, R0           ;
                    1843 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
063E B40303         1844 +1         cjne    A, #3, $+6
0641 020647         1845 +1         jmp     $+6
0644 02066E         1846 +1         ljmp    UP2_MB1
0647 00             1847 +1         nop
                    1849 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0648 E528           1850 +1         mov     A, INPORTA
064A 541E           1851 +1         anl     A, #00011110b
064C 852AF0         1852 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
064F 53F00C         1853 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0652 63F0FF         1854 +1         xrl     B, #0FFH
0655 55F0           1855 +1         anl     A, B
0657 C3             1856 +1         clr     C
0658 13             1857 +1         rrc     A
                    1858 +1 ;LL1    
0659 7803           1859 +1         mov     R0, #3
065B C3             1860 +1         clr     C
065C 13             1861 +1         rrc     A
065D D8FC           1862 +1         djnz    R0, $-2;LL1
065F 6003           1864            jz      U2_MB2C         ; |   ak neni zastavujem  
0661 02066E         1865            ljmp    UP2_MB1         ; |   inak nezastavim
0664 D223           1866    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
0666 C222           1867            clr     FAST            ; 
DEBUG                                                                                                         PAGE 34

0668 12116D         1868            lcall   WRITEPORTS      ;
066B 0206C3         1869            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    1870          
066E                1871    UP2_MB1:
                    1872            ;--------------------------
                    1873 +1         CFCSS     26, 27, 0, 17, -1
066E 633C1B         1874 +1         xrl             G,  #27             
                    1875 +1         IF (-1 <> -1)
                    1876 +1             mov   A,  -1         
                    1877 +1             xrl   G,  A          
                    1878 +1         ENDIF    
0671 E53C           1879 +1         mov   A,  G              
                    1880 +2         LCJNE A,  #26, CFCERR     
0673 B41A03         1881 +2         cjne    A, #26, $+6
0676 02067C         1882 +2         jmp     $+6
0679 020FF2         1883 +2         ljmp    CFCERR
067C 00             1884 +2         nop
                    1885 +1         IF (0 <> -1)
067D 753D00         1886 +1             mov         D1, #0     
                    1887 +1         ELSE
                    1888 +1             mov         D1, #32        
                    1889 +1         ENDIF                    
                    1890 +1         IF (17 <> -1)
0680 753E11         1891 +1             mov         D2, #17     
                    1892 +1         ELSE
                    1893 +1             mov         D2, #32        
                    1894 +1         ENDIF                    
0683 741A           1895 +1         mov       A, #26
0685 1211F5         1896 +1         lcall     PRINTCHAR        
                    1898            ;--------------------------
                    1899 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0688 12106A         1900 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
068B 121106         1901 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
068E 300AFA         1902 +1         jnb     MB2, $-3  ; 
0691 12106A         1903 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0694 121106         1905    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    1906 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0697 200B03         1907 +1         jb      SKRH, $+6
069A 020FBF         1908 +1         ljmp    ERR_SKRH
069D 00             1909 +1         nop
                    1911 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia cl
                                                                               onka (narazil som na spomalovaciu) <<<
                    1912 +1                                                                                             
                                                                                                                 
                    1913 +1                                                                                             
                                                                                                                 
                    1914 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              1915 +1         COUNT    SET    COUNT+1                   
                    1916 +1         
069E 200A1B         1917 +1         jb      MB2, ENDD6
06A1 304304         1918 +1         jnb     PKI3, $+7
06A4 C222           1919 +1         clr     FAST
06A6 D223           1920 +1         setb    SLOW
06A8 D238           1921 +1         setb    STOPPED         
06AA D253           1922 +1         setb    ERRF3_U
06AC D25B           1923 +1         setb    ERRF3_D
06AE 0537           1924 +1         inc     ERRF3_C
DEBUG                                                                                                         PAGE 35

06B0 C21B           1925 +1                 clr     PKO3                               
06B2 C22C           1926 +1         clr     PO3U            
06B4 C22B           1927 +1         clr     PO3D              
06B6 12116D         1928 +1                 lcall   WRITEPORTS
06B9 020A2A         1929 +1         ljmp    UP3_MB2
06BC                1930 +1 ENDD6:
06BC 00             1931 +1         nop
06BD 2009D4         1933            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
06C0 0209A2         1934            ljmp    UP3             ; 
                    1935    
                    1936    
06C3                1937    UP2_STOP:
                    1938            ;--------------------------
                    1939 +1         CFCSS     4, 5, 9, 15, -1
06C3 633C05         1940 +1         xrl             G,  #5             
                    1941 +1         IF (-1 <> -1)
                    1942 +1             mov   A,  -1         
                    1943 +1             xrl   G,  A          
                    1944 +1         ENDIF    
06C6 E53C           1945 +1         mov   A,  G              
                    1946 +2         LCJNE A,  #4, CFCERR     
06C8 B40403         1947 +2         cjne    A, #4, $+6
06CB 0206D1         1948 +2         jmp     $+6
06CE 020FF2         1949 +2         ljmp    CFCERR
06D1 00             1950 +2         nop
                    1951 +1         IF (9 <> -1)
06D2 753D09         1952 +1             mov         D1, #9     
                    1953 +1         ELSE
                    1954 +1             mov         D1, #32        
                    1955 +1         ENDIF                    
                    1956 +1         IF (15 <> -1)
06D5 753E0F         1957 +1             mov         D2, #15     
                    1958 +1         ELSE
                    1959 +1             mov         D2, #32        
                    1960 +1         ENDIF                    
06D8 7404           1961 +1         mov       A, #4
06DA 1211F5         1962 +1         lcall     PRINTCHAR        
                    1964            ;--------------------------
06DD                1965    UP2_STOP_C:
06DD 121106         1966            lcall   READPORTS       ; nacitanie dat
                    1967 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
06E0 200B03         1968 +1         jb      SKRH, $+6
06E3 020FBF         1969 +1         ljmp    ERR_SKRH
06E6 00             1970 +1         nop
                    1972 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1973 +1                                                                                             
                                                                                                                 
                    1974 +1                                                                                             
                                                                                                                 
                    1975 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              1976 +1         COUNT    SET    COUNT+1                   
                    1977 +1         
06E7 200A1B         1978 +1         jb      MB2, ENDD7
06EA 304304         1979 +1         jnb     PKI3, $+7
06ED C222           1980 +1         clr     FAST
06EF D223           1981 +1         setb    SLOW
06F1 D238           1982 +1         setb    STOPPED         
DEBUG                                                                                                         PAGE 36

06F3 D253           1983 +1         setb    ERRF3_U
06F5 D25B           1984 +1         setb    ERRF3_D
06F7 0537           1985 +1         inc     ERRF3_C
06F9 C21B           1986 +1                 clr     PKO3                               
06FB C22C           1987 +1         clr     PO3U            
06FD C22B           1988 +1         clr     PO3D              
06FF 12116D         1989 +1                 lcall   WRITEPORTS
0702 020A2A         1990 +1         ljmp    UP3_MB2
0705                1991 +1 ENDD7:
0705 00             1992 +1         nop
0706 2009D4         1994            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
0709 C220           1995            clr     UP              ; zastav motor
070B D23A           1996            setb    UPOld           ;       (a zalohuj)
070D C23B           1997            clr     DOWNOld         ;       (a zalohuj)
070F C222           1998            clr     FAST            ; 
0711 12116D         1999            lcall   WRITEPORTS      ; 
0714 02085C         2000            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    2001            
0717                2002    DOWN2:
                    2003            ;--------------------------
                    2004 +1         CFCSS     24, 9, 6, 9, D2
0717 633C09         2005 +1         xrl             G,  #9             
                    2006 +1         IF (D2 <> -1)
071A E53E           2007 +1             mov   A,  D2         
071C 623C           2008 +1             xrl   G,  A          
                    2009 +1         ENDIF    
071E E53C           2010 +1         mov   A,  G              
                    2011 +2         LCJNE A,  #24, CFCERR     
0720 B41803         2012 +2         cjne    A, #24, $+6
0723 020729         2013 +2         jmp     $+6
0726 020FF2         2014 +2         ljmp    CFCERR
0729 00             2015 +2         nop
                    2016 +1         IF (6 <> -1)
072A 753D06         2017 +1             mov         D1, #6     
                    2018 +1         ELSE
                    2019 +1             mov         D1, #32        
                    2020 +1         ENDIF                    
                    2021 +1         IF (9 <> -1)
072D 753E09         2022 +1             mov         D2, #9     
                    2023 +1         ELSE
                    2024 +1             mov         D2, #32        
                    2025 +1         ENDIF                    
0730 7418           2026 +1         mov       A, #24
0732 1211F5         2027 +1         lcall     PRINTCHAR        
                    2029            ;--------------------------
                    2030 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0735 53240F         2031 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0738 D225           2032 +1         setb    FLED2
073A 12116D         2033 +1         lcall   WRITEPORTS
                    2035 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
073D 12106A         2036 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0740 121106         2037 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0743 3009FA         2038 +1         jnb     MB1, $-3  ; 
0746 12106A         2039 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0749 121106         2041    DOWN2_C: lcall   READPORTS       ; nacitanie dat
DEBUG                                                                                                         PAGE 37

                    2042 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
074C 200C03         2043 +1         jb      SKRD, $+6
074F 020FA6         2044 +1         ljmp    ERR_SKRD
0752 00             2045 +1         nop
                    2047 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2048 +1                                                                                             
                                                                                                                 
                    2049 +1                                                                                             
                                                                                                                 
                    2050 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              2051 +1         COUNT    SET    COUNT+1                   
                    2052 +1         
0753 20091B         2053 +1         jb      MB1, ENDD8
0756 304104         2054 +1         jnb     PKI1, $+7
0759 C222           2055 +1         clr     FAST
075B D223           2056 +1         setb    SLOW
075D D238           2057 +1         setb    STOPPED         
075F D252           2058 +1         setb    ERRF12_U
0761 D259           2059 +1         setb    ERRF12_D
0763 0539           2060 +1         inc     ERRF12_C
0765 C219           2061 +1                 clr     PKO1                               
0767 C228           2062 +1         clr     PO1U            
0769 C228           2063 +1         clr     PO1D              
076B 12116D         2064 +1                 lcall   WRITEPORTS
076E 020775         2065 +1         ljmp    DOWN2ERR
0771                2066 +1 ENDD8:
0771 00             2067 +1         nop
0772 020784         2069            jmp     DOWN2ERR_CONTINUE
0775                2070    DOWN2ERR:
0775 C221           2071            clr     DOWN            ; zastav motor
0777 D23B           2072            setb    DOWNOld         ;       (a zalohuj)
0779 C23A           2073            clr     UPOld           ;       (a zalohuj)
077B C222           2074            clr     FAST            ; 
077D C223           2075            clr     SLOW            ;
077F 12116D         2076            lcall   WRITEPORTS      ; 
0782 2110           2077            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0784                2078    DOWN2ERR_CONTINUE:
0784 200AC2         2079            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    2080 +1         CLR_FLOOR_ERR   ERRF12
0787 C252           2081 +1         clr    ERRF12_U
0789 C259           2082 +1         clr    ERRF12_D
078B 00             2083 +1         nop
                    2085 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
078C 12106A         2086 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
078F 121106         2087 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0792 300AFA         2088 +1         jnb     MB2, $-3  ; 
0795 12106A         2089 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2091            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0798 12116D         2092            lcall   WRITEPORTS      ;
079B 02079E         2093            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    2094    
                    2095    
079E                2096    DOWN2_MB2:
                    2097            ;--------------------------
                    2098 +1         CFCSS     31, 14, 1, -1, D2
DEBUG                                                                                                         PAGE 38

079E 633C0E         2099 +1         xrl             G,  #14             
                    2100 +1         IF (D2 <> -1)
07A1 E53E           2101 +1             mov   A,  D2         
07A3 623C           2102 +1             xrl   G,  A          
                    2103 +1         ENDIF    
07A5 E53C           2104 +1         mov   A,  G              
                    2105 +2         LCJNE A,  #31, CFCERR     
07A7 B41F03         2106 +2         cjne    A, #31, $+6
07AA 0207B0         2107 +2         jmp     $+6
07AD 020FF2         2108 +2         ljmp    CFCERR
07B0 00             2109 +2         nop
                    2110 +1         IF (1 <> -1)
07B1 753D01         2111 +1             mov         D1, #1     
                    2112 +1         ELSE
                    2113 +1             mov         D1, #32        
                    2114 +1         ENDIF                    
                    2115 +1         IF (-1 <> -1)
                    2116 +1             mov         D2, #-1     
                    2117 +1         ELSE
07B4 753E20         2118 +1             mov         D2, #32        
                    2119 +1         ENDIF                    
07B7 741F           2120 +1         mov       A, #31
07B9 1211F5         2121 +1         lcall     PRINTCHAR        
                    2123            ;--------------------------
                    2124 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
07BC 12106A         2125 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07BF 121106         2126 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07C2 300AFA         2127 +1         jnb     MB2, $-3  ; 
07C5 12106A         2128 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
07C8                2130    DOWN2_MB2A:
07C8 121106         2131            lcall   READPORTS       ; nacitanie dat
                    2132 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
07CB 200C03         2133 +1         jb      SKRD, $+6
07CE 020FA6         2134 +1         ljmp    ERR_SKRD
07D1 00             2135 +1         nop
                    2137 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT ; >>> CHYBA, Vypadla spomalovac
                                                                               ia clonka (narazil som na zastavovaciu) <
                                                                               <<
                    2138 +1                                                                                             
                                                                                                                 
                    2139 +1                                                                                             
                                                                                                                 
                    2140 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              2141 +1         COUNT    SET    COUNT+1                   
                    2142 +1         
07D2 20091B         2143 +1         jb      MB1, ENDD9
07D5 304104         2144 +1         jnb     PKI1, $+7
07D8 C222           2145 +1         clr     FAST
07DA D223           2146 +1         setb    SLOW
07DC D238           2147 +1         setb    STOPPED         
07DE D252           2148 +1         setb    ERRF12_U
07E0 D259           2149 +1         setb    ERRF12_D
07E2 0539           2150 +1         inc     ERRF12_C
07E4 C219           2151 +1                 clr     PKO1                               
07E6 C228           2152 +1         clr     PO1U            
07E8 C228           2153 +1         clr     PO1D              
07EA 12116D         2154 +1                 lcall   WRITEPORTS
DEBUG                                                                                                         PAGE 39

07ED 0207F4         2155 +1         ljmp    DOWN2_MB2ERR
07F0                2156 +1 ENDD9:
07F0 00             2157 +1         nop
07F1 020804         2159            jmp     DOWN2_MB2ERR_CONTINUE
07F4                2160    DOWN2_MB2ERR:
07F4 C221           2161            clr     DOWN            ; zastav motor
07F6 D23B           2162            setb    DOWNOld         ;       (a zalohuj)
07F8 C23A           2163            clr     UPOld           ;       (a zalohuj)
07FA C222           2164            clr     FAST            ; 
07FC C223           2165            clr     SLOW            ;
07FE 12116D         2166            lcall   WRITEPORTS      ; 
0801 020110         2167            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0804                2168    DOWN2_MB2ERR_CONTINUE:
0804 200AC1         2169            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2170 +1         CLR_FLOOR_ERR   ERRF12      
0807 C252           2171 +1         clr    ERRF12_U
0809 C259           2172 +1         clr    ERRF12_D
080B 00             2173 +1         nop
                    2175            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
080C 12116D         2176            lcall   WRITEPORTS      ;
                    2177 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
080F 12106A         2178 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0812 121106         2179 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0815 300AFA         2180 +1         jnb     MB2, $-3  ; 
0818 12106A         2181 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2183    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2184    ;        anl     A, #00000010b ;-;
                    2185    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
081B D223           2186            setb    SLOW            ;       Ak ano, spomalme
081D C222           2187            clr     FAST            ; 
081F 12116D         2188            lcall   WRITEPORTS      ;
0822 020825         2189            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
0825                2190    DOWN2_MB1:    
                    2191            ;--------------------------
                    2192 +1         CFCSS     14, 17, 16, -1, -1
0825 633C11         2193 +1         xrl             G,  #17             
                    2194 +1         IF (-1 <> -1)
                    2195 +1             mov   A,  -1         
                    2196 +1             xrl   G,  A          
                    2197 +1         ENDIF    
0828 E53C           2198 +1         mov   A,  G              
                    2199 +2         LCJNE A,  #14, CFCERR     
082A B40E03         2200 +2         cjne    A, #14, $+6
082D 020833         2201 +2         jmp     $+6
0830 020FF2         2202 +2         ljmp    CFCERR
0833 00             2203 +2         nop
                    2204 +1         IF (16 <> -1)
0834 753D10         2205 +1             mov         D1, #16     
                    2206 +1         ELSE
                    2207 +1             mov         D1, #32        
                    2208 +1         ENDIF                    
                    2209 +1         IF (-1 <> -1)
                    2210 +1             mov         D2, #-1     
                    2211 +1         ELSE
0837 753E20         2212 +1             mov         D2, #32        
                    2213 +1         ENDIF                    
083A 740E           2214 +1         mov       A, #14
DEBUG                                                                                                         PAGE 40

083C 1211F5         2215 +1         lcall     PRINTCHAR        
                    2217            ;--------------------------
083F 121106         2218    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
0842 300907         2219            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0845 200CF7         2220            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
0848 D259           2221            setb    ERRF1_D
084A 0535           2222            inc     ERRF1_C
                    2223    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
084C C238           2224    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
084E C221           2225            clr     DOWN            ; zastav motor
0850 D23B           2226            setb    DOWNOld         ;       (a zalohuj)
0852 C23A           2227            clr     UPOld           ;       (a zalohuj)
0854 C222           2228            clr     FAST            ; 
0856 12116D         2229            lcall   WRITEPORTS      ; 
0859 020110         2230            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    2231    
                    2232    
                    2233    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    2234    
085C                2235    FLOOR3:
                    2236            ;--------------------------
                    2237 +1         CFCSS     10, 7, 16, 19, D1
085C 633C07         2238 +1         xrl             G,  #7             
                    2239 +1         IF (D1 <> -1)
085F E53D           2240 +1             mov   A,  D1         
0861 623C           2241 +1             xrl   G,  A          
                    2242 +1         ENDIF    
0863 E53C           2243 +1         mov   A,  G              
                    2244 +2         LCJNE A,  #10, CFCERR     
0865 B40A03         2245 +2         cjne    A, #10, $+6
0868 02086E         2246 +2         jmp     $+6
086B 020FF2         2247 +2         ljmp    CFCERR
086E 00             2248 +2         nop
                    2249 +1         IF (16 <> -1)
086F 753D10         2250 +1             mov         D1, #16     
                    2251 +1         ELSE
                    2252 +1             mov         D1, #32        
                    2253 +1         ENDIF                    
                    2254 +1         IF (19 <> -1)
0872 753E13         2255 +1             mov         D2, #19     
                    2256 +1         ELSE
                    2257 +1             mov         D2, #32        
                    2258 +1         ENDIF                    
0875 740A           2259 +1         mov       A, #10
0877 1211F5         2260 +1         lcall     PRINTCHAR        
                    2262            ;--------------------------
                    2263 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
087A 53240F         2264 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
087D D226           2265 +1         setb    FLED3
087F 12116D         2266 +1         lcall   WRITEPORTS
0882 C238           2268            clr     STOPPED
                    2269 +1         TIMER2  60              ; (Timer - 3s)
0884 752D3C         2270 +1            mov           T2_C, #60                              
DEBUG                                                                                                         PAGE 41

0887 C262           2271 +1                  clr       T2_F                                  
0889 D2CA           2272 +1                  setb      TR2                                             
                    2274 +1         ROZSVIET_SMER_LED
088B D22F           2275 +1         setb    LEDU            ;
088D D22E           2276 +1         setb    LEDD            ;
088F 12116D         2277 +1         lcall   WRITEPORTS      ;
0892 121106         2279    F3S:    lcall   READPORTS     ;-; nacitanie dat
                    2280 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0895 200A03         2281 +1         jb      MB2, $+6
0898 020FD8         2282 +1         ljmp    ERRFLOOR
089B 00             2283 +1         nop
                    2285 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
089C 200B03         2286 +1         jb      SKRH, $+6
089F 020FD8         2287 +1         ljmp    ERRFLOOR
08A2 00             2288 +1         nop
                    2290 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
08A3 200C03         2291 +1         jb      SKRD, $+6
08A6 020FD8         2292 +1         ljmp    ERRFLOOR
08A9 00             2293 +1         nop
                    2295 +1         ZRUS_POSCH 3
08AA C21B           2296 +1         clr     PKO3       
08AC C22C           2297 +1         clr     PO3U      
08AE C22B           2298 +1         clr     PO3D      
08B0 12116D         2299 +1         lcall   WRITEPORTS
08B3 3062DC         2301            jnb                T2_F, F3S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    2302 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
08B6 A20D           2303 +1         mov      C, DP          
08B8 720E           2304 +1         orl      C, DPZK        
08BA 720F           2305 +1         orl      C, DPK         
08BC 9218           2306 +1         mov      KS, C          
08BE 922F           2307 +1         mov      LEDU, C        
08C0 922E           2308 +1         mov      LEDD, C        
08C2 12116D         2309 +1         lcall   WRITEPORTS      
08C5 200FCA         2311            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
08C8 3045C7         2312            jnb     DOORCLSD, F3S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    2313 +1         JE_VYBRATE_POSCHODIE F3S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.          
08CB A20D           2314 +1         mov      C, DP         
08CD 720E           2315 +1         orl      C, DPZK        
08CF 720F           2316 +1         orl      C, DPK         
08D1 5006           2317 +1         jnc      $+8            
08D3 E528           2318 +1         mov      A, INPORTA     
08D5 541E           2319 +1         anl      A, #00011110b  
08D7 60B9           2320 +1         jz       F3S       
                    2322            ;clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
                    2323            ;clr     PO3U            ;
                    2324            ;clr     PO3D            ;
                    2325            ;lcall   WRITEPORTS      ;
                    2326            ;jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
08D9 782A           2327            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
08DB 79F0           2328            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
08DD 7AE0           2329            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
08DF 203A0A         2330            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
DEBUG                                                                                                         PAGE 42

08E2 E9             2331            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
08E3 F4             2332            cpl     A               ;       |
08E4 F9             2333            mov     R1, A           ;       |
08E5 EA             2334            mov     A, R2           ;       A znegujeme aj masku sachty
08E6 F4             2335            cpl     A               ;       |
08E7 FA             2336            mov     R2, A           ;       |     
08E8 E8             2337            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
08E9 6401           2338            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
08EB F8             2339            mov     R0, A           ;       |    
08EC                2340    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
08EC E528           2341            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
08EE 86F0           2342            mov     B, @R0          ;  | Maskujem chybne poschodia
08F0 53F00C         2343            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
08F3 63F0FF         2344            xrl     B, #0FFH        ;  | |
08F6 55F0           2345            anl     A, B            ;  | |
08F8 5416           2346            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
08FA 59             2347            anl     A, R1           ;  | 
                    2348 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
08FB 6003           2349 +1         jz      $+5
08FD 020974         2350 +1         ljmp    F3
0900 00             2351 +1         nop
                    2353                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0901 E528           2354            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0903 86F0           2355            mov     B, @R0          ;  | Maskujem chybne poschodia
0905 53F00C         2356            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0908 63F0FF         2357            xrl     B, #0FFH        ;  | |
090B 55F0           2358            anl     A, B            ;  | |
090D 5416           2359            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
090F 7021           2360            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0911 E522           2361            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0913 5427           2362            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0915 5A             2363            anl     A, R2           ;  |   
0916 86F0           2364            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2365            ;ANLB    ACC.0, B.1      ;  | 
                    2366 +1         ANLB    ACC.1, B.2      ;  | 
0918 A2E1           2367 +1         mov   C, ACC.1
091A B0F2           2368 +1         anl   C, /B.2
091C 92E1           2369 +1         mov   ACC.1, C
                    2371 +1         ANLB    ACC.2, B.2      ;  |
091E A2E2           2372 +1         mov   C, ACC.2
0920 B0F2           2373 +1         anl   C, /B.2
0922 92E2           2374 +1         mov   ACC.2, C
                    2376 +1         ANLB    ACC.3, B.3      ;  |
0924 A2E3           2377 +1         mov   C, ACC.3
0926 B0F3           2378 +1         anl   C, /B.3
0928 92E3           2379 +1         mov   ACC.3, C
                    2381 +1         ANLB    ACC.4, B.3      ;  |
092A A2E4           2382 +1         mov   C, ACC.4
092C B0F3           2383 +1         anl   C, /B.3
092E 92E4           2384 +1         mov   ACC.4, C
                    2386            ;ANLB    ACC.5, B.4      ;  |
0930 7042           2387            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
DEBUG                                                                                                         PAGE 43

                    2388            ; Pohyb v opacnom smere (nevieme v ktorom)
0932 E8             2389    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
0933 6401           2390            xrl     A, #01h         ;  |
0935 F8             2391            mov     R0, A           ;  |
0936 B23A           2392            cpl     UPOld           ;  Znegujem stary posun
0938 B23B           2393            cpl     DOWNOld         ;  |
093A E9             2394            mov     A, R1           ;  Znegujeme masky
093B F4             2395            cpl     A               ;  |
093C F9             2396            mov     R1, A           ;  |
093D EA             2397            mov     A, R2           ;  |
093E F4             2398            cpl     A               ;  |
093F FA             2399            mov     R2, A           ;  |               
0940 E528           2400            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
0942 86F0           2401            mov     B, @R0          ;  | Maskujem chybne poschodia
0944 53F00C         2402            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0947 63F0FF         2403            xrl     B, #0FFH        ;  | |
094A 55F0           2404            anl     A, B            ;  | |
094C 5416           2405            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
094E 59             2406            anl     A, R1           ;  | 
094F 7023           2407            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0951 E522           2408            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
0953 5427           2409            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0955 5A             2410            anl     A, R2           ;  | 
0956 86F0           2411            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2412            ;ANLB    ACC.0, B.1      ;  | 
                    2413 +1         ANLB    ACC.1, B.2      ;  | 
0958 A2E1           2414 +1         mov   C, ACC.1
095A B0F2           2415 +1         anl   C, /B.2
095C 92E1           2416 +1         mov   ACC.1, C
                    2418 +1         ANLB    ACC.2, B.2      ;  |
095E A2E2           2419 +1         mov   C, ACC.2
0960 B0F2           2420 +1         anl   C, /B.2
0962 92E2           2421 +1         mov   ACC.2, C
                    2423 +1         ANLB    ACC.3, B.3      ;  |
0964 A2E3           2424 +1         mov   C, ACC.3
0966 B0F3           2425 +1         anl   C, /B.3
0968 92E3           2426 +1         mov   ACC.3, C
                    2428 +1         ANLB    ACC.4, B.3      ;  |
096A A2E4           2429 +1         mov   C, ACC.4
096C B0F3           2430 +1         anl   C, /B.3
096E 92E4           2431 +1         mov   ACC.4, C
                    2433            ;ANLB    ACC.5, B.4      ;  |
0970 7002           2434            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0972 0192           2435            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
0974 203A03         2436    F3:     jb      UPOld, F3UP     ;   
0977 02098E         2437            jmp     F3DOWN          ;
                    2438 +1 F3UP:   SET_UP                  ; rychly pohyb hore
097A D220           2439 +1         setb     UP
097C C221           2440 +1         clr      DOWN
097E D22F           2441 +1         setb     LEDU
0980 C22E           2442 +1         clr      LEDD 
                    2444 +1         SET_FAST                ; 
0982 D222           2445 +1         setb     FAST
0984 C223           2446 +1         clr      SLOW
DEBUG                                                                                                         PAGE 44

0986 D218           2447 +1         setb     KS      
0988 12116D         2449            lcall   WRITEPORTS      ; 
098B 0209A2         2450            jmp     UP3           ;-; prejdi do stavu UP2    
                    2451 +1 F3DOWN: SET_DOWN                  ; rychly pohyb dole
098E C220           2452 +1         clr     UP
0990 D221           2453 +1         setb    DOWN
0992 C22F           2454 +1         clr     LEDU
0994 D22E           2455 +1         setb    LEDD 
                    2457 +1         SET_FAST                ; 
0996 D222           2458 +1         setb     FAST
0998 C223           2459 +1         clr      SLOW
099A D218           2460 +1         setb     KS      
099C 12116D         2462            lcall   WRITEPORTS      ; 
099F 020AF4         2463            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2464         
                    2465         
09A2                2466    UP3:
                    2467            ;--------------------------
                    2468 +1         CFCSS     11, 17, 14, 0, D1
09A2 633C11         2469 +1         xrl             G,  #17             
                    2470 +1         IF (D1 <> -1)
09A5 E53D           2471 +1             mov   A,  D1         
09A7 623C           2472 +1             xrl   G,  A          
                    2473 +1         ENDIF    
09A9 E53C           2474 +1         mov   A,  G              
                    2475 +2         LCJNE A,  #11, CFCERR     
09AB B40B03         2476 +2         cjne    A, #11, $+6
09AE 0209B4         2477 +2         jmp     $+6
09B1 020FF2         2478 +2         ljmp    CFCERR
09B4 00             2479 +2         nop
                    2480 +1         IF (14 <> -1)
09B5 753D0E         2481 +1             mov         D1, #14     
                    2482 +1         ELSE
                    2483 +1             mov         D1, #32        
                    2484 +1         ENDIF                    
                    2485 +1         IF (0 <> -1)
09B8 753E00         2486 +1             mov         D2, #0     
                    2487 +1         ELSE
                    2488 +1             mov         D2, #32        
                    2489 +1         ENDIF                    
09BB 740B           2490 +1         mov       A, #11
09BD 1211F5         2491 +1         lcall     PRINTCHAR        
                    2493            ;--------------------------
                    2494 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
09C0 53240F         2495 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
09C3 D226           2496 +1         setb    FLED3
09C5 12116D         2497 +1         lcall   WRITEPORTS
                    2499 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
09C8 12106A         2500 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09CB 121106         2501 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
09CE 3009FA         2502 +1         jnb     MB1, $-3  ; 
09D1 12106A         2503 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
09D4 121106         2505    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2506 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
09D7 200B03         2507 +1         jb      SKRH, $+6
DEBUG                                                                                                         PAGE 45

09DA 020FBF         2508 +1         ljmp    ERR_SKRH
09DD 00             2509 +1         nop
                    2511 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie 
                                                                               clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2512 +1                                                                                             
                                                                                                                 
                    2513 +1                                                                                             
                                                                                                                 
                    2514 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2515 +1         COUNT    SET    COUNT+1                   
                    2516 +1         
09DE 20091B         2517 +1         jb      MB1, ENDD10
09E1 304404         2518 +1         jnb     PKI4, $+7
09E4 C222           2519 +1         clr     FAST
09E6 D223           2520 +1         setb    SLOW
09E8 D238           2521 +1         setb    STOPPED         
09EA D254           2522 +1         setb    ERRF34_U
09EC D25B           2523 +1         setb    ERRF34_D
09EE 053B           2524 +1         inc     ERRF34_C
09F0 C21C           2525 +1                 clr     PKO4                               
09F2 C22D           2526 +1         clr     PO4U            
09F4 C22D           2527 +1         clr     PO4D              
09F6 12116D         2528 +1                 lcall   WRITEPORTS
09F9 020A00         2529 +1         ljmp    UP3ERR
09FC                2530 +1 ENDD10:
09FC 00             2531 +1         nop
09FD 020A10         2533            jmp     UP3ERR_CONTINUE
0A00                2534    UP3ERR:
0A00 C220           2535            clr     UP              ; zastav motor
0A02 D23A           2536            setb    UPOld           ;       (a zalohuj)
0A04 C23B           2537            clr     DOWNOld         ;       (a zalohuj)
0A06 C222           2538            clr     FAST            ;
0A08 C223           2539            clr     SLOW            ;
0A0A 12116D         2540            lcall   WRITEPORTS      ; 
0A0D 020CF7         2541            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0A10                2542    UP3ERR_CONTINUE:
0A10 200AC1         2543            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2544 +1         CLR_FLOOR_ERR   ERRF34
0A13 C254           2545 +1         clr    ERRF34_U
0A15 C25B           2546 +1         clr    ERRF34_D
0A17 00             2547 +1         nop
                    2549 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0A18 12106A         2550 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A1B 121106         2551 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A1E 300AFA         2552 +1         jnb     MB2, $-3  ; 
0A21 12106A         2553 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2555            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0A24 12116D         2556            lcall   WRITEPORTS      ;
0A27 020A2A         2557            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2558    
0A2A                2559    UP3_MB2:
                    2560            ;--------------------------
                    2561 +1         CFCSS     3, 8, 6, -1, D2
0A2A 633C08         2562 +1         xrl             G,  #8             
                    2563 +1         IF (D2 <> -1)
0A2D E53E           2564 +1             mov   A,  D2         
DEBUG                                                                                                         PAGE 46

0A2F 623C           2565 +1             xrl   G,  A          
                    2566 +1         ENDIF    
0A31 E53C           2567 +1         mov   A,  G              
                    2568 +2         LCJNE A,  #3, CFCERR     
0A33 B40303         2569 +2         cjne    A, #3, $+6
0A36 020A3C         2570 +2         jmp     $+6
0A39 020FF2         2571 +2         ljmp    CFCERR
0A3C 00             2572 +2         nop
                    2573 +1         IF (6 <> -1)
0A3D 753D06         2574 +1             mov         D1, #6     
                    2575 +1         ELSE
                    2576 +1             mov         D1, #32        
                    2577 +1         ENDIF                    
                    2578 +1         IF (-1 <> -1)
                    2579 +1             mov         D2, #-1     
                    2580 +1         ELSE
0A40 753E20         2581 +1             mov         D2, #32        
                    2582 +1         ENDIF                    
0A43 7403           2583 +1         mov       A, #3
0A45 1211F5         2584 +1         lcall     PRINTCHAR        
                    2586            ;--------------------------
                    2587 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0A48 12106A         2588 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A4B 121106         2589 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A4E 300AFA         2590 +1         jnb     MB2, $-3  ; 
0A51 12106A         2591 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A54                2593    UP3_MB2A:
0A54 121106         2594            lcall   READPORTS       ; nacitanie dat
                    2595 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0A57 200B03         2596 +1         jb      SKRH, $+6
0A5A 020FBF         2597 +1         ljmp    ERR_SKRH
0A5D 00             2598 +1         nop
                    2600 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT ; >>> CHYBA, Vypadla spomalovacia
                                                                                clonka (narazil som na zastavovaciu) <<<
                                                                               
                    2601 +1                                                                                             
                                                                                                                 
                    2602 +1                                                                                             
                                                                                                                 
                    2603 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2604 +1         COUNT    SET    COUNT+1                   
                    2605 +1         
0A5E 20091B         2606 +1         jb      MB1, ENDD11
0A61 304404         2607 +1         jnb     PKI4, $+7
0A64 C222           2608 +1         clr     FAST
0A66 D223           2609 +1         setb    SLOW
0A68 D238           2610 +1         setb    STOPPED         
0A6A D254           2611 +1         setb    ERRF34_U
0A6C D25B           2612 +1         setb    ERRF34_D
0A6E 053B           2613 +1         inc     ERRF34_C
0A70 C21C           2614 +1                 clr     PKO4                               
0A72 C22D           2615 +1         clr     PO4U            
0A74 C22D           2616 +1         clr     PO4D              
0A76 12116D         2617 +1                 lcall   WRITEPORTS
0A79 020A80         2618 +1         ljmp    UP3_MB2ERR
0A7C                2619 +1 ENDD11:
0A7C 00             2620 +1         nop
DEBUG                                                                                                         PAGE 47

0A7D 020A90         2622            jmp     UP3_MB2ERR_CONTINUE
0A80                2623    UP3_MB2ERR:
0A80 C220           2624            clr     UP              ; zastav motor
0A82 D23A           2625            setb    UPOld           ;       (a zalohuj)
0A84 C23B           2626            clr     DOWNOld         ;       (a zalohuj)
0A86 C222           2627            clr     FAST            ;
0A88 C223           2628            clr     SLOW            ;
0A8A 12116D         2629            lcall   WRITEPORTS      ; 
0A8D 020CF7         2630            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0A90                2631    UP3_MB2ERR_CONTINUE:
0A90 200AC1         2632            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2633 +1         CLR_FLOOR_ERR   ERRF34      
0A93 C254           2634 +1         clr    ERRF34_U
0A95 C25B           2635 +1         clr    ERRF34_D
0A97 00             2636 +1         nop
                    2638            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0A98 12116D         2639            lcall   WRITEPORTS      ;
                    2640 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0A9B 12106A         2641 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A9E 121106         2642 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AA1 300AFA         2643 +1         jnb     MB2, $-3  ; 
0AA4 12106A         2644 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2646    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2647    ;        anl     A, #00010000b ;-;
                    2648    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0AA7 D223           2649            setb    SLOW            ;       Ak ano, spomalme
0AA9 C222           2650            clr     FAST            ; 
0AAB 12116D         2651            lcall   WRITEPORTS      ;
0AAE 020AB1         2652            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2653    
                    2654    
0AB1                2655    UP3_MB1:
                    2656            ;--------------------------
                    2657 +1         CFCSS     5, 6, 0, -1, -1
0AB1 633C06         2658 +1         xrl             G,  #6             
                    2659 +1         IF (-1 <> -1)
                    2660 +1             mov   A,  -1         
                    2661 +1             xrl   G,  A          
                    2662 +1         ENDIF    
0AB4 E53C           2663 +1         mov   A,  G              
                    2664 +2         LCJNE A,  #5, CFCERR     
0AB6 B40503         2665 +2         cjne    A, #5, $+6
0AB9 020ABF         2666 +2         jmp     $+6
0ABC 020FF2         2667 +2         ljmp    CFCERR
0ABF 00             2668 +2         nop
                    2669 +1         IF (0 <> -1)
0AC0 753D00         2670 +1             mov         D1, #0     
                    2671 +1         ELSE
                    2672 +1             mov         D1, #32        
                    2673 +1         ENDIF                    
                    2674 +1         IF (-1 <> -1)
                    2675 +1             mov         D2, #-1     
                    2676 +1         ELSE
0AC3 753E20         2677 +1             mov         D2, #32        
                    2678 +1         ENDIF                    
0AC6 7405           2679 +1         mov       A, #5
0AC8 1211F5         2680 +1         lcall     PRINTCHAR        
DEBUG                                                                                                         PAGE 48

                    2682            ;--------------------------
                    2683 +1         ZAKMITC MB2
0ACB 12106A         2684 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0ACE 121106         2685 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AD1 300AFA         2686 +1         jnb     MB2, $-3  ; 
0AD4 12106A         2687 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AD7 121106         2689    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0ADA 300907         2690            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0ADD 200BF7         2691            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0AE0 D254           2692            setb    ERRF4_U
0AE2 0538           2693            inc     ERRF4_C
                    2694    ;        jmp     U3_MB1C 
                    2695    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2696    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0AE4 C238           2697    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0AE6 C220           2698            clr     UP              ; zastav motor
0AE8 D23A           2699            setb    UPOld           ;       (a zalohuj)
0AEA C23B           2700            clr     DOWNOld         ;       (a zalohuj)
0AEC C222           2701            clr     FAST            ; 
0AEE 12116D         2702            lcall   WRITEPORTS      ; 
0AF1 020CF7         2703            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2704    
                    2705    
0AF4                2706    DOWN3:
                    2707            ;--------------------------
                    2708 +1         CFCSS     27, 2, 22, 10, D2
0AF4 633C02         2709 +1         xrl             G,  #2             
                    2710 +1         IF (D2 <> -1)
0AF7 E53E           2711 +1             mov   A,  D2         
0AF9 623C           2712 +1             xrl   G,  A          
                    2713 +1         ENDIF    
0AFB E53C           2714 +1         mov   A,  G              
                    2715 +2         LCJNE A,  #27, CFCERR     
0AFD B41B03         2716 +2         cjne    A, #27, $+6
0B00 020B06         2717 +2         jmp     $+6
0B03 020FF2         2718 +2         ljmp    CFCERR
0B06 00             2719 +2         nop
                    2720 +1         IF (22 <> -1)
0B07 753D16         2721 +1             mov         D1, #22     
                    2722 +1         ELSE
                    2723 +1             mov         D1, #32        
                    2724 +1         ENDIF                    
                    2725 +1         IF (10 <> -1)
0B0A 753E0A         2726 +1             mov         D2, #10     
                    2727 +1         ELSE
                    2728 +1             mov         D2, #32        
                    2729 +1         ENDIF                    
0B0D 741B           2730 +1         mov       A, #27
0B0F 1211F5         2731 +1         lcall     PRINTCHAR        
                    2733            ;--------------------------
                    2734 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0B12 53240F         2735 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
DEBUG                                                                                                         PAGE 49

0B15 D226           2736 +1         setb    FLED3
0B17 12116D         2737 +1         lcall   WRITEPORTS
                    2739 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0B1A 12106A         2740 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B1D 121106         2741 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B20 3009FA         2742 +1         jnb     MB1, $-3  ; 
0B23 12106A         2743 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B26 121106         2745    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2746 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B29 200C03         2747 +1         jb      SKRD, $+6
0B2C 020FA6         2748 +1         ljmp    ERR_SKRD
0B2F 00             2749 +1         nop
                    2751 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie c
                                                                               lonky (narazil som na zastavovaciu) <<<
                    2752 +1                                                                                             
                                                                                                                 
                    2753 +1                                                                                             
                                                                                                                 
                    2754 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2755 +1         COUNT    SET    COUNT+1                   
                    2756 +1         
0B30 20091B         2757 +1         jb      MB1, ENDD12
0B33 304204         2758 +1         jnb     PKI2, $+7
0B36 C222           2759 +1         clr     FAST
0B38 D223           2760 +1         setb    SLOW
0B3A D238           2761 +1         setb    STOPPED         
0B3C D253           2762 +1         setb    ERRF23_U
0B3E D25A           2763 +1         setb    ERRF23_D
0B40 053A           2764 +1         inc     ERRF23_C
0B42 C21A           2765 +1                 clr     PKO2                               
0B44 C22A           2766 +1         clr     PO2U            
0B46 C229           2767 +1         clr     PO2D              
0B48 12116D         2768 +1                 lcall   WRITEPORTS
0B4B 020717         2769 +1         ljmp    DOWN2
0B4E                2770 +1 ENDD12:
0B4E 00             2771 +1         nop
0B4F 200AD4         2773            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    2774 +1         CLR_FLOOR_ERR   ERRF23
0B52 C253           2775 +1         clr    ERRF23_U
0B54 C25A           2776 +1         clr    ERRF23_D
0B56 00             2777 +1         nop
                    2779 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0B57 12106A         2780 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B5A 121106         2781 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B5D 300AFA         2782 +1         jnb     MB2, $-3  ; 
0B60 12106A         2783 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2785            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0B63 12116D         2786            lcall   WRITEPORTS      ;
0B66 020B69         2787            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2788    
                    2789    
0B69                2790    DOWN3_MB2:
                    2791            ;--------------------------
                    2792 +1         CFCSS     9, 4, -1, 24, D1
0B69 633C04         2793 +1         xrl             G,  #4             
                    2794 +1         IF (D1 <> -1)
DEBUG                                                                                                         PAGE 50

0B6C E53D           2795 +1             mov   A,  D1         
0B6E 623C           2796 +1             xrl   G,  A          
                    2797 +1         ENDIF    
0B70 E53C           2798 +1         mov   A,  G              
                    2799 +2         LCJNE A,  #9, CFCERR     
0B72 B40903         2800 +2         cjne    A, #9, $+6
0B75 020B7B         2801 +2         jmp     $+6
0B78 020FF2         2802 +2         ljmp    CFCERR
0B7B 00             2803 +2         nop
                    2804 +1         IF (-1 <> -1)
                    2805 +1             mov         D1, #-1     
                    2806 +1         ELSE
0B7C 753D20         2807 +1             mov         D1, #32        
                    2808 +1         ENDIF                    
                    2809 +1         IF (24 <> -1)
0B7F 753E18         2810 +1             mov         D2, #24     
                    2811 +1         ELSE
                    2812 +1             mov         D2, #32        
                    2813 +1         ENDIF                    
0B82 7409           2814 +1         mov       A, #9
0B84 1211F5         2815 +1         lcall     PRINTCHAR        
                    2817            ;--------------------------
                    2818 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0B87 12106A         2819 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B8A 121106         2820 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B8D 300AFA         2821 +1         jnb     MB2, $-3  ; 
0B90 12106A         2822 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B93                2824    DOWN3_MB2A:
0B93 121106         2825            lcall   READPORTS       ; nacitanie dat
                    2826 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B96 200C03         2827 +1         jb      SKRD, $+6
0B99 020FA6         2828 +1         ljmp    ERR_SKRD
0B9C 00             2829 +1         nop
                    2831 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    2832 +1                                                                                             
                                                                                                                 
                    2833 +1                                                                                             
                                                                                                                 
                    2834 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              2835 +1         COUNT    SET    COUNT+1                   
                    2836 +1         
0B9D 20091B         2837 +1         jb      MB1, ENDD13
0BA0 304204         2838 +1         jnb     PKI2, $+7
0BA3 C222           2839 +1         clr     FAST
0BA5 D223           2840 +1         setb    SLOW
0BA7 D238           2841 +1         setb    STOPPED         
0BA9 D253           2842 +1         setb    ERRF23_U
0BAB D25A           2843 +1         setb    ERRF23_D
0BAD 053A           2844 +1         inc     ERRF23_C
0BAF C21A           2845 +1                 clr     PKO2                               
0BB1 C22A           2846 +1         clr     PO2U            
0BB3 C229           2847 +1         clr     PO2D              
0BB5 12116D         2848 +1                 lcall   WRITEPORTS
0BB8 020717         2849 +1         ljmp    DOWN2
0BBB                2850 +1 ENDD13:
0BBB 00             2851 +1         nop
DEBUG                                                                                                         PAGE 51

0BBC 200AD4         2853            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2854 +1         CLR_FLOOR_ERR   ERRF23      
0BBF C253           2855 +1         clr    ERRF23_U
0BC1 C25A           2856 +1         clr    ERRF23_D
0BC3 00             2857 +1         nop
                    2859            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0BC4 12116D         2860            lcall   WRITEPORTS      ;
                    2861 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0BC7 12106A         2862 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BCA 121106         2863 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BCD 300AFA         2864 +1         jnb     MB2, $-3  ; 
0BD0 12106A         2865 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2867    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2868    ;        anl     A, #00000100b ;-;
                    2869    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0BD3                2870    DOWN3_MB2_CFC:
                    2871            ;--------------------------
                    2872 +1         CFCSS     16, 25, -1, -1, -1
0BD3 633C19         2873 +1         xrl             G,  #25             
                    2874 +1         IF (-1 <> -1)
                    2875 +1             mov   A,  -1         
                    2876 +1             xrl   G,  A          
                    2877 +1         ENDIF    
0BD6 E53C           2878 +1         mov   A,  G              
                    2879 +2         LCJNE A,  #16, CFCERR     
0BD8 B41003         2880 +2         cjne    A, #16, $+6
0BDB 020BE1         2881 +2         jmp     $+6
0BDE 020FF2         2882 +2         ljmp    CFCERR
0BE1 00             2883 +2         nop
                    2884 +1         IF (-1 <> -1)
                    2885 +1             mov         D1, #-1     
                    2886 +1         ELSE
0BE2 753D20         2887 +1             mov         D1, #32        
                    2888 +1         ENDIF                    
                    2889 +1         IF (-1 <> -1)
                    2890 +1             mov         D2, #-1     
                    2891 +1         ELSE
0BE5 753E20         2892 +1             mov         D2, #32        
                    2893 +1         ENDIF                    
0BE8 7410           2894 +1         mov       A, #16
0BEA 1211F5         2895 +1         lcall     PRINTCHAR        
                    2897            ;--------------------------
                    2898 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    2899 +1                                         
0BED C3             2900 +1         clr     C                       
0BEE 7400           2901 +1         mov     A, #0h                  
0BF0 7211           2902 +1         orl     C, PI2D      
0BF2 B00E           2903 +1         anl     C, /DPZK                
0BF4 7242           2904 +1         orl     C, PKI2          
0BF6 B05A           2905 +1         anl     C, /ERRF2_D 
0BF8 720F           2906 +1         orl     C, DPK                  
0BFA 7238           2907 +1         orl     C, STOPPED              
0BFC 3400           2908 +1         addc    A, #0h                  
0BFE 7050           2910            jnz     D3_MB2C         ; Ak ano, zastav
                    2911 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
DEBUG                                                                                                         PAGE 52

0C00 E522           2912 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0C02 33             2913 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0C03 547E           2914 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    2915 +1 
                    2916 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    2917 +2         ANLB    ACC.2, ERRF2_D  ; |
0C05 A2E2           2918 +2         mov   C, ACC.2
0C07 B05A           2919 +2         anl   C, /ERRF2_D
0C09 92E2           2920 +2         mov   ACC.2, C
                    2921 +2         ANLB    ACC.3, ERRF2_D  ; |
0C0B A2E3           2922 +2         mov   C, ACC.3
0C0D B05A           2923 +2         anl   C, /ERRF2_D
0C0F 92E3           2924 +2         mov   ACC.3, C
                    2925 +2         ANLB    ACC.4, ERRF3_D  ; |
0C11 A2E4           2926 +2         mov   C, ACC.4
0C13 B05B           2927 +2         anl   C, /ERRF3_D
0C15 92E4           2928 +2         mov   ACC.4, C
                    2929 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    2930 +1 
0C17 7805           2931 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    2932 +1  ; LL1: 
0C19 6006           2933 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0C1B C3             2934 +1         clr     C               ; Inak shiftnem o 2
0C1C 33             2935 +1         rlc     A               ;
0C1D C3             2936 +1         clr     C               ;
0C1E 33             2937 +1         rlc     A               ;
0C1F D8F8           2938 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    2939 +1 ; LL2:
0C21 E8             2940 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    2942 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0C22 B40203         2943 +1         cjne    A, #2, $+6
0C25 020C2B         2944 +1         jmp     $+6
0C28 020C5A         2945 +1         ljmp    DOWN3_MB1
0C2B 00             2946 +1         nop
                    2948 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0C2C 7405           2949 +1         mov     A, #5
0C2E C3             2950 +1         clr     C
0C2F 9402           2951 +1         subb    A, #2
0C31 F8             2952 +1         mov     R0, A
0C32 E528           2953 +1         mov     A, INPORTA
0C34 541E           2954 +1         anl     A, #00011110b
0C36 852BF0         2955 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0C39 53F00C         2956 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0C3C 63F0FF         2957 +1         xrl     B, #0FFH
0C3F 55F0           2958 +1         anl     A, B
0C41 C3             2959 +1         clr     C
0C42 33             2960 +1         rlc     A
0C43 C3             2961 +1         clr     C
0C44 33             2962 +1         rlc     A
0C45 C3             2963 +1         clr     C
0C46 33             2964 +1         rlc     A
DEBUG                                                                                                         PAGE 53

                    2965 +1 ;LL1   
0C47 C3             2966 +1         clr     C
0C48 33             2967 +1         rlc     A
0C49 D8FC           2968 +1         djnz    R0, $-2;LL1
0C4B 6003           2970            jz      D3_MB2C         ; |   ak neni zastavujem                  
0C4D 020C5A         2971            ljmp    DOWN3_MB1       ;-; |        
0C50 D223           2972    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0C52 C222           2973            clr     FAST            ; 
0C54 12116D         2974            lcall   WRITEPORTS      ;
0C57 020CA3         2975            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    2976    
                    2977    
0C5A                2978    DOWN3_MB1:    
                    2979            ;--------------------------
                    2980 +1         CFCSS     17, 1, -1, 0, -1
0C5A 633C01         2981 +1         xrl             G,  #1             
                    2982 +1         IF (-1 <> -1)
                    2983 +1             mov   A,  -1         
                    2984 +1             xrl   G,  A          
                    2985 +1         ENDIF    
0C5D E53C           2986 +1         mov   A,  G              
                    2987 +2         LCJNE A,  #17, CFCERR     
0C5F B41103         2988 +2         cjne    A, #17, $+6
0C62 020C68         2989 +2         jmp     $+6
0C65 020FF2         2990 +2         ljmp    CFCERR
0C68 00             2991 +2         nop
                    2992 +1         IF (-1 <> -1)
                    2993 +1             mov         D1, #-1     
                    2994 +1         ELSE
0C69 753D20         2995 +1             mov         D1, #32        
                    2996 +1         ENDIF                    
                    2997 +1         IF (0 <> -1)
0C6C 753E00         2998 +1             mov         D2, #0     
                    2999 +1         ELSE
                    3000 +1             mov         D2, #32        
                    3001 +1         ENDIF                    
0C6F 7411           3002 +1         mov       A, #17
0C71 1211F5         3003 +1         lcall     PRINTCHAR        
                    3005            ;--------------------------
0C74 121106         3006    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3007 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C77 200C03         3008 +1         jb      SKRD, $+6
0C7A 020FA6         3009 +1         ljmp    ERR_SKRD
0C7D 00             3010 +1         nop
                    3012 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3013 +1                                                                                             
                                                                                                                 
                    3014 +1                                                                                             
                                                                                                                 
                    3015 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              3016 +1         COUNT    SET    COUNT+1                   
                    3017 +1         
0C7E 200A1B         3018 +1         jb      MB2, ENDD14
0C81 304204         3019 +1         jnb     PKI2, $+7
0C84 C222           3020 +1         clr     FAST
0C86 D223           3021 +1         setb    SLOW
DEBUG                                                                                                         PAGE 54

0C88 D238           3022 +1         setb    STOPPED         
0C8A D252           3023 +1         setb    ERRF2_U
0C8C D25A           3024 +1         setb    ERRF2_D
0C8E 0536           3025 +1         inc     ERRF2_C
0C90 C21A           3026 +1                 clr     PKO2                               
0C92 C22A           3027 +1         clr     PO2U            
0C94 C229           3028 +1         clr     PO2D              
0C96 12116D         3029 +1                 lcall   WRITEPORTS
0C99 02079E         3030 +1         ljmp    DOWN2_MB2
0C9C                3031 +1 ENDD14:
0C9C 00             3032 +1         nop
0C9D 2009D4         3034            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    3035    ;        CLR_FLOOR_ERR   ERRF2
                    3036    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3037    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    3038    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    3039    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3040    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    3041    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3042    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0CA0 020717         3043            ljmp    DOWN2         ;-; |        
                    3044    ;D3_MB1C: clr     DOWN            ; zastav motor
                    3045    ;        setb    DOWNOld         ;       (a zalohuj)
                    3046    ;        clr     UPOld           ;       (a zalohuj)
                    3047    ;        clr     FAST            ; 
                    3048    ;        lcall   WRITEPORTS      ; 
                    3049    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0CA3                3050    DOWN3_STOP: 
                    3051            ;--------------------------
                    3052 +1         CFCSS     21, 5, 0, 4, -1
0CA3 633C05         3053 +1         xrl             G,  #5             
                    3054 +1         IF (-1 <> -1)
                    3055 +1             mov   A,  -1         
                    3056 +1             xrl   G,  A          
                    3057 +1         ENDIF    
0CA6 E53C           3058 +1         mov   A,  G              
                    3059 +2         LCJNE A,  #21, CFCERR     
0CA8 B41503         3060 +2         cjne    A, #21, $+6
0CAB 020CB1         3061 +2         jmp     $+6
0CAE 020FF2         3062 +2         ljmp    CFCERR
0CB1 00             3063 +2         nop
                    3064 +1         IF (0 <> -1)
0CB2 753D00         3065 +1             mov         D1, #0     
                    3066 +1         ELSE
                    3067 +1             mov         D1, #32        
                    3068 +1         ENDIF                    
                    3069 +1         IF (4 <> -1)
0CB5 753E04         3070 +1             mov         D2, #4     
                    3071 +1         ELSE
                    3072 +1             mov         D2, #32        
                    3073 +1         ENDIF                    
0CB8 7415           3074 +1         mov       A, #21
0CBA 1211F5         3075 +1         lcall     PRINTCHAR        
                    3077            ;--------------------------
DEBUG                                                                                                         PAGE 55

0CBD 121106         3078    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3079 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0CC0 200C03         3080 +1         jb      SKRD, $+6
0CC3 020FA6         3081 +1         ljmp    ERR_SKRD
0CC6 00             3082 +1         nop
                    3084 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia c
                                                                               lonka (narazil som na spomalovaciu) <<<
                    3085 +1                                                                                             
                                                                                                                 
                    3086 +1                                                                                             
                                                                                                                 
                    3087 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              3088 +1         COUNT    SET    COUNT+1                   
                    3089 +1         
0CC7 200A1B         3090 +1         jb      MB2, ENDD15
0CCA 304204         3091 +1         jnb     PKI2, $+7
0CCD C222           3092 +1         clr     FAST
0CCF D223           3093 +1         setb    SLOW
0CD1 D238           3094 +1         setb    STOPPED         
0CD3 D252           3095 +1         setb    ERRF2_U
0CD5 D25A           3096 +1         setb    ERRF2_D
0CD7 0536           3097 +1         inc     ERRF2_C
0CD9 C21A           3098 +1                 clr     PKO2                               
0CDB C22A           3099 +1         clr     PO2U            
0CDD C229           3100 +1         clr     PO2D              
0CDF 12116D         3101 +1                 lcall   WRITEPORTS
0CE2 02079E         3102 +1         ljmp    DOWN2_MB2
0CE5                3103 +1 ENDD15:
0CE5 00             3104 +1         nop
0CE6 2009D4         3106            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    3107    ;        CLR_FLOOR_ERR   ERRF2     
0CE9 C221           3108            clr     DOWN            ; zastav motor
0CEB D23B           3109            setb    DOWNOld         ;       (a zalohuj)
0CED C23A           3110            clr     UPOld           ;       (a zalohuj)
0CEF C222           3111            clr     FAST            ; 
0CF1 12116D         3112            lcall   WRITEPORTS      ; 
0CF4 0203C7         3113            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    3114    
                    3115            
                    3116    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    3117    
0CF7                3118    FLOOR4:
                    3119            ;--------------------------
                    3120 +1         CFCSS     19, 22, -1, -1, D1
0CF7 633C16         3121 +1         xrl             G,  #22             
                    3122 +1         IF (D1 <> -1)
0CFA E53D           3123 +1             mov   A,  D1         
0CFC 623C           3124 +1             xrl   G,  A          
                    3125 +1         ENDIF    
0CFE E53C           3126 +1         mov   A,  G              
                    3127 +2         LCJNE A,  #19, CFCERR     
0D00 B41303         3128 +2         cjne    A, #19, $+6
0D03 020D09         3129 +2         jmp     $+6
0D06 020FF2         3130 +2         ljmp    CFCERR
0D09 00             3131 +2         nop
                    3132 +1         IF (-1 <> -1)
                    3133 +1             mov         D1, #-1     
DEBUG                                                                                                         PAGE 56

                    3134 +1         ELSE
0D0A 753D20         3135 +1             mov         D1, #32        
                    3136 +1         ENDIF                    
                    3137 +1         IF (-1 <> -1)
                    3138 +1             mov         D2, #-1     
                    3139 +1         ELSE
0D0D 753E20         3140 +1             mov         D2, #32        
                    3141 +1         ENDIF                    
0D10 7413           3142 +1         mov       A, #19
0D12 1211F5         3143 +1         lcall     PRINTCHAR        
                    3145            ;--------------------------
                    3146 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0D15 53240F         3147 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0D18 D227           3148 +1         setb    FLED4
0D1A 12116D         3149 +1         lcall   WRITEPORTS
0D1D C238           3151            clr     STOPPED
                    3152 +1         TIMER2  60              ; (Timer - 3s)
0D1F 752D3C         3153 +1            mov           T2_C, #60                              
0D22 C262           3154 +1                  clr       T2_F                                  
0D24 D2CA           3155 +1                  setb      TR2                                             
                    3157 +1         ROZSVIET_SMER_LED
0D26 D22F           3158 +1         setb    LEDU            ;
0D28 D22E           3159 +1         setb    LEDD            ;
0D2A 12116D         3160 +1         lcall   WRITEPORTS      ;
0D2D 121106         3162    F4S:    lcall   READPORTS     ;-; nacitanie dat
                    3163 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0D30 200A03         3164 +1         jb      MB2, $+6
0D33 020FD8         3165 +1         ljmp    ERRFLOOR
0D36 00             3166 +1         nop
                    3168 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0D37 200C03         3169 +1         jb      SKRD, $+6
0D3A 020FD8         3170 +1         ljmp    ERRFLOOR
0D3D 00             3171 +1         nop
                    3173 +1         ZRUS_POSCH 4
0D3E C21C           3174 +1         clr     PKO4       
0D40 C22D           3175 +1         clr     PO4U      
0D42 C22D           3176 +1         clr     PO4D      
0D44 12116D         3177 +1         lcall   WRITEPORTS
0D47 3062E3         3179            jnb                T2_F, F4S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    3180 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0D4A A20D           3181 +1         mov      C, DP          
0D4C 720E           3182 +1         orl      C, DPZK        
0D4E 720F           3183 +1         orl      C, DPK         
0D50 9218           3184 +1         mov      KS, C          
0D52 922F           3185 +1         mov      LEDU, C        
0D54 922E           3186 +1         mov      LEDD, C        
0D56 12116D         3187 +1         lcall   WRITEPORTS      
0D59 200FD1         3189            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0D5C 3045CE         3190            jnb     DOORCLSD, F4S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    3191 +1         JE_VYBRATE_POSCHODIE F4S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0D5F A20D           3192 +1         mov      C, DP         
0D61 720E           3193 +1         orl      C, DPZK        
0D63 720F           3194 +1         orl      C, DPK         
DEBUG                                                                                                         PAGE 57

0D65 5006           3195 +1         jnc      $+8            
0D67 E528           3196 +1         mov      A, INPORTA     
0D69 541E           3197 +1         anl      A, #00011110b  
0D6B 60C0           3198 +1         jz       F4S       
                    3200            ;clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
                    3201            ;clr     PO4            ;
                    3202            ;lcall   WRITEPORTS      ;
                    3203            ;jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0D6D E528           3204            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0D6F 852BF0         3205            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0D72 53F00C         3206            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0D75 63F0FF         3207            xrl     B, #0FFH        ; | |
0D78 55F0           3208            anl     A, B            ; | |
0D7A 540E           3209            anl     A, #00001110b ;-;
0D7C 701A           3210            jnz     F4OK          ;-; ak ano, ideme na to
0D7E E522           3211            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0D80 541F           3212            anl     A, #00011111b ;-;
                    3213            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    3214 +1         ANLB    ACC.1, ERRF2_D  ; |
0D82 A2E1           3215 +1         mov   C, ACC.1
0D84 B05A           3216 +1         anl   C, /ERRF2_D
0D86 92E1           3217 +1         mov   ACC.1, C
                    3219 +1         ANLB    ACC.2, ERRF2_D  ; |
0D88 A2E2           3220 +1         mov   C, ACC.2
0D8A B05A           3221 +1         anl   C, /ERRF2_D
0D8C 92E2           3222 +1         mov   ACC.2, C
                    3224 +1         ANLB    ACC.3, ERRF3_D  ; |
0D8E A2E3           3225 +1         mov   C, ACC.3
0D90 B05B           3226 +1         anl   C, /ERRF3_D
0D92 92E3           3227 +1         mov   ACC.3, C
                    3229            ;ANLB    ACC.4, ERRF3_D  ; |
0D94 7002           3230            jnz     F4OK          ;-; ak ano, ideme na to
0D96 8095           3231            jmp     F4S             ; Nemam sa kde hnut, opakujem
                    3232 +1 F4OK:   SET_DOWN                  ; rychly pohyb dole
0D98 C220           3233 +1         clr     UP
0D9A D221           3234 +1         setb    DOWN
0D9C C22F           3235 +1         clr     LEDU
0D9E D22E           3236 +1         setb    LEDD 
                    3238 +1         SET_FAST                ; 
0DA0 D222           3239 +1         setb     FAST
0DA2 C223           3240 +1         clr      SLOW
0DA4 D218           3241 +1         setb     KS      
0DA6 12116D         3243            lcall   WRITEPORTS      ; 
0DA9 020DAC         3244            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
                    3245    
                    3246    
0DAC                3247    DOWN4:
                    3248            ;--------------------------
                    3249 +1         CFCSS     22, 5, -1, 15, -1
0DAC 633C05         3250 +1         xrl             G,  #5             
                    3251 +1         IF (-1 <> -1)
                    3252 +1             mov   A,  -1         
                    3253 +1             xrl   G,  A          
                    3254 +1         ENDIF    
0DAF E53C           3255 +1         mov   A,  G              
                    3256 +2         LCJNE A,  #22, CFCERR     
DEBUG                                                                                                         PAGE 58

0DB1 B41603         3257 +2         cjne    A, #22, $+6
0DB4 020DBA         3258 +2         jmp     $+6
0DB7 020FF2         3259 +2         ljmp    CFCERR
0DBA 00             3260 +2         nop
                    3261 +1         IF (-1 <> -1)
                    3262 +1             mov         D1, #-1     
                    3263 +1         ELSE
0DBB 753D20         3264 +1             mov         D1, #32        
                    3265 +1         ENDIF                    
                    3266 +1         IF (15 <> -1)
0DBE 753E0F         3267 +1             mov         D2, #15     
                    3268 +1         ELSE
                    3269 +1             mov         D2, #32        
                    3270 +1         ENDIF                    
0DC1 7416           3271 +1         mov       A, #22
0DC3 1211F5         3272 +1         lcall     PRINTCHAR        
                    3274            ;--------------------------
                    3275 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0DC6 53240F         3276 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0DC9 D227           3277 +1         setb    FLED4
0DCB 12116D         3278 +1         lcall   WRITEPORTS
                    3280 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0DCE 12106A         3281 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0DD1 121106         3282 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0DD4 3009FA         3283 +1         jnb     MB1, $-3  ; 
0DD7 12106A         3284 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0DDA 121106         3286    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    3287 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0DDD 200C03         3288 +1         jb      SKRD, $+6
0DE0 020FA6         3289 +1         ljmp    ERR_SKRD
0DE3 00             3290 +1         nop
                    3292 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    3293 +1                                                                                             
                                                                                                                 
                    3294 +1                                                                                             
                                                                                                                 
                    3295 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              3296 +1         COUNT    SET    COUNT+1                   
                    3297 +1         
0DE4 20091B         3298 +1         jb      MB1, ENDD16
0DE7 304304         3299 +1         jnb     PKI3, $+7
0DEA C222           3300 +1         clr     FAST
0DEC D223           3301 +1         setb    SLOW
0DEE D238           3302 +1         setb    STOPPED         
0DF0 D254           3303 +1         setb    ERRF34_U
0DF2 D25B           3304 +1         setb    ERRF34_D
0DF4 053B           3305 +1         inc     ERRF34_C
0DF6 C21B           3306 +1                 clr     PKO3                               
0DF8 C22C           3307 +1         clr     PO3U            
0DFA C22B           3308 +1         clr     PO3D              
0DFC 12116D         3309 +1                 lcall   WRITEPORTS
0DFF 020AF4         3310 +1         ljmp    DOWN3
0E02                3311 +1 ENDD16:
DEBUG                                                                                                         PAGE 59

0E02 00             3312 +1         nop
0E03 200AD4         3314            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    3315 +1         CLR_FLOOR_ERR   ERRF34
0E06 C254           3316 +1         clr    ERRF34_U
0E08 C25B           3317 +1         clr    ERRF34_D
0E0A 00             3318 +1         nop
                    3320 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0E0B 12106A         3321 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E0E 121106         3322 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E11 300AFA         3323 +1         jnb     MB2, $-3  ; 
0E14 12106A         3324 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3326            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0E17 12116D         3327            lcall   WRITEPORTS      ;
0E1A 020E1D         3328            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    3329            
                    3330            
0E1D                3331    DOWN4_MB2:
                    3332            ;--------------------------
                    3333 +1         CFCSS     23, 1, -1, 14, -1
0E1D 633C01         3334 +1         xrl             G,  #1             
                    3335 +1         IF (-1 <> -1)
                    3336 +1             mov   A,  -1         
                    3337 +1             xrl   G,  A          
                    3338 +1         ENDIF    
0E20 E53C           3339 +1         mov   A,  G              
                    3340 +2         LCJNE A,  #23, CFCERR     
0E22 B41703         3341 +2         cjne    A, #23, $+6
0E25 020E2B         3342 +2         jmp     $+6
0E28 020FF2         3343 +2         ljmp    CFCERR
0E2B 00             3344 +2         nop
                    3345 +1         IF (-1 <> -1)
                    3346 +1             mov         D1, #-1     
                    3347 +1         ELSE
0E2C 753D20         3348 +1             mov         D1, #32        
                    3349 +1         ENDIF                    
                    3350 +1         IF (14 <> -1)
0E2F 753E0E         3351 +1             mov         D2, #14     
                    3352 +1         ELSE
                    3353 +1             mov         D2, #32        
                    3354 +1         ENDIF                    
0E32 7417           3355 +1         mov       A, #23
0E34 1211F5         3356 +1         lcall     PRINTCHAR        
                    3358            ;--------------------------
                    3359 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0E37 12106A         3360 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E3A 121106         3361 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E3D 300AFA         3362 +1         jnb     MB2, $-3  ; 
0E40 12106A         3363 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E43                3365    DOWN4_MB2A:
0E43 121106         3366            lcall   READPORTS       ; nacitanie dat
                    3367 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E46 200C03         3368 +1         jb      SKRD, $+6
0E49 020FA6         3369 +1         ljmp    ERR_SKRD
0E4C 00             3370 +1         nop
                    3372 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadla spomalovacia c
                                                                               lonka (narazil som na zastavovaciu) <<<
DEBUG                                                                                                         PAGE 60

                    3373 +1                                                                                             
                                                                                                                 
                    3374 +1                                                                                             
                                                                                                                 
                    3375 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3376 +1         COUNT    SET    COUNT+1                   
                    3377 +1         
0E4D 20091B         3378 +1         jb      MB1, ENDD17
0E50 304304         3379 +1         jnb     PKI3, $+7
0E53 C222           3380 +1         clr     FAST
0E55 D223           3381 +1         setb    SLOW
0E57 D238           3382 +1         setb    STOPPED         
0E59 D254           3383 +1         setb    ERRF34_U
0E5B D25B           3384 +1         setb    ERRF34_D
0E5D 053B           3385 +1         inc     ERRF34_C
0E5F C21B           3386 +1                 clr     PKO3                               
0E61 C22C           3387 +1         clr     PO3U            
0E63 C22B           3388 +1         clr     PO3D              
0E65 12116D         3389 +1                 lcall   WRITEPORTS
0E68 020AF4         3390 +1         ljmp    DOWN3
0E6B                3391 +1 ENDD17:
0E6B 00             3392 +1         nop
0E6C 200AD4         3394            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3395 +1         CLR_FLOOR_ERR   ERRF34       
0E6F C254           3396 +1         clr    ERRF34_U
0E71 C25B           3397 +1         clr    ERRF34_D
0E73 00             3398 +1         nop
                    3400            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0E74 12116D         3401            lcall   WRITEPORTS      ;
                    3402 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0E77 12106A         3403 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E7A 121106         3404 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E7D 300AFA         3405 +1         jnb     MB2, $-3  ; 
0E80 12106A         3406 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3408    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3409    ;        anl     A, #00001000b ;-;
                    3410    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0E83                3411    DOWN4_MB2_CFC:
                    3412            ;--------------------------
                    3413 +1         CFCSS     7, 16, -1, -1, -1
0E83 633C10         3414 +1         xrl             G,  #16             
                    3415 +1         IF (-1 <> -1)
                    3416 +1             mov   A,  -1         
                    3417 +1             xrl   G,  A          
                    3418 +1         ENDIF    
0E86 E53C           3419 +1         mov   A,  G              
                    3420 +2         LCJNE A,  #7, CFCERR     
0E88 B40703         3421 +2         cjne    A, #7, $+6
0E8B 020E91         3422 +2         jmp     $+6
0E8E 020FF2         3423 +2         ljmp    CFCERR
0E91 00             3424 +2         nop
                    3425 +1         IF (-1 <> -1)
                    3426 +1             mov         D1, #-1     
                    3427 +1         ELSE
0E92 753D20         3428 +1             mov         D1, #32        
                    3429 +1         ENDIF                    
                    3430 +1         IF (-1 <> -1)
DEBUG                                                                                                         PAGE 61

                    3431 +1             mov         D2, #-1     
                    3432 +1         ELSE
0E95 753E20         3433 +1             mov         D2, #32        
                    3434 +1         ENDIF                    
0E98 7407           3435 +1         mov       A, #7
0E9A 1211F5         3436 +1         lcall     PRINTCHAR        
                    3438            ;--------------------------
                    3439 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3440 +1                                         
0E9D C3             3441 +1         clr     C                       
0E9E 7400           3442 +1         mov     A, #0h                  
0EA0 7213           3443 +1         orl     C, PI3D      
0EA2 B00E           3444 +1         anl     C, /DPZK                
0EA4 7243           3445 +1         orl     C, PKI3          
0EA6 B05B           3446 +1         anl     C, /ERRF3_D 
0EA8 720F           3447 +1         orl     C, DPK                  
0EAA 7238           3448 +1         orl     C, STOPPED              
0EAC 3400           3449 +1         addc    A, #0h                  
0EAE 7050           3451            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3452 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0EB0 E522           3453 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0EB2 33             3454 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0EB3 547E           3455 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3456 +1 
                    3457 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3458 +2         ANLB    ACC.2, ERRF2_D  ; |
0EB5 A2E2           3459 +2         mov   C, ACC.2
0EB7 B05A           3460 +2         anl   C, /ERRF2_D
0EB9 92E2           3461 +2         mov   ACC.2, C
                    3462 +2         ANLB    ACC.3, ERRF2_D  ; |
0EBB A2E3           3463 +2         mov   C, ACC.3
0EBD B05A           3464 +2         anl   C, /ERRF2_D
0EBF 92E3           3465 +2         mov   ACC.3, C
                    3466 +2         ANLB    ACC.4, ERRF3_D  ; |
0EC1 A2E4           3467 +2         mov   C, ACC.4
0EC3 B05B           3468 +2         anl   C, /ERRF3_D
0EC5 92E4           3469 +2         mov   ACC.4, C
                    3470 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3471 +1 
0EC7 7805           3472 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3473 +1  ; LL1: 
0EC9 6006           3474 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0ECB C3             3475 +1         clr     C               ; Inak shiftnem o 2
0ECC 33             3476 +1         rlc     A               ;
0ECD C3             3477 +1         clr     C               ;
0ECE 33             3478 +1         rlc     A               ;
0ECF D8F8           3479 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3480 +1 ; LL2:
0ED1 E8             3481 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3483 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0ED2 B40303         3484 +1         cjne    A, #3, $+6
DEBUG                                                                                                         PAGE 62

0ED5 020EDB         3485 +1         jmp     $+6
0ED8 020F0A         3486 +1         ljmp    DOWN4_MB1
0EDB 00             3487 +1         nop
                    3489 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0EDC 7405           3490 +1         mov     A, #5
0EDE C3             3491 +1         clr     C
0EDF 9403           3492 +1         subb    A, #3
0EE1 F8             3493 +1         mov     R0, A
0EE2 E528           3494 +1         mov     A, INPORTA
0EE4 541E           3495 +1         anl     A, #00011110b
0EE6 852BF0         3496 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0EE9 53F00C         3497 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0EEC 63F0FF         3498 +1         xrl     B, #0FFH
0EEF 55F0           3499 +1         anl     A, B
0EF1 C3             3500 +1         clr     C
0EF2 33             3501 +1         rlc     A
0EF3 C3             3502 +1         clr     C
0EF4 33             3503 +1         rlc     A
0EF5 C3             3504 +1         clr     C
0EF6 33             3505 +1         rlc     A
                    3506 +1 ;LL1   
0EF7 C3             3507 +1         clr     C
0EF8 33             3508 +1         rlc     A
0EF9 D8FC           3509 +1         djnz    R0, $-2;LL1
0EFB 6003           3511            jz      D4_MB2C         ; |   ak neni zastavujem          
0EFD 020F0A         3512            ljmp    DOWN4_MB1       ;-; |       
0F00 D223           3513    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0F02 C222           3514            clr     FAST            ; 
0F04 12116D         3515            lcall   WRITEPORTS      ;
0F07 020F53         3516            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3517            
                    3518            
0F0A                3519    DOWN4_MB1:    
                    3520            ;--------------------------
                    3521 +1         CFCSS     25, 30, 20, 0, -1
0F0A 633C1E         3522 +1         xrl             G,  #30             
                    3523 +1         IF (-1 <> -1)
                    3524 +1             mov   A,  -1         
                    3525 +1             xrl   G,  A          
                    3526 +1         ENDIF    
0F0D E53C           3527 +1         mov   A,  G              
                    3528 +2         LCJNE A,  #25, CFCERR     
0F0F B41903         3529 +2         cjne    A, #25, $+6
0F12 020F18         3530 +2         jmp     $+6
0F15 020FF2         3531 +2         ljmp    CFCERR
0F18 00             3532 +2         nop
                    3533 +1         IF (20 <> -1)
0F19 753D14         3534 +1             mov         D1, #20     
                    3535 +1         ELSE
                    3536 +1             mov         D1, #32        
                    3537 +1         ENDIF                    
                    3538 +1         IF (0 <> -1)
0F1C 753E00         3539 +1             mov         D2, #0     
                    3540 +1         ELSE
                    3541 +1             mov         D2, #32        
                    3542 +1         ENDIF                    
DEBUG                                                                                                         PAGE 63

0F1F 7419           3543 +1         mov       A, #25
0F21 1211F5         3544 +1         lcall     PRINTCHAR        
                    3546            ;--------------------------
0F24 121106         3547    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3548 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0F27 200C03         3549 +1         jb      SKRD, $+6
0F2A 020FA6         3550 +1         ljmp    ERR_SKRD
0F2D 00             3551 +1         nop
                    3553 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3554 +1                                                                                             
                                                                                                                 
                    3555 +1                                                                                             
                                                                                                                 
                    3556 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3557 +1         COUNT    SET    COUNT+1                   
                    3558 +1         
0F2E 200A1B         3559 +1         jb      MB2, ENDD18
0F31 304304         3560 +1         jnb     PKI3, $+7
0F34 C222           3561 +1         clr     FAST
0F36 D223           3562 +1         setb    SLOW
0F38 D238           3563 +1         setb    STOPPED         
0F3A D253           3564 +1         setb    ERRF3_U
0F3C D25B           3565 +1         setb    ERRF3_D
0F3E 0537           3566 +1         inc     ERRF3_C
0F40 C21B           3567 +1                 clr     PKO3                               
0F42 C22C           3568 +1         clr     PO3U            
0F44 C22B           3569 +1         clr     PO3D              
0F46 12116D         3570 +1                 lcall   WRITEPORTS
0F49 020B69         3571 +1         ljmp    DOWN3_MB2
0F4C                3572 +1 ENDD18:
0F4C 00             3573 +1         nop
0F4D 2009D4         3575            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3576    ;        CLR_FLOOR_ERR   ERRF3
                    3577    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3578    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3579    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3580    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3581    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3582    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3583    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
0F50 020AF4         3584            ljmp    DOWN3         ;-; |       
                    3585    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3586    ;        setb    DOWNOld         ;       (a zalohuj)
                    3587    ;        clr     UPOld           ;       (a zalohuj)
                    3588    ;        clr     FAST            ; 
                    3589    ;        lcall   WRITEPORTS      ; 
                    3590    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3591    
                    3592                    
0F53                3593    DOWN4_STOP:    
                    3594            ;--------------------------
                    3595 +1         CFCSS     13, 10, 0, -1, -1
DEBUG                                                                                                         PAGE 64

0F53 633C0A         3596 +1         xrl             G,  #10             
                    3597 +1         IF (-1 <> -1)
                    3598 +1             mov   A,  -1         
                    3599 +1             xrl   G,  A          
                    3600 +1         ENDIF    
0F56 E53C           3601 +1         mov   A,  G              
                    3602 +2         LCJNE A,  #13, CFCERR     
0F58 B40D03         3603 +2         cjne    A, #13, $+6
0F5B 020F61         3604 +2         jmp     $+6
0F5E 020FF2         3605 +2         ljmp    CFCERR
0F61 00             3606 +2         nop
                    3607 +1         IF (0 <> -1)
0F62 753D00         3608 +1             mov         D1, #0     
                    3609 +1         ELSE
                    3610 +1             mov         D1, #32        
                    3611 +1         ENDIF                    
                    3612 +1         IF (-1 <> -1)
                    3613 +1             mov         D2, #-1     
                    3614 +1         ELSE
0F65 753E20         3615 +1             mov         D2, #32        
                    3616 +1         ENDIF                    
0F68 740D           3617 +1         mov       A, #13
0F6A 1211F5         3618 +1         lcall     PRINTCHAR        
                    3620            ;--------------------------
0F6D 121106         3621    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3622 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0F70 200C03         3623 +1         jb      SKRD, $+6
0F73 020FA6         3624 +1         ljmp    ERR_SKRD
0F76 00             3625 +1         nop
                    3627 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3628 +1                                                                                             
                                                                                                                 
                    3629 +1                                                                                             
                                                                                                                 
                    3630 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3631 +1         COUNT    SET    COUNT+1                   
                    3632 +1         
0F77 200A1B         3633 +1         jb      MB2, ENDD19
0F7A 304304         3634 +1         jnb     PKI3, $+7
0F7D C222           3635 +1         clr     FAST
0F7F D223           3636 +1         setb    SLOW
0F81 D238           3637 +1         setb    STOPPED         
0F83 D253           3638 +1         setb    ERRF3_U
0F85 D25B           3639 +1         setb    ERRF3_D
0F87 0537           3640 +1         inc     ERRF3_C
0F89 C21B           3641 +1                 clr     PKO3                               
0F8B C22C           3642 +1         clr     PO3U            
0F8D C22B           3643 +1         clr     PO3D              
0F8F 12116D         3644 +1                 lcall   WRITEPORTS
0F92 020B69         3645 +1         ljmp    DOWN3_MB2
0F95                3646 +1 ENDD19:
0F95 00             3647 +1         nop
0F96 2009D4         3649            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3650    ;        CLR_FLOOR_ERR   ERRF3
0F99 C221           3651            clr     DOWN            ; zastav motor
0F9B D23B           3652            setb    DOWNOld         ;       (a zalohuj)
DEBUG                                                                                                         PAGE 65

0F9D C23A           3653            clr     UPOld           ;       (a zalohuj)
0F9F C222           3654            clr     FAST            ; 
0FA1 12116D         3655            lcall   WRITEPORTS      ; 
0FA4 015C           3656            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3657      
                    3658      
                    3659      
                    3660    
                    3661            
0FA6                3662    ERR_SKRD:    
0FA6 C221           3663            clr     DOWN            ; zastav motor
0FA8 C222           3664            clr     FAST            ; 
0FAA 12116D         3665            lcall   WRITEPORTS      ; 
0FAD 901369         3666            mov     DPTR, #STR_ERR_SKRD         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
0FB0 1211A8         3667            lcall   DISPSTR         ;
                    3668            ; Nastavenie spravneho priznaku G a D     
0FB3 753C1E         3669            mov     G, #30          ;
0FB6 753D00         3670            mov     D1, #0           ;
0FB9 753E00         3671            mov     D2, #0           ;
0FBC 020110         3672            ljmp    FLOOR1    
                    3673            
0FBF                3674    ERR_SKRH: 
0FBF C222           3675            clr     FAST            ; zastav motor
0FC1 C223           3676            clr     SLOW            ; 
0FC3 12116D         3677            lcall   WRITEPORTS      ; 
0FC6 90132E         3678            mov     DPTR, #STR_ERR_SKRH         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
0FC9 1211A8         3679            lcall   DISPSTR         ;
                    3680            ; Nastavenie spravneho priznaku G a D     
0FCC 753C05         3681            mov     G, #5           ;
0FCF 753D00         3682            mov     D1, #0           ;
0FD2 753E00         3683            mov     D2, #0           ;
0FD5 020CF7         3684            ljmp    FLOOR4 
                    3685            
0FD8                3686    ERRFLOOR:
0FD8 C222           3687            clr     FAST            ; zastav motor
0FDA C223           3688            clr     SLOW            ; 
0FDC 12116D         3689            lcall   WRITEPORTS      ; 
0FDF 9013A4         3690            mov     DPTR, #STR_ERR_FLOOR         ; vypis info o neocakavanom pohnuti sa kabiny z
                                                                                poschodia
0FE2 1211A8         3691            lcall   DISPSTR         ;
                    3692            ; rozblikaj vsetky LEDky
                    3693            ; pockaj kym vsetci vystupia
                    3694            ; pockaj este 3 sakundy
                    3695 +1         TIMER2  60
0FE5 752D3C         3696 +1            mov           T2_C, #60                              
0FE8 C262           3697 +1                  clr       T2_F                                  
0FEA D2CA           3698 +1                  setb      TR2                                             
0FEC 3062FD         3700            jnb               T2_F, $                       ; 
                    3701            ;zresetuj
0FEF 020033         3702            ljmp     START
                    3703            
                    3704    
                    3705               
0FF2                3706    CFCERR:
0FF2 C220           3707            clr     UP              ; zastav motor
0FF4 C221           3708            clr     DOWN            ; 
DEBUG                                                                                                         PAGE 66

0FF6 C222           3709            clr     FAST            ; 
0FF8 C223           3710            clr     SLOW            ; 
0FFA 12116D         3711            lcall   WRITEPORTS      ; 
0FFD 9013E7         3712            mov     DPTR, #STR_ERR_CFC         ; vypis info o zisteni chyby toku programu
1000 1211A8         3713            lcall   DISPSTR         ;
                    3714                    
1003                3715    ENDPROG:
                    3716 +1         TIMER2  20
1003 752D14         3717 +1            mov           T2_C, #20                              
1006 C262           3718 +1                  clr       T2_F                                  
1008 D2CA           3719 +1                  setb      TR2                                             
100A 3062FD         3721            jnb     T2_F, $
100D D218           3722            setb    KS
100F 12116D         3723            call    WRITEPORTS     
                    3724 +1         TIMER2  20
1012 752D14         3725 +1            mov           T2_C, #20                              
1015 C262           3726 +1                  clr       T2_F                                  
1017 D2CA           3727 +1                  setb      TR2                                             
1019 3062FD         3729            jnb     T2_F, $
101C C218           3730            clr     KS
101E 12116D         3731            call    WRITEPORTS
1021 80E0           3732            jmp     ENDPROG 
                    3733    
1023 22             3734            ret
                    3735            
                    3736            
                    3737            
                    3738    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3739    ; INT_TIMER0
                    3740    ; Obsluha prerusenia timera 0
                    3741    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
1024                3742    INT_TIMER0:
1024 C0D0           3743            push    PSW
1026 C0E0           3744            push    ACC
1028 C0F0           3745            push    B
102A C080           3746            push    P0
102C C090           3747            push    P1
102E C0A0           3748            push    P2
1030 C0B0           3749            push    P3
                    3750            ;push    OUTPORTC
                    3751            
1032 E52E           3752            mov     A, T0_C ;R5
1034 152E           3753            dec     T0_C    ;R5
1036 6002           3754            jz      INT_TIMER0_MAIN    
1038 8021           3755            sjmp    INT_TIMER0_END
103A                3756    INT_TIMER0_MAIN:
103A 7414           3757            mov     A, #TIMER0CONST;R6
103C F52E           3758            mov     T0_C, A ;R5, A
103E E52A           3759            mov     A, ERRFLOOR_U
1040 452B           3760            orl     A, ERRFLOOR_D
1042 541E           3761            anl     A, #00011110b
1044 23             3762            rl      A
1045 23             3763            rl      A
1046 23             3764            rl      A    
1047 6224           3765            xrl     OUTPORTB, A     
                    3766                          
1049 C2AF           3767            clr    EA
104B 852480         3768            mov     p0, OUTPORTB 
DEBUG                                                                                                         PAGE 67

104E 75A0C1         3769            mov     p2, #i8255OUTB
1051 C2B6           3770            clr     WRNOT
1053 00             3771            nop
1054 00             3772            nop
1055 00             3773            nop
1056 00             3774            nop
1057 D2B6           3775            setb    WRNOT
1059 D2AF           3776            setb    EA
                    3777         
105B                3778    INT_TIMER0_END:
                    3779            ;pop     OUTPORTC
105B D0B0           3780            pop     P3
105D D0A0           3781            pop     P2
105F D090           3782            pop     P1
1061 D080           3783            pop     P0 
1063 D0F0           3784            pop     B       
1065 D0E0           3785            pop     ACC
1067 D0D0           3786            pop     PSW
1069 32             3787            reti 
                    3788            
                    3789    ;INT_TIMER0:
                    3790    ;        push    ACC
                    3791    ;        mov     A, R7  
                    3792    ;        dec     R7               
                    3793    ;        jnz     INT_TIMER0_END     
                    3794    ;        mov     R7, #20h
                    3795    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    3796    ;        setb    LEDU
                    3797    ;        setb    LEDD
                    3798    ;        jmp     INT_TIMER0_WRITE
                    3799    ;INT_TIMER0_CLEAR:        
                    3800    ;        ;clr     LEDU
                    3801    ;        ;clr     LEDD
                    3802    ;INT_TIMER0_WRITE: 
                    3803    ;        lcall   WRITEPORTS
                    3804    ;INT_TIMER0_END: 
                    3805    ;        setb    LEDU
                    3806    ;        lcall   WRITEPORTS       
                    3807    ;        pop     ACC
                    3808    ;        reti
                    3809            
                    3810            
                    3811    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    3812    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    3813    ; 11.0592MHz/2000 = zdrzanie 1 ms
106A                3814    TIME10MS:
106A C0D0           3815            push    PSW
106C C001           3816            push    1 ;R1
106E C002           3817            push    2 ;R2
                    3818    
                    3819    ;        mov     R1,#063h        ; 2
                    3820    ;                                ; *** 100x
                    3821    ;TIME0:  mov     R2,#0FFh        ; 2 
                    3822    ;TIME1:  djnz    R2,TIME1        ; 256*2   
                    3823    ;        mov     R2,#0FFh        ; 2       
                    3824    ;TIME2:  djnz    R2,TIME2        ; 256*2 
                    3825    ;        mov     R2,#024h        ; 2       
                    3826    ;TIME3:  djnz    R2,TIME3        ; 36*2
DEBUG                                                                                                         PAGE 68

                    3827    ;        nop                     ; 1
                    3828    ;        djnz    R1,TIME0        ; 2
                    3829    ;                                ; ***
                    3830    ;        mov     R1,#02Ah        ; 2 
                    3831    ;TIME4:  djnz    R1,TIME4        ; 43*2
                    3832    
                    3833 +1         TIMER2  1
1070 752D01         3834 +1            mov           T2_C, #1                              
1073 C262           3835 +1                  clr       T2_F                                  
1075 D2CA           3836 +1                  setb      TR2                                             
1077                3838    TIME:   ;mov     WDTRST, #01Eh
                    3839            ;mov     WDTRST, #0E1h
1077 30CA03         3840            jnb     TR2, TIMEEND 
107A 3062FA         3841            jnb               T2_F, TIME                                     ;pockame, kym prejd
                                                                               e 50-100 ms. 
107D                3842    TIMEEND:          
107D D002           3843            pop     2 ;R2
107F D001           3844            pop     1 ;R1
1081 D0D0           3845            pop     PSW
1083 22             3846            ret                     ; koniec
                    3847            
                    3848            
                    3849    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3850    ; STOP
                    3851    ; osetri stlacenie tlacidla STOP
                    3852    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1084                3853    STOP:
1084 C0D0           3854            push    PSW
1086 C0E0           3855            push    ACC
                    3856            
                    3857            
1088 D238           3858            setb    STOPPED
108A C222           3859            clr     FAST
108C C223           3860            clr     SLOW
108E 74E1           3861            mov     A, #11100001b
1090 5223           3862            anl     OUTPORTA, A 
1092 C025           3863            push    OUTPORTC     ; ulozenie stavu smerovej signalizacie
1094 D22F           3864            setb    LEDU
1096 D22E           3865            setb    LEDD
1098 12116D         3866            lcall   WRITEPORTS
                    3867            
                    3868            ;lcall   WAITFORTIMER
                    3869 +1         TIMER2  40
109B 752D28         3870 +1            mov           T2_C, #40                              
109E C262           3871 +1                  clr       T2_F                                  
10A0 D2CA           3872 +1                  setb      TR2                                             
10A2 1210C2         3874    STOPC:  lcall   READPORTS1
10A5 E528           3875            mov     A, INPORTA
10A7 541E           3876            anl     A, #00011110b
10A9 60F7           3877            jz      STOPC
10AB 3062F4         3878            jnb     T2_F, STOPC 
                    3879                 
                    3880                 
10AE C22F           3881            clr     LEDU        
10B0 C22E           3882            clr     LEDD     
10B2 D0E0           3883            pop     ACC         ; obnovenie stavu smerovej signalizacie  
10B4 55C0           3884            anl     A, 0C0h
10B6 4225           3885            orl     OUTPORTC, A
DEBUG                                                                                                         PAGE 69

                    3886            
10B8 D223           3887            setb    SLOW
10BA 12116D         3888            lcall   WRITEPORTS
                    3889            
                    3890            
10BD D0E0           3891            pop    ACC
10BF D0D0           3892            pop    PSW
10C1 22             3893            ret        
                    3894            
                    3895    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3896    ; READPORTS1
                    3897    ; precita nove hodnoty na portoch
                    3898    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10C2                3899    READPORTS1:
10C2 C0D0           3900            push    PSW
10C4 C2AF           3901            clr     EA                  ;Treba zakazat prerusenia
                    3902            
                    3903            ;mov     WDTRST, #01Eh
                    3904            ;mov     WDTRST, #0E1h
                    3905            
10C6 75A080         3906            mov     p2, #i8255INA       ; citaj data z portu A
10C9 75803F         3907            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
10CC C2B7           3908            clr     RDNOT
10CE 00             3909            nop
10CF 00             3910            nop
10D0 00             3911            nop
10D1 00             3912            nop
10D2 858028         3913            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
10D5 D2B7           3914            setb    RDNOT
                    3915            
10D7 75A081         3916            mov     p2, #i8255INB       ; citaj data z portu B
10DA 7580FE         3917            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
10DD C2B7           3918            clr     RDNOT
10DF 00             3919            nop
10E0 00             3920            nop
10E1 00             3921            nop
10E2 00             3922            nop
10E3 858021         3923            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
10E6 D2B7           3924            setb    RDNOT
                    3925    
10E8 75A082         3926            mov     p2, #i8255INC       ; citaj data z portu C
10EB 75803F         3927            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
10EE C2B7           3928            clr     RDNOT
10F0 00             3929            nop
10F1 00             3930            nop
10F2 00             3931            nop
10F3 00             3932            nop
10F4 858022         3933            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
10F7 D2B7           3934            setb    RDNOT
10F9 00             3935            nop
10FA 00             3936            nop
10FB 00             3937            nop
10FC 00             3938            nop
10FD 00             3939            nop
10FE 00             3940            nop
10FF 00             3941            nop
1100 00             3942            nop
DEBUG                                                                                                         PAGE 70

1101 D2AF           3943            setb    EA                 ;znovu spustime prerusenia .
1103 D0D0           3944            pop     PSW
1105 22             3945            ret
                    3946    
                    3947    
                    3948    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3949    ; READPORTS
                    3950    ; precita nove hodnoty na portoch
                    3951    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1106                3952    READPORTS:
1106 C0D0           3953            push    PSW
1108 C0E0           3954            push    ACC
                    3955    
110A C2AF           3956            clr     EA                  ;Treba zakazat prerusenia
                    3957            
                    3958            ;mov     WDTRST, #01Eh
                    3959            ;mov     WDTRST, #0E1h
                    3960            
110C 75A080         3961            mov     p2, #i8255INA       ; citaj data z portu A
110F 75803F         3962            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
1112 C2B7           3963            clr     RDNOT
1114 00             3964            nop
1115 00             3965            nop
1116 00             3966            nop
1117 00             3967            nop
1118 858028         3968            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
111B D2B7           3969            setb    RDNOT
                    3970            
111D 75A081         3971            mov     p2, #i8255INB       ; citaj data z portu B
1120 7580FE         3972            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1123 C2B7           3973            clr     RDNOT
1125 00             3974            nop
1126 00             3975            nop
1127 00             3976            nop
1128 00             3977            nop
1129 858021         3978            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
112C D2B7           3979            setb    RDNOT
                    3980    
112E 75A082         3981            mov     p2, #i8255INC       ; citaj data z portu C
1131 75803F         3982            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1134 C2B7           3983            clr     RDNOT
1136 00             3984            nop
1137 00             3985            nop
1138 00             3986            nop
1139 00             3987            nop
113A 858022         3988            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
113D D2B7           3989            setb    RDNOT
113F 00             3990            nop
1140 00             3991            nop
1141 00             3992            nop
1142 00             3993            nop
1143 00             3994            nop
1144 00             3995            nop
1145 00             3996            nop
1146 00             3997            nop
1147 D2AF           3998            setb    EA                 ;znovu spustime prerusenia
                    3999            
DEBUG                                                                                                         PAGE 71

                    4000            
                    4001            
                    4002            
1149 300F04         4003            jnb     DPK, READPORTS_C1
114C C222           4004            clr     FAST
114E D223           4005            setb    SLOW
1150                4006    READPORTS_C1:         
1150 204003         4007            jb      STOPNOT, READPORTS_C
1153 121084         4008            lcall   STOP
1156                4009    READPORTS_C:        
1156 E528           4010            mov     A, INPORTA
1158 541E           4011            anl     A, #00011110b
115A 4223           4012            orl     OUTPORTA, A
115C 12116D         4013            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
115F E522           4014            mov     A, INPORTC
1161 543F           4015            anl     A, #00111111b
1163 4225           4016            orl     OUTPORTC, A
1165 12116D         4017            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    4018            
1168 D0E0           4019            pop    ACC
116A D0D0           4020            pop    PSW
116C 22             4021            ret
                    4022            
                    4023    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4024    ; WRITEPORTS
                    4025    ; spravi zalohu vystupnych registrov a posle data von
                    4026    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
116D                4027    WRITEPORTS:
116D C0D0           4028            push    PSW
116F C2AF           4029            clr     EA                  ;Treba zakazat prerusenia
                    4030            
1171 852380         4031            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
1174 75A0C0         4032            mov     p2, #i8255OUTA
1177 C2B6           4033            clr     WRNOT
1179 00             4034            nop
117A 00             4035            nop
117B 00             4036            nop
117C 00             4037            nop
117D D2B6           4038            setb    WRNOT
                    4039            
117F 852480         4040            mov     p0, OUTPORTB        ; potom port B
1182 75A0C1         4041            mov     p2, #i8255OUTB
1185 C2B6           4042            clr     WRNOT
1187 00             4043            nop
1188 00             4044            nop
1189 00             4045            nop
118A 00             4046            nop
118B D2B6           4047            setb    WRNOT
                    4048    
118D 852580         4049            mov     p0, OUTPORTC        ; a nakoniec port C
1190 75A0C2         4050            mov     p2, #i8255OUTC
1193 C2B6           4051            clr     WRNOT
1195 00             4052            nop
1196 00             4053            nop
1197 00             4054            nop
1198 00             4055            nop
1199 D2B6           4056            setb    WRNOT
119B 00             4057            nop
DEBUG                                                                                                         PAGE 72

119C 00             4058            nop
119D 00             4059            nop
119E 00             4060            nop
119F 00             4061            nop
11A0 00             4062            nop
11A1 00             4063            nop
11A2 00             4064            nop
11A3 D2AF           4065            setb     EA                  ;Treba zakazat prerusenia
11A5 D0D0           4066            pop     PSW
11A7 22             4067            ret
                    4068    
                    4069    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4070    
                    4071    
                    4072    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4073    ; DISPSTR
                    4074    ; posle na seriovu linku retazec na adrese DPTR
                    4075    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11A8                4076    DISPSTR:
11A8 C0D0           4077            push    PSW
11AA C0E0           4078            push    ACC
11AC C083           4079            push    DPH
11AE C082           4080            push    DPL
11B0                4081    DSPS_LOOP: 
                    4082            ;mov     WDTRST, #01Eh
                    4083            ;mov     WDTRST, #0E1h          
11B0 E4             4084            clr     A
11B1 93             4085            movc    A, @A+DPTR
11B2 6006           4086            jz      DSPS_END
                    4087            ;jnb     TI, $ 
                    4088            ;clr     TI
                    4089            ;mov     SBUF, A
                    4090            
11B4 1211F5         4091            lcall   PRINTCHAR
11B7 A3             4092            inc     DPTR
11B8 80F6           4093            sjmp    DSPS_LOOP
11BA                4094    DSPS_END:
11BA D082           4095            pop     DPL
11BC D083           4096            pop     DPH
11BE D0E0           4097            pop     ACC
11C0 D0D0           4098            pop     PSW
11C2 22             4099            ret
                    4100            
                    4101    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4102    ; DISPSTR - no wdt
                    4103    ; posle na seriovu linku retazec na adrese DPTR
                    4104    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11C3                4105    DISPSTRNOWDT:
11C3 C0D0           4106            push    PSW
11C5 C0E0           4107            push    ACC
11C7 C083           4108            push    DPH
11C9 C082           4109            push    DPL
11CB                4110    DSPSNWDT_LOOP:           
11CB E4             4111            clr     A
11CC 93             4112            movc    A, @A+DPTR
11CD 6006           4113            jz      DSPSNWDT_END
                    4114            ;jnb     TI, $ 
                    4115            ;clr     TI
DEBUG                                                                                                         PAGE 73

                    4116            ;mov     SBUF, A
11CF 1211F5         4117            lcall   PRINTCHAR
11D2 A3             4118            inc     DPTR
11D3 80F6           4119            sjmp    DSPSNWDT_LOOP
11D5                4120    DSPSNWDT_END:
11D5 D082           4121            pop     DPL
11D7 D083           4122            pop     DPH
11D9 D0E0           4123            pop     ACC
11DB D0D0           4124            pop     PSW
11DD 22             4125            ret
                    4126                                         
                    4127                                         
                =1  4128            $include (procLib.inc)     
                =1  4129    ;*******************************************************************************
                =1  4130    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  4131    ;-------------------------------------------------------------------------------
                =1  4132    ;
                =1  4133    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  4134    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  4135    ;     a nastavi sa priznak <T2_F>
                =1  4136    ; 
                =1  4137    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  4138    ;
                =1  4139    ;                mov             T2_C, #60                               ;3 sekundy
                =1  4140    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  4141    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  4142    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  4143    ;
                =1  4144    ;
                =1  4145    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
11DE            =1  4146    INT_TIMER2:
11DE C2CF       =1  4147                        clr     TF2
11E0 C0E0       =1  4148            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  4149                       
11E2 E52D       =1  4150            mov     A, T2_C                             ;
11E4 6005       =1  4151            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
11E6 14         =1  4152                        dec           A                 ; dekrementovanie registra T2_C 
11E7 F52D       =1  4153            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  4154                        
11E9 8007       =1  4155            sjmp    INT_TIMER2_END          ;
11EB            =1  4156    INT_TIMER2_MAIN:
11EB C2CA       =1  4157                        clr           TR2                                         ; zastavime po
                                                                               citadlo
11ED 752D00     =1  4158            mov     T2_C, #0                            ; Resetujeme pocitadlo
11F0 D262       =1  4159                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
11F2            =1  4160    INT_TIMER2_END:     
11F2 D0E0       =1  4161            pop     ACC                                     
11F4 32         =1  4162            reti 
                =1  4163            
                =1  4164            
                =1  4165    ;*******************************************************************************
                =1  4166    ;   Vypis znaku na seriovu linku
DEBUG                                                                                                         PAGE 74

                =1  4167    ;-------------------------------------------------------------------------------
                =1  4168    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4169    ;
11F5            =1  4170    PRINTCHAR:
11F5 3099FD     =1  4171        jnb     TI, $ 
11F8 C299       =1  4172        clr     TI
                =1  4173    ;_1: JBC   TRE, _2
                =1  4174    ;    JMP   _1
                =1  4175    ;_2:  
11FA F599       =1  4176                    mov     SBUF, A
                =1  4177        ;setb    EA
11FC 22         =1  4178        ret
                =1  4179        
                =1  4180    ;*******************************************************************************
                =1  4181    ;   Nacitanie znaku zo seriovej linky
                =1  4182    ;-------------------------------------------------------------------------------
                =1  4183    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4184    ;    
11FD            =1  4185    READCHAR:
11FD 3098FD     =1  4186                    jnb     RI, $
1200 C298       =1  4187        clr     RI
1202 E599       =1  4188        mov     A, SBUF
1204 22         =1  4189        ret
                =1  4190    
                =1  4191    
                =1  4192        
                =1  4193                    
                    4194    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4195    
1205 0D0A5269       4196    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
1209 61646961   
120D 63692073   
1211 79737465   
1215 6D206A65   
1219 20696E69   
121D 6369616C   
1221 697A6F76   
1225 616E792E   
1229 0D0A00     
122C 0D0A5A61       4197    STR_WDT:          db  0dh, 0ah, 'Zapinam WDT...', 0dh, 0ah, 00h
1230 70696E61   
1234 6D205744   
1238 542E2E2E   
123C 0D0A00     
123F 0D0A4361       4198    STR_RESET:          db  0dh, 0ah, 'Cakam 10 sekund...', 0dh, 0ah, 00h
1243 6B616D20   
1247 31302073   
124B 656B756E   
124F 642E2E2E   
1253 0D0A00     
1256 52696164       4199    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
125A 69616369   
125E 20737973   
1262 74656D20   
1266 6A652072   
126A 65696E69   
126E 6369616C   
DEBUG                                                                                                         PAGE 75

1272 697A6F76   
1276 616E7920   
127A 706F2073   
127E 746C6163   
1282 656E6920   
1286 746C6163   
128A 69646C61   
128E 2053544F   
1292 502E0D0A   
1296 00         
1297 4B616C69       4200    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
129B 62726163   
129F 69612076   
12A3 79746168   
12A7 75206A65   
12AB 20756B6F   
12AF 6E63656E   
12B3 612E0D0A   
12B7 00         
12B8 43687962       4201    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
12BC 61212056   
12C0 79706164   
12C4 6C612073   
12C8 706F6D61   
12CC 6C6F7661   
12D0 63696120   
12D4 636C6F6E   
12D8 6B61210D   
12DC 0A00       
12DE 43687962       4202    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
12E2 61212056   
12E6 79706164   
12EA 6C692064   
12EE 76652073   
12F2 706F6D61   
12F6 6C6F7661   
12FA 63696520   
12FE 636C6F6E   
1302 6B79210D   
1306 0A00       
1308 43687962       4203    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
130C 61212056   
1310 79706164   
1314 6C61207A   
1318 61737461   
131C 766F7661   
1320 63696120   
1324 636C6F6E   
1328 6B61210D   
132C 0A00       
132E 43687962       4204    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
1332 6121204E   
1336 656F6361   
133A 6B617661   
133E 6E65206E   
1342 61636974   
1346 616E6965   
DEBUG                                                                                                         PAGE 76

134A 20686F72   
134E 6E656A20   
1352 73706F6D   
1356 616C6F76   
135A 6163656A   
135E 20636C6F   
1362 6E6B7921   
1366 0D0A00     
1369 43687962       4205    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
136D 6121204E   
1371 656F6361   
1375 6B617661   
1379 6E65206E   
137D 61636974   
1381 616E6965   
1385 20646F6C   
1389 6E656A20   
138D 73706F6D   
1391 616C6F76   
1395 6163656A   
1399 20636C6F   
139D 6E6B7921   
13A1 0D0A00     
13A4 43687962       4206    STR_ERR_FLOOR:     db  'Chyba! Neocakavane pohnutie kabyny z poschodia!', 0dh, 0ah, 00h
13A8 6121204E   
13AC 656F6361   
13B0 6B617661   
13B4 6E652070   
13B8 6F686E75   
13BC 74696520   
13C0 6B616279   
13C4 6E79207A   
13C8 20706F73   
13CC 63686F64   
13D0 6961210D   
13D4 0A00       
13D6 53707573       4207    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
13DA 74616D20   
13DE 4B54502E   
13E2 2E2E0D0A   
13E6 00         
13E7 446F736C       4208    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
13EB 6F206B20   
13EF 7A6D656E   
13F3 65204B54   
13F7 50210D0A   
13FB 00         
                    4209    
                    4210    
----                4211            DSEG
0050                4212            org     50h            ;Pozor!
0050                4213    STACK:  DS      10h
                    4214    
                    4215    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 77

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALIB. . . . . . . . . . . . . .  C ADDR  00C6H  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00DFH  
CALIBEND2. . . . . . . . . . . .  C ADDR  00EAH  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00D7H  
CFCERR . . . . . . . . . . . . .  C ADDR  0FF2H  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  084CH  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0C50H  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0F00H  
DISPSTR. . . . . . . . . . . . .  C ADDR  11A8H  
DISPSTRNOWDT . . . . . . . . . .  C ADDR  11C3H  NOT USED  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DEBUG                                                                                                         PAGE 78

DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  0717H  
DOWN2ERR . . . . . . . . . . . .  C ADDR  0775H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  0784H  
DOWN2_C. . . . . . . . . . . . .  C ADDR  0749H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  0825H  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  083FH  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  079EH  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  07C8H  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  07F4H  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  0804H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0AF4H  
DOWN3A . . . . . . . . . . . . .  C ADDR  0B26H  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0C5AH  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0C74H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0B69H  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0B93H  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0BD3H  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0CA3H  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0CBDH  
DOWN4. . . . . . . . . . . . . .  C ADDR  0DACH  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0DDAH  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0F0AH  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0F24H  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0E1DH  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0E43H  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0E83H  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  0F53H  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  0F6DH  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPH. . . . . . . . . . . . . . .  D ADDR  0083H  PREDEFINED  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPL. . . . . . . . . . . . . . .  D ADDR  0082H  PREDEFINED  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPSNWDT_END . . . . . . . . . .  C ADDR  11D5H  
DSPSNWDT_LOOP. . . . . . . . . .  C ADDR  11CBH  
DSPS_END . . . . . . . . . . . .  C ADDR  11BAH  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  11B0H  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  021BH  
ENDD1. . . . . . . . . . . . . .  C ADDR  0284H  
ENDD10 . . . . . . . . . . . . .  C ADDR  09FCH  
ENDD11 . . . . . . . . . . . . .  C ADDR  0A7CH  
ENDD12 . . . . . . . . . . . . .  C ADDR  0B4EH  
ENDD13 . . . . . . . . . . . . .  C ADDR  0BBBH  
ENDD14 . . . . . . . . . . . . .  C ADDR  0C9CH  
ENDD15 . . . . . . . . . . . . .  C ADDR  0CE5H  
ENDD16 . . . . . . . . . . . . .  C ADDR  0E02H  
ENDD17 . . . . . . . . . . . . .  C ADDR  0E6BH  
ENDD18 . . . . . . . . . . . . .  C ADDR  0F4CH  
ENDD19 . . . . . . . . . . . . .  C ADDR  0F95H  
ENDD2. . . . . . . . . . . . . .  C ADDR  036CH  
ENDD3. . . . . . . . . . . . . .  C ADDR  03B5H  
ENDD4. . . . . . . . . . . . . .  C ADDR  0567H  
ENDD5. . . . . . . . . . . . . .  C ADDR  05D4H  
ENDD6. . . . . . . . . . . . . .  C ADDR  06BCH  
ENDD7. . . . . . . . . . . . . .  C ADDR  0705H  
DEBUG                                                                                                         PAGE 79

ENDD8. . . . . . . . . . . . . .  C ADDR  0771H  
ENDD9. . . . . . . . . . . . . .  C ADDR  07F0H  
ENDPROG. . . . . . . . . . . . .  C ADDR  1003H  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR . . . . . . . . . . . .  C ADDR  0FD8H  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERRSIG . . . . . . . . . . . . .  D ADDR  0041H  NOT USED  
ERRSKRD_C. . . . . . . . . . . .  D ADDR  0040H  NOT USED  
ERRSKRH_C. . . . . . . . . . . .  D ADDR  003FH  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  0FA6H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  0FBFH  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
F1C. . . . . . . . . . . . . . .  C ADDR  0186H  NOT USED  
F1OK . . . . . . . . . . . . . .  C ADDR  01B1H  
F1S. . . . . . . . . . . . . . .  C ADDR  0146H  
F2 . . . . . . . . . . . . . . .  C ADDR  04DFH  
F2DOWN . . . . . . . . . . . . .  C ADDR  04F9H  
F2OK . . . . . . . . . . . . . .  C ADDR  0457H  
F2S. . . . . . . . . . . . . . .  C ADDR  03FDH  
F2SW . . . . . . . . . . . . . .  C ADDR  049DH  
F2UP . . . . . . . . . . . . . .  C ADDR  04E5H  
F3 . . . . . . . . . . . . . . .  C ADDR  0974H  
F3DOWN . . . . . . . . . . . . .  C ADDR  098EH  
F3OK . . . . . . . . . . . . . .  C ADDR  08ECH  
F3S. . . . . . . . . . . . . . .  C ADDR  0892H  
F3SW . . . . . . . . . . . . . .  C ADDR  0932H  
F3UP . . . . . . . . . . . . . .  C ADDR  097AH  
F4OK . . . . . . . . . . . . . .  C ADDR  0D98H  
F4S. . . . . . . . . . . . . . .  C ADDR  0D2DH  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  0110H  
DEBUG                                                                                                         PAGE 80

FLOOR2 . . . . . . . . . . . . .  C ADDR  03C7H  
FLOOR3 . . . . . . . . . . . . .  C ADDR  085CH  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0CF7H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  1024H  
INT_TIMER0_END . . . . . . . . .  C ADDR  105BH  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  103AH  
INT_TIMER2 . . . . . . . . . . .  C ADDR  11DEH  
INT_TIMER2_END . . . . . . . . .  C ADDR  11F2H  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  11EBH  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  00FFH  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
MSG_LEN. . . . . . . . . . . . .  D ADDR  0042H  NOT USED  
MSG_PTR_H. . . . . . . . . . . .  D ADDR  0044H  NOT USED  
MSG_PTR_L. . . . . . . . . . . .  D ADDR  0043H  NOT USED  
MSG_PTR_REC. . . . . . . . . . .  D ADDR  0045H  NOT USED  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P1 . . . . . . . . . . . . . . .  D ADDR  0090H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
P3 . . . . . . . . . . . . . . .  D ADDR  00B0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
DEBUG                                                                                                         PAGE 81

PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  NOT USED  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  NOT USED  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
PRINTCHAR. . . . . . . . . . . .  C ADDR  11F5H  
PSW. . . . . . . . . . . . . . .  D ADDR  00D0H  PREDEFINED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READCHAR . . . . . . . . . . . .  C ADDR  11FDH  NOT USED  
READPORTS. . . . . . . . . . . .  C ADDR  1106H  
READPORTS1 . . . . . . . . . . .  C ADDR  10C2H  
READPORTS_C. . . . . . . . . . .  C ADDR  1156H  
READPORTS_C1 . . . . . . . . . .  C ADDR  1150H  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
RI . . . . . . . . . . . . . . .  B ADDR  0098H  PREDEFINED  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0050H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  1084H  
STOPC. . . . . . . . . . . . . .  C ADDR  10A2H  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  1297H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  13D6H  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  12B8H  NOT USED  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  12DEH  NOT USED  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  13E7H  
STR_ERR_FLOOR. . . . . . . . . .  C ADDR  13A4H  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  1369H  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  132EH  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  1308H  NOT USED  
STR_INIT . . . . . . . . . . . .  C ADDR  1205H  
STR_RESET. . . . . . . . . . . .  C ADDR  123FH  NOT USED  
STR_STOP . . . . . . . . . . . .  C ADDR  1256H  NOT USED  
STR_WDT. . . . . . . . . . . . .  C ADDR  122CH  NOT USED  
S_RI . . . . . . . . . . . . . .  B ADDR  0061H  NOT USED  
T0_C . . . . . . . . . . . . . .  D ADDR  002EH  
T0_F . . . . . . . . . . . . . .  B ADDR  0060H  NOT USED  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
T2MOD. . . . . . . . . . . . . .  D ADDR  00C9H  NOT USED  
DEBUG                                                                                                         PAGE 82

T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  0062H  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME . . . . . . . . . . . . . .  C ADDR  1077H  
TIME10MS . . . . . . . . . . . .  C ADDR  106AH  
TIMEEND. . . . . . . . . . . . .  C ADDR  107DH  
TIMER0CONST. . . . . . . . . . .    NUMB  0014H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
TRE. . . . . . . . . . . . . . .  B ADDR  0063H  NOT USED  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  0314H  
U2_MB2C. . . . . . . . . . . . .  C ADDR  0664H  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0AE4H  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  01C5H  
UP1A . . . . . . . . . . . . . .  C ADDR  01F3H  
UP1_MB1. . . . . . . . . . . . .  C ADDR  031EH  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  0344H  
UP1_MB2. . . . . . . . . . . . .  C ADDR  0236H  
UP1_MB2A . . . . . . . . . . . .  C ADDR  025CH  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  029CH  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  0373H  
UP1_STOP_C . . . . . . . . . . .  C ADDR  038DH  
UP2. . . . . . . . . . . . . . .  C ADDR  050DH  
UP2A . . . . . . . . . . . . . .  C ADDR  053FH  
UP2_MB1. . . . . . . . . . . . .  C ADDR  066EH  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  0694H  
UP2_MB2. . . . . . . . . . . . .  C ADDR  0582H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  05ACH  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  05ECH  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  06C3H  
UP2_STOP_C . . . . . . . . . . .  C ADDR  06DDH  
UP3. . . . . . . . . . . . . . .  C ADDR  09A2H  
UP3A . . . . . . . . . . . . . .  C ADDR  09D4H  
UP3ERR . . . . . . . . . . . . .  C ADDR  0A00H  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0A10H  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0AB1H  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0AD7H  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0A2AH  
UP3_MB2A . . . . . . . . . . . .  C ADDR  0A54H  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0A80H  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0A90H  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WDTRST . . . . . . . . . . . . .  D ADDR  00A6H  NOT USED  
WRITEPORTS . . . . . . . . . . .  C ADDR  116DH  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
