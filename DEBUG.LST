DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    41    i8255INA        equ     080h
  0081          =1    42    i8255INB        equ     081h
  0082          =1    43    i8255INC        equ     082h
  0083          =1    44    i8255INCW       equ     083h
  00C0          =1    45    i8255OUTA       equ     0c0h
  00C1          =1    46    i8255OUTB       equ     0c1h
  00C2          =1    47    i8255OUTC       equ     0c2h
  00C3          =1    48    i8255OUTCW      equ     0c3h
                =1    49    
  0028          =1    50    INPORTA         data    28h         ; nutne kvoli emulatoru!!!
  0021          =1    51    INPORTB         data    21h
  0022          =1    52    INPORTC         data    22h
  0023          =1    53    OUTPORTA        data    23h
  0024          =1    54    OUTPORTB        data    24h
  0025          =1    55    OUTPORTC        data    25h
  0026          =1    56    INPORTBold      data    26h
  0027          =1    57    CTRLREG         data    27h
                =1    58    
DEBUG                                                                                                         PAGE 2

  002A          =1    59    ERRFLOOR_U      data    2Ah
  002B          =1    60    ERRFLOOR_D      data    2Bh
                =1    61    
  002C          =1    62    T_F                       data    2Ch
  002D          =1    63    T2_C                    data      2Dh
  002E          =1    64    T2_R                    data      2Eh
  0062          =1    65    T2_F                    bit         T_F.2
                =1    66    
  0051          =1    67    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1    68    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1    69    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1    70    ERRF4_U         bit     ERRFLOOR_U.4  
                =1    71    
  0052          =1    72    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1    73    ERRF23_U        bit     ERRFLOOR_U.3
  0054          =1    74    ERRF34_U        bit     ERRFLOOR_U.4   
                =1    75    
  0059          =1    76    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1    77    ERRF2_D         bit     ERRFLOOR_D.2
  005B          =1    78    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1    79    ERRF4_D         bit     ERRFLOOR_D.4   
                =1    80    
  0059          =1    81    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1    82    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1    83    ERRF34_D        bit     ERRFLOOR_D.3    
                =1    84    
  0035          =1    85    ERRF1_C         data    35h
  0036          =1    86    ERRF2_C         data    36h
  0037          =1    87    ERRF3_C         data    37h
  0038          =1    88    ERRF4_C         data    38h
                =1    89    
  0039          =1    90    ERRF12_C        data    39h
  003A          =1    91    ERRF23_C        data    3Ah
  003B          =1    92    ERRF34_C        data    3Bh
                =1    93               
  0030          =1    94    POSITION        data    30h
  0031          =1    95    LOWEST          data    31h
  0032          =1    96    HIGHEST         data    32h
  0033          =1    97    STOPTIMER       data    33h
  0034          =1    98    OUTPORTBold     data    34h
                =1    99    
  003C          =1   100    G                       data    3Ch
  003D          =1   101    D1              data    3Dh
  003E          =1   102    D2          data    3Eh
                =1   103    
  0040          =1   104    STOPNOT         bit     INPORTA.0
  0041          =1   105    PKI1            bit     INPORTA.1
  0042          =1   106    PKI2            bit     INPORTA.2
  0043          =1   107    PKI3            bit     INPORTA.3
  0044          =1   108    PKI4            bit     INPORTA.4
  0045          =1   109    DOORCLSD        bit     INPORTA.5 
                =1   110    
  0009          =1   111    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   112    MB2             bit     INPORTB.2
  000B          =1   113    SKRH            bit     INPORTB.3
  000C          =1   114    SKRD            bit     INPORTB.4
  000D          =1   115    DP              bit     INPORTB.5
  000E          =1   116    DPZK            bit     INPORTB.6
DEBUG                                                                                                         PAGE 3

  000F          =1   117    DPK             bit     INPORTB.7
                =1   118    
  0031          =1   119    MB1old          bit     INPORTBold.1
  0032          =1   120    MB2old          bit     INPORTBold.2
  0033          =1   121    SKRHold         bit     INPORTBold.3
  0034          =1   122    SKRDold         bit     INPORTBold.4
                =1   123    
  0010          =1   124    PI1             bit     INPORTC.0
  0011          =1   125    PI2D            bit     INPORTC.1
  0012          =1   126    PI2U            bit     INPORTC.2
  0013          =1   127    PI3D            bit     INPORTC.3
  0014          =1   128    PI3U            bit     INPORTC.4
  0015          =1   129    PI4             bit     INPORTC.5
                =1   130    
  0018          =1   131    KS              bit     OUTPORTA.0
  0019          =1   132    PKO1            bit     OUTPORTA.1
  001A          =1   133    PKO2            bit     OUTPORTA.2
  001B          =1   134    PKO3            bit     OUTPORTA.3
  001C          =1   135    PKO4            bit     OUTPORTA.4
                =1   136    
  0020          =1   137    UP              bit     OUTPORTB.0
  0021          =1   138    DOWN            bit     OUTPORTB.1
  0022          =1   139    FAST            bit     OUTPORTB.2
  0023          =1   140    SLOW            bit     OUTPORTB.3
  0024          =1   141    FLED1           bit     OUTPORTB.4
  0025          =1   142    FLED2           bit     OUTPORTB.5
  0026          =1   143    FLED3           bit     OUTPORTB.6
  0027          =1   144    FLED4           bit     OUTPORTB.7
                =1   145    
  0028          =1   146    PO1U            bit     OUTPORTC.0
  0028          =1   147    PO1D            bit     OUTPORTC.0
  0028          =1   148    PO1             bit     OUTPORTC.0
  0029          =1   149    PO2D            bit     OUTPORTC.1
  002A          =1   150    PO2U            bit     OUTPORTC.2
  002B          =1   151    PO3D            bit     OUTPORTC.3
  002C          =1   152    PO3U            bit     OUTPORTC.4
  002D          =1   153    PO4             bit     OUTPORTC.5
  002D          =1   154    PO4U            bit     OUTPORTC.5
  002D          =1   155    PO4D            bit     OUTPORTC.5
  002E          =1   156    LEDD            bit     OUTPORTC.6
  002F          =1   157    LEDU            bit     OUTPORTC.7
                =1   158    
  0038          =1   159    STOPPED         bit     CTRLREG.0
  0039          =1   160    DOORCLSDold     bit     CTRLREG.1
  003A          =1   161    UPold           bit     CTRLREG.2
  003B          =1   162    DOWNold         bit     CTRLREG.3
  003C          =1   163    FASTold         bit     CTRLREG.4
  003D          =1   164    SLOWold         bit     CTRLREG.5
                =1   165    
  00B6          =1   166    WRNOT           bit     0b6h        ; p3.6
  00B7          =1   167    RDNOT           bit     0b7h        ; p3.7
                =1   168    
                =1   169    ; bitove masky
                =1   170    ; 8255OUT 
                =1   171    ; port A
  0001          =1   172    bmKS              equ    00000001b
  0002          =1   173    bmPKO1            equ    00000010b
  0004          =1   174    bmPKO2            equ    00000100b
DEBUG                                                                                                         PAGE 4

  0008          =1   175    bmPKO3            equ    00001000b
  0010          =1   176    bmPKO4            equ    00010000b
                =1   177    
                =1   178    ; port B
  0001          =1   179    bmUP              equ    00000001b
  0002          =1   180    bmDOWN            equ    00000010b
  0004          =1   181    bmFAST            equ    00000100b
  0008          =1   182    bmSLOW            equ    00001000b
  0010          =1   183    bmFLED1           equ    00010000b
  0020          =1   184    bmFLED2           equ    00100000b
  0040          =1   185    bmFLED3           equ    01000000b
  0080          =1   186    bmFLED4           equ    10000000b
                =1   187    
                =1   188    ; port C
  0001          =1   189    bmPO1             equ    00000001b
  0002          =1   190    bmPO2D            equ    00000010b
  0004          =1   191    bmPO2U            equ    00000100b
  0008          =1   192    bmPO3D            equ    00001000b
  0010          =1   193    bmPO3U            equ    00010000b
  0020          =1   194    bmPO4             equ    00100000b
  0040          =1   195    bmLEDD            equ    01000000b
  0080          =1   196    bmLEDU            equ    10000000b
                =1   197    
                =1   198    ; 8255IN
                =1   199    ; port A
  0001          =1   200    bmSTOP            equ    00000001b
  0002          =1   201    bmPKI1            equ    00000010b
  0004          =1   202    bmPKI2            equ    00000100b
  0008          =1   203    bmPKI3            equ    00001000b
  0010          =1   204    bmPKI4            equ    00010000b
  0020          =1   205    bmDOORCLSD        equ    00100000b
                =1   206    
                =1   207    ; port B
  0002          =1   208    bmMB1I            equ    00000010b
  0004          =1   209    bmMB2I            equ    00000100b
  0008          =1   210    bmSKRHI           equ    00001000b
  0010          =1   211    bmSKRHD           equ    00010000b
  0020          =1   212    bmDPI             equ    00100000b
  0040          =1   213    bmDPZKI           equ    01000000b
  0080          =1   214    bmDPKI            equ    10000000b
                =1   215    
                =1   216    ; port C
  0001          =1   217    bmPI1             equ    00000001b
  0002          =1   218    bmPI2D            equ    00000010b
  0004          =1   219    bmPI2U            equ    00000100b
  0008          =1   220    bmPI3D            equ    00001000b
  0010          =1   221    bmPI3U            equ    00010000b
  0020          =1   222    bmPI4             equ    00100000b
                =1   223    
                =1   224    $include (macroLib.inc)
                =1   225    ;*******************************************************************************
                =1   226    ;   Sofrverovy breakpoint
                =1   227    ;-------------------------------------------------------------------------------
                =1   228    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   229    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   230    ;     nastaveny na hodnotu <INT1>
                =1   231    ;
                =1   232    ;     Emulator -> Configuration -> Single step interrupt
DEBUG                                                                                                         PAGE 5

                =1   233    ;
                =1   234    _BP_    MACRO 
                =1   235            clr     P3.3
                =1   236            setb    EX1
                =1   237            nop
                =1   238    ENDM
                =1   239    
                =1   240    
                =1   241    ;*******************************************************************************
                =1   242    ;   CFCSS - kontrolne instrukcie
                =1   243    ;-------------------------------------------------------------------------------
                =1   244    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   245    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   246    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   247    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   248    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   249    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   250    ;
                =1   251    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   252            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   253            IF (Dx <> -1)
                =1   254                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   255                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   256            ENDIF    
                =1   257            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   258            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   259            IF (D1val <> -1)
                =1   260                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   261            ENDIF
                =1   262            IF (D2val <> -1)
                =1   263                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   264            ENDIF
                =1   265            SERCHAR   #s             ;; Vypis aktualneho <s> na seriovu linku
                =1   266    ENDM
                =1   267    
                =1   268    ;*******************************************************************************
                =1   269    ;   Vypis znaku na seriovu linku
                =1   270    ;-------------------------------------------------------------------------------
                =1   271    ;     Vypise jeden znak (prijaty ako parameter CHAR) na seriovu linku.   
                =1   272    ;
                =1   273    SERCHAR MACRO CHAR
                =1   274                    mov               A, CHAR
                =1   275        jnb     TI, $ 
                =1   276        clr     TI
                =1   277                    mov     SBUF, A
                =1   278        
                =1   279    ENDM
                =1   280    
                =1   281    
                =1   282    ;*******************************************************************************
                =1   283    ;   Instrukcie pre casovace a pocitadla
                =1   284    ;-------------------------------------------------------------------------------
                =1   285    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   286    ;     priznak <T2_F>    
                =1   287    ;
                =1   288    TIMER2  MACRO  VAL
                =1   289               mov           T2_C, #VAL                              ;; 3 sekundy
DEBUG                                                                                                         PAGE 6

                =1   290                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   291                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   292    ENDM
                =1   293    
                =1   294    
                =1   295    
                =1   296    
                =1   297    ;*******************************************************************************
                =1   298    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   299    ;-------------------------------------------------------------------------------
                =1   300    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   301    ;
                =1   302    
                =1   303    ; Long jump if zero
                =1   304    LJZ     MACRO   NAVESTIE
                =1   305            jnz     $+5
                =1   306            ljmp    NAVESTIE
                =1   307            nop
                =1   308    ENDM
                =1   309    
                =1   310    ; Long jump if not zero
                =1   311    LJNZ    MACRO   NAVESTIE
                =1   312            jz      $+5
                =1   313            ljmp    NAVESTIE
                =1   314            nop
                =1   315    ENDM
                =1   316    
                =1   317    ; Long jump if bit set
                =1   318    LJB     MACRO   TESTBIT, NAVESTIE
                =1   319            jnb     TESTBIT, $+6
                =1   320            ljmp    NAVESTIE
                =1   321            nop
                =1   322    ENDM
                =1   323    
                =1   324    ; Long jump if bit not set
                =1   325    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   326            jb      TESTBIT, $+6
                =1   327            ljmp    NAVESTIE
                =1   328            nop
                =1   329    ENDM
                =1   330    
                =1   331    ; Compare & long jump if not equal
                =1   332    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   333            cjne    OP1, OP2, $+6
                =1   334            jmp     $+6
                =1   335            ljmp    NAVESTIE
                =1   336            nop
                =1   337    ENDM
                =1   338    
                =1   339    ;*******************************************************************************
                =1   340    ;   Modifikacie instrukcii x51
                =1   341    ;-------------------------------------------------------------------------------
                =1   342    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   343    ;
                =1   344    
                =1   345    ;Logical and (bit operands)
DEBUG                                                                                                         PAGE 7

                =1   346    ANLB   MACRO   BIT1, BIT2
                =1   347            mov   C, BIT1
                =1   348            anl   C, /BIT2
                =1   349            mov   BIT1, C
                =1   350    ENDM
                =1   351    
                =1   352    ; Compare & long jump if equal
                =1   353    LCJE     MACRO   OP1, OP2, NAVESTIE
                =1   354            cjne    OP1, OP2, $+7
                =1   355            jmp    NAVESTIE
                =1   356            nop
                =1   357    ENDM
                =1   358    
                =1   359    
                =1   360    ;*******************************************************************************
                =1   361    ;   Signalizacia polohy kabiny
                =1   362    ;-------------------------------------------------------------------------------
                =1   363    ;     Signalizuje polohu kabiny na signalizacnom paneli. 
                =1   364    ;     Smerove sipky budu signalizovat zastavenie kabiny,
                =1   365    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   366    ;     Vykonane zmeny sa zapisu na porty     
                =1   367    ;
                =1   368    POLOHA_LED  MACRO  POLOHA
                =1   369            orl     OUTPORTC, #(bmLEDU or bmLEDD)
                =1   370            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   371            setb    FLED&POLOHA
                =1   372            lcall   WRITEPORTS
                =1   373    ENDM
                     374                       
                     375    
                     376    ; Definicie registrov pre Keil uVision
  00C8               377    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00CA               378    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               379    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               380    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               381    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               382    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
                     383    
                     384    
  0000               385    COUNT    SET    0
                     386    
                     387    ;*******************************************************************************
                     388    ;   Oznacenie poruchoveho poschodia 
                     389    ;-------------------------------------------------------------------------------
                     390    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     391    ;
                     392    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     393                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     394                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     395            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
                     396            COUNT    SET    COUNT+1                   
DEBUG                                                                                                         PAGE 8

                     397            
                     398            jb      TESTBIT, ENDD&LABEL
                     399            jnb     PKI&POSCH, $+7
                     400            clr     FAST
                     401            setb    SLOW
                     402            setb    STOPPED         
                     403            setb    FLOORBIT&_U
                     404            setb    FLOORBIT&_D
                     405            inc     FLOORBIT&_C
                     406                    clr     PKO&POSCH                               ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     407            clr     PO&POSCH&U            
                     408            clr     PO&POSCH&D              
                     409                    lcall   WRITEPORTS
                     410            ljmp    NAVESTIE
                     411    ENDD&LABEL:
                     412            nop
                     413    ENDM
                     414    
                     415    ;*******************************************************************************
                     416    ;   Odstranenie oznacenia poruchoveho poschodia 
                     417    ;-------------------------------------------------------------------------------
                     418    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     419    ;
                     420    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     421            clr    FLOORBIT&_U
                     422            clr    FLOORBIT&_D
                     423            nop
                     424    ENDM
                     425    
                     426    ;*******************************************************************************
                     427    ;   Osetrenie zakmitov clonky
                     428    ;-------------------------------------------------------------------------------
                     429    ;        
                     430    ;
                     431    ZAKMITC MACRO   TYPCLONKY
                     432            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     433            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     434            jnb     TYPCLONKY, $-3  ; 
                     435            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     436    ENDM
                     437    
                     438    ZASTAV  MACRO  C_POSCH, SMER
                     439                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     440            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     441            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     442            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     443            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     444            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     445            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     446            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
                     447            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
DEBUG                                                                                                         PAGE 9

                                                                               im urcite)
                     448            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     449    ENDM
                     450    
                     451    NAJNIZSIE  MACRO
                     452            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     453            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     454            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     455    
                     456            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     457            ANLB    ACC.2, ERRF2_D  ; |
                     458            ANLB    ACC.3, ERRF2_D  ; |
                     459            ANLB    ACC.4, ERRF3_D  ; |
                     460            ;ANLB    ACC.5, ERRF3_D  ; |
                     461    
                     462            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     463     ; LL1: 
                     464            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     465            clr     C               ; Inak shiftnem o 2
                     466            rlc     A               ;
                     467            clr     C               ;
                     468            rlc     A               ;
                     469            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     470    ; LL2:
                     471            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     472    ENDM
                     473    
                     474    NAJVYSSIE  MACRO
                     475            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     476            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     477            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     478            
                     479            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     480            ANLB    ACC.3, ERRF2_U  ; |
                     481            ANLB    ACC.4, ERRF3_U  ; |
                     482            ANLB    ACC.5, ERRF3_U  ; |
                     483            ;ANLB    ACC.6, ERRF4_U  ; |
                     484            
                     485            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     486     ; LL1: 
                     487            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     488            clr     C               ; Inak shiftnem o 2
                     489            rrc     A               ;
                     490            clr     C               ;
                     491            rrc     A               ;
                     492            djnz    R0, $-6         ; ...a pokracujem v zistovani
DEBUG                                                                                                         PAGE 10

                     493    ; LL2:
                     494            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     495            clr     C               ;
                     496            subb    A, R0           ;
                     497    ENDM
                     498    
                     499    VYSSIE_KABINA  MACRO  POSCH
                     500            mov     A, INPORTA
                     501            anl     A, #00011110b
                     502            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     503            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     504            xrl     B, #0FFH
                     505            anl     A, B
                     506            clr     C
                     507            rrc     A
                     508    ;LL1    
                     509            mov     R0, #&POSCH
                     510            clr     C
                     511            rrc     A
                     512            djnz    R0, $-2;LL1
                     513    ENDM
                     514    
                     515    NIZSIE_KABINA  MACRO  POSCH
                     516            mov     A, #5
                     517            clr     C
                     518            subb    A, #&POSCH
                     519            mov     R0, A
                     520            mov     A, INPORTA
                     521            anl     A, #00011110b
                     522            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     523            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     524            xrl     B, #0FFH
                     525            anl     A, B
                     526            clr     C
                     527            rlc     A
                     528            clr     C
                     529            rlc     A
                     530            clr     C
                     531            rlc     A
                     532    ;LL1   
                     533            clr     C
                     534            rlc     A
                     535            djnz    R0, $-2;LL1
                     536    ENDM
                     537    
                     538    
                     539    
                     540    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               541    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     542                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     543                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
                     544    ;osetrenie vektorov preruseni
0000                 545            org     0000h           ; adresa odkial startuje program po resete
0000 020033          546            ljmp    START           ; skok na zaciatok kodu programu
                     547            
000B                 548            org     000Bh           ; v tejto casti pamati je vektor prerusenia
DEBUG                                                                                                         PAGE 11

000B 020F78          549            ljmp    INT_TIMER0      ; pre casovac T0
                     550            
002B                 551            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 0210D8          552                        ljmp    INT_TIMER2      ; pre casovac T2   
                     553                  
0033                 554            org     0033h           ; od tejto adresy sa zacina kod programu
                     555            
0033                 556    START:
0033                 557    RESET:  
                     558            ; riadiace signaly do pasivnej urovne 
0033 D2B6            559            setb    WRNOT
0035 D2B7            560            setb    RDNOT
0037 753300          561            mov     STOPTIMER, #0
003A 758140          562            mov     SP, #STACK
                     563    
                     564            ; pockame si na inicializaciu obvodov 8255  
003D 7900            565            mov     R1, #0 
003F 7AFF            566            mov     R2, #0ffh
0041 D9FE            567            djnz    R1, $
0043 DAFC            568            djnz    R2, $-2
                     569            
                     570            ; teraz ich mozeme nastavit
0045 75809B          571            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          572            mov     p2, #i8255INCW
004B C2B6            573            clr     WRNOT
004D 00              574            nop
004E 00              575            nop
004F 00              576            nop
0050 00              577            nop
0051 D2B6            578            setb    WRNOT
0053 758080          579            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          580            mov     p2, #i8255OUTCW
0059 C2B6            581            clr     WRNOT
005B 00              582            nop
005C 00              583            nop
005D 00              584            nop
005E 00              585            nop
005F D2B6            586            setb    WRNOT
                     587            
                     588            ; nastavenie preruseni 
0061 C28E            589            clr     TR1                 ; zastavi sa citac T1
0063 759852          590            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     591                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     592                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     593                                        ; RI=0 (prijimaci register - nebol prijaty znak)
0066 758801          594            mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu
0069 758921          595            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     596                                        ; T1: mod 1 - 16 bitove pocitadlo
                     597                                        ; GATE=0 (programove riadenie casovaca)
                     598                                        ; C/T#=0 interne hodiny/12
                     599                                        ; T0: mod 1 - 16 bitove pocitadlo
                     600                                        ; GATE=0 (programove riadenie casovaca)
                     601                                        ; C/T#=0 interne hodiny/12
006C 758740          602            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
DEBUG                                                                                                         PAGE 12

006F 758B00          603            mov     TL1, #000h          ; inicializacia casovaca T1
0072 758DFA          604            mov     TH1, #0FAh          ; 
0075 758A00          605            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h
0078 758C4C          606            mov     TH0, #04Ch
007B 75C800          607                        mov           T2CON,  #0                        ; Auto-reload mod
007E 75CA00          608                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
                                                                               592/12*1 = 0,9216 MHz
0081 75CB4C          609                        mov           RCAP2H, #4Ch;             ; (50ms)
0084 D2AD            610                        setb          ET2                                           ; Enable Tim
                                                                               er2 interrupt
                     611            
                     612            
                     613            
0086 D28C            614            setb    TR0
0088 D28E            615            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     616            
                     617            
                     618            
                     619    
                     620    
                     621            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
008A 752800          622            mov     INPORTA, #0
008D 75211E          623            mov     INPORTB, #01eh      ; vsetky clonky pasivne
0090 752200          624            mov     INPORTC, #0
0093 75231E          625            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
0096 7524F0          626            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
0099 7525FF          627            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
009C D218            628            setb    KS
009E C238            629            clr     STOPPED
00A0 12108E          630            call    WRITEPORTS          ; zapis novu informaciu
                     631    
00A3 752300          632            mov     OUTPORTA, #0
00A6 752400          633            mov     OUTPORTB, #0
00A9 752500          634            mov     OUTPORTC, #0
00AC 12108E          635            call    WRITEPORTS          ; zapis novu informaciu
                     636    
00AF 752800          637            mov     INPORTA, #0
00B2 752100          638            mov     INPORTB, #0         
00B5 752200          639            mov     INPORTC, #0
00B8 12102F          640            call    READPORTS           ; prvotne nacitanie udajov
                     641            
00BB 752A00          642            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00BE 752B00          643            mov     ERRFLOOR_D, #0h      
                     644    
                     645            
00C1 9010EF          646            mov     DPTR, #STR_INIT         ; vypis info 
00C4 1210C5          647            lcall   DISPSTR                 ; o inicializacii       
                     648    
00C7                 649    CALIB:
                     650            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     651            ;setb    TR0
00C7 12102F          652            lcall   READPORTS                   ; precitaj, co je na portoch
00CA 300C13          653            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00CD D221            654            setb    DOWN                        ; inak pod dole
00CF D222            655            setb    FAST                        ; a rychlo
00D1 C223            656            clr     SLOW                        ;
DEBUG                                                                                                         PAGE 13

00D3 C220            657            clr     UP                
00D5 12108E          658            lcall   WRITEPORTS                  ; zapis informaciu 
00D8                 659    CALIBLOOP:
00D8 12102F          660            lcall   READPORTS                   ; 
00DB 300C02          661            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00DE 80F8            662            jmp     CALIBLOOP
00E0                 663    CALIBEND:                              
00E0 C222            664            clr     FAST                        ; zastavime v tomto smere
00E2 C221            665            clr     DOWN                        ;
00E4 D223            666            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00E6 D220            667            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00E8 12108E          668            lcall   WRITEPORTS 
00EB                 669    CALIBEND2:
00EB 12102F          670            lcall   READPORTS                   ; 
00EE 2009FA          671            jb      MB1, CALIBEND2              ; 
00F1 C223            672            clr     SLOW                        ; A teraz sme uz naozaj spravne
00F3 C220            673            clr     UP                          ; 
00F5 D224            674            setb    FLED1
00F7 12108E          675            lcall   WRITEPORTS                  ; zapis informaciu
                     676            ;clr     TR0
                     677            ;_BP_
00FA 9010EF          678            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
00FD 1210C5          679            lcall   DISPSTR                     ;
0100                 680    MAIN:
                     681    
                     682    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     683    ; ****************************************************************************
                     684    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     685    ; ----------------------------------------------------------------------------
                     686    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     687    ; ----------------------------------------------------------------------------
                     688    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     689    ; ****************************************************************************
                     690    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                     691    ; ----------------------------------------------------------------------------
                     692    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     693    ; ----------------------------------------------------------------------------
                     694    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     695    ; ****************************************************************************
                     696    ; POSITION
                     697    ; ****************************************************************************
                     698    
                     699    
                     700    
0100 7D00            701            mov     R5, #0
0102 7E14            702            mov     R6, #20
0104 D2A9            703            setb    ET0;
                     704            
                     705            ;Inicializacia priznakov (CFCSS)
0106 753C1E          706            mov             G, #30
0109 753D00          707                        mov         D1, #0
010C 753E00          708            mov             D2, #0
010F 901264          709            mov   DPTR, #STR_CFC_START         ; vypis info 
0112 1210C5          710            lcall DISPSTR         ;
                     711                          
                     712    
                     713    
DEBUG                                                                                                         PAGE 14

                     714    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     715    
0115                 716    FLOOR1:
                     717            ;--------------------------
                     718 +1         CFCSS     29, 3, -1, -1, D1
0115 633C03          719 +1         xrl             G,  #3             
                     720 +1         IF (D1 <> -1)
0118 E53D            721 +1             mov   A,  D1         
011A 623C            722 +1             xrl   G,  A          
                     723 +1         ENDIF    
011C E53C            724 +1         mov   A,  G              
                     725 +2         LCJNE A,  #29, CFCERR     
011E B41D03          726 +2         cjne    A, #29, $+6
0121 020127          727 +2         jmp     $+6
0124 020F5C          728 +2         ljmp    CFCERR
0127 00              729 +2         nop
                     730 +1         IF (-1 <> -1)
                     731 +1             mov         D1, #-1     
                     732 +1         ENDIF
                     733 +1         IF (-1 <> -1)
                     734 +1             mov         D2, #-1     
                     735 +1         ENDIF
                     736 +2         SERCHAR   #29             
0128 741D            737 +2                 mov               A, #29
012A 3099FD          738 +2     jnb     TI, $ 
012D C299            739 +2     clr     TI
012F F599            740 +2                 mov     SBUF, A
                     741 +2     
                     743            ;--------------------------
                     744 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0131 4325C0          745 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0134 53240F          746 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0137 D224            747 +1         setb    FLED1
0139 12108E          748 +1         lcall   WRITEPORTS
013C C238            750            clr     STOPPED
013E 120FE7          751            lcall   WAITFORTIMER    ; simulacia TIMERu  ;--; Miesto tohto nastavime timer TIMER2
                                                                                na CASNAPOSCH
0141 12102F          752    F1S:    lcall   READPORTS       ; nacitanie dat
0144 C219            753            clr     PKO1            ; vynulovanie volby poschodia na ktorom stojim
0146 C228            754            clr     PO1             ;
0148 12108E          755            lcall   WRITEPORTS      ;
014B 200FF3          756            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
014E E528            757            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
0150 852AF0          758            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
0153 53F00C          759            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
0156 63F0FF          760            xrl     B, #0FFH        ; | |
0159 55F0            761            anl     A, B            ; | |
015B 541C            762            anl     A, #00011100b   ; |
015D 701A            763            jnz     F1OK            ; ak ano, podme na to
015F E522            764            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
0161 543E            765            anl     A, #00111110b   ;
                     766            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                     767 +1         ANLB    ACC.2, ERRF2_U  ; |
DEBUG                                                                                                         PAGE 15

0163 A2E2            768 +1         mov   C, ACC.2
0165 B052            769 +1         anl   C, /ERRF2_U
0167 92E2            770 +1         mov   ACC.2, C
                     772 +1         ANLB    ACC.3, ERRF3_U  ; |
0169 A2E3            773 +1         mov   C, ACC.3
016B B053            774 +1         anl   C, /ERRF3_U
016D 92E3            775 +1         mov   ACC.3, C
                     777 +1         ANLB    ACC.4, ERRF3_U  ; |
016F A2E4            778 +1         mov   C, ACC.4
0171 B053            779 +1         anl   C, /ERRF3_U
0173 92E4            780 +1         mov   ACC.4, C
                     782            ;ANLB    ACC.5, ERRF4_U  ; |
0175 7002            783            jnz     F1OK            ; ak ano, podme na to
0177 80C8            784            jmp     F1S             ; Nemam sa kde hnut, opakujem
0179 D220            785    F1OK:   setb    UP              ; rychly pohyb hore
017B D222            786            setb    FAST            ; 
017D C223            787            clr     SLOW            ;
017F 12108E          788            lcall   WRITEPORTS      ; 
0182 020185          789            jmp     UP1             ; prejdi do stavu UP1
                     790            
                     791            
0185                 792    UP1:
                     793            ;--------------------------
                     794 +1         CFCSS     20, 9, 27, -1, -1
0185 633C09          795 +1         xrl             G,  #9             
                     796 +1         IF (-1 <> -1)
                     797 +1             mov   A,  -1         
                     798 +1             xrl   G,  A          
                     799 +1         ENDIF    
0188 E53C            800 +1         mov   A,  G              
                     801 +2         LCJNE A,  #20, CFCERR     
018A B41403          802 +2         cjne    A, #20, $+6
018D 020193          803 +2         jmp     $+6
0190 020F5C          804 +2         ljmp    CFCERR
0193 00              805 +2         nop
                     806 +1         IF (27 <> -1)
0194 753D1B          807 +1             mov         D1, #27     
                     808 +1         ENDIF
                     809 +1         IF (-1 <> -1)
                     810 +1             mov         D2, #-1     
                     811 +1         ENDIF
                     812 +2         SERCHAR   #20             
0197 7414            813 +2                 mov               A, #20
0199 3099FD          814 +2     jnb     TI, $ 
019C C299            815 +2     clr     TI
019E F599            816 +2                 mov     SBUF, A
                     817 +2     
                     819            ;--------------------------
                     820 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
01A0 4325C0          821 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
01A3 53240F          822 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
01A6 D224            823 +1         setb    FLED1
01A8 12108E          824 +1         lcall   WRITEPORTS
                     826 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
01AB 120FB2          827 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
01AE 12102F          828 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
DEBUG                                                                                                         PAGE 16

01B1 3009FA          829 +1         jnb     MB1, $-3  ; 
01B4 120FB2          830 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
01B7 12102F          832    UP1A:   lcall   READPORTS       ; nacitanie dat
                     833 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
01BA 200B03          834 +1         jb      SKRH, $+6
01BD 020F1A          835 +1         ljmp    ERR_SKRH
01C0 00              836 +1         nop
                     838            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                     839 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
                     840 +1                                                                                             
                                                                                                                 
                     841 +1                                                                                             
                                                                                                                 
                     842 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001               843 +1         COUNT    SET    COUNT+1                   
                     844 +1         
01C1 20091B          845 +1         jb      MB1, ENDD0
01C4 304204          846 +1         jnb     PKI2, $+7
01C7 C222            847 +1         clr     FAST
01C9 D223            848 +1         setb    SLOW
01CB D238            849 +1         setb    STOPPED         
01CD D252            850 +1         setb    ERRF12_U
01CF D259            851 +1         setb    ERRF12_D
01D1 0539            852 +1         inc     ERRF12_C
01D3 C21A            853 +1                 clr     PKO2                               
01D5 C22A            854 +1         clr     PO2U            
01D7 C229            855 +1         clr     PO2D              
01D9 12108E          856 +1                 lcall   WRITEPORTS
01DC 020490          857 +1         ljmp    UP2
01DF                 858 +1 ENDD0:
01DF 00              859 +1         nop
01E0 200AD4          861            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                     862 +1         CLR_FLOOR_ERR   ERRF12
01E3 C252            863 +1         clr    ERRF12_U
01E5 C259            864 +1         clr    ERRF12_D
01E7 00              865 +1         nop
                     867 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
01E8 120FB2          868 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
01EB 12102F          869 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
01EE 300AFA          870 +1         jnb     MB2, $-3  ; 
01F1 120FB2          871 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
01F4 D22E            873            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
01F6 12108E          874            lcall   WRITEPORTS      ;
01F9 0201FC          875            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                     876            
                     877            
01FC                 878    UP1_MB2:
                     879            ;--------------------------
                     880 +1         CFCSS     2, 22, 13, -1, -1
01FC 633C16          881 +1         xrl             G,  #22             
                     882 +1         IF (-1 <> -1)
                     883 +1             mov   A,  -1         
                     884 +1             xrl   G,  A          
                     885 +1         ENDIF    
01FF E53C            886 +1         mov   A,  G              
DEBUG                                                                                                         PAGE 17

                     887 +2         LCJNE A,  #2, CFCERR     
0201 B40203          888 +2         cjne    A, #2, $+6
0204 02020A          889 +2         jmp     $+6
0207 020F5C          890 +2         ljmp    CFCERR
020A 00              891 +2         nop
                     892 +1         IF (13 <> -1)
020B 753D0D          893 +1             mov         D1, #13     
                     894 +1         ENDIF
                     895 +1         IF (-1 <> -1)
                     896 +1             mov         D2, #-1     
                     897 +1         ENDIF
                     898 +2         SERCHAR   #2             
020E 7402            899 +2                 mov               A, #2
0210 3099FD          900 +2     jnb     TI, $ 
0213 C299            901 +2     clr     TI
0215 F599            902 +2                 mov     SBUF, A
                     903 +2     
                     905            ;--------------------------
                     906 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
0217 120FB2          907 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
021A 12102F          908 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
021D 300AFA          909 +1         jnb     MB2, $-3  ; 
0220 120FB2          910 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0223 12102F          912    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                     913 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0226 200B03          914 +1         jb      SKRH, $+6
0229 020F1A          915 +1         ljmp    ERR_SKRH
022C 00              916 +1         nop
                     918            ; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na zastavovaciu) <<<
                     919 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT
                     920 +1                                                                                             
                                                                                                                 
                     921 +1                                                                                             
                                                                                                                 
                     922 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002               923 +1         COUNT    SET    COUNT+1                   
                     924 +1         
022D 20091B          925 +1         jb      MB1, ENDD1
0230 304204          926 +1         jnb     PKI2, $+7
0233 C222            927 +1         clr     FAST
0235 D223            928 +1         setb    SLOW
0237 D238            929 +1         setb    STOPPED         
0239 D252            930 +1         setb    ERRF12_U
023B D259            931 +1         setb    ERRF12_D
023D 0539            932 +1         inc     ERRF12_C
023F C21A            933 +1                 clr     PKO2                               
0241 C22A            934 +1         clr     PO2U            
0243 C229            935 +1         clr     PO2D              
0245 12108E          936 +1                 lcall   WRITEPORTS
0248 020490          937 +1         ljmp    UP2
024B                 938 +1 ENDD1:
024B 00              939 +1         nop
024C 200AD4          941            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                     942 +1         CLR_FLOOR_ERR   ERRF12   
024F C252            943 +1         clr    ERRF12_U
0251 C259            944 +1         clr    ERRF12_D
0253 00              945 +1         nop
DEBUG                                                                                                         PAGE 18

0254 D22F            947            setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0256 12108E          948            lcall   WRITEPORTS      ;   
                     949 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0259 120FB2          950 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
025C 12102F          951 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
025F 300AFA          952 +1         jnb     MB2, $-3  ; 
0262 120FB2          953 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     955    
0265                 956    UP1_MB2_CFC:     
                     957            ;--------------------------
                     958 +1         CFCSS     12, 14, -1, -1, -1
0265 633C0E          959 +1         xrl             G,  #14             
                     960 +1         IF (-1 <> -1)
                     961 +1             mov   A,  -1         
                     962 +1             xrl   G,  A          
                     963 +1         ENDIF    
0268 E53C            964 +1         mov   A,  G              
                     965 +2         LCJNE A,  #12, CFCERR     
026A B40C03          966 +2         cjne    A, #12, $+6
026D 020273          967 +2         jmp     $+6
0270 020F5C          968 +2         ljmp    CFCERR
0273 00              969 +2         nop
                     970 +1         IF (-1 <> -1)
                     971 +1             mov         D1, #-1     
                     972 +1         ENDIF
                     973 +1         IF (-1 <> -1)
                     974 +1             mov         D2, #-1     
                     975 +1         ENDIF
                     976 +2         SERCHAR   #12             
0274 740C            977 +2                 mov               A, #12
0276 3099FD          978 +2     jnb     TI, $ 
0279 C299            979 +2     clr     TI
027B F599            980 +2                 mov     SBUF, A
                     981 +2     
                     983            ;--------------------------
                     984 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                     985 +1                                         
027D C3              986 +1         clr     C                       
027E 7400            987 +1         mov     A, #0h                  
0280 7212            988 +1         orl     C, PI2U      
0282 B00E            989 +1         anl     C, /DPZK                
0284 7242            990 +1         orl     C, PKI2          
0286 B052            991 +1         anl     C, /ERRF2_U 
0288 720F            992 +1         orl     C, DPK                  
028A 7238            993 +1         orl     C, STOPPED              
028C 3400            994 +1         addc    A, #0h                  
028E 704B            996            jnz     U1_MB2C       ;-; Ak ano, zastav
                     997 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
0290 E522            998 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0292 33              999 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0293 547E           1000 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1001 +1         
                    1002 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
DEBUG                                                                                                         PAGE 19

                    1003 +2         ANLB    ACC.3, ERRF2_U  ; |
0295 A2E3           1004 +2         mov   C, ACC.3
0297 B052           1005 +2         anl   C, /ERRF2_U
0299 92E3           1006 +2         mov   ACC.3, C
                    1007 +2         ANLB    ACC.4, ERRF3_U  ; |
029B A2E4           1008 +2         mov   C, ACC.4
029D B053           1009 +2         anl   C, /ERRF3_U
029F 92E4           1010 +2         mov   ACC.4, C
                    1011 +2         ANLB    ACC.5, ERRF3_U  ; |
02A1 A2E5           1012 +2         mov   C, ACC.5
02A3 B053           1013 +2         anl   C, /ERRF3_U
02A5 92E5           1014 +2         mov   ACC.5, C
                    1015 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1016 +1         
02A7 7805           1017 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1018 +1  ; LL1: 
02A9 6006           1019 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
02AB C3             1020 +1         clr     C               ; Inak shiftnem o 2
02AC 13             1021 +1         rrc     A               ;
02AD C3             1022 +1         clr     C               ;
02AE 13             1023 +1         rrc     A               ;
02AF D8F8           1024 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1025 +1 ; LL2:
02B1 7405           1026 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
02B3 C3             1027 +1         clr     C               ;
02B4 98             1028 +1         subb    A, R0           ;
                    1030 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
02B5 B40203         1031 +1         cjne    A, #2, $+6
02B8 0202BE         1032 +1         jmp     $+6
02BB 0202E5         1033 +1         ljmp    UP1_MB1
02BE 00             1034 +1         nop
                    1036 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
02BF E528           1037 +1         mov     A, INPORTA
02C1 541E           1038 +1         anl     A, #00011110b
02C3 852AF0         1039 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
02C6 53F00C         1040 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
02C9 63F0FF         1041 +1         xrl     B, #0FFH
02CC 55F0           1042 +1         anl     A, B
02CE C3             1043 +1         clr     C
02CF 13             1044 +1         rrc     A
                    1045 +1 ;LL1    
02D0 7802           1046 +1         mov     R0, #2
02D2 C3             1047 +1         clr     C
02D3 13             1048 +1         rrc     A
02D4 D8FC           1049 +1         djnz    R0, $-2;LL1
02D6 6003           1051            jz      U1_MB2C         ; |   ak neni zastavujem         
02D8 0202E5         1052            jmp     UP1_MB1          ; |   inak nezastavim        
02DB D223           1053    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
02DD C222           1054            clr     FAST            ; 
02DF 12108E         1055            lcall   WRITEPORTS      ;         
02E2 02033E         1056            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1057            
                    1058            
DEBUG                                                                                                         PAGE 20

02E5                1059    UP1_MB1:
                    1060            ;--------------------------
                    1061 +1         CFCSS     6, 10, 9, 14, -1
02E5 633C0A         1062 +1         xrl             G,  #10             
                    1063 +1         IF (-1 <> -1)
                    1064 +1             mov   A,  -1         
                    1065 +1             xrl   G,  A          
                    1066 +1         ENDIF    
02E8 E53C           1067 +1         mov   A,  G              
                    1068 +2         LCJNE A,  #6, CFCERR     
02EA B40603         1069 +2         cjne    A, #6, $+6
02ED 0202F3         1070 +2         jmp     $+6
02F0 020F5C         1071 +2         ljmp    CFCERR
02F3 00             1072 +2         nop
                    1073 +1         IF (9 <> -1)
02F4 753D09         1074 +1             mov         D1, #9     
                    1075 +1         ENDIF
                    1076 +1         IF (14 <> -1)
02F7 753E0E         1077 +1             mov         D2, #14     
                    1078 +1         ENDIF
                    1079 +2         SERCHAR   #6             
02FA 7406           1080 +2                 mov               A, #6
02FC 3099FD         1081 +2     jnb     TI, $ 
02FF C299           1082 +2     clr     TI
0301 F599           1083 +2                 mov     SBUF, A
                    1084 +2     
                    1086            ;--------------------------
                    1087 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0303 120FB2         1088 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0306 12102F         1089 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0309 300AFA         1090 +1         jnb     MB2, $-3  ; 
030C 120FB2         1091 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
030F 12102F         1093    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1094 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0312 200B03         1095 +1         jb      SKRH, $+6
0315 020F1A         1096 +1         ljmp    ERR_SKRH
0318 00             1097 +1         nop
                    1099            ;ljnb    MB2, ERR_ZAST_C; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na spo
                                                                               malovaciu) <<<
                    1100 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT
                    1101 +1                                                                                             
                                                                                                                 
                    1102 +1                                                                                             
                                                                                                                 
                    1103 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1104 +1         COUNT    SET    COUNT+1                   
                    1105 +1         
0319 200A1B         1106 +1         jb      MB2, ENDD2
031C 304204         1107 +1         jnb     PKI2, $+7
031F C222           1108 +1         clr     FAST
0321 D223           1109 +1         setb    SLOW
0323 D238           1110 +1         setb    STOPPED         
0325 D252           1111 +1         setb    ERRF2_U
0327 D25A           1112 +1         setb    ERRF2_D
0329 0536           1113 +1         inc     ERRF2_C
032B C21A           1114 +1                 clr     PKO2                               
032D C22A           1115 +1         clr     PO2U            
DEBUG                                                                                                         PAGE 21

032F C229           1116 +1         clr     PO2D              
0331 12108E         1117 +1                 lcall   WRITEPORTS
0334 02050E         1118 +1         ljmp    UP2_MB2
0337                1119 +1 ENDD2:
0337 00             1120 +1         nop
0338 2009D4         1122            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
033B 020490         1123            ljmp    UP2             ; |   inak nezastavim        
                    1124    
033E                1125    UP1_STOP:
                    1126            ;--------------------------
                    1127 +1         CFCSS     28, 16, 9, 20, -1
033E 633C10         1128 +1         xrl             G,  #16             
                    1129 +1         IF (-1 <> -1)
                    1130 +1             mov   A,  -1         
                    1131 +1             xrl   G,  A          
                    1132 +1         ENDIF    
0341 E53C           1133 +1         mov   A,  G              
                    1134 +2         LCJNE A,  #28, CFCERR     
0343 B41C03         1135 +2         cjne    A, #28, $+6
0346 02034C         1136 +2         jmp     $+6
0349 020F5C         1137 +2         ljmp    CFCERR
034C 00             1138 +2         nop
                    1139 +1         IF (9 <> -1)
034D 753D09         1140 +1             mov         D1, #9     
                    1141 +1         ENDIF
                    1142 +1         IF (20 <> -1)
0350 753E14         1143 +1             mov         D2, #20     
                    1144 +1         ENDIF
                    1145 +2         SERCHAR   #28             
0353 741C           1146 +2                 mov               A, #28
0355 3099FD         1147 +2     jnb     TI, $ 
0358 C299           1148 +2     clr     TI
035A F599           1149 +2                 mov     SBUF, A
                    1150 +2     
                    1152            ;--------------------------
035C 12102F         1153    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1154 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
035F 200B03         1155 +1         jb      SKRH, $+6
0362 020F1A         1156 +1         ljmp    ERR_SKRH
0365 00             1157 +1         nop
                    1159            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    1160 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT
                    1161 +1                                                                                             
                                                                                                                 
                    1162 +1                                                                                             
                                                                                                                 
                    1163 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1164 +1         COUNT    SET    COUNT+1                   
                    1165 +1         
0366 200A1B         1166 +1         jb      MB2, ENDD3
0369 304204         1167 +1         jnb     PKI2, $+7
036C C222           1168 +1         clr     FAST
036E D223           1169 +1         setb    SLOW
0370 D238           1170 +1         setb    STOPPED         
0372 D252           1171 +1         setb    ERRF2_U
0374 D25A           1172 +1         setb    ERRF2_D
0376 0536           1173 +1         inc     ERRF2_C
DEBUG                                                                                                         PAGE 22

0378 C21A           1174 +1                 clr     PKO2                               
037A C22A           1175 +1         clr     PO2U            
037C C229           1176 +1         clr     PO2D              
037E 12108E         1177 +1                 lcall   WRITEPORTS
0381 02050E         1178 +1         ljmp    UP2_MB2
0384                1179 +1 ENDD3:
0384 00             1180 +1         nop
0385 2009D4         1182            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
0388 C220           1183            clr     UP              ; zastav motor
038A D23A           1184            setb    UPOld           ;       (a zalohuj) 
038C C23B           1185            clr     DOWNOld         ;       (a zalohuj)
038E C222           1186            clr     FAST            ; 
0390 12108E         1187            lcall   WRITEPORTS      ; 
0393 020396         1188            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1189    
                    1190    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1191    
0396                1192    FLOOR2:
                    1193            ;--------------------------
                    1194 +1         CFCSS     15, 26, 0, 30, D1
0396 633C1A         1195 +1         xrl             G,  #26             
                    1196 +1         IF (D1 <> -1)
0399 E53D           1197 +1             mov   A,  D1         
039B 623C           1198 +1             xrl   G,  A          
                    1199 +1         ENDIF    
039D E53C           1200 +1         mov   A,  G              
                    1201 +2         LCJNE A,  #15, CFCERR     
039F B40F03         1202 +2         cjne    A, #15, $+6
03A2 0203A8         1203 +2         jmp     $+6
03A5 020F5C         1204 +2         ljmp    CFCERR
03A8 00             1205 +2         nop
                    1206 +1         IF (0 <> -1)
03A9 753D00         1207 +1             mov         D1, #0     
                    1208 +1         ENDIF
                    1209 +1         IF (30 <> -1)
03AC 753E1E         1210 +1             mov         D2, #30     
                    1211 +1         ENDIF
                    1212 +2         SERCHAR   #15             
03AF 740F           1213 +2                 mov               A, #15
03B1 3099FD         1214 +2     jnb     TI, $ 
03B4 C299           1215 +2     clr     TI
03B6 F599           1216 +2                 mov     SBUF, A
                    1217 +2     
                    1219            ;--------------------------
                    1220 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
03B8 4325C0         1221 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
03BB 53240F         1222 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
03BE D225           1223 +1         setb    FLED2
03C0 12108E         1224 +1         lcall   WRITEPORTS
03C3 C238           1226            clr     STOPPED
03C5 120FE7         1227            lcall   WAITFORTIMER    ; simulacia TIMERu
03C8 12102F         1228    F2S:    lcall   READPORTS     ;-; nacitanie dat
03CB C21A           1229            clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
03CD C22A           1230            clr     PO2U            ;
03CF C229           1231            clr     PO2D            ;
DEBUG                                                                                                         PAGE 23

03D1 12108E         1232            lcall   WRITEPORTS      ;
03D4 200FF1         1233            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1234            ;_BP_
03D7 782A           1235            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
03D9 79F8           1236            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
03DB 7AF8           1237            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
03DD 203A0A         1238            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
03E0 E9             1239            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
03E1 F4             1240            cpl     A               ;       |
03E2 F9             1241            mov     R1, A           ;       |
03E3 EA             1242            mov     A, R2           ;       A znegujeme aj masku sachty
03E4 F4             1243            cpl     A               ;       |
03E5 FA             1244            mov     R2, A           ;       |  
03E6 E8             1245            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
03E7 6401           1246            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
03E9 F8             1247            mov     R0, A           ;       |  
03EA                1248    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
03EA E528           1249            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
03EC 86F0           1250            mov     B, @R0          ;  | Maskujem chybne poschodia
03EE 53F00C         1251            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
03F1 63F0FF         1252            xrl     B, #0FFH        ;  |
03F4 55F0           1253            anl     A, B            ;  |
03F6 541A           1254            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
03F8 59             1255            anl     A, R1           ;  | 
                    1256 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
03F9 6003           1257 +1         jz      $+5
03FB 020472         1258 +1         ljmp    F2
03FE 00             1259 +1         nop
                    1261                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
03FF E528           1262            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0401 86F0           1263            mov     B, @R0          ;  | Maskujem chybne poschodia
0403 53F00C         1264            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0406 63F0FF         1265            xrl     B, #0FFH        ;  | |
0409 55F0           1266            anl     A, B            ;  | |
040B 541A           1267            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
040D 7021           1268            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
040F E522           1269            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0411 5439           1270            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0413 5A             1271            anl     A, R2           ;  |   
0414 86F0           1272            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1273            ;ANLB    ACC.0, B.1      ;  | 
                    1274 +1         ANLB    ACC.1, B.2      ;  | 
0416 A2E1           1275 +1         mov   C, ACC.1
0418 B0F2           1276 +1         anl   C, /B.2
041A 92E1           1277 +1         mov   ACC.1, C
                    1279 +1         ANLB    ACC.2, B.2      ;  |
041C A2E2           1280 +1         mov   C, ACC.2
041E B0F2           1281 +1         anl   C, /B.2
0420 92E2           1282 +1         mov   ACC.2, C
DEBUG                                                                                                         PAGE 24

                    1284 +1         ANLB    ACC.3, B.3      ;  |
0422 A2E3           1285 +1         mov   C, ACC.3
0424 B0F3           1286 +1         anl   C, /B.3
0426 92E3           1287 +1         mov   ACC.3, C
                    1289 +1         ANLB    ACC.4, B.3      ;  |
0428 A2E4           1290 +1         mov   C, ACC.4
042A B0F3           1291 +1         anl   C, /B.3
042C 92E4           1292 +1         mov   ACC.4, C
                    1294            ;ANLB    ACC.5, B.4      ;  |
042E 7042           1295            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1296            ; Pohyb v opacnom smere (nevieme v ktorom)
0430 E8             1297    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
0431 6401           1298            xrl     A, #01h         ;  |
0433 F8             1299            mov     R0, A           ;  |
0434 B23A           1300            cpl     UPOld           ;  Znegujem stary posun
0436 B23B           1301            cpl     DOWNOld         ;  |
0438 E9             1302            mov     A, R1           ;  Znegujeme masky
0439 F4             1303            cpl     A               ;  |
043A F9             1304            mov     R1, A           ;  |
043B EA             1305            mov     A, R2           ;  |
043C F4             1306            cpl     A               ;  |
043D FA             1307            mov     R2, A           ;  |               
043E E528           1308            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
0440 86F0           1309            mov     B, @R0          ;  | Maskujem chybne poschodia
0442 53F00C         1310            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0445 63F0FF         1311            xrl     B, #0FFH        ;  | |
0448 55F0           1312            anl     A, B            ;  | |
044A 541A           1313            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
044C 59             1314            anl     A, R1           ;  | 
044D 7023           1315            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
044F E522           1316            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
0451 5439           1317            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0453 5A             1318            anl     A, R2           ;  | 
0454 86F0           1319            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1320            ;ANLB    ACC.0, B.1      ;  | 
                    1321 +1         ANLB    ACC.1, B.2      ;  | 
0456 A2E1           1322 +1         mov   C, ACC.1
0458 B0F2           1323 +1         anl   C, /B.2
045A 92E1           1324 +1         mov   ACC.1, C
                    1326 +1         ANLB    ACC.2, B.2      ;  |
045C A2E2           1327 +1         mov   C, ACC.2
045E B0F2           1328 +1         anl   C, /B.2
0460 92E2           1329 +1         mov   ACC.2, C
                    1331 +1         ANLB    ACC.3, B.3      ;  |
0462 A2E3           1332 +1         mov   C, ACC.3
0464 B0F3           1333 +1         anl   C, /B.3
0466 92E3           1334 +1         mov   ACC.3, C
                    1336 +1         ANLB    ACC.4, B.3      ;  |
0468 A2E4           1337 +1         mov   C, ACC.4
046A B0F3           1338 +1         anl   C, /B.3
046C 92E4           1339 +1         mov   ACC.4, C
                    1341            ;ANLB    ACC.5, B.4      ;  |
046E 7002           1342            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0470 61C8           1343            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
DEBUG                                                                                                         PAGE 25

0472 203A03         1344    F2:     jb      UPOld, F2UP     ;   
0475 020484         1345            jmp     F2DOWN          ;
0478 D220           1346    F2UP:   setb    UP              ; rychly pohyb hore
047A D222           1347            setb    FAST            ; 
047C C223           1348            clr     SLOW            ;
047E 12108E         1349            lcall   WRITEPORTS      ; 
0481 020490         1350            jmp     UP2           ;-; prejdi do stavu UP2    
0484 D221           1351    F2DOWN: setb    DOWN            ; rychly pohyb hore
0486 D222           1352            setb    FAST            ; 
0488 C223           1353            clr     SLOW            ;
048A 12108E         1354            lcall   WRITEPORTS      ; 
048D 0206AC         1355            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1356            
                    1357                
0490                1358    UP2:
                    1359            ;--------------------------
                    1360 +1         CFCSS     8, 7, 18, 0, D1
0490 633C07         1361 +1         xrl             G,  #7             
                    1362 +1         IF (D1 <> -1)
0493 E53D           1363 +1             mov   A,  D1         
0495 623C           1364 +1             xrl   G,  A          
                    1365 +1         ENDIF    
0497 E53C           1366 +1         mov   A,  G              
                    1367 +2         LCJNE A,  #8, CFCERR     
0499 B40803         1368 +2         cjne    A, #8, $+6
049C 0204A2         1369 +2         jmp     $+6
049F 020F5C         1370 +2         ljmp    CFCERR
04A2 00             1371 +2         nop
                    1372 +1         IF (18 <> -1)
04A3 753D12         1373 +1             mov         D1, #18     
                    1374 +1         ENDIF
                    1375 +1         IF (0 <> -1)
04A6 753E00         1376 +1             mov         D2, #0     
                    1377 +1         ENDIF
                    1378 +2         SERCHAR   #8             
04A9 7408           1379 +2                 mov               A, #8
04AB 3099FD         1380 +2     jnb     TI, $ 
04AE C299           1381 +2     clr     TI
04B0 F599           1382 +2                 mov     SBUF, A
                    1383 +2     
                    1385            ;--------------------------
                    1386 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
04B2 4325C0         1387 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
04B5 53240F         1388 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
04B8 D225           1389 +1         setb    FLED2
04BA 12108E         1390 +1         lcall   WRITEPORTS
                    1392 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
04BD 120FB2         1393 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
04C0 12102F         1394 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
04C3 3009FA         1395 +1         jnb     MB1, $-3  ; 
04C6 120FB2         1396 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
04C9 12102F         1398    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1399 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
04CC 200B03         1400 +1         jb      SKRH, $+6
04CF 020F1A         1401 +1         ljmp    ERR_SKRH
DEBUG                                                                                                         PAGE 26

04D2 00             1402 +1         nop
                    1404            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    1405 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT
                    1406 +1                                                                                             
                                                                                                                 
                    1407 +1                                                                                             
                                                                                                                 
                    1408 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1409 +1         COUNT    SET    COUNT+1                   
                    1410 +1         
04D3 20091B         1411 +1         jb      MB1, ENDD4
04D6 304304         1412 +1         jnb     PKI3, $+7
04D9 C222           1413 +1         clr     FAST
04DB D223           1414 +1         setb    SLOW
04DD D238           1415 +1         setb    STOPPED         
04DF D253           1416 +1         setb    ERRF23_U
04E1 D25A           1417 +1         setb    ERRF23_D
04E3 053A           1418 +1         inc     ERRF23_C
04E5 C21B           1419 +1                 clr     PKO3                               
04E7 C22C           1420 +1         clr     PO3U            
04E9 C22B           1421 +1         clr     PO3D              
04EB 12108E         1422 +1                 lcall   WRITEPORTS
04EE 0208F6         1423 +1         ljmp    UP3
04F1                1424 +1 ENDD4:
04F1 00             1425 +1         nop
04F2 200AD4         1427            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1428 +1         CLR_FLOOR_ERR   ERRF23
04F5 C253           1429 +1         clr    ERRF23_U
04F7 C25A           1430 +1         clr    ERRF23_D
04F9 00             1431 +1         nop
                    1433 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
04FA 120FB2         1434 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
04FD 12102F         1435 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0500 300AFA         1436 +1         jnb     MB2, $-3  ; 
0503 120FB2         1437 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0506 D22E           1439            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0508 12108E         1440            lcall   WRITEPORTS      ;
050B 02050E         1441            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1442            
                    1443            
050E                1444    UP2_MB2:
                    1445            ;--------------------------
                    1446 +1         CFCSS     18, 26, 8, -1, D2
050E 633C1A         1447 +1         xrl             G,  #26             
                    1448 +1         IF (D2 <> -1)
0511 E53E           1449 +1             mov   A,  D2         
0513 623C           1450 +1             xrl   G,  A          
                    1451 +1         ENDIF    
0515 E53C           1452 +1         mov   A,  G              
                    1453 +2         LCJNE A,  #18, CFCERR     
0517 B41203         1454 +2         cjne    A, #18, $+6
051A 020520         1455 +2         jmp     $+6
051D 020F5C         1456 +2         ljmp    CFCERR
0520 00             1457 +2         nop
                    1458 +1         IF (8 <> -1)
0521 753D08         1459 +1             mov         D1, #8     
DEBUG                                                                                                         PAGE 27

                    1460 +1         ENDIF
                    1461 +1         IF (-1 <> -1)
                    1462 +1             mov         D2, #-1     
                    1463 +1         ENDIF
                    1464 +2         SERCHAR   #18             
0524 7412           1465 +2                 mov               A, #18
0526 3099FD         1466 +2     jnb     TI, $ 
0529 C299           1467 +2     clr     TI
052B F599           1468 +2                 mov     SBUF, A
                    1469 +2     
                    1471            ;--------------------------
                    1472 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
052D 120FB2         1473 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0530 12102F         1474 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0533 300AFA         1475 +1         jnb     MB2, $-3  ; 
0536 120FB2         1476 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0539 12102F         1478    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1479 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
053C 200B03         1480 +1         jb      SKRH, $+6
053F 020F1A         1481 +1         ljmp    ERR_SKRH
0542 00             1482 +1         nop
                    1484            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    1485 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT
                    1486 +1                                                                                             
                                                                                                                 
                    1487 +1                                                                                             
                                                                                                                 
                    1488 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1489 +1         COUNT    SET    COUNT+1                   
                    1490 +1         
0543 20091B         1491 +1         jb      MB1, ENDD5
0546 304304         1492 +1         jnb     PKI3, $+7
0549 C222           1493 +1         clr     FAST
054B D223           1494 +1         setb    SLOW
054D D238           1495 +1         setb    STOPPED         
054F D253           1496 +1         setb    ERRF23_U
0551 D25A           1497 +1         setb    ERRF23_D
0553 053A           1498 +1         inc     ERRF23_C
0555 C21B           1499 +1                 clr     PKO3                               
0557 C22C           1500 +1         clr     PO3U            
0559 C22B           1501 +1         clr     PO3D              
055B 12108E         1502 +1                 lcall   WRITEPORTS
055E 0208F6         1503 +1         ljmp    UP3
0561                1504 +1 ENDD5:
0561 00             1505 +1         nop
0562 200AD4         1507            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
                    1508 +1         CLR_FLOOR_ERR   ERRF23       
0565 C253           1509 +1         clr    ERRF23_U
0567 C25A           1510 +1         clr    ERRF23_D
0569 00             1511 +1         nop
056A D22F           1513            setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
056C 12108E         1514            lcall   WRITEPORTS      ;
                    1515 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
056F 120FB2         1516 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0572 12102F         1517 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0575 300AFA         1518 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 28

0578 120FB2         1519 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1521            
057B                1522    UP2_MB2_CFC:     
                    1523            ;--------------------------
                    1524 +1         CFCSS     1, 19, -1, -1, -1
057B 633C13         1525 +1         xrl             G,  #19             
                    1526 +1         IF (-1 <> -1)
                    1527 +1             mov   A,  -1         
                    1528 +1             xrl   G,  A          
                    1529 +1         ENDIF    
057E E53C           1530 +1         mov   A,  G              
                    1531 +2         LCJNE A,  #1, CFCERR     
0580 B40103         1532 +2         cjne    A, #1, $+6
0583 020589         1533 +2         jmp     $+6
0586 020F5C         1534 +2         ljmp    CFCERR
0589 00             1535 +2         nop
                    1536 +1         IF (-1 <> -1)
                    1537 +1             mov         D1, #-1     
                    1538 +1         ENDIF
                    1539 +1         IF (-1 <> -1)
                    1540 +1             mov         D2, #-1     
                    1541 +1         ENDIF
                    1542 +2         SERCHAR   #1             
058A 7401           1543 +2                 mov               A, #1
058C 3099FD         1544 +2     jnb     TI, $ 
058F C299           1545 +2     clr     TI
0591 F599           1546 +2                 mov     SBUF, A
                    1547 +2     
                    1549            ;--------------------------        
                    1550 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1551 +1                                         
0593 C3             1552 +1         clr     C                       
0594 7400           1553 +1         mov     A, #0h                  
0596 7214           1554 +1         orl     C, PI3U      
0598 B00E           1555 +1         anl     C, /DPZK                
059A 7243           1556 +1         orl     C, PKI3          
059C B053           1557 +1         anl     C, /ERRF3_U 
059E 720F           1558 +1         orl     C, DPK                  
05A0 7238           1559 +1         orl     C, STOPPED              
05A2 3400           1560 +1         addc    A, #0h                  
05A4 704B           1562            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1563 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
05A6 E522           1564 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
05A8 33             1565 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
05A9 547E           1566 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1567 +1         
                    1568 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1569 +2         ANLB    ACC.3, ERRF2_U  ; |
05AB A2E3           1570 +2         mov   C, ACC.3
05AD B052           1571 +2         anl   C, /ERRF2_U
05AF 92E3           1572 +2         mov   ACC.3, C
                    1573 +2         ANLB    ACC.4, ERRF3_U  ; |
05B1 A2E4           1574 +2         mov   C, ACC.4
DEBUG                                                                                                         PAGE 29

05B3 B053           1575 +2         anl   C, /ERRF3_U
05B5 92E4           1576 +2         mov   ACC.4, C
                    1577 +2         ANLB    ACC.5, ERRF3_U  ; |
05B7 A2E5           1578 +2         mov   C, ACC.5
05B9 B053           1579 +2         anl   C, /ERRF3_U
05BB 92E5           1580 +2         mov   ACC.5, C
                    1581 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1582 +1         
05BD 7805           1583 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1584 +1  ; LL1: 
05BF 6006           1585 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
05C1 C3             1586 +1         clr     C               ; Inak shiftnem o 2
05C2 13             1587 +1         rrc     A               ;
05C3 C3             1588 +1         clr     C               ;
05C4 13             1589 +1         rrc     A               ;
05C5 D8F8           1590 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1591 +1 ; LL2:
05C7 7405           1592 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
05C9 C3             1593 +1         clr     C               ;
05CA 98             1594 +1         subb    A, R0           ;
                    1596 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
05CB B40303         1597 +1         cjne    A, #3, $+6
05CE 0205D4         1598 +1         jmp     $+6
05D1 0205FB         1599 +1         ljmp    UP2_MB1
05D4 00             1600 +1         nop
                    1602 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
05D5 E528           1603 +1         mov     A, INPORTA
05D7 541E           1604 +1         anl     A, #00011110b
05D9 852AF0         1605 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
05DC 53F00C         1606 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
05DF 63F0FF         1607 +1         xrl     B, #0FFH
05E2 55F0           1608 +1         anl     A, B
05E4 C3             1609 +1         clr     C
05E5 13             1610 +1         rrc     A
                    1611 +1 ;LL1    
05E6 7803           1612 +1         mov     R0, #3
05E8 C3             1613 +1         clr     C
05E9 13             1614 +1         rrc     A
05EA D8FC           1615 +1         djnz    R0, $-2;LL1
05EC 6003           1617            jz      U2_MB2C         ; |   ak neni zastavujem  
05EE 0205FB         1618            ljmp    UP2_MB1         ; |   inak nezastavim
05F1 D223           1619    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
05F3 C222           1620            clr     FAST            ; 
05F5 12108E         1621            lcall   WRITEPORTS      ;
05F8 020654         1622            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    1623          
05FB                1624    UP2_MB1:
                    1625            ;--------------------------
                    1626 +1         CFCSS     26, 27, 0, 17, -1
05FB 633C1B         1627 +1         xrl             G,  #27             
                    1628 +1         IF (-1 <> -1)
                    1629 +1             mov   A,  -1         
                    1630 +1             xrl   G,  A          
DEBUG                                                                                                         PAGE 30

                    1631 +1         ENDIF    
05FE E53C           1632 +1         mov   A,  G              
                    1633 +2         LCJNE A,  #26, CFCERR     
0600 B41A03         1634 +2         cjne    A, #26, $+6
0603 020609         1635 +2         jmp     $+6
0606 020F5C         1636 +2         ljmp    CFCERR
0609 00             1637 +2         nop
                    1638 +1         IF (0 <> -1)
060A 753D00         1639 +1             mov         D1, #0     
                    1640 +1         ENDIF
                    1641 +1         IF (17 <> -1)
060D 753E11         1642 +1             mov         D2, #17     
                    1643 +1         ENDIF
                    1644 +2         SERCHAR   #26             
0610 741A           1645 +2                 mov               A, #26
0612 3099FD         1646 +2     jnb     TI, $ 
0615 C299           1647 +2     clr     TI
0617 F599           1648 +2                 mov     SBUF, A
                    1649 +2     
                    1651            ;--------------------------
                    1652 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0619 120FB2         1653 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
061C 12102F         1654 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
061F 300AFA         1655 +1         jnb     MB2, $-3  ; 
0622 120FB2         1656 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0625 12102F         1658    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    1659 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0628 200B03         1660 +1         jb      SKRH, $+6
062B 020F1A         1661 +1         ljmp    ERR_SKRH
062E 00             1662 +1         nop
                    1664            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    1665 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT
                    1666 +1                                                                                             
                                                                                                                 
                    1667 +1                                                                                             
                                                                                                                 
                    1668 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              1669 +1         COUNT    SET    COUNT+1                   
                    1670 +1         
062F 200A1B         1671 +1         jb      MB2, ENDD6
0632 304304         1672 +1         jnb     PKI3, $+7
0635 C222           1673 +1         clr     FAST
0637 D223           1674 +1         setb    SLOW
0639 D238           1675 +1         setb    STOPPED         
063B D253           1676 +1         setb    ERRF3_U
063D D25B           1677 +1         setb    ERRF3_D
063F 0537           1678 +1         inc     ERRF3_C
0641 C21B           1679 +1                 clr     PKO3                               
0643 C22C           1680 +1         clr     PO3U            
0645 C22B           1681 +1         clr     PO3D              
0647 12108E         1682 +1                 lcall   WRITEPORTS
064A 020987         1683 +1         ljmp    UP3_MB2
064D                1684 +1 ENDD6:
064D 00             1685 +1         nop
064E 2009D4         1687            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
0651 0208F6         1688            ljmp    UP3             ; 
DEBUG                                                                                                         PAGE 31

                    1689    
                    1690    
0654                1691    UP2_STOP:
                    1692            ;--------------------------
                    1693 +1         CFCSS     4, 5, 9, 15, -1
0654 633C05         1694 +1         xrl             G,  #5             
                    1695 +1         IF (-1 <> -1)
                    1696 +1             mov   A,  -1         
                    1697 +1             xrl   G,  A          
                    1698 +1         ENDIF    
0657 E53C           1699 +1         mov   A,  G              
                    1700 +2         LCJNE A,  #4, CFCERR     
0659 B40403         1701 +2         cjne    A, #4, $+6
065C 020662         1702 +2         jmp     $+6
065F 020F5C         1703 +2         ljmp    CFCERR
0662 00             1704 +2         nop
                    1705 +1         IF (9 <> -1)
0663 753D09         1706 +1             mov         D1, #9     
                    1707 +1         ENDIF
                    1708 +1         IF (15 <> -1)
0666 753E0F         1709 +1             mov         D2, #15     
                    1710 +1         ENDIF
                    1711 +2         SERCHAR   #4             
0669 7404           1712 +2                 mov               A, #4
066B 3099FD         1713 +2     jnb     TI, $ 
066E C299           1714 +2     clr     TI
0670 F599           1715 +2                 mov     SBUF, A
                    1716 +2     
                    1718            ;--------------------------
0672                1719    UP2_STOP_C:
0672 12102F         1720            lcall   READPORTS       ; nacitanie dat
                    1721 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0675 200B03         1722 +1         jb      SKRH, $+6
0678 020F1A         1723 +1         ljmp    ERR_SKRH
067B 00             1724 +1         nop
                    1726            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    1727 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT
                    1728 +1                                                                                             
                                                                                                                 
                    1729 +1                                                                                             
                                                                                                                 
                    1730 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              1731 +1         COUNT    SET    COUNT+1                   
                    1732 +1         
067C 200A1B         1733 +1         jb      MB2, ENDD7
067F 304304         1734 +1         jnb     PKI3, $+7
0682 C222           1735 +1         clr     FAST
0684 D223           1736 +1         setb    SLOW
0686 D238           1737 +1         setb    STOPPED         
0688 D253           1738 +1         setb    ERRF3_U
068A D25B           1739 +1         setb    ERRF3_D
068C 0537           1740 +1         inc     ERRF3_C
068E C21B           1741 +1                 clr     PKO3                               
0690 C22C           1742 +1         clr     PO3U            
0692 C22B           1743 +1         clr     PO3D              
0694 12108E         1744 +1                 lcall   WRITEPORTS
0697 020987         1745 +1         ljmp    UP3_MB2
DEBUG                                                                                                         PAGE 32

069A                1746 +1 ENDD7:
069A 00             1747 +1         nop
069B 2009D4         1749            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
069E C220           1750            clr     UP              ; zastav motor
06A0 D23A           1751            setb    UPOld           ;       (a zalohuj)
06A2 C23B           1752            clr     DOWNOld         ;       (a zalohuj)
06A4 C222           1753            clr     FAST            ; 
06A6 12108E         1754            lcall   WRITEPORTS      ; 
06A9 0207FC         1755            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    1756            
06AC                1757    DOWN2:
                    1758            ;--------------------------
                    1759 +1         CFCSS     24, 9, 6, 9, D2
06AC 633C09         1760 +1         xrl             G,  #9             
                    1761 +1         IF (D2 <> -1)
06AF E53E           1762 +1             mov   A,  D2         
06B1 623C           1763 +1             xrl   G,  A          
                    1764 +1         ENDIF    
06B3 E53C           1765 +1         mov   A,  G              
                    1766 +2         LCJNE A,  #24, CFCERR     
06B5 B41803         1767 +2         cjne    A, #24, $+6
06B8 0206BE         1768 +2         jmp     $+6
06BB 020F5C         1769 +2         ljmp    CFCERR
06BE 00             1770 +2         nop
                    1771 +1         IF (6 <> -1)
06BF 753D06         1772 +1             mov         D1, #6     
                    1773 +1         ENDIF
                    1774 +1         IF (9 <> -1)
06C2 753E09         1775 +1             mov         D2, #9     
                    1776 +1         ENDIF
                    1777 +2         SERCHAR   #24             
06C5 7418           1778 +2                 mov               A, #24
06C7 3099FD         1779 +2     jnb     TI, $ 
06CA C299           1780 +2     clr     TI
06CC F599           1781 +2                 mov     SBUF, A
                    1782 +2     
                    1784            ;--------------------------
                    1785 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
06CE 4325C0         1786 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
06D1 53240F         1787 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
06D4 D225           1788 +1         setb    FLED2
06D6 12108E         1789 +1         lcall   WRITEPORTS
                    1791 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
06D9 120FB2         1792 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
06DC 12102F         1793 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06DF 3009FA         1794 +1         jnb     MB1, $-3  ; 
06E2 120FB2         1795 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
06E5 12102F         1797    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    1798 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
06E8 200C03         1799 +1         jb      SKRD, $+6
06EB 020F11         1800 +1         ljmp    ERR_SKRD
06EE 00             1801 +1         nop
                    1803            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    1804 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT
DEBUG                                                                                                         PAGE 33

                    1805 +1                                                                                             
                                                                                                                 
                    1806 +1                                                                                             
                                                                                                                 
                    1807 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              1808 +1         COUNT    SET    COUNT+1                   
                    1809 +1         
06EF 20091B         1810 +1         jb      MB1, ENDD8
06F2 304104         1811 +1         jnb     PKI1, $+7
06F5 C222           1812 +1         clr     FAST
06F7 D223           1813 +1         setb    SLOW
06F9 D238           1814 +1         setb    STOPPED         
06FB D252           1815 +1         setb    ERRF12_U
06FD D259           1816 +1         setb    ERRF12_D
06FF 0539           1817 +1         inc     ERRF12_C
0701 C219           1818 +1                 clr     PKO1                               
0703 C228           1819 +1         clr     PO1U            
0705 C228           1820 +1         clr     PO1D              
0707 12108E         1821 +1                 lcall   WRITEPORTS
070A 020711         1822 +1         ljmp    DOWN2ERR
070D                1823 +1 ENDD8:
070D 00             1824 +1         nop
070E 020720         1826            jmp     DOWN2ERR_CONTINUE
0711                1827    DOWN2ERR:
0711 C221           1828            clr     DOWN            ; zastav motor
0713 D23B           1829            setb    DOWNOld         ;       (a zalohuj)
0715 C23A           1830            clr     UPOld           ;       (a zalohuj)
0717 C222           1831            clr     FAST            ; 
0719 C223           1832            clr     SLOW            ;
071B 12108E         1833            lcall   WRITEPORTS      ; 
071E 2115           1834            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0720                1835    DOWN2ERR_CONTINUE:
0720 200AC2         1836            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    1837 +1         CLR_FLOOR_ERR   ERRF12
0723 C252           1838 +1         clr    ERRF12_U
0725 C259           1839 +1         clr    ERRF12_D
0727 00             1840 +1         nop
                    1842 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0728 120FB2         1843 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
072B 12102F         1844 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
072E 300AFA         1845 +1         jnb     MB2, $-3  ; 
0731 120FB2         1846 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0734 D22F           1848            setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0736 12108E         1849            lcall   WRITEPORTS      ;
0739 02073C         1850            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    1851    
                    1852    
073C                1853    DOWN2_MB2:
                    1854            ;--------------------------
                    1855 +1         CFCSS     31, 14, 1, -1, D2
073C 633C0E         1856 +1         xrl             G,  #14             
                    1857 +1         IF (D2 <> -1)
073F E53E           1858 +1             mov   A,  D2         
0741 623C           1859 +1             xrl   G,  A          
                    1860 +1         ENDIF    
0743 E53C           1861 +1         mov   A,  G              
                    1862 +2         LCJNE A,  #31, CFCERR     
DEBUG                                                                                                         PAGE 34

0745 B41F03         1863 +2         cjne    A, #31, $+6
0748 02074E         1864 +2         jmp     $+6
074B 020F5C         1865 +2         ljmp    CFCERR
074E 00             1866 +2         nop
                    1867 +1         IF (1 <> -1)
074F 753D01         1868 +1             mov         D1, #1     
                    1869 +1         ENDIF
                    1870 +1         IF (-1 <> -1)
                    1871 +1             mov         D2, #-1     
                    1872 +1         ENDIF
                    1873 +2         SERCHAR   #31             
0752 741F           1874 +2                 mov               A, #31
0754 3099FD         1875 +2     jnb     TI, $ 
0757 C299           1876 +2     clr     TI
0759 F599           1877 +2                 mov     SBUF, A
                    1878 +2     
                    1880            ;--------------------------
                    1881 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
075B 120FB2         1882 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
075E 12102F         1883 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0761 300AFA         1884 +1         jnb     MB2, $-3  ; 
0764 120FB2         1885 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0767                1887    DOWN2_MB2A:
0767 12102F         1888            lcall   READPORTS       ; nacitanie dat
                    1889 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
076A 200C03         1890 +1         jb      SKRD, $+6
076D 020F11         1891 +1         ljmp    ERR_SKRD
0770 00             1892 +1         nop
                    1894            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    1895 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT
                    1896 +1                                                                                             
                                                                                                                 
                    1897 +1                                                                                             
                                                                                                                 
                    1898 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              1899 +1         COUNT    SET    COUNT+1                   
                    1900 +1         
0771 20091B         1901 +1         jb      MB1, ENDD9
0774 304104         1902 +1         jnb     PKI1, $+7
0777 C222           1903 +1         clr     FAST
0779 D223           1904 +1         setb    SLOW
077B D238           1905 +1         setb    STOPPED         
077D D252           1906 +1         setb    ERRF12_U
077F D259           1907 +1         setb    ERRF12_D
0781 0539           1908 +1         inc     ERRF12_C
0783 C219           1909 +1                 clr     PKO1                               
0785 C228           1910 +1         clr     PO1U            
0787 C228           1911 +1         clr     PO1D              
0789 12108E         1912 +1                 lcall   WRITEPORTS
078C 020793         1913 +1         ljmp    DOWN2_MB2ERR
078F                1914 +1 ENDD9:
078F 00             1915 +1         nop
0790 0207A2         1917            jmp     DOWN2_MB2ERR_CONTINUE
0793                1918    DOWN2_MB2ERR:
0793 C221           1919            clr     DOWN            ; zastav motor
0795 D23B           1920            setb    DOWNOld         ;       (a zalohuj)
DEBUG                                                                                                         PAGE 35

0797 C23A           1921            clr     UPOld           ;       (a zalohuj)
0799 C222           1922            clr     FAST            ; 
079B C223           1923            clr     SLOW            ;
079D 12108E         1924            lcall   WRITEPORTS      ; 
07A0 2115           1925            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
07A2                1926    DOWN2_MB2ERR_CONTINUE:
07A2 200AC2         1927            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    1928 +1         CLR_FLOOR_ERR   ERRF12      
07A5 C252           1929 +1         clr    ERRF12_U
07A7 C259           1930 +1         clr    ERRF12_D
07A9 00             1931 +1         nop
07AA D22E           1933            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
07AC 12108E         1934            lcall   WRITEPORTS      ;
                    1935 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
07AF 120FB2         1936 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07B2 12102F         1937 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07B5 300AFA         1938 +1         jnb     MB2, $-3  ; 
07B8 120FB2         1939 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1941    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    1942    ;        anl     A, #00000010b ;-;
                    1943    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
07BB D223           1944            setb    SLOW            ;       Ak ano, spomalme
07BD C222           1945            clr     FAST            ; 
07BF 12108E         1946            lcall   WRITEPORTS      ;
07C2 0207C5         1947            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
07C5                1948    DOWN2_MB1:    
                    1949            ;--------------------------
                    1950 +1         CFCSS     14, 17, 16, -1, -1
07C5 633C11         1951 +1         xrl             G,  #17             
                    1952 +1         IF (-1 <> -1)
                    1953 +1             mov   A,  -1         
                    1954 +1             xrl   G,  A          
                    1955 +1         ENDIF    
07C8 E53C           1956 +1         mov   A,  G              
                    1957 +2         LCJNE A,  #14, CFCERR     
07CA B40E03         1958 +2         cjne    A, #14, $+6
07CD 0207D3         1959 +2         jmp     $+6
07D0 020F5C         1960 +2         ljmp    CFCERR
07D3 00             1961 +2         nop
                    1962 +1         IF (16 <> -1)
07D4 753D10         1963 +1             mov         D1, #16     
                    1964 +1         ENDIF
                    1965 +1         IF (-1 <> -1)
                    1966 +1             mov         D2, #-1     
                    1967 +1         ENDIF
                    1968 +2         SERCHAR   #14             
07D7 740E           1969 +2                 mov               A, #14
07D9 3099FD         1970 +2     jnb     TI, $ 
07DC C299           1971 +2     clr     TI
07DE F599           1972 +2                 mov     SBUF, A
                    1973 +2     
                    1975            ;--------------------------
07E0 12102F         1976    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
07E3 300907         1977            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
07E6 200CF7         1978            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
DEBUG                                                                                                         PAGE 36

07E9 D259           1979            setb    ERRF1_D
07EB 0535           1980            inc     ERRF1_C
                    1981    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
07ED C238           1982    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
07EF C221           1983            clr     DOWN            ; zastav motor
07F1 D23B           1984            setb    DOWNOld         ;       (a zalohuj)
07F3 C23A           1985            clr     UPOld           ;       (a zalohuj)
07F5 C222           1986            clr     FAST            ; 
07F7 12108E         1987            lcall   WRITEPORTS      ; 
07FA 2115           1988            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    1989    
                    1990    
                    1991    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    1992    
07FC                1993    FLOOR3:
                    1994            ;--------------------------
                    1995 +1         CFCSS     10, 7, 16, 19, D1
07FC 633C07         1996 +1         xrl             G,  #7             
                    1997 +1         IF (D1 <> -1)
07FF E53D           1998 +1             mov   A,  D1         
0801 623C           1999 +1             xrl   G,  A          
                    2000 +1         ENDIF    
0803 E53C           2001 +1         mov   A,  G              
                    2002 +2         LCJNE A,  #10, CFCERR     
0805 B40A03         2003 +2         cjne    A, #10, $+6
0808 02080E         2004 +2         jmp     $+6
080B 020F5C         2005 +2         ljmp    CFCERR
080E 00             2006 +2         nop
                    2007 +1         IF (16 <> -1)
080F 753D10         2008 +1             mov         D1, #16     
                    2009 +1         ENDIF
                    2010 +1         IF (19 <> -1)
0812 753E13         2011 +1             mov         D2, #19     
                    2012 +1         ENDIF
                    2013 +2         SERCHAR   #10             
0815 740A           2014 +2                 mov               A, #10
0817 3099FD         2015 +2     jnb     TI, $ 
081A C299           2016 +2     clr     TI
081C F599           2017 +2                 mov     SBUF, A
                    2018 +2     
                    2020            ;--------------------------
                    2021 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
081E 4325C0         2022 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0821 53240F         2023 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0824 D226           2024 +1         setb    FLED3
0826 12108E         2025 +1         lcall   WRITEPORTS
0829 C238           2027            clr     STOPPED
082B 120FE7         2028            lcall   WAITFORTIMER    ; simulacia TIMERu
082E 12102F         2029    F3S:    lcall   READPORTS     ;-; nacitanie dat
0831 C21B           2030            clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
0833 C22C           2031            clr     PO3U            ;
0835 C22B           2032            clr     PO3D            ;
0837 12108E         2033            lcall   WRITEPORTS      ;
083A 200FF1         2034            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
083D 782A           2035            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
DEBUG                                                                                                         PAGE 37

                                                                               hy poschodia smerom hore)
083F 79F0           2036            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
0841 7AE0           2037            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
0843 203A0A         2038            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
0846 E9             2039            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
0847 F4             2040            cpl     A               ;       |
0848 F9             2041            mov     R1, A           ;       |
0849 EA             2042            mov     A, R2           ;       A znegujeme aj masku sachty
084A F4             2043            cpl     A               ;       |
084B FA             2044            mov     R2, A           ;       |     
084C E8             2045            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
084D 6401           2046            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
084F F8             2047            mov     R0, A           ;       |    
0850                2048    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
0850 E528           2049            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
0852 86F0           2050            mov     B, @R0          ;  | Maskujem chybne poschodia
0854 53F00C         2051            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
0857 63F0FF         2052            xrl     B, #0FFH        ;  | |
085A 55F0           2053            anl     A, B            ;  | |
085C 5416           2054            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
085E 59             2055            anl     A, R1           ;  | 
                    2056 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
085F 6003           2057 +1         jz      $+5
0861 0208D8         2058 +1         ljmp    F3
0864 00             2059 +1         nop
                    2061                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0865 E528           2062            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0867 86F0           2063            mov     B, @R0          ;  | Maskujem chybne poschodia
0869 53F00C         2064            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
086C 63F0FF         2065            xrl     B, #0FFH        ;  | |
086F 55F0           2066            anl     A, B            ;  | |
0871 5416           2067            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
0873 7021           2068            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0875 E522           2069            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0877 5427           2070            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0879 5A             2071            anl     A, R2           ;  |   
087A 86F0           2072            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2073            ;ANLB    ACC.0, B.1      ;  | 
                    2074 +1         ANLB    ACC.1, B.2      ;  | 
087C A2E1           2075 +1         mov   C, ACC.1
087E B0F2           2076 +1         anl   C, /B.2
0880 92E1           2077 +1         mov   ACC.1, C
                    2079 +1         ANLB    ACC.2, B.2      ;  |
0882 A2E2           2080 +1         mov   C, ACC.2
0884 B0F2           2081 +1         anl   C, /B.2
0886 92E2           2082 +1         mov   ACC.2, C
                    2084 +1         ANLB    ACC.3, B.3      ;  |
0888 A2E3           2085 +1         mov   C, ACC.3
088A B0F3           2086 +1         anl   C, /B.3
088C 92E3           2087 +1         mov   ACC.3, C
DEBUG                                                                                                         PAGE 38

                    2089 +1         ANLB    ACC.4, B.3      ;  |
088E A2E4           2090 +1         mov   C, ACC.4
0890 B0F3           2091 +1         anl   C, /B.3
0892 92E4           2092 +1         mov   ACC.4, C
                    2094            ;ANLB    ACC.5, B.4      ;  |
0894 7042           2095            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2096            ; Pohyb v opacnom smere (nevieme v ktorom)
0896 E8             2097    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
0897 6401           2098            xrl     A, #01h         ;  |
0899 F8             2099            mov     R0, A           ;  |
089A B23A           2100            cpl     UPOld           ;  Znegujem stary posun
089C B23B           2101            cpl     DOWNOld         ;  |
089E E9             2102            mov     A, R1           ;  Znegujeme masky
089F F4             2103            cpl     A               ;  |
08A0 F9             2104            mov     R1, A           ;  |
08A1 EA             2105            mov     A, R2           ;  |
08A2 F4             2106            cpl     A               ;  |
08A3 FA             2107            mov     R2, A           ;  |               
08A4 E528           2108            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
08A6 86F0           2109            mov     B, @R0          ;  | Maskujem chybne poschodia
08A8 53F00C         2110            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
08AB 63F0FF         2111            xrl     B, #0FFH        ;  | |
08AE 55F0           2112            anl     A, B            ;  | |
08B0 5416           2113            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
08B2 59             2114            anl     A, R1           ;  | 
08B3 7023           2115            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
08B5 E522           2116            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
08B7 5427           2117            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
08B9 5A             2118            anl     A, R2           ;  | 
08BA 86F0           2119            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2120            ;ANLB    ACC.0, B.1      ;  | 
                    2121 +1         ANLB    ACC.1, B.2      ;  | 
08BC A2E1           2122 +1         mov   C, ACC.1
08BE B0F2           2123 +1         anl   C, /B.2
08C0 92E1           2124 +1         mov   ACC.1, C
                    2126 +1         ANLB    ACC.2, B.2      ;  |
08C2 A2E2           2127 +1         mov   C, ACC.2
08C4 B0F2           2128 +1         anl   C, /B.2
08C6 92E2           2129 +1         mov   ACC.2, C
                    2131 +1         ANLB    ACC.3, B.3      ;  |
08C8 A2E3           2132 +1         mov   C, ACC.3
08CA B0F3           2133 +1         anl   C, /B.3
08CC 92E3           2134 +1         mov   ACC.3, C
                    2136 +1         ANLB    ACC.4, B.3      ;  |
08CE A2E4           2137 +1         mov   C, ACC.4
08D0 B0F3           2138 +1         anl   C, /B.3
08D2 92E4           2139 +1         mov   ACC.4, C
                    2141            ;ANLB    ACC.5, B.4      ;  |
08D4 7002           2142            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
08D6 012E           2143            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
08D8 203A03         2144    F3:     jb      UPOld, F3UP     ;   
08DB 0208EA         2145            jmp     F3DOWN          ;
08DE D220           2146    F3UP:   setb    UP              ; rychly pohyb hore
08E0 D222           2147            setb    FAST            ; 
DEBUG                                                                                                         PAGE 39

08E2 C223           2148            clr     SLOW            ;
08E4 12108E         2149            lcall   WRITEPORTS      ; 
08E7 0208F6         2150            jmp     UP3           ;-; prejdi do stavu UP2    
08EA D221           2151    F3DOWN: setb    DOWN            ; rychly pohyb hore
08EC D222           2152            setb    FAST            ; 
08EE C223           2153            clr     SLOW            ;
08F0 12108E         2154            lcall   WRITEPORTS      ; 
08F3 020A55         2155            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2156         
                    2157         
08F6                2158    UP3:
                    2159            ;--------------------------
                    2160 +1         CFCSS     11, 17, 14, 0, D1
08F6 633C11         2161 +1         xrl             G,  #17             
                    2162 +1         IF (D1 <> -1)
08F9 E53D           2163 +1             mov   A,  D1         
08FB 623C           2164 +1             xrl   G,  A          
                    2165 +1         ENDIF    
08FD E53C           2166 +1         mov   A,  G              
                    2167 +2         LCJNE A,  #11, CFCERR     
08FF B40B03         2168 +2         cjne    A, #11, $+6
0902 020908         2169 +2         jmp     $+6
0905 020F5C         2170 +2         ljmp    CFCERR
0908 00             2171 +2         nop
                    2172 +1         IF (14 <> -1)
0909 753D0E         2173 +1             mov         D1, #14     
                    2174 +1         ENDIF
                    2175 +1         IF (0 <> -1)
090C 753E00         2176 +1             mov         D2, #0     
                    2177 +1         ENDIF
                    2178 +2         SERCHAR   #11             
090F 740B           2179 +2                 mov               A, #11
0911 3099FD         2180 +2     jnb     TI, $ 
0914 C299           2181 +2     clr     TI
0916 F599           2182 +2                 mov     SBUF, A
                    2183 +2     
                    2185            ;--------------------------
                    2186 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0918 4325C0         2187 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
091B 53240F         2188 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
091E D226           2189 +1         setb    FLED3
0920 12108E         2190 +1         lcall   WRITEPORTS
                    2192 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0923 120FB2         2193 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0926 12102F         2194 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0929 3009FA         2195 +1         jnb     MB1, $-3  ; 
092C 120FB2         2196 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
092F 12102F         2198    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2199 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0932 200B03         2200 +1         jb      SKRH, $+6
0935 020F1A         2201 +1         ljmp    ERR_SKRH
0938 00             2202 +1         nop
                    2204            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    2205 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT
DEBUG                                                                                                         PAGE 40

                    2206 +1                                                                                             
                                                                                                                 
                    2207 +1                                                                                             
                                                                                                                 
                    2208 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2209 +1         COUNT    SET    COUNT+1                   
                    2210 +1         
0939 20091B         2211 +1         jb      MB1, ENDD10
093C 304404         2212 +1         jnb     PKI4, $+7
093F C222           2213 +1         clr     FAST
0941 D223           2214 +1         setb    SLOW
0943 D238           2215 +1         setb    STOPPED         
0945 D254           2216 +1         setb    ERRF34_U
0947 D25B           2217 +1         setb    ERRF34_D
0949 053B           2218 +1         inc     ERRF34_C
094B C21C           2219 +1                 clr     PKO4                               
094D C22D           2220 +1         clr     PO4U            
094F C22D           2221 +1         clr     PO4D              
0951 12108E         2222 +1                 lcall   WRITEPORTS
0954 02095B         2223 +1         ljmp    UP3ERR
0957                2224 +1 ENDD10:
0957 00             2225 +1         nop
0958 02096B         2227            jmp     UP3ERR_CONTINUE
095B                2228    UP3ERR:
095B C220           2229            clr     UP              ; zastav motor
095D D23A           2230            setb    UPOld           ;       (a zalohuj)
095F C23B           2231            clr     DOWNOld         ;       (a zalohuj)
0961 C222           2232            clr     FAST            ;
0963 C223           2233            clr     SLOW            ;
0965 12108E         2234            lcall   WRITEPORTS      ; 
0968 020C67         2235            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
096B                2236    UP3ERR_CONTINUE:
096B 200AC1         2237            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2238 +1         CLR_FLOOR_ERR   ERRF34
096E C254           2239 +1         clr    ERRF34_U
0970 C25B           2240 +1         clr    ERRF34_D
0972 00             2241 +1         nop
                    2243 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0973 120FB2         2244 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0976 12102F         2245 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0979 300AFA         2246 +1         jnb     MB2, $-3  ; 
097C 120FB2         2247 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
097F D22E           2249            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0981 12108E         2250            lcall   WRITEPORTS      ;
0984 020987         2251            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2252    
0987                2253    UP3_MB2:
                    2254            ;--------------------------
                    2255 +1         CFCSS     3, 8, 6, -1, D2
0987 633C08         2256 +1         xrl             G,  #8             
                    2257 +1         IF (D2 <> -1)
098A E53E           2258 +1             mov   A,  D2         
098C 623C           2259 +1             xrl   G,  A          
                    2260 +1         ENDIF    
098E E53C           2261 +1         mov   A,  G              
                    2262 +2         LCJNE A,  #3, CFCERR     
0990 B40303         2263 +2         cjne    A, #3, $+6
DEBUG                                                                                                         PAGE 41

0993 020999         2264 +2         jmp     $+6
0996 020F5C         2265 +2         ljmp    CFCERR
0999 00             2266 +2         nop
                    2267 +1         IF (6 <> -1)
099A 753D06         2268 +1             mov         D1, #6     
                    2269 +1         ENDIF
                    2270 +1         IF (-1 <> -1)
                    2271 +1             mov         D2, #-1     
                    2272 +1         ENDIF
                    2273 +2         SERCHAR   #3             
099D 7403           2274 +2                 mov               A, #3
099F 3099FD         2275 +2     jnb     TI, $ 
09A2 C299           2276 +2     clr     TI
09A4 F599           2277 +2                 mov     SBUF, A
                    2278 +2     
                    2280            ;--------------------------
                    2281 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
09A6 120FB2         2282 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09A9 12102F         2283 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
09AC 300AFA         2284 +1         jnb     MB2, $-3  ; 
09AF 120FB2         2285 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
09B2                2287    UP3_MB2A:
09B2 12102F         2288            lcall   READPORTS       ; nacitanie dat
                    2289 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
09B5 200B03         2290 +1         jb      SKRH, $+6
09B8 020F1A         2291 +1         ljmp    ERR_SKRH
09BB 00             2292 +1         nop
                    2294            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    2295 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT
                    2296 +1                                                                                             
                                                                                                                 
                    2297 +1                                                                                             
                                                                                                                 
                    2298 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2299 +1         COUNT    SET    COUNT+1                   
                    2300 +1         
09BC 20091B         2301 +1         jb      MB1, ENDD11
09BF 304404         2302 +1         jnb     PKI4, $+7
09C2 C222           2303 +1         clr     FAST
09C4 D223           2304 +1         setb    SLOW
09C6 D238           2305 +1         setb    STOPPED         
09C8 D254           2306 +1         setb    ERRF34_U
09CA D25B           2307 +1         setb    ERRF34_D
09CC 053B           2308 +1         inc     ERRF34_C
09CE C21C           2309 +1                 clr     PKO4                               
09D0 C22D           2310 +1         clr     PO4U            
09D2 C22D           2311 +1         clr     PO4D              
09D4 12108E         2312 +1                 lcall   WRITEPORTS
09D7 0209DE         2313 +1         ljmp    UP3_MB2ERR
09DA                2314 +1 ENDD11:
09DA 00             2315 +1         nop
09DB 0209EE         2317            jmp     UP3_MB2ERR_CONTINUE
09DE                2318    UP3_MB2ERR:
09DE C220           2319            clr     UP              ; zastav motor
09E0 D23A           2320            setb    UPOld           ;       (a zalohuj)
09E2 C23B           2321            clr     DOWNOld         ;       (a zalohuj)
DEBUG                                                                                                         PAGE 42

09E4 C222           2322            clr     FAST            ;
09E6 C223           2323            clr     SLOW            ;
09E8 12108E         2324            lcall   WRITEPORTS      ; 
09EB 020C67         2325            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
09EE                2326    UP3_MB2ERR_CONTINUE:
09EE 200AC1         2327            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2328 +1         CLR_FLOOR_ERR   ERRF34      
09F1 C254           2329 +1         clr    ERRF34_U
09F3 C25B           2330 +1         clr    ERRF34_D
09F5 00             2331 +1         nop
09F6 D22F           2333            setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
09F8 12108E         2334            lcall   WRITEPORTS      ;
                    2335 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
09FB 120FB2         2336 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
09FE 12102F         2337 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A01 300AFA         2338 +1         jnb     MB2, $-3  ; 
0A04 120FB2         2339 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2341    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2342    ;        anl     A, #00010000b ;-;
                    2343    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0A07 D223           2344            setb    SLOW            ;       Ak ano, spomalme
0A09 C222           2345            clr     FAST            ; 
0A0B 12108E         2346            lcall   WRITEPORTS      ;
0A0E 020A11         2347            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2348    
                    2349    
0A11                2350    UP3_MB1:
                    2351            ;--------------------------
                    2352 +1         CFCSS     5, 6, 0, -1, -1
0A11 633C06         2353 +1         xrl             G,  #6             
                    2354 +1         IF (-1 <> -1)
                    2355 +1             mov   A,  -1         
                    2356 +1             xrl   G,  A          
                    2357 +1         ENDIF    
0A14 E53C           2358 +1         mov   A,  G              
                    2359 +2         LCJNE A,  #5, CFCERR     
0A16 B40503         2360 +2         cjne    A, #5, $+6
0A19 020A1F         2361 +2         jmp     $+6
0A1C 020F5C         2362 +2         ljmp    CFCERR
0A1F 00             2363 +2         nop
                    2364 +1         IF (0 <> -1)
0A20 753D00         2365 +1             mov         D1, #0     
                    2366 +1         ENDIF
                    2367 +1         IF (-1 <> -1)
                    2368 +1             mov         D2, #-1     
                    2369 +1         ENDIF
                    2370 +2         SERCHAR   #5             
0A23 7405           2371 +2                 mov               A, #5
0A25 3099FD         2372 +2     jnb     TI, $ 
0A28 C299           2373 +2     clr     TI
0A2A F599           2374 +2                 mov     SBUF, A
                    2375 +2     
                    2377            ;--------------------------
                    2378 +1         ZAKMITC MB2
0A2C 120FB2         2379 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A2F 12102F         2380 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A32 300AFA         2381 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 43

0A35 120FB2         2382 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A38 12102F         2384    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0A3B 300907         2385            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0A3E 200BF7         2386            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0A41 D254           2387            setb    ERRF4_U
0A43 0538           2388            inc     ERRF4_C
                    2389    ;        jmp     U3_MB1C 
                    2390    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2391    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0A45 C238           2392    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0A47 C220           2393            clr     UP              ; zastav motor
0A49 D23A           2394            setb    UPOld           ;       (a zalohuj)
0A4B C23B           2395            clr     DOWNOld         ;       (a zalohuj)
0A4D C222           2396            clr     FAST            ; 
0A4F 12108E         2397            lcall   WRITEPORTS      ; 
0A52 020C67         2398            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2399    
                    2400    
0A55                2401    DOWN3:
                    2402            ;--------------------------
                    2403 +1         CFCSS     27, 2, 22, 10, D2
0A55 633C02         2404 +1         xrl             G,  #2             
                    2405 +1         IF (D2 <> -1)
0A58 E53E           2406 +1             mov   A,  D2         
0A5A 623C           2407 +1             xrl   G,  A          
                    2408 +1         ENDIF    
0A5C E53C           2409 +1         mov   A,  G              
                    2410 +2         LCJNE A,  #27, CFCERR     
0A5E B41B03         2411 +2         cjne    A, #27, $+6
0A61 020A67         2412 +2         jmp     $+6
0A64 020F5C         2413 +2         ljmp    CFCERR
0A67 00             2414 +2         nop
                    2415 +1         IF (22 <> -1)
0A68 753D16         2416 +1             mov         D1, #22     
                    2417 +1         ENDIF
                    2418 +1         IF (10 <> -1)
0A6B 753E0A         2419 +1             mov         D2, #10     
                    2420 +1         ENDIF
                    2421 +2         SERCHAR   #27             
0A6E 741B           2422 +2                 mov               A, #27
0A70 3099FD         2423 +2     jnb     TI, $ 
0A73 C299           2424 +2     clr     TI
0A75 F599           2425 +2                 mov     SBUF, A
                    2426 +2     
                    2428            ;--------------------------
                    2429 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0A77 4325C0         2430 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0A7A 53240F         2431 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0A7D D226           2432 +1         setb    FLED3
0A7F 12108E         2433 +1         lcall   WRITEPORTS
                    2435 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0A82 120FB2         2436 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
DEBUG                                                                                                         PAGE 44

0A85 12102F         2437 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A88 3009FA         2438 +1         jnb     MB1, $-3  ; 
0A8B 120FB2         2439 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A8E 12102F         2441    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2442 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0A91 200C03         2443 +1         jb      SKRD, $+6
0A94 020F11         2444 +1         ljmp    ERR_SKRD
0A97 00             2445 +1         nop
                    2447            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    2448 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT
                    2449 +1                                                                                             
                                                                                                                 
                    2450 +1                                                                                             
                                                                                                                 
                    2451 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2452 +1         COUNT    SET    COUNT+1                   
                    2453 +1         
0A98 20091B         2454 +1         jb      MB1, ENDD12
0A9B 304204         2455 +1         jnb     PKI2, $+7
0A9E C222           2456 +1         clr     FAST
0AA0 D223           2457 +1         setb    SLOW
0AA2 D238           2458 +1         setb    STOPPED         
0AA4 D253           2459 +1         setb    ERRF23_U
0AA6 D25A           2460 +1         setb    ERRF23_D
0AA8 053A           2461 +1         inc     ERRF23_C
0AAA C21A           2462 +1                 clr     PKO2                               
0AAC C22A           2463 +1         clr     PO2U            
0AAE C229           2464 +1         clr     PO2D              
0AB0 12108E         2465 +1                 lcall   WRITEPORTS
0AB3 0206AC         2466 +1         ljmp    DOWN2
0AB6                2467 +1 ENDD12:
0AB6 00             2468 +1         nop
0AB7 200AD4         2470            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    2471 +1         CLR_FLOOR_ERR   ERRF23
0ABA C253           2472 +1         clr    ERRF23_U
0ABC C25A           2473 +1         clr    ERRF23_D
0ABE 00             2474 +1         nop
                    2476 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0ABF 120FB2         2477 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AC2 12102F         2478 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AC5 300AFA         2479 +1         jnb     MB2, $-3  ; 
0AC8 120FB2         2480 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0ACB D22F           2482            setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0ACD 12108E         2483            lcall   WRITEPORTS      ;
0AD0 020AD3         2484            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2485    
                    2486    
0AD3                2487    DOWN3_MB2:
                    2488            ;--------------------------
                    2489 +1         CFCSS     9, 4, -1, 24, D1
0AD3 633C04         2490 +1         xrl             G,  #4             
                    2491 +1         IF (D1 <> -1)
0AD6 E53D           2492 +1             mov   A,  D1         
0AD8 623C           2493 +1             xrl   G,  A          
                    2494 +1         ENDIF    
DEBUG                                                                                                         PAGE 45

0ADA E53C           2495 +1         mov   A,  G              
                    2496 +2         LCJNE A,  #9, CFCERR     
0ADC B40903         2497 +2         cjne    A, #9, $+6
0ADF 020AE5         2498 +2         jmp     $+6
0AE2 020F5C         2499 +2         ljmp    CFCERR
0AE5 00             2500 +2         nop
                    2501 +1         IF (-1 <> -1)
                    2502 +1             mov         D1, #-1     
                    2503 +1         ENDIF
                    2504 +1         IF (24 <> -1)
0AE6 753E18         2505 +1             mov         D2, #24     
                    2506 +1         ENDIF
                    2507 +2         SERCHAR   #9             
0AE9 7409           2508 +2                 mov               A, #9
0AEB 3099FD         2509 +2     jnb     TI, $ 
0AEE C299           2510 +2     clr     TI
0AF0 F599           2511 +2                 mov     SBUF, A
                    2512 +2     
                    2514            ;--------------------------
                    2515 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0AF2 120FB2         2516 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AF5 12102F         2517 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AF8 300AFA         2518 +1         jnb     MB2, $-3  ; 
0AFB 120FB2         2519 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AFE                2521    DOWN3_MB2A:
0AFE 12102F         2522            lcall   READPORTS       ; nacitanie dat
                    2523 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0B01 200C03         2524 +1         jb      SKRD, $+6
0B04 020F11         2525 +1         ljmp    ERR_SKRD
0B07 00             2526 +1         nop
                    2528            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    2529 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT
                    2530 +1                                                                                             
                                                                                                                 
                    2531 +1                                                                                             
                                                                                                                 
                    2532 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              2533 +1         COUNT    SET    COUNT+1                   
                    2534 +1         
0B08 20091B         2535 +1         jb      MB1, ENDD13
0B0B 304204         2536 +1         jnb     PKI2, $+7
0B0E C222           2537 +1         clr     FAST
0B10 D223           2538 +1         setb    SLOW
0B12 D238           2539 +1         setb    STOPPED         
0B14 D253           2540 +1         setb    ERRF23_U
0B16 D25A           2541 +1         setb    ERRF23_D
0B18 053A           2542 +1         inc     ERRF23_C
0B1A C21A           2543 +1                 clr     PKO2                               
0B1C C22A           2544 +1         clr     PO2U            
0B1E C229           2545 +1         clr     PO2D              
0B20 12108E         2546 +1                 lcall   WRITEPORTS
0B23 0206AC         2547 +1         ljmp    DOWN2
0B26                2548 +1 ENDD13:
0B26 00             2549 +1         nop
0B27 200AD4         2551            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2552 +1         CLR_FLOOR_ERR   ERRF23      
DEBUG                                                                                                         PAGE 46

0B2A C253           2553 +1         clr    ERRF23_U
0B2C C25A           2554 +1         clr    ERRF23_D
0B2E 00             2555 +1         nop
0B2F D22E           2557            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0B31 12108E         2558            lcall   WRITEPORTS      ;
                    2559 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0B34 120FB2         2560 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B37 12102F         2561 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B3A 300AFA         2562 +1         jnb     MB2, $-3  ; 
0B3D 120FB2         2563 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2565    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2566    ;        anl     A, #00000100b ;-;
                    2567    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0B40                2568    DOWN3_MB2_CFC:
                    2569            ;--------------------------
                    2570 +1         CFCSS     16, 25, -1, -1, -1
0B40 633C19         2571 +1         xrl             G,  #25             
                    2572 +1         IF (-1 <> -1)
                    2573 +1             mov   A,  -1         
                    2574 +1             xrl   G,  A          
                    2575 +1         ENDIF    
0B43 E53C           2576 +1         mov   A,  G              
                    2577 +2         LCJNE A,  #16, CFCERR     
0B45 B41003         2578 +2         cjne    A, #16, $+6
0B48 020B4E         2579 +2         jmp     $+6
0B4B 020F5C         2580 +2         ljmp    CFCERR
0B4E 00             2581 +2         nop
                    2582 +1         IF (-1 <> -1)
                    2583 +1             mov         D1, #-1     
                    2584 +1         ENDIF
                    2585 +1         IF (-1 <> -1)
                    2586 +1             mov         D2, #-1     
                    2587 +1         ENDIF
                    2588 +2         SERCHAR   #16             
0B4F 7410           2589 +2                 mov               A, #16
0B51 3099FD         2590 +2     jnb     TI, $ 
0B54 C299           2591 +2     clr     TI
0B56 F599           2592 +2                 mov     SBUF, A
                    2593 +2     
                    2595            ;--------------------------
                    2596 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    2597 +1                                         
0B58 C3             2598 +1         clr     C                       
0B59 7400           2599 +1         mov     A, #0h                  
0B5B 7211           2600 +1         orl     C, PI2D      
0B5D B00E           2601 +1         anl     C, /DPZK                
0B5F 7242           2602 +1         orl     C, PKI2          
0B61 B05A           2603 +1         anl     C, /ERRF2_D 
0B63 720F           2604 +1         orl     C, DPK                  
0B65 7238           2605 +1         orl     C, STOPPED              
0B67 3400           2606 +1         addc    A, #0h                  
0B69 7050           2608            jnz     D3_MB2C         ; Ak ano, zastav
                    2609 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0B6B E522           2610 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0B6D 33             2611 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
DEBUG                                                                                                         PAGE 47

                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0B6E 547E           2612 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    2613 +1 
                    2614 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    2615 +2         ANLB    ACC.2, ERRF2_D  ; |
0B70 A2E2           2616 +2         mov   C, ACC.2
0B72 B05A           2617 +2         anl   C, /ERRF2_D
0B74 92E2           2618 +2         mov   ACC.2, C
                    2619 +2         ANLB    ACC.3, ERRF2_D  ; |
0B76 A2E3           2620 +2         mov   C, ACC.3
0B78 B05A           2621 +2         anl   C, /ERRF2_D
0B7A 92E3           2622 +2         mov   ACC.3, C
                    2623 +2         ANLB    ACC.4, ERRF3_D  ; |
0B7C A2E4           2624 +2         mov   C, ACC.4
0B7E B05B           2625 +2         anl   C, /ERRF3_D
0B80 92E4           2626 +2         mov   ACC.4, C
                    2627 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    2628 +1 
0B82 7805           2629 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    2630 +1  ; LL1: 
0B84 6006           2631 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0B86 C3             2632 +1         clr     C               ; Inak shiftnem o 2
0B87 33             2633 +1         rlc     A               ;
0B88 C3             2634 +1         clr     C               ;
0B89 33             2635 +1         rlc     A               ;
0B8A D8F8           2636 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    2637 +1 ; LL2:
0B8C E8             2638 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    2640 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0B8D B40203         2641 +1         cjne    A, #2, $+6
0B90 020B96         2642 +1         jmp     $+6
0B93 020BC5         2643 +1         ljmp    DOWN3_MB1
0B96 00             2644 +1         nop
                    2646 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0B97 7405           2647 +1         mov     A, #5
0B99 C3             2648 +1         clr     C
0B9A 9402           2649 +1         subb    A, #2
0B9C F8             2650 +1         mov     R0, A
0B9D E528           2651 +1         mov     A, INPORTA
0B9F 541E           2652 +1         anl     A, #00011110b
0BA1 852BF0         2653 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0BA4 53F00C         2654 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0BA7 63F0FF         2655 +1         xrl     B, #0FFH
0BAA 55F0           2656 +1         anl     A, B
0BAC C3             2657 +1         clr     C
0BAD 33             2658 +1         rlc     A
0BAE C3             2659 +1         clr     C
0BAF 33             2660 +1         rlc     A
0BB0 C3             2661 +1         clr     C
0BB1 33             2662 +1         rlc     A
                    2663 +1 ;LL1   
0BB2 C3             2664 +1         clr     C
DEBUG                                                                                                         PAGE 48

0BB3 33             2665 +1         rlc     A
0BB4 D8FC           2666 +1         djnz    R0, $-2;LL1
0BB6 6003           2668            jz      D3_MB2C         ; |   ak neni zastavujem                  
0BB8 020BC5         2669            ljmp    DOWN3_MB1       ;-; |        
0BBB D223           2670    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0BBD C222           2671            clr     FAST            ; 
0BBF 12108E         2672            lcall   WRITEPORTS      ;
0BC2 020C0F         2673            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    2674    
                    2675    
0BC5                2676    DOWN3_MB1:    
                    2677            ;--------------------------
                    2678 +1         CFCSS     17, 1, -1, 0, -1
0BC5 633C01         2679 +1         xrl             G,  #1             
                    2680 +1         IF (-1 <> -1)
                    2681 +1             mov   A,  -1         
                    2682 +1             xrl   G,  A          
                    2683 +1         ENDIF    
0BC8 E53C           2684 +1         mov   A,  G              
                    2685 +2         LCJNE A,  #17, CFCERR     
0BCA B41103         2686 +2         cjne    A, #17, $+6
0BCD 020BD3         2687 +2         jmp     $+6
0BD0 020F5C         2688 +2         ljmp    CFCERR
0BD3 00             2689 +2         nop
                    2690 +1         IF (-1 <> -1)
                    2691 +1             mov         D1, #-1     
                    2692 +1         ENDIF
                    2693 +1         IF (0 <> -1)
0BD4 753E00         2694 +1             mov         D2, #0     
                    2695 +1         ENDIF
                    2696 +2         SERCHAR   #17             
0BD7 7411           2697 +2                 mov               A, #17
0BD9 3099FD         2698 +2     jnb     TI, $ 
0BDC C299           2699 +2     clr     TI
0BDE F599           2700 +2                 mov     SBUF, A
                    2701 +2     
                    2703            ;--------------------------
0BE0 12102F         2704    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    2705 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0BE3 200C03         2706 +1         jb      SKRD, $+6
0BE6 020F11         2707 +1         ljmp    ERR_SKRD
0BE9 00             2708 +1         nop
                    2710            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    2711 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT
                    2712 +1                                                                                             
                                                                                                                 
                    2713 +1                                                                                             
                                                                                                                 
                    2714 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              2715 +1         COUNT    SET    COUNT+1                   
                    2716 +1         
0BEA 200A1B         2717 +1         jb      MB2, ENDD14
0BED 304204         2718 +1         jnb     PKI2, $+7
0BF0 C222           2719 +1         clr     FAST
0BF2 D223           2720 +1         setb    SLOW
0BF4 D238           2721 +1         setb    STOPPED         
0BF6 D252           2722 +1         setb    ERRF2_U
DEBUG                                                                                                         PAGE 49

0BF8 D25A           2723 +1         setb    ERRF2_D
0BFA 0536           2724 +1         inc     ERRF2_C
0BFC C21A           2725 +1                 clr     PKO2                               
0BFE C22A           2726 +1         clr     PO2U            
0C00 C229           2727 +1         clr     PO2D              
0C02 12108E         2728 +1                 lcall   WRITEPORTS
0C05 02073C         2729 +1         ljmp    DOWN2_MB2
0C08                2730 +1 ENDD14:
0C08 00             2731 +1         nop
0C09 2009D4         2733            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    2734    ;        CLR_FLOOR_ERR   ERRF2
                    2735    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    2736    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    2737    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    2738    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    2739    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    2740    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    2741    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0C0C 0206AC         2742            ljmp    DOWN2         ;-; |        
                    2743    ;D3_MB1C: clr     DOWN            ; zastav motor
                    2744    ;        setb    DOWNOld         ;       (a zalohuj)
                    2745    ;        clr     UPOld           ;       (a zalohuj)
                    2746    ;        clr     FAST            ; 
                    2747    ;        lcall   WRITEPORTS      ; 
                    2748    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0C0F                2749    DOWN3_STOP: 
                    2750            ;--------------------------
                    2751 +1         CFCSS     21, 5, 0, 4, -1
0C0F 633C05         2752 +1         xrl             G,  #5             
                    2753 +1         IF (-1 <> -1)
                    2754 +1             mov   A,  -1         
                    2755 +1             xrl   G,  A          
                    2756 +1         ENDIF    
0C12 E53C           2757 +1         mov   A,  G              
                    2758 +2         LCJNE A,  #21, CFCERR     
0C14 B41503         2759 +2         cjne    A, #21, $+6
0C17 020C1D         2760 +2         jmp     $+6
0C1A 020F5C         2761 +2         ljmp    CFCERR
0C1D 00             2762 +2         nop
                    2763 +1         IF (0 <> -1)
0C1E 753D00         2764 +1             mov         D1, #0     
                    2765 +1         ENDIF
                    2766 +1         IF (4 <> -1)
0C21 753E04         2767 +1             mov         D2, #4     
                    2768 +1         ENDIF
                    2769 +2         SERCHAR   #21             
0C24 7415           2770 +2                 mov               A, #21
0C26 3099FD         2771 +2     jnb     TI, $ 
0C29 C299           2772 +2     clr     TI
0C2B F599           2773 +2                 mov     SBUF, A
                    2774 +2     
                    2776            ;--------------------------   
0C2D 12102F         2777    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    2778 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
DEBUG                                                                                                         PAGE 50

0C30 200C03         2779 +1         jb      SKRD, $+6
0C33 020F11         2780 +1         ljmp    ERR_SKRD
0C36 00             2781 +1         nop
                    2783            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    2784 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT
                    2785 +1                                                                                             
                                                                                                                 
                    2786 +1                                                                                             
                                                                                                                 
                    2787 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              2788 +1         COUNT    SET    COUNT+1                   
                    2789 +1         
0C37 200A1B         2790 +1         jb      MB2, ENDD15
0C3A 304204         2791 +1         jnb     PKI2, $+7
0C3D C222           2792 +1         clr     FAST
0C3F D223           2793 +1         setb    SLOW
0C41 D238           2794 +1         setb    STOPPED         
0C43 D252           2795 +1         setb    ERRF2_U
0C45 D25A           2796 +1         setb    ERRF2_D
0C47 0536           2797 +1         inc     ERRF2_C
0C49 C21A           2798 +1                 clr     PKO2                               
0C4B C22A           2799 +1         clr     PO2U            
0C4D C229           2800 +1         clr     PO2D              
0C4F 12108E         2801 +1                 lcall   WRITEPORTS
0C52 02073C         2802 +1         ljmp    DOWN2_MB2
0C55                2803 +1 ENDD15:
0C55 00             2804 +1         nop
0C56 2009D4         2806            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    2807    ;        CLR_FLOOR_ERR   ERRF2     
0C59 C221           2808            clr     DOWN            ; zastav motor
0C5B D23B           2809            setb    DOWNOld         ;       (a zalohuj)
0C5D C23A           2810            clr     UPOld           ;       (a zalohuj)
0C5F C222           2811            clr     FAST            ; 
0C61 12108E         2812            lcall   WRITEPORTS      ; 
0C64 020396         2813            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    2814    
                    2815            
                    2816    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    2817    
0C67                2818    FLOOR4:
                    2819            ;--------------------------
                    2820 +1         CFCSS     19, 22, -1, -1, D1
0C67 633C16         2821 +1         xrl             G,  #22             
                    2822 +1         IF (D1 <> -1)
0C6A E53D           2823 +1             mov   A,  D1         
0C6C 623C           2824 +1             xrl   G,  A          
                    2825 +1         ENDIF    
0C6E E53C           2826 +1         mov   A,  G              
                    2827 +2         LCJNE A,  #19, CFCERR     
0C70 B41303         2828 +2         cjne    A, #19, $+6
0C73 020C79         2829 +2         jmp     $+6
0C76 020F5C         2830 +2         ljmp    CFCERR
0C79 00             2831 +2         nop
                    2832 +1         IF (-1 <> -1)
                    2833 +1             mov         D1, #-1     
                    2834 +1         ENDIF
DEBUG                                                                                                         PAGE 51

                    2835 +1         IF (-1 <> -1)
                    2836 +1             mov         D2, #-1     
                    2837 +1         ENDIF
                    2838 +2         SERCHAR   #19             
0C7A 7413           2839 +2                 mov               A, #19
0C7C 3099FD         2840 +2     jnb     TI, $ 
0C7F C299           2841 +2     clr     TI
0C81 F599           2842 +2                 mov     SBUF, A
                    2843 +2     
                    2845            ;--------------------------
                    2846 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0C83 4325C0         2847 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0C86 53240F         2848 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0C89 D227           2849 +1         setb    FLED4
0C8B 12108E         2850 +1         lcall   WRITEPORTS
0C8E C238           2852            clr     STOPPED
0C90 120FE7         2853            lcall   WAITFORTIMER    ; simulacia TIMERu
0C93 12102F         2854    F4S:    lcall   READPORTS     ;-; nacitanie dat
0C96 C21C           2855            clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
0C98 C22D           2856            clr     PO4            ;
0C9A 12108E         2857            lcall   WRITEPORTS      ;
0C9D 200FF3         2858            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0CA0 E528           2859            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0CA2 852BF0         2860            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0CA5 53F00C         2861            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0CA8 63F0FF         2862            xrl     B, #0FFH        ; | |
0CAB 55F0           2863            anl     A, B            ; | |
0CAD 540E           2864            anl     A, #00001110b ;-;
0CAF 701A           2865            jnz     F4OK          ;-; ak ano, ideme na to
0CB1 E522           2866            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0CB3 541F           2867            anl     A, #00011111b ;-;
                    2868            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    2869 +1         ANLB    ACC.1, ERRF2_D  ; |
0CB5 A2E1           2870 +1         mov   C, ACC.1
0CB7 B05A           2871 +1         anl   C, /ERRF2_D
0CB9 92E1           2872 +1         mov   ACC.1, C
                    2874 +1         ANLB    ACC.2, ERRF2_D  ; |
0CBB A2E2           2875 +1         mov   C, ACC.2
0CBD B05A           2876 +1         anl   C, /ERRF2_D
0CBF 92E2           2877 +1         mov   ACC.2, C
                    2879 +1         ANLB    ACC.3, ERRF3_D  ; |
0CC1 A2E3           2880 +1         mov   C, ACC.3
0CC3 B05B           2881 +1         anl   C, /ERRF3_D
0CC5 92E3           2882 +1         mov   ACC.3, C
                    2884            ;ANLB    ACC.4, ERRF3_D  ; |
0CC7 7002           2885            jnz     F4OK          ;-; ak ano, ideme na to
0CC9 80C8           2886            jmp     F4S             ; Nemam sa kde hnut, opakujem
0CCB D221           2887    F4OK:   setb    DOWN            ; rychly pohyb dole
0CCD D222           2888            setb    FAST            ;
0CCF C223           2889            clr     SLOW            ; 
0CD1 12108E         2890            lcall   WRITEPORTS      ; 
0CD4 020CD7         2891            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
                    2892    
                    2893    
DEBUG                                                                                                         PAGE 52

0CD7                2894    DOWN4:
                    2895            ;--------------------------
                    2896 +1         CFCSS     22, 5, -1, 15, -1
0CD7 633C05         2897 +1         xrl             G,  #5             
                    2898 +1         IF (-1 <> -1)
                    2899 +1             mov   A,  -1         
                    2900 +1             xrl   G,  A          
                    2901 +1         ENDIF    
0CDA E53C           2902 +1         mov   A,  G              
                    2903 +2         LCJNE A,  #22, CFCERR     
0CDC B41603         2904 +2         cjne    A, #22, $+6
0CDF 020CE5         2905 +2         jmp     $+6
0CE2 020F5C         2906 +2         ljmp    CFCERR
0CE5 00             2907 +2         nop
                    2908 +1         IF (-1 <> -1)
                    2909 +1             mov         D1, #-1     
                    2910 +1         ENDIF
                    2911 +1         IF (15 <> -1)
0CE6 753E0F         2912 +1             mov         D2, #15     
                    2913 +1         ENDIF
                    2914 +2         SERCHAR   #22             
0CE9 7416           2915 +2                 mov               A, #22
0CEB 3099FD         2916 +2     jnb     TI, $ 
0CEE C299           2917 +2     clr     TI
0CF0 F599           2918 +2                 mov     SBUF, A
                    2919 +2     
                    2921            ;--------------------------
                    2922 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0CF2 4325C0         2923 +1         orl     OUTPORTC, #(bmLEDU or bmLEDD)
0CF5 53240F         2924 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0CF8 D227           2925 +1         setb    FLED4
0CFA 12108E         2926 +1         lcall   WRITEPORTS
                    2928 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0CFD 120FB2         2929 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0D00 12102F         2930 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0D03 3009FA         2931 +1         jnb     MB1, $-3  ; 
0D06 120FB2         2932 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0D09 12102F         2934    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    2935 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D0C 200C03         2936 +1         jb      SKRD, $+6
0D0F 020F11         2937 +1         ljmp    ERR_SKRD
0D12 00             2938 +1         nop
                    2940            ;ljnb    MB1, ERR_2SPOM_C; >>> CHYBA, Vypadli 2 spomalovacie clonky (narazil som na 
                                                                               zastavovaciu) <<<
                    2941 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT
                    2942 +1                                                                                             
                                                                                                                 
                    2943 +1                                                                                             
                                                                                                                 
                    2944 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              2945 +1         COUNT    SET    COUNT+1                   
                    2946 +1         
0D13 20091B         2947 +1         jb      MB1, ENDD16
0D16 304304         2948 +1         jnb     PKI3, $+7
0D19 C222           2949 +1         clr     FAST
DEBUG                                                                                                         PAGE 53

0D1B D223           2950 +1         setb    SLOW
0D1D D238           2951 +1         setb    STOPPED         
0D1F D254           2952 +1         setb    ERRF34_U
0D21 D25B           2953 +1         setb    ERRF34_D
0D23 053B           2954 +1         inc     ERRF34_C
0D25 C21B           2955 +1                 clr     PKO3                               
0D27 C22C           2956 +1         clr     PO3U            
0D29 C22B           2957 +1         clr     PO3D              
0D2B 12108E         2958 +1                 lcall   WRITEPORTS
0D2E 020A55         2959 +1         ljmp    DOWN3
0D31                2960 +1 ENDD16:
0D31 00             2961 +1         nop
0D32 200AD4         2963            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    2964 +1         CLR_FLOOR_ERR   ERRF34
0D35 C254           2965 +1         clr    ERRF34_U
0D37 C25B           2966 +1         clr    ERRF34_D
0D39 00             2967 +1         nop
                    2969 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0D3A 120FB2         2970 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0D3D 12102F         2971 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0D40 300AFA         2972 +1         jnb     MB2, $-3  ; 
0D43 120FB2         2973 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0D46 D22F           2975            setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0D48 12108E         2976            lcall   WRITEPORTS      ;
0D4B 020D4E         2977            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    2978            
                    2979            
0D4E                2980    DOWN4_MB2:
                    2981            ;--------------------------
                    2982 +1         CFCSS     23, 1, -1, 14, -1
0D4E 633C01         2983 +1         xrl             G,  #1             
                    2984 +1         IF (-1 <> -1)
                    2985 +1             mov   A,  -1         
                    2986 +1             xrl   G,  A          
                    2987 +1         ENDIF    
0D51 E53C           2988 +1         mov   A,  G              
                    2989 +2         LCJNE A,  #23, CFCERR     
0D53 B41703         2990 +2         cjne    A, #23, $+6
0D56 020D5C         2991 +2         jmp     $+6
0D59 020F5C         2992 +2         ljmp    CFCERR
0D5C 00             2993 +2         nop
                    2994 +1         IF (-1 <> -1)
                    2995 +1             mov         D1, #-1     
                    2996 +1         ENDIF
                    2997 +1         IF (14 <> -1)
0D5D 753E0E         2998 +1             mov         D2, #14     
                    2999 +1         ENDIF
                    3000 +2         SERCHAR   #23             
0D60 7417           3001 +2                 mov               A, #23
0D62 3099FD         3002 +2     jnb     TI, $ 
0D65 C299           3003 +2     clr     TI
0D67 F599           3004 +2                 mov     SBUF, A
                    3005 +2     
                    3007            ;--------------------------
                    3008 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0D69 120FB2         3009 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0D6C 12102F         3010 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
DEBUG                                                                                                         PAGE 54

0D6F 300AFA         3011 +1         jnb     MB2, $-3  ; 
0D72 120FB2         3012 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0D75                3014    DOWN4_MB2A:
0D75 12102F         3015            lcall   READPORTS       ; nacitanie dat
                    3016 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D78 200C03         3017 +1         jb      SKRD, $+6
0D7B 020F11         3018 +1         ljmp    ERR_SKRD
0D7E 00             3019 +1         nop
                    3021            ;ljnb    MB1, ERR_1SPOM_C; >>> CHYBA, Vypadla spomalovacia clonka (narazil som na za
                                                                               stavovaciu) <<<
                    3022 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT
                    3023 +1                                                                                             
                                                                                                                 
                    3024 +1                                                                                             
                                                                                                                 
                    3025 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3026 +1         COUNT    SET    COUNT+1                   
                    3027 +1         
0D7F 20091B         3028 +1         jb      MB1, ENDD17
0D82 304304         3029 +1         jnb     PKI3, $+7
0D85 C222           3030 +1         clr     FAST
0D87 D223           3031 +1         setb    SLOW
0D89 D238           3032 +1         setb    STOPPED         
0D8B D254           3033 +1         setb    ERRF34_U
0D8D D25B           3034 +1         setb    ERRF34_D
0D8F 053B           3035 +1         inc     ERRF34_C
0D91 C21B           3036 +1                 clr     PKO3                               
0D93 C22C           3037 +1         clr     PO3U            
0D95 C22B           3038 +1         clr     PO3D              
0D97 12108E         3039 +1                 lcall   WRITEPORTS
0D9A 020A55         3040 +1         ljmp    DOWN3
0D9D                3041 +1 ENDD17:
0D9D 00             3042 +1         nop
0D9E 200AD4         3044            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3045 +1         CLR_FLOOR_ERR   ERRF34       
0DA1 C254           3046 +1         clr    ERRF34_U
0DA3 C25B           3047 +1         clr    ERRF34_D
0DA5 00             3048 +1         nop
0DA6 D22E           3050            setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0DA8 12108E         3051            lcall   WRITEPORTS      ;
                    3052 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0DAB 120FB2         3053 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0DAE 12102F         3054 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0DB1 300AFA         3055 +1         jnb     MB2, $-3  ; 
0DB4 120FB2         3056 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3058    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3059    ;        anl     A, #00001000b ;-;
                    3060    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0DB7                3061    DOWN4_MB2_CFC:
                    3062            ;--------------------------
                    3063 +1         CFCSS     7, 16, -1, -1, -1
0DB7 633C10         3064 +1         xrl             G,  #16             
                    3065 +1         IF (-1 <> -1)
                    3066 +1             mov   A,  -1         
                    3067 +1             xrl   G,  A          
                    3068 +1         ENDIF    
DEBUG                                                                                                         PAGE 55

0DBA E53C           3069 +1         mov   A,  G              
                    3070 +2         LCJNE A,  #7, CFCERR     
0DBC B40703         3071 +2         cjne    A, #7, $+6
0DBF 020DC5         3072 +2         jmp     $+6
0DC2 020F5C         3073 +2         ljmp    CFCERR
0DC5 00             3074 +2         nop
                    3075 +1         IF (-1 <> -1)
                    3076 +1             mov         D1, #-1     
                    3077 +1         ENDIF
                    3078 +1         IF (-1 <> -1)
                    3079 +1             mov         D2, #-1     
                    3080 +1         ENDIF
                    3081 +2         SERCHAR   #7             
0DC6 7407           3082 +2                 mov               A, #7
0DC8 3099FD         3083 +2     jnb     TI, $ 
0DCB C299           3084 +2     clr     TI
0DCD F599           3085 +2                 mov     SBUF, A
                    3086 +2     
                    3088            ;--------------------------
                    3089 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3090 +1                                         
0DCF C3             3091 +1         clr     C                       
0DD0 7400           3092 +1         mov     A, #0h                  
0DD2 7213           3093 +1         orl     C, PI3D      
0DD4 B00E           3094 +1         anl     C, /DPZK                
0DD6 7243           3095 +1         orl     C, PKI3          
0DD8 B05B           3096 +1         anl     C, /ERRF3_D 
0DDA 720F           3097 +1         orl     C, DPK                  
0DDC 7238           3098 +1         orl     C, STOPPED              
0DDE 3400           3099 +1         addc    A, #0h                  
0DE0 7050           3101            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3102 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0DE2 E522           3103 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0DE4 33             3104 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0DE5 547E           3105 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3106 +1 
                    3107 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3108 +2         ANLB    ACC.2, ERRF2_D  ; |
0DE7 A2E2           3109 +2         mov   C, ACC.2
0DE9 B05A           3110 +2         anl   C, /ERRF2_D
0DEB 92E2           3111 +2         mov   ACC.2, C
                    3112 +2         ANLB    ACC.3, ERRF2_D  ; |
0DED A2E3           3113 +2         mov   C, ACC.3
0DEF B05A           3114 +2         anl   C, /ERRF2_D
0DF1 92E3           3115 +2         mov   ACC.3, C
                    3116 +2         ANLB    ACC.4, ERRF3_D  ; |
0DF3 A2E4           3117 +2         mov   C, ACC.4
0DF5 B05B           3118 +2         anl   C, /ERRF3_D
0DF7 92E4           3119 +2         mov   ACC.4, C
                    3120 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3121 +1 
0DF9 7805           3122 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
DEBUG                                                                                                         PAGE 56

                    3123 +1  ; LL1: 
0DFB 6006           3124 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0DFD C3             3125 +1         clr     C               ; Inak shiftnem o 2
0DFE 33             3126 +1         rlc     A               ;
0DFF C3             3127 +1         clr     C               ;
0E00 33             3128 +1         rlc     A               ;
0E01 D8F8           3129 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3130 +1 ; LL2:
0E03 E8             3131 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3133 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0E04 B40303         3134 +1         cjne    A, #3, $+6
0E07 020E0D         3135 +1         jmp     $+6
0E0A 020E3C         3136 +1         ljmp    DOWN4_MB1
0E0D 00             3137 +1         nop
                    3139 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0E0E 7405           3140 +1         mov     A, #5
0E10 C3             3141 +1         clr     C
0E11 9403           3142 +1         subb    A, #3
0E13 F8             3143 +1         mov     R0, A
0E14 E528           3144 +1         mov     A, INPORTA
0E16 541E           3145 +1         anl     A, #00011110b
0E18 852BF0         3146 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0E1B 53F00C         3147 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0E1E 63F0FF         3148 +1         xrl     B, #0FFH
0E21 55F0           3149 +1         anl     A, B
0E23 C3             3150 +1         clr     C
0E24 33             3151 +1         rlc     A
0E25 C3             3152 +1         clr     C
0E26 33             3153 +1         rlc     A
0E27 C3             3154 +1         clr     C
0E28 33             3155 +1         rlc     A
                    3156 +1 ;LL1   
0E29 C3             3157 +1         clr     C
0E2A 33             3158 +1         rlc     A
0E2B D8FC           3159 +1         djnz    R0, $-2;LL1
0E2D 6003           3161            jz      D4_MB2C         ; |   ak neni zastavujem          
0E2F 020E3C         3162            ljmp    DOWN4_MB1       ;-; |       
0E32 D223           3163    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0E34 C222           3164            clr     FAST            ; 
0E36 12108E         3165            lcall   WRITEPORTS      ;
0E39 020E89         3166            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3167            
                    3168            
0E3C                3169    DOWN4_MB1:    
                    3170            ;--------------------------
                    3171 +1         CFCSS     25, 30, 20, 0, -1
0E3C 633C1E         3172 +1         xrl             G,  #30             
                    3173 +1         IF (-1 <> -1)
                    3174 +1             mov   A,  -1         
                    3175 +1             xrl   G,  A          
                    3176 +1         ENDIF    
0E3F E53C           3177 +1         mov   A,  G              
                    3178 +2         LCJNE A,  #25, CFCERR     
0E41 B41903         3179 +2         cjne    A, #25, $+6
0E44 020E4A         3180 +2         jmp     $+6
DEBUG                                                                                                         PAGE 57

0E47 020F5C         3181 +2         ljmp    CFCERR
0E4A 00             3182 +2         nop
                    3183 +1         IF (20 <> -1)
0E4B 753D14         3184 +1             mov         D1, #20     
                    3185 +1         ENDIF
                    3186 +1         IF (0 <> -1)
0E4E 753E00         3187 +1             mov         D2, #0     
                    3188 +1         ENDIF
                    3189 +2         SERCHAR   #25             
0E51 7419           3190 +2                 mov               A, #25
0E53 3099FD         3191 +2     jnb     TI, $ 
0E56 C299           3192 +2     clr     TI
0E58 F599           3193 +2                 mov     SBUF, A
                    3194 +2     
                    3196            ;--------------------------
0E5A 12102F         3197    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3198 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E5D 200C03         3199 +1         jb      SKRD, $+6
0E60 020F11         3200 +1         ljmp    ERR_SKRD
0E63 00             3201 +1         nop
                    3203            ;ljnb    MB2, ERR_ZAST_C ; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na sp
                                                                               omalovaciu) <<<
                    3204 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT
                    3205 +1                                                                                             
                                                                                                                 
                    3206 +1                                                                                             
                                                                                                                 
                    3207 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3208 +1         COUNT    SET    COUNT+1                   
                    3209 +1         
0E64 200A1B         3210 +1         jb      MB2, ENDD18
0E67 304304         3211 +1         jnb     PKI3, $+7
0E6A C222           3212 +1         clr     FAST
0E6C D223           3213 +1         setb    SLOW
0E6E D238           3214 +1         setb    STOPPED         
0E70 D253           3215 +1         setb    ERRF3_U
0E72 D25B           3216 +1         setb    ERRF3_D
0E74 0537           3217 +1         inc     ERRF3_C
0E76 C21B           3218 +1                 clr     PKO3                               
0E78 C22C           3219 +1         clr     PO3U            
0E7A C22B           3220 +1         clr     PO3D              
0E7C 12108E         3221 +1                 lcall   WRITEPORTS
0E7F 020AD3         3222 +1         ljmp    DOWN3_MB2
0E82                3223 +1 ENDD18:
0E82 00             3224 +1         nop
0E83 2009D4         3226            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3227    ;        CLR_FLOOR_ERR   ERRF3
                    3228    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3229    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3230    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3231    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3232    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3233    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3234    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
DEBUG                                                                                                         PAGE 58

0E86 020A55         3235            ljmp    DOWN3         ;-; |       
                    3236    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3237    ;        setb    DOWNOld         ;       (a zalohuj)
                    3238    ;        clr     UPOld           ;       (a zalohuj)
                    3239    ;        clr     FAST            ; 
                    3240    ;        lcall   WRITEPORTS      ; 
                    3241    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3242    
                    3243                    
0E89                3244    DOWN4_STOP:    
                    3245            ;--------------------------
                    3246 +1         CFCSS     13, 10, 0, -1, -1
0E89 633C0A         3247 +1         xrl             G,  #10             
                    3248 +1         IF (-1 <> -1)
                    3249 +1             mov   A,  -1         
                    3250 +1             xrl   G,  A          
                    3251 +1         ENDIF    
0E8C E53C           3252 +1         mov   A,  G              
                    3253 +2         LCJNE A,  #13, CFCERR     
0E8E B40D03         3254 +2         cjne    A, #13, $+6
0E91 020E97         3255 +2         jmp     $+6
0E94 020F5C         3256 +2         ljmp    CFCERR
0E97 00             3257 +2         nop
                    3258 +1         IF (0 <> -1)
0E98 753D00         3259 +1             mov         D1, #0     
                    3260 +1         ENDIF
                    3261 +1         IF (-1 <> -1)
                    3262 +1             mov         D2, #-1     
                    3263 +1         ENDIF
                    3264 +2         SERCHAR   #13             
0E9B 740D           3265 +2                 mov               A, #13
0E9D 3099FD         3266 +2     jnb     TI, $ 
0EA0 C299           3267 +2     clr     TI
0EA2 F599           3268 +2                 mov     SBUF, A
                    3269 +2     
                    3271            ;--------------------------
0EA4 12102F         3272    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3273 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0EA7 200C03         3274 +1         jb      SKRD, $+6
0EAA 020F11         3275 +1         ljmp    ERR_SKRD
0EAD 00             3276 +1         nop
                    3278            ;ljnb    MB2, ERR_ZAST_C; >>> CHYBA, Vypadla zastavovacia clonka (narazil som na spo
                                                                               malovaciu) <<<
                    3279 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT
                    3280 +1                                                                                             
                                                                                                                 
                    3281 +1                                                                                             
                                                                                                                 
                    3282 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3283 +1         COUNT    SET    COUNT+1                   
                    3284 +1         
0EAE 200A1B         3285 +1         jb      MB2, ENDD19
0EB1 304304         3286 +1         jnb     PKI3, $+7
0EB4 C222           3287 +1         clr     FAST
0EB6 D223           3288 +1         setb    SLOW
0EB8 D238           3289 +1         setb    STOPPED         
0EBA D253           3290 +1         setb    ERRF3_U
0EBC D25B           3291 +1         setb    ERRF3_D
DEBUG                                                                                                         PAGE 59

0EBE 0537           3292 +1         inc     ERRF3_C
0EC0 C21B           3293 +1                 clr     PKO3                               
0EC2 C22C           3294 +1         clr     PO3U            
0EC4 C22B           3295 +1         clr     PO3D              
0EC6 12108E         3296 +1                 lcall   WRITEPORTS
0EC9 020AD3         3297 +1         ljmp    DOWN3_MB2
0ECC                3298 +1 ENDD19:
0ECC 00             3299 +1         nop
0ECD 2009D4         3301            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3302    ;        CLR_FLOOR_ERR   ERRF3
0ED0 C221           3303            clr     DOWN            ; zastav motor
0ED2 D23B           3304            setb    DOWNOld         ;       (a zalohuj)
0ED4 C23A           3305            clr     UPOld           ;       (a zalohuj)
0ED6 C222           3306            clr     FAST            ; 
0ED8 12108E         3307            lcall   WRITEPORTS      ; 
0EDB 0207FC         3308            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3309      
0EDE                3310    ERR_1SPOM_C: 
                    3311            ;clr     UP              ; zastav motor
                    3312            ;clr     DOWN            ; 
                    3313            ;lcall   WRITEPORTS      ; 
                    3314            ;_BP_
                    3315            ;nop
                    3316            ;nop 
                    3317 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0EDE 120FB2         3318 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EE1 12102F         3319 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EE4 3009FA         3320 +1         jnb     MB1, $-3  ; 
0EE7 120FB2         3321 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0EEA 901178         3323            mov     DPTR, #STR_ERR_1SPOM_C         ; vypis info 
0EED 1210C5         3324            lcall   DISPSTR         ;          
0EF0 020F23         3325            ljmp    ERROR1         
                    3326            
0EF3                3327    ERR_2SPOM_C: 
                    3328            ;clr     UP              ; zastav motor
                    3329            ;clr     DOWN            ; 
                    3330            ;lcall   WRITEPORTS      ; 
                    3331            ;_BP_
                    3332            ;nop
                    3333            ;nop
                    3334 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0EF3 120FB2         3335 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EF6 12102F         3336 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EF9 3009FA         3337 +1         jnb     MB1, $-3  ; 
0EFC 120FB2         3338 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0EFF 90119E         3340            mov     DPTR, #STR_ERR_2SPOM_C         ; vypis info 
0F02 1210C5         3341            lcall   DISPSTR         ;
0F05 020F23         3342            ljmp    ERROR1 
                    3343            
0F08                3344    ERR_ZAST_C: 
                    3345            ;clr     UP              ; zastav motor
                    3346            ;clr     DOWN            ; 
                    3347            ;lcall   WRITEPORTS      ; 
                    3348            ;_BP_
                    3349            ;nop
                    3350            ;nop
DEBUG                                                                                                         PAGE 60

                    3351            ;lcall   READPORTS
                    3352            ;clr     FAST
                    3353            ;clr     SLOW
0F08 9011C8         3354            mov     DPTR, #STR_ERR_ZAST_C         ; vypis info 
0F0B 1210C5         3355            lcall   DISPSTR         ;
0F0E 020F23         3356            ljmp    ERROR1  
                    3357            
0F11                3358    ERR_SKRD: 
                    3359            ;clr     UP              ; zastav motor
                    3360            ;clr     DOWN            ; 
                    3361            ;lcall   WRITEPORTS      ; 
                    3362            ;_BP_
                    3363            ;nop
                    3364            ;nop        
0F11 901229         3365            mov     DPTR, #STR_ERR_SKRD         ; vypis info 
0F14 1210C5         3366            lcall   DISPSTR         ;
0F17 020F23         3367            ljmp    ERROR1    
                    3368            
0F1A                3369    ERR_SKRH: 
                    3370            ;clr     UP              ; zastav motor
                    3371            ;clr     DOWN            ; 
                    3372            ;lcall   WRITEPORTS      ; 
                    3373            ;_BP_
                    3374            ;nop
                    3375            ;nop
0F1A 9011EE         3376            mov     DPTR, #STR_ERR_SKRH         ; vypis info 
0F1D 1210C5         3377            lcall   DISPSTR         ;        
0F20 020F23         3378            ljmp    ERROR1 
                    3379            
0F23                3380    ERROR1:         
0F23 D22F           3381            setb    LEDU
0F25 D22E           3382            setb    LEDD
0F27 C222           3383            clr     FAST
0F29 D223           3384            setb    SLOW
0F2B 12108E         3385            lcall   WRITEPORTS          
0F2E 12102F         3386    ERROR1S:lcall   READPORTS       ; nacitanie dat
0F31 300B08         3387            jnb     SKRH, ERROR1C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade)
0F34 300C05         3388            jnb     SKRD, ERROR1C   ; Sme na dolnej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade)
0F37 300902         3389            jnb     MB1, ERROR1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0F3A 80F2           3390            jmp     ERROR1S         ; Ak sme nechytili ani jednu clonku, opakujeme
0F3C C220           3391    ERROR1C:clr     UP              ; zastav motor
0F3E C221           3392            clr     DOWN            ; 
0F40 C222           3393            clr     FAST            ; 
0F42 C223           3394            clr     SLOW            ; 
0F44 12108E         3395            lcall   WRITEPORTS      ; 
0F47 120FE7         3396            lcall   WAITFORTIMER    ; simulacia TIMERu
0F4A 020F4D         3397            jmp     ERROR2        ;-; a prejdi do stavu ERROR2 
                    3398            
0F4D 12102F         3399    ERROR2: lcall   READPORTS       ; nacitanie dat
0F50 200DFA         3400            jb      DP, ERROR2      ; uz vystupili vsetci ludia z kabiny?
0F53 200FF7         3401            jb      DPK, ERROR2     ; uz vystupili vsetci ludia z kabiny?
0F56 200EF4         3402            jb      DPZK, ERROR2    ; uz vystupili vsetci ludia z kabiny?
0F59 020033         3403            ljmp    START
                    3404                           
                    3405                    
DEBUG                                                                                                         PAGE 61

0F5C                3406    CFCERR:
0F5C C220           3407            clr     UP              ; zastav motor
0F5E C221           3408            clr     DOWN            ; 
0F60 C222           3409            clr     FAST            ; 
0F62 C223           3410            clr     SLOW            ; 
0F64 12108E         3411            lcall   WRITEPORTS      ; 
0F67 901275         3412            mov     DPTR, #STR_ERR_CFC         ; vypis info 
0F6A 1210C5         3413            lcall   DISPSTR         ;
                    3414                    
0F6D                3415    ENDPROG:
0F6D D218           3416            setb    KS
0F6F 12108E         3417            call    WRITEPORTS                ; zapis novu informaciu
                    3418 +1         _BP_
0F72 C2B3           3419 +1         clr     P3.3
0F74 D2AA           3420 +1         setb    EX1
0F76 00             3421 +1         nop
0F77 22             3423            ret
                    3424            
                    3425            
                    3426            
                    3427    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3428    ; INT_TIMER0
                    3429    ; Obsluha prerusenia timera 0
                    3430    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
0F78                3431    INT_TIMER0:
0F78 C0E0           3432            push    ACC
0F7A C0F0           3433            push    B
0F7C C080           3434            push    P0
0F7E C090           3435            push    P1
0F80 C0A0           3436            push    P2
0F82 C0B0           3437            push    P3
                    3438            ;push    OUTPORTC
                    3439            
0F84 ED             3440            mov     A, R5
0F85 1D             3441            dec     R5
0F86 6002           3442            jz      INT_TIMER0_MAIN    
0F88 801B           3443            sjmp    INT_TIMER0_END
0F8A                3444    INT_TIMER0_MAIN:
0F8A EE             3445            mov     A, R6
0F8B FD             3446            mov     R5, A
0F8C E52A           3447            mov     A, ERRFLOOR_U
0F8E 452B           3448            orl     A, ERRFLOOR_D
0F90 541E           3449            anl     A, #00011110b
0F92 23             3450            rl      A
0F93 23             3451            rl      A
0F94 23             3452            rl      A    
0F95 6224           3453            xrl     OUTPORTB, A     
                    3454                          
0F97 852480         3455            mov     p0, OUTPORTB 
0F9A 75A0C1         3456            mov     p2, #i8255OUTB
0F9D C2B6           3457            clr     WRNOT
0F9F 00             3458            nop
0FA0 00             3459            nop
0FA1 00             3460            nop
0FA2 00             3461            nop
0FA3 D2B6           3462            setb    WRNOT
                    3463            
                    3464            
DEBUG                                                                                                         PAGE 62

0FA5                3465    INT_TIMER0_END:
                    3466            
                    3467    
                    3468            ;pop     OUTPORTC
0FA5 D0B0           3469            pop     P3
0FA7 D0A0           3470            pop     P2
0FA9 D090           3471            pop     P1
0FAB D080           3472            pop     P0 
0FAD D0F0           3473            pop     B       
0FAF D0E0           3474            pop     ACC
0FB1 32             3475            reti 
                    3476            
                    3477    ;INT_TIMER0:
                    3478    ;        push    ACC
                    3479    ;        mov     A, R7  
                    3480    ;        dec     R7               
                    3481    ;        jnz     INT_TIMER0_END     
                    3482    ;        mov     R7, #20h
                    3483    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    3484    ;        setb    LEDU
                    3485    ;        setb    LEDD
                    3486    ;        jmp     INT_TIMER0_WRITE
                    3487    ;INT_TIMER0_CLEAR:        
                    3488    ;        ;clr     LEDU
                    3489    ;        ;clr     LEDD
                    3490    ;INT_TIMER0_WRITE: 
                    3491    ;        lcall   WRITEPORTS
                    3492    ;INT_TIMER0_END: 
                    3493    ;        setb    LEDU
                    3494    ;        lcall   WRITEPORTS       
                    3495    ;        pop     ACC
                    3496    ;        reti
                    3497            
                    3498            
                    3499    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    3500    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    3501    ; 11.0592MHz/2000 = zdrzanie 1 ms
0FB2                3502    TIME10MS:
0FB2 7963           3503            mov     R1,#063h        ; 2
                    3504                                    ; *** 100x
0FB4 7AFF           3505    TIME0:  mov     R2,#0FFh        ; 2 
0FB6 DAFE           3506    TIME1:  djnz    R2,TIME1        ; 256*2   
0FB8 7AFF           3507            mov     R2,#0FFh        ; 2       
0FBA DAFE           3508    TIME2:  djnz    R2,TIME2        ; 256*2 
0FBC 7A24           3509            mov     R2,#024h        ; 2       
0FBE DAFE           3510    TIME3:  djnz    R2,TIME3        ; 36*2
0FC0 00             3511            nop                     ; 1
0FC1 D9F1           3512            djnz    R1,TIME0        ; 2
                    3513                                    ; ***
0FC3 792A           3514            mov     R1,#02Ah        ; 2 
0FC5 D9FE           3515    TIME4:  djnz    R1,TIME4        ; 43*2  
0FC7 22             3516            ret                     ; koniec
                    3517            
                    3518            
                    3519    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3520    ; STOP
                    3521    ; osetri stlacenie tlacidla STOP
                    3522    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DEBUG                                                                                                         PAGE 63

0FC8                3523    STOP:
0FC8 D238           3524            setb    STOPPED
0FCA C222           3525            clr     FAST
0FCC C223           3526            clr     SLOW
0FCE 74E1           3527            mov     A, #11100001b
0FD0 5223           3528            anl     OUTPORTA, A 
0FD2 12108E         3529            lcall   WRITEPORTS
                    3530            
0FD5 120FE7         3531            lcall   WAITFORTIMER
0FD8 120FEF         3532    STOPC:  lcall   READPORTS1
0FDB E528           3533            mov     A, INPORTA
0FDD 541E           3534            anl     A, #00011110b
0FDF 60F7           3535            jz      STOPC     
                    3536            
0FE1 D223           3537            setb    SLOW
0FE3 12108E         3538            lcall   WRITEPORTS
0FE6 22             3539            ret        
                    3540            
                    3541            
                    3542    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3543    ; DELAY
                    3544    ; Pocka na stlacenie tlacidla na 1. poschodi  - signal PO1 (v buducnosti to 
                    3545    ; bude timer)
                    3546    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0FE7                3547    WAITFORTIMER:
0FE7 7B10           3548            mov     R3, #10h
0FE9 120FB2         3549    DEL1:   lcall   TIME10MS
0FEC DBFB           3550            djnz    R3, DEL1
0FEE 22             3551            ret
                    3552            
                    3553    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3554    ; READPORTS1
                    3555    ; precita nove hodnoty na portoch
                    3556    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0FEF                3557    READPORTS1:
0FEF C2AF           3558            clr     EA                  ;Treba zakazat prerusenia
                    3559            
0FF1 75A080         3560            mov     p2, #i8255INA       ; citaj data z portu A
0FF4 75803F         3561            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
0FF7 C2B7           3562            clr     RDNOT
0FF9 00             3563            nop
0FFA 00             3564            nop
0FFB 00             3565            nop
0FFC 00             3566            nop
0FFD 858028         3567            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1000 D2B7           3568            setb    RDNOT
                    3569            
1002 75A081         3570            mov     p2, #i8255INB       ; citaj data z portu B
1005 7580FE         3571            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1008 C2B7           3572            clr     RDNOT
100A 00             3573            nop
100B 00             3574            nop
100C 00             3575            nop
100D 00             3576            nop
100E 858021         3577            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1011 D2B7           3578            setb    RDNOT
                    3579    
DEBUG                                                                                                         PAGE 64

1013 75A082         3580            mov     p2, #i8255INC       ; citaj data z portu C
1016 75803F         3581            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1019 C2B7           3582            clr     RDNOT
101B 00             3583            nop
101C 00             3584            nop
101D 00             3585            nop
101E 00             3586            nop
101F 858022         3587            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1022 D2B7           3588            setb    RDNOT
1024 00             3589            nop
1025 00             3590            nop
1026 00             3591            nop
1027 00             3592            nop
1028 00             3593            nop
1029 00             3594            nop
102A 00             3595            nop
102B 00             3596            nop
102C D2AF           3597            setb    EA                 ;znovu spustime prerusenia
102E 22             3598            ret
                    3599    
                    3600    
                    3601    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3602    ; READPORTS
                    3603    ; precita nove hodnoty na portoch
                    3604    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
102F                3605    READPORTS:
102F C2AF           3606            clr     EA                  ;Treba zakazat prerusenia
                    3607            
1031 75A080         3608            mov     p2, #i8255INA       ; citaj data z portu A
1034 75803F         3609            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
1037 C2B7           3610            clr     RDNOT
1039 00             3611            nop
103A 00             3612            nop
103B 00             3613            nop
103C 00             3614            nop
103D 858028         3615            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1040 D2B7           3616            setb    RDNOT
                    3617            
1042 75A081         3618            mov     p2, #i8255INB       ; citaj data z portu B
1045 7580FE         3619            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1048 C2B7           3620            clr     RDNOT
104A 00             3621            nop
104B 00             3622            nop
104C 00             3623            nop
104D 00             3624            nop
104E 858021         3625            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1051 D2B7           3626            setb    RDNOT
                    3627    
1053 75A082         3628            mov     p2, #i8255INC       ; citaj data z portu C
1056 75803F         3629            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1059 C2B7           3630            clr     RDNOT
105B 00             3631            nop
105C 00             3632            nop
105D 00             3633            nop
105E 00             3634            nop
105F 858022         3635            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1062 D2B7           3636            setb    RDNOT
DEBUG                                                                                                         PAGE 65

1064 00             3637            nop
1065 00             3638            nop
1066 00             3639            nop
1067 00             3640            nop
1068 00             3641            nop
1069 00             3642            nop
106A 00             3643            nop
106B 00             3644            nop
106C D2AF           3645            setb    EA                 ;znovu spustime prerusenia
                    3646            
                    3647            
106E 300F04         3648            jnb     DPK, READPORTS_C1
1071 C222           3649            clr     FAST
1073 D223           3650            setb    SLOW
1075                3651    READPORTS_C1:         
1075 204003         3652            jb      STOPNOT, READPORTS_C
1078 120FC8         3653            lcall   STOP
107B                3654    READPORTS_C:        
107B E528           3655            mov     A, INPORTA
107D 541E           3656            anl     A, #00011110b
107F 4223           3657            orl     OUTPORTA, A
1081 12108E         3658            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
1084 E522           3659            mov     A, INPORTC
1086 543F           3660            anl     A, #00111111b
1088 4225           3661            orl     OUTPORTC, A
108A 12108E         3662            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    3663            
                    3664            
108D 22             3665            ret
                    3666            
                    3667    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3668    ; WRITEPORTS
                    3669    ; spravi zalohu vystupnych registrov a posle data von
                    3670    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
108E                3671    WRITEPORTS:
108E C2AF           3672            clr     EA                  ;Treba zakazat prerusenia
                    3673            
1090 852380         3674            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
1093 75A0C0         3675            mov     p2, #i8255OUTA
1096 C2B6           3676            clr     WRNOT
1098 00             3677            nop
1099 00             3678            nop
109A 00             3679            nop
109B 00             3680            nop
109C D2B6           3681            setb    WRNOT
                    3682            
109E 852480         3683            mov     p0, OUTPORTB        ; potom port B
10A1 75A0C1         3684            mov     p2, #i8255OUTB
10A4 C2B6           3685            clr     WRNOT
10A6 00             3686            nop
10A7 00             3687            nop
10A8 00             3688            nop
10A9 00             3689            nop
10AA D2B6           3690            setb    WRNOT
                    3691    
10AC 852580         3692            mov     p0, OUTPORTC        ; a nakoniec port C
10AF 75A0C2         3693            mov     p2, #i8255OUTC
10B2 C2B6           3694            clr     WRNOT
DEBUG                                                                                                         PAGE 66

10B4 00             3695            nop
10B5 00             3696            nop
10B6 00             3697            nop
10B7 00             3698            nop
10B8 D2B6           3699            setb    WRNOT
10BA 00             3700            nop
10BB 00             3701            nop
10BC 00             3702            nop
10BD 00             3703            nop
10BE 00             3704            nop
10BF 00             3705            nop
10C0 00             3706            nop
10C1 00             3707            nop
10C2 D2AF           3708            setb     EA                  ;Treba zakazat prerusenia
10C4 22             3709            ret
                    3710    
                    3711    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3712    
                    3713    
                    3714    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3715    ; DISPSTR
                    3716    ; posle na seriovu linku retazec na adrese DPTR
                    3717    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10C5                3718    DISPSTR:
10C5 C0E0           3719            push    ACC
10C7                3720    DSPS_LOOP:           
10C7 E4             3721            clr     A
10C8 93             3722            movc    A, @A+DPTR
10C9 600A           3723            jz      DSPS_END
10CB C299           3724            clr     TI
10CD F599           3725            mov     SBUF, A
10CF 3099FD         3726            jnb     TI, $ 
10D2 A3             3727            inc     DPTR
10D3 80F2           3728            sjmp    DSPS_LOOP
10D5                3729    DSPS_END:
10D5 D0E0           3730            pop     ACC
10D7 22             3731            ret
                    3732                                         
                    3733                                         
                =1  3734            $include (procLib.inc)     
                =1  3735    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  3736    ; INT_TIMER2
                =1  3737    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  3738    ;
                =1  3739    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  3740    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  3741    ;     a nastavi sa priznak <T2_F>
                =1  3742    ; 
                =1  3743    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  3744    ;
                =1  3745    ;                mov             T2_C, #60                               ;3 sekundy
                =1  3746    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  3747    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  3748    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  3749    ;
DEBUG                                                                                                         PAGE 67

                =1  3750    ;
                =1  3751    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
10D8            =1  3752    INT_TIMER2:
10D8 C2CF       =1  3753                        clr     TF2
10DA C0E0       =1  3754            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  3755                       
10DC E52D       =1  3756            mov     A, T2_C                             ;
10DE 6005       =1  3757            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
10E0 14         =1  3758                        dec           A                 ; dekrementovanie registra T2_C 
10E1 F52D       =1  3759            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  3760                        
10E3 8007       =1  3761            sjmp    INT_TIMER2_END          ;
10E5            =1  3762    INT_TIMER2_MAIN:
10E5 C2CA       =1  3763                        clr           TR2                                         ; zastavime po
                                                                               citadlo
10E7 752D00     =1  3764            mov     T2_C, #0                            ; Resetujeme pocitadlo
10EA D262       =1  3765                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
10EC            =1  3766    INT_TIMER2_END:     
10EC D0E0       =1  3767            pop     ACC                                     
10EE 32         =1  3768            reti 
                =1  3769            
                    3770    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    3771    
10EF 0D0A5269       3772    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
10F3 61646961   
10F7 63692073   
10FB 79737465   
10FF 6D206A65   
1103 20696E69   
1107 6369616C   
110B 697A6F76   
110F 616E792E   
1113 0D0A00     
1116 52696164       3773    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
111A 69616369   
111E 20737973   
1122 74656D20   
1126 6A652072   
112A 65696E69   
112E 6369616C   
1132 697A6F76   
1136 616E7920   
113A 706F2073   
113E 746C6163   
1142 656E6920   
1146 746C6163   
114A 69646C61   
114E 2053544F   
1152 502E0D0A   
1156 00         
1157 4B616C69       3774    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
115B 62726163   
115F 69612076   
1163 79746168   
DEBUG                                                                                                         PAGE 68

1167 75206A65   
116B 20756B6F   
116F 6E63656E   
1173 612E0D0A   
1177 00         
1178 43687962       3775    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
117C 61212056   
1180 79706164   
1184 6C612073   
1188 706F6D61   
118C 6C6F7661   
1190 63696120   
1194 636C6F6E   
1198 6B61210D   
119C 0A00       
119E 43687962       3776    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
11A2 61212056   
11A6 79706164   
11AA 6C692064   
11AE 76652073   
11B2 706F6D61   
11B6 6C6F7661   
11BA 63696520   
11BE 636C6F6E   
11C2 6B79210D   
11C6 0A00       
11C8 43687962       3777    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
11CC 61212056   
11D0 79706164   
11D4 6C61207A   
11D8 61737461   
11DC 766F7661   
11E0 63696120   
11E4 636C6F6E   
11E8 6B61210D   
11EC 0A00       
11EE 43687962       3778    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
11F2 6121204E   
11F6 656F6361   
11FA 6B617661   
11FE 6E65206E   
1202 61636974   
1206 616E6965   
120A 20686F72   
120E 6E656A20   
1212 73706F6D   
1216 616C6F76   
121A 6163656A   
121E 20636C6F   
1222 6E6B7921   
1226 0D0A00     
1229 43687962       3779    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
122D 6121204E   
1231 656F6361   
1235 6B617661   
1239 6E65206E   
DEBUG                                                                                                         PAGE 69

123D 61636974   
1241 616E6965   
1245 20646F6C   
1249 6E656A20   
124D 73706F6D   
1251 616C6F76   
1255 6163656A   
1259 20636C6F   
125D 6E6B7921   
1261 0D0A00     
1264 53707573       3780    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
1268 74616D20   
126C 4B54502E   
1270 2E2E0D0A   
1274 00         
1275 446F736C       3781    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
1279 6F206B20   
127D 7A6D656E   
1281 65204B54   
1285 50210D0A   
1289 00         
                    3782    
----                3783            DSEG
0040                3784            org     40h
0040                3785    STACK:  DS      10h
                    3786    
                    3787    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 70

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALIB. . . . . . . . . . . . . .  C ADDR  00C7H  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00E0H  
CALIBEND2. . . . . . . . . . . .  C ADDR  00EBH  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00D8H  
CFCERR . . . . . . . . . . . . .  C ADDR  0F5CH  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  07EDH  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0BBBH  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0E32H  
DEL1 . . . . . . . . . . . . . .  C ADDR  0FE9H  
DISPSTR. . . . . . . . . . . . .  C ADDR  10C5H  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  NOT USED  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DEBUG                                                                                                         PAGE 71

DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  06ACH  
DOWN2ERR . . . . . . . . . . . .  C ADDR  0711H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  0720H  
DOWN2_C. . . . . . . . . . . . .  C ADDR  06E5H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  07C5H  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  07E0H  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  073CH  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  0767H  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  0793H  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  07A2H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0A55H  
DOWN3A . . . . . . . . . . . . .  C ADDR  0A8EH  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0BC5H  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0BE0H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0AD3H  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0AFEH  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0B40H  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0C0FH  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0C2DH  
DOWN4. . . . . . . . . . . . . .  C ADDR  0CD7H  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0D09H  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0E3CH  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0E5AH  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0D4EH  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0D75H  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0DB7H  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  0E89H  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  0EA4H  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPS_END . . . . . . . . . . . .  C ADDR  10D5H  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  10C7H  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  01DFH  
ENDD1. . . . . . . . . . . . . .  C ADDR  024BH  
ENDD10 . . . . . . . . . . . . .  C ADDR  0957H  
ENDD11 . . . . . . . . . . . . .  C ADDR  09DAH  
ENDD12 . . . . . . . . . . . . .  C ADDR  0AB6H  
ENDD13 . . . . . . . . . . . . .  C ADDR  0B26H  
ENDD14 . . . . . . . . . . . . .  C ADDR  0C08H  
ENDD15 . . . . . . . . . . . . .  C ADDR  0C55H  
ENDD16 . . . . . . . . . . . . .  C ADDR  0D31H  
ENDD17 . . . . . . . . . . . . .  C ADDR  0D9DH  
ENDD18 . . . . . . . . . . . . .  C ADDR  0E82H  
ENDD19 . . . . . . . . . . . . .  C ADDR  0ECCH  
ENDD2. . . . . . . . . . . . . .  C ADDR  0337H  
ENDD3. . . . . . . . . . . . . .  C ADDR  0384H  
ENDD4. . . . . . . . . . . . . .  C ADDR  04F1H  
ENDD5. . . . . . . . . . . . . .  C ADDR  0561H  
ENDD6. . . . . . . . . . . . . .  C ADDR  064DH  
ENDD7. . . . . . . . . . . . . .  C ADDR  069AH  
ENDD8. . . . . . . . . . . . . .  C ADDR  070DH  
ENDD9. . . . . . . . . . . . . .  C ADDR  078FH  
ENDPROG. . . . . . . . . . . . .  C ADDR  0F6DH  NOT USED  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
DEBUG                                                                                                         PAGE 72

ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERROR1 . . . . . . . . . . . . .  C ADDR  0F23H  
ERROR1C. . . . . . . . . . . . .  C ADDR  0F3CH  
ERROR1S. . . . . . . . . . . . .  C ADDR  0F2EH  
ERROR2 . . . . . . . . . . . . .  C ADDR  0F4DH  
ERR_1SPOM_C. . . . . . . . . . .  C ADDR  0EDEH  NOT USED  
ERR_2SPOM_C. . . . . . . . . . .  C ADDR  0EF3H  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  0F11H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  0F1AH  
ERR_ZAST_C . . . . . . . . . . .  C ADDR  0F08H  NOT USED  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
EX1. . . . . . . . . . . . . . .  B ADDR  00AAH  PREDEFINED  
F1OK . . . . . . . . . . . . . .  C ADDR  0179H  
F1S. . . . . . . . . . . . . . .  C ADDR  0141H  
F2 . . . . . . . . . . . . . . .  C ADDR  0472H  
F2DOWN . . . . . . . . . . . . .  C ADDR  0484H  
F2OK . . . . . . . . . . . . . .  C ADDR  03EAH  
F2S. . . . . . . . . . . . . . .  C ADDR  03C8H  
F2SW . . . . . . . . . . . . . .  C ADDR  0430H  
F2UP . . . . . . . . . . . . . .  C ADDR  0478H  
F3 . . . . . . . . . . . . . . .  C ADDR  08D8H  
F3DOWN . . . . . . . . . . . . .  C ADDR  08EAH  
F3OK . . . . . . . . . . . . . .  C ADDR  0850H  
F3S. . . . . . . . . . . . . . .  C ADDR  082EH  
F3SW . . . . . . . . . . . . . .  C ADDR  0896H  
F3UP . . . . . . . . . . . . . .  C ADDR  08DEH  
F4OK . . . . . . . . . . . . . .  C ADDR  0CCBH  
F4S. . . . . . . . . . . . . . .  C ADDR  0C93H  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  0115H  
FLOOR2 . . . . . . . . . . . . .  C ADDR  0396H  
DEBUG                                                                                                         PAGE 73

FLOOR3 . . . . . . . . . . . . .  C ADDR  07FCH  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0C67H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  0F78H  
INT_TIMER0_END . . . . . . . . .  C ADDR  0FA5H  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  0F8AH  
INT_TIMER2 . . . . . . . . . . .  C ADDR  10D8H  
INT_TIMER2_END . . . . . . . . .  C ADDR  10ECH  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  10E5H  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  0100H  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P1 . . . . . . . . . . . . . . .  D ADDR  0090H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
P3 . . . . . . . . . . . . . . .  D ADDR  00B0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
DEBUG                                                                                                         PAGE 74

PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READPORTS. . . . . . . . . . . .  C ADDR  102FH  
READPORTS1 . . . . . . . . . . .  C ADDR  0FEFH  
READPORTS_C. . . . . . . . . . .  C ADDR  107BH  
READPORTS_C1 . . . . . . . . . .  C ADDR  1075H  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0040H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  0FC8H  
STOPC. . . . . . . . . . . . . .  C ADDR  0FD8H  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  1157H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  1264H  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  1178H  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  119EH  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  1275H  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  1229H  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  11EEH  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  11C8H  
STR_INIT . . . . . . . . . . . .  C ADDR  10EFH  
STR_STOP . . . . . . . . . . . .  C ADDR  1116H  NOT USED  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  0062H  
T2_R . . . . . . . . . . . . . .  D ADDR  002EH  NOT USED  
TCON . . . . . . . . . . . . . .  D ADDR  0088H  PREDEFINED  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME0. . . . . . . . . . . . . .  C ADDR  0FB4H  
TIME1. . . . . . . . . . . . . .  C ADDR  0FB6H  
TIME10MS . . . . . . . . . . . .  C ADDR  0FB2H  
TIME2. . . . . . . . . . . . . .  C ADDR  0FBAH  
TIME3. . . . . . . . . . . . . .  C ADDR  0FBEH  
TIME4. . . . . . . . . . . . . .  C ADDR  0FC5H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
DEBUG                                                                                                         PAGE 75

TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  02DBH  
U2_MB2C. . . . . . . . . . . . .  C ADDR  05F1H  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0A45H  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  0185H  
UP1A . . . . . . . . . . . . . .  C ADDR  01B7H  
UP1_MB1. . . . . . . . . . . . .  C ADDR  02E5H  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  030FH  
UP1_MB2. . . . . . . . . . . . .  C ADDR  01FCH  
UP1_MB2A . . . . . . . . . . . .  C ADDR  0223H  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  0265H  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  033EH  
UP1_STOP_C . . . . . . . . . . .  C ADDR  035CH  
UP2. . . . . . . . . . . . . . .  C ADDR  0490H  
UP2A . . . . . . . . . . . . . .  C ADDR  04C9H  
UP2_MB1. . . . . . . . . . . . .  C ADDR  05FBH  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  0625H  
UP2_MB2. . . . . . . . . . . . .  C ADDR  050EH  
UP2_MB2A . . . . . . . . . . . .  C ADDR  0539H  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  057BH  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  0654H  
UP2_STOP_C . . . . . . . . . . .  C ADDR  0672H  
UP3. . . . . . . . . . . . . . .  C ADDR  08F6H  
UP3A . . . . . . . . . . . . . .  C ADDR  092FH  
UP3ERR . . . . . . . . . . . . .  C ADDR  095BH  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  096BH  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0A11H  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0A38H  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0987H  
UP3_MB2A . . . . . . . . . . . .  C ADDR  09B2H  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  09DEH  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  09EEH  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WAITFORTIMER . . . . . . . . . .  C ADDR  0FE7H  
WRITEPORTS . . . . . . . . . . .  C ADDR  108EH  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
