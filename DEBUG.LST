DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    
                =1    41    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    42    i8255INA        equ     080h
  0081          =1    43    i8255INB        equ     081h
  0082          =1    44    i8255INC        equ     082h
  0083          =1    45    i8255INCW       equ     083h
  00C0          =1    46    i8255OUTA       equ     0c0h
  00C1          =1    47    i8255OUTB       equ     0c1h
  00C2          =1    48    i8255OUTC       equ     0c2h
  00C3          =1    49    i8255OUTCW      equ     0c3h
                =1    50    
                =1    51    ; bitovo adresovatelne bunky
                =1    52    ;               data    20h    ; toto vyuziva emulator
  0021          =1    53    INPORTB         data    21h    ; nutne kvoli emulatoru!!! 
  0022          =1    54    INPORTC         data    22h
  0023          =1    55    OUTPORTA        data    23h
  0024          =1    56    OUTPORTB        data    24h
  0025          =1    57    OUTPORTC        data    25h
  0026          =1    58    INPORTBold      data    26h
DEBUG                                                                                                         PAGE 2

  0027          =1    59    CTRLREG         data    27h
  0028          =1    60    INPORTA         data    28h
                =1    61    ;               data    29h
  002A          =1    62    ERRFLOOR_U      data    2Ah
  002B          =1    63    ERRFLOOR_D      data    2Bh
  002C          =1    64    T_F                       data    2Ch
  002D          =1    65    T2_C                    data      2Dh      ;toto tu nemusi byt, netreba mi bitovo adresovate
                                                                               lne
  002E          =1    66    T0_C            data      2Eh
  002F          =1    67    T2              data    2Fh  
                =1    68    ; general purpose RAM (including STACK)
  0030          =1    69    POSITION        data    30h
  0031          =1    70    LOWEST          data    31h
  0032          =1    71    HIGHEST         data    32h
  0033          =1    72    STOPTIMER       data    33h
  0034          =1    73    OUTPORTBold     data    34h
  0035          =1    74    ERRF1_C         data    35h
  0036          =1    75    ERRF2_C         data    36h
  0037          =1    76    ERRF3_C         data    37h
  0038          =1    77    ERRF4_C         data    38h
  0039          =1    78    ERRF12_C        data    39h
  003A          =1    79    ERRF23_C        data    3Ah
  003B          =1    80    ERRF34_C        data    3Bh
  003C          =1    81    G                           data    3Ch
  003D          =1    82    D1                  data    3Dh
  003E          =1    83    D2              data    3Eh
  003F          =1    84    ERRSKRH_C       data    3Fh
  0040          =1    85    ERRSKRD_C       data    40h 
  0041          =1    86    ERRSIG          data    41h
                =1    87       
  0042          =1    88    MSG_LEN                     data          42h
  0043          =1    89    MSG_PTR_R                   data          43h
  0044          =1    90    MSG_PTR_S                   data          44h
  0045          =1    91    MSG_PTR_REC               data    45h
                =1    92    
  0046          =1    93    POSCHODIE       data    46h
  0047          =1    94    PORUCHA         data    47h
                =1    95    
                =1    96                 
                =1    97    
                =1    98    
                =1    99    ;                       50h - vyssie - stack!
                =1   100    
                =1   101    
                =1   102    
  0060          =1   103    T0_F                    bit         T_F.0
  007A          =1   104    T2_F                    bit         T2.2
  0061          =1   105    S_RI                          bit                 T_F.1
  0063          =1   106    TRE             bit     T_F.3
  0064          =1   107    FLOORTIME       bit     T_F.4
                =1   108    
  0051          =1   109    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1   110    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1   111    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1   112    ERRF4_U         bit     ERRFLOOR_U.4  
                =1   113    
  0052          =1   114    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1   115    ERRF23_U        bit     ERRFLOOR_U.3
DEBUG                                                                                                         PAGE 3

  0054          =1   116    ERRF34_U        bit     ERRFLOOR_U.4   
                =1   117    
  0059          =1   118    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1   119    ERRF2_D         bit     ERRFLOOR_D.2
  005B          =1   120    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1   121    ERRF4_D         bit     ERRFLOOR_D.4   
                =1   122    
  0059          =1   123    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1   124    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1   125    ERRF34_D        bit     ERRFLOOR_D.3
                =1   126    
  0040          =1   127    STOPNOT         bit     INPORTA.0
  0041          =1   128    PKI1            bit     INPORTA.1
  0042          =1   129    PKI2            bit     INPORTA.2
  0043          =1   130    PKI3            bit     INPORTA.3
  0044          =1   131    PKI4            bit     INPORTA.4
  0045          =1   132    DOORCLSD        bit     INPORTA.5 
                =1   133    
  0009          =1   134    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   135    MB2             bit     INPORTB.2
  000B          =1   136    SKRH            bit     INPORTB.3
  000C          =1   137    SKRD            bit     INPORTB.4
  000D          =1   138    DP              bit     INPORTB.5
  000E          =1   139    DPZK            bit     INPORTB.6
  000F          =1   140    DPK             bit     INPORTB.7
                =1   141    
  0031          =1   142    MB1old          bit     INPORTBold.1
  0032          =1   143    MB2old          bit     INPORTBold.2
  0033          =1   144    SKRHold         bit     INPORTBold.3
  0034          =1   145    SKRDold         bit     INPORTBold.4
                =1   146    
  0010          =1   147    PI1             bit     INPORTC.0
  0011          =1   148    PI2D            bit     INPORTC.1
  0012          =1   149    PI2U            bit     INPORTC.2
  0013          =1   150    PI3D            bit     INPORTC.3
  0014          =1   151    PI3U            bit     INPORTC.4
  0015          =1   152    PI4             bit     INPORTC.5
                =1   153    
  0018          =1   154    KS              bit     OUTPORTA.0
  0019          =1   155    PKO1            bit     OUTPORTA.1
  001A          =1   156    PKO2            bit     OUTPORTA.2
  001B          =1   157    PKO3            bit     OUTPORTA.3
  001C          =1   158    PKO4            bit     OUTPORTA.4
                =1   159    
  0020          =1   160    UP              bit     OUTPORTB.0
  0021          =1   161    DOWN            bit     OUTPORTB.1
  0022          =1   162    FAST            bit     OUTPORTB.2
  0023          =1   163    SLOW            bit     OUTPORTB.3
  0024          =1   164    FLED1           bit     OUTPORTB.4
  0025          =1   165    FLED2           bit     OUTPORTB.5
  0026          =1   166    FLED3           bit     OUTPORTB.6
  0027          =1   167    FLED4           bit     OUTPORTB.7
                =1   168    
  0028          =1   169    PO1U            bit     OUTPORTC.0
  0028          =1   170    PO1D            bit     OUTPORTC.0
  0028          =1   171    PO1             bit     OUTPORTC.0
  0029          =1   172    PO2D            bit     OUTPORTC.1
  002A          =1   173    PO2U            bit     OUTPORTC.2
DEBUG                                                                                                         PAGE 4

  002B          =1   174    PO3D            bit     OUTPORTC.3
  002C          =1   175    PO3U            bit     OUTPORTC.4
  002D          =1   176    PO4             bit     OUTPORTC.5
  002D          =1   177    PO4U            bit     OUTPORTC.5
  002D          =1   178    PO4D            bit     OUTPORTC.5
  002E          =1   179    LEDD            bit     OUTPORTC.6
  002F          =1   180    LEDU            bit     OUTPORTC.7
                =1   181    
  0038          =1   182    STOPPED         bit     CTRLREG.0
  0039          =1   183    DOORCLSDold     bit     CTRLREG.1
  003A          =1   184    UPold           bit     CTRLREG.2
  003B          =1   185    DOWNold         bit     CTRLREG.3
  003C          =1   186    FASTold         bit     CTRLREG.4
  003D          =1   187    SLOWold         bit     CTRLREG.5
                =1   188    
  00B6          =1   189    WRNOT           bit     0B6h        ; p3.6
  00B7          =1   190    RDNOT           bit     0B7h        ; p3.7
                =1   191    
                =1   192    ; bitove masky
                =1   193    ; 8255OUT 
                =1   194    ; port A
  0001          =1   195    bmKS              equ    00000001b
  0002          =1   196    bmPKO1            equ    00000010b
  0004          =1   197    bmPKO2            equ    00000100b
  0008          =1   198    bmPKO3            equ    00001000b
  0010          =1   199    bmPKO4            equ    00010000b
                =1   200    
                =1   201    ; port B
  0001          =1   202    bmUP              equ    00000001b
  0002          =1   203    bmDOWN            equ    00000010b
  0004          =1   204    bmFAST            equ    00000100b
  0008          =1   205    bmSLOW            equ    00001000b
  0010          =1   206    bmFLED1           equ    00010000b
  0020          =1   207    bmFLED2           equ    00100000b
  0040          =1   208    bmFLED3           equ    01000000b
  0080          =1   209    bmFLED4           equ    10000000b
                =1   210    
                =1   211    ; port C
  0001          =1   212    bmPO1             equ    00000001b
  0002          =1   213    bmPO2D            equ    00000010b
  0004          =1   214    bmPO2U            equ    00000100b
  0008          =1   215    bmPO3D            equ    00001000b
  0010          =1   216    bmPO3U            equ    00010000b
  0020          =1   217    bmPO4             equ    00100000b
  0040          =1   218    bmLEDD            equ    01000000b
  0080          =1   219    bmLEDU            equ    10000000b
                =1   220    
                =1   221    ; 8255IN
                =1   222    ; port A
  0001          =1   223    bmSTOP            equ    00000001b
  0002          =1   224    bmPKI1            equ    00000010b
  0004          =1   225    bmPKI2            equ    00000100b
  0008          =1   226    bmPKI3            equ    00001000b
  0010          =1   227    bmPKI4            equ    00010000b
  0020          =1   228    bmDOORCLSD        equ    00100000b
                =1   229    
                =1   230    ; port B
  0002          =1   231    bmMB1I            equ    00000010b
DEBUG                                                                                                         PAGE 5

  0004          =1   232    bmMB2I            equ    00000100b
  0008          =1   233    bmSKRHI           equ    00001000b
  0010          =1   234    bmSKRHD           equ    00010000b
  0020          =1   235    bmDPI             equ    00100000b
  0040          =1   236    bmDPZKI           equ    01000000b
  0080          =1   237    bmDPKI            equ    10000000b
                =1   238    
                =1   239    ; port C
  0001          =1   240    bmPI1             equ    00000001b
  0002          =1   241    bmPI2D            equ    00000010b
  0004          =1   242    bmPI2U            equ    00000100b
  0008          =1   243    bmPI3D            equ    00001000b
  0010          =1   244    bmPI3U            equ    00010000b
  0020          =1   245    bmPI4             equ    00100000b
                =1   246    
                =1   247    $include (macroLib.inc)
                =1   248    ;*******************************************************************************
                =1   249    ;   Sofrverovy breakpoint
                =1   250    ;-------------------------------------------------------------------------------
                =1   251    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   252    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   253    ;     nastaveny na hodnotu <INT1>
                =1   254    ;
                =1   255    ;     Emulator -> Configuration -> Single step interrupt
                =1   256    ;
                =1   257    _BP_    MACRO 
                =1   258            clr     P3.3
                =1   259            setb    EX1
                =1   260            nop
                =1   261    ENDM
                =1   262    
                =1   263    
                =1   264    ;*******************************************************************************
                =1   265    ;   CFCSS - kontrolne instrukcie
                =1   266    ;-------------------------------------------------------------------------------
                =1   267    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   268    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   269    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   270    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   271    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   272    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   273    ;
                =1   274    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   275            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   276            IF (Dx <> -1)
                =1   277                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   278                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   279            ENDIF    
                =1   280            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   281            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   282            IF (D1val <> -1)
                =1   283                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   284            ELSE
                =1   285                mov         D1, #32        ;; Nastavenie priznaku <D1> na hodnotu mimo rozsahu 
                                                                               
                =1   286            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   287            IF (D2val <> -1)
DEBUG                                                                                                         PAGE 6

                =1   288                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   289            ELSE
                =1   290                mov         D2, #32        ;; Nastavenie priznaku <D2> na hodnotu mimo rozsahu 
                                                                               
                =1   291            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   292            mov       A, #s
                =1   293            lcall     PRINTCHAR        ;; Vypis aktualneho <s> na seriovu linku
                =1   294    ENDM
                =1   295    
                =1   296    
                =1   297    ;*******************************************************************************
                =1   298    ;   Instrukcie pre casovace a pocitadla
                =1   299    ;-------------------------------------------------------------------------------
                =1   300    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   301    ;     priznak <T2_F>    
                =1   302    ;
                =1   303    TIMER2  MACRO  VAL
                =1   304               mov           T2_C, #VAL                              ;; 3 sekundy
                =1   305                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   306                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   307    ENDM
                =1   308    
                =1   309    
                =1   310    ;*******************************************************************************
                =1   311    ;   Sprava KEEPALIVE
                =1   312    ;-------------------------------------------------------------------------------
                =1   313    ;     Odošle správu keepalive (00h, 00h, 7eh)
                =1   314    ;
                =1   315    SEND_KEEPALIVE   MACRO
                =1   316          mov     A, #0h
                =1   317          lcall   PRINTCHAR
                =1   318          lcall   PRINTCHAR 
                =1   319          mov     A, #7Eh 
                =1   320          lcall   PRINTCHAR 
                =1   321    ENDM
                =1   322    
                =1   323    ;*******************************************************************************
                =1   324    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   325    ;-------------------------------------------------------------------------------
                =1   326    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   327    ;
                =1   328    
                =1   329    ; Long jump if zero
                =1   330    LJZ     MACRO   NAVESTIE
                =1   331            jnz     $+5
                =1   332            ljmp    NAVESTIE
                =1   333            nop
                =1   334    ENDM
                =1   335    
                =1   336    ; Long jump if not zero
                =1   337    LJNZ    MACRO   NAVESTIE
                =1   338            jz      $+5
                =1   339            ljmp    NAVESTIE
                =1   340            nop
                =1   341    ENDM
                =1   342    
DEBUG                                                                                                         PAGE 7

                =1   343    ; Long jump if bit set
                =1   344    LJB     MACRO   TESTBIT, NAVESTIE
                =1   345            jnb     TESTBIT, $+6
                =1   346            ljmp    NAVESTIE
                =1   347            nop
                =1   348    ENDM
                =1   349    
                =1   350    ; Long jump if bit not set
                =1   351    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   352            jb      TESTBIT, $+6
                =1   353            ljmp    NAVESTIE
                =1   354            nop
                =1   355    ENDM
                =1   356    
                =1   357    ; Compare & long jump if not equal
                =1   358    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   359            cjne    OP1, OP2, $+6
                =1   360            jmp     $+6
                =1   361            ljmp    NAVESTIE
                =1   362            nop
                =1   363    ENDM
                =1   364    
                =1   365    ; Compare & jump if equal
                =1   366    CJE     MACRO   OP1, OP2, NAVESTIE
                =1   367            cjne    OP1, OP2, $+6
                =1   368            ljmp     NAVESTIE
                =1   369            nop
                =1   370    ENDM
                =1   371    
                =1   372    ; Long call if bit set
                =1   373    LCALLB  MACRO   TESTBIT, NAVESTIE
                =1   374            jnb     TESTBIT, $+6
                =1   375            lcall   NAVESTIE
                =1   376            nop
                =1   377    ENDM
                =1   378    
                =1   379    ; Compare & Long call if equal
                =1   380    CLCALLE MACRO   OP1, OP2, NAVESTIE
                =1   381            cjne    OP1, OP2, $+6
                =1   382            lcall   NAVESTIE
                =1   383            nop
                =1   384    ENDM
                =1   385    
                =1   386    ;*******************************************************************************
                =1   387    ;   Modifikacie instrukcii x51
                =1   388    ;-------------------------------------------------------------------------------
                =1   389    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   390    ;
                =1   391    
                =1   392    ;Logical and (bit operands)
                =1   393    ANLB   MACRO   BIT1, BIT2
                =1   394            mov   C, BIT1
                =1   395            anl   C, /BIT2
                =1   396            mov   BIT1, C
                =1   397    ENDM
                =1   398    
                =1   399    ; Compare & long jump if equal
                =1   400    LCJE     MACRO   OP1, OP2, NAVESTIE
DEBUG                                                                                                         PAGE 8

                =1   401            cjne    OP1, OP2, $+7
                =1   402            jmp    NAVESTIE
                =1   403            nop
                =1   404    ENDM
                =1   405    
                =1   406    
                =1   407    ;*******************************************************************************
                =1   408    ;   Privolavace, signalizácia polohy a smeru kabiny
                =1   409    ;-------------------------------------------------------------------------------
                =1   410    ;
                =1   411    ;   Signalizacia polohy kabiny
                =1   412    ;
                =1   413    ;     Signalizuje polohu kabiny na signalizacnom paneli.  
                =1   414    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   415    ;     Vykonane zmeny sa zapisu na porty     
                =1   416    ;
                =1   417    POLOHA_LED  MACRO  POLOHA
                =1   418            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   419            setb    FLED&POLOHA
                =1   420            lcall   WRITEPORTS
                =1   421    ENDM
                =1   422    
                =1   423    ;   Zrusenie volby vybraneho poschodia
                =1   424    ;
                =1   425    ;     Zrusi volbu vybraneho poschodia <POSCH>. Volba   
                =1   426    ;     sa zrusi v kabine ako aj v oboch smeroch na poschodi.
                =1   427    ;
                =1   428    ZRUS_POSCH  MACRO POSCH
                =1   429            clr     PKO&POSCH       ;; vynulovanie volby poschodia na ktorom stojim
                =1   430            clr     PO&POSCH&U      ;;
                =1   431            clr     PO&POSCH&D      ;;
                =1   432            lcall   WRITEPORTS
                =1   433    ENDM
                =1   434    
                =1   435    ;   Rozsvietenie kabinoveho svetla a smerovej signalizacie 
                =1   436    ;
                =1   437    ;     Rozsvieti kabinove svetlo a obe sibky smerovej
                =1   438    ;     signalizacie ak sa v kabine nachadza obsluhyschopna
                =1   439    ;     osoba. V opacnom pripade svetlo a signalizaciu
                =1   440    ;     zhasne.
                =1   441    ;
                =1   442    KABINOVE_SVETLO MACRO
                =1   443            mov      C, DP          ;; Ak je nieko v kabine,
                =1   444            orl      C, DPZK        ;;
                =1   445            orl      C, DPK         ;;
                =1   446            mov      KS, C          ;;   - v kabine zapalime svetlo. Ak nie, bude zhasnute.
                =1   447            mov      LEDU, C        ;;   - Rozsvietime signalizaciu do oboch smerov. Ak nie, zha
                                                                               sneme.
                =1   448            mov      LEDD, C        ;;
                =1   449            lcall   WRITEPORTS      ;;
                =1   450    ENDM
                =1   451    
                =1   452    ;   Rozsvieti obe smerove LED diody (signalizacia, ze kabina stoji)
                =1   453    ;
                =1   454    ROZSVIET_SMER_LED MACRO
                =1   455            setb    LEDU            ;
                =1   456            setb    LEDD            ;
DEBUG                                                                                                         PAGE 9

                =1   457            lcall   WRITEPORTS      ;
                =1   458    ENDM
                =1   459    
                =1   460    ;   Zistenie, ci obsluhyschopna osoba zvolila poschodie
                =1   461    ;      
                =1   462    ;     Zistenie, či obsluhyschopna osoba v kabine vytahu 
                =1   463    ;     stlacila niektoru z volieb poschodi v kabine.
                =1   464    ;     V pripade, ze v kabine sa nachadza obsluhyschopna 
                =1   465    ;     osoba a volba zatial nebola uskutocnena, skoci sa 
                =1   466    ;     na <NAVESTIE>      
                =1   467    ;        
                =1   468    JE_VYBRATE_POSCHODIE MACRO NAVESTIE
                =1   469            mov      C, DP         ;; Ak sa nachadza v kabine osoba, 
                =1   470            orl      C, DPZK        ;;
                =1   471            orl      C, DPK         ;;
                =1   472            jnc      $+8            ;;
                =1   473            mov      A, INPORTA     ;;
                =1   474            anl      A, #00011110b  ;; ...a nie je vybrata ziadna volba (v kabine)
                =1   475            jz       NAVESTIE       ;; skoc na navestie
                =1   476    ENDM
                =1   477    
                =1   478    
                =1   479    ;*******************************************************************************
                =1   480    ;   Rychlost a smer pohybu motora
                =1   481    ;-------------------------------------------------------------------------------
                =1   482    ;
                =1   483    ;   Nastavenie smeru pohybu motora - hore
                =1   484    SET_UP MACRO
                =1   485            setb     UP
                =1   486            clr      DOWN
                =1   487            setb     LEDU
                =1   488            clr      LEDD 
                =1   489    ENDM
                =1   490    
                =1   491    ;   Nastavenie smeru pohybu motora - dole
                =1   492    SET_DOWN MACRO
                =1   493            clr     UP
                =1   494            setb    DOWN
                =1   495            clr     LEDU
                =1   496            setb    LEDD 
                =1   497    ENDM
                =1   498    
                =1   499    ;   Nastavenie rychlosti pohybu motora - rychlo
                =1   500    SET_FAST MACRO
                =1   501            setb     FAST
                =1   502            clr      SLOW
                =1   503            setb     KS      
                =1   504    ENDM
                =1   505    
                =1   506    ;   Nastavenie smeru pohybu motora - hore
                =1   507    SET_SLOW MACRO
                =1   508            setb     SLOW
                =1   509            clr      FAST
                =1   510            setb     KS
                =1   511    ENDM
                =1   512     
                =1   513      
                     514                       
DEBUG                                                                                                         PAGE 10

                     515    
                     516    ; Definicie registrov pre Keil uVision
  00C8               517    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00C9               518    T2MOD  DATA  0C9H  ;TIMER 2 MODE
  00CA               519    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               520    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               521    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               522    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               523    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
  00A6               524    WDTRST DATA  0A6H  ;Watchdog timer
                     525    
                     526    
  0000               527    COUNT    SET    0
                     528    
                     529    ;*******************************************************************************
                     530    ;   Oznacenie poruchoveho poschodia 
                     531    ;-------------------------------------------------------------------------------
                     532    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     533    ;
                     534    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     535                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     536                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     537            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
                     538            COUNT    SET    COUNT+1                   
                     539            
                     540            jb      TESTBIT, ENDD&LABEL
                     541            
                     542            IF (TESTBIT EQ MB2)
                     543                mov   PORUCHA, #3 ;porucha 011 - EZ
                     544            ENDIF 
                     545            IF (TESTBIT EQ MB1)
                     546                mov   PORUCHA, #1 ;porucha 001 - E1S
                     547            ENDIF 
                     548            
                     549            jnb     PKI&POSCH, $+9
                     550            clr     FAST
                     551            setb    SLOW
                     552            setb    STOPPED         
                     553            setb    FLOORBIT&_U
                     554            setb    FLOORBIT&_D
                     555            inc     FLOORBIT&_C
                     556                        clr     PKO&POSCH                           ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     557            clr     PO&POSCH&U            
                     558            clr     PO&POSCH&D              
                     559                        lcall   WRITEPORTS
                     560            ljmp    NAVESTIE
                     561    ENDD&LABEL:
                     562            nop
                     563    ENDM
                     564    
                     565    ;*******************************************************************************
DEBUG                                                                                                         PAGE 11

                     566    ;   Odstranenie oznacenia poruchoveho poschodia 
                     567    ;-------------------------------------------------------------------------------
                     568    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     569    ;
                     570    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     571            clr    FLOORBIT&_U
                     572            clr    FLOORBIT&_D
                     573            ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
                     574            nop
                     575    ENDM
                     576    
                     577    ;*******************************************************************************
                     578    ;   Osetrenie zakmitov clonky
                     579    ;-------------------------------------------------------------------------------
                     580    ;        
                     581    ;
                     582    ZAKMITC MACRO   TYPCLONKY
                     583            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     584            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     585            jnb     TYPCLONKY, $-3  ; 
                     586            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     587    ENDM
                     588    
                     589    ZASTAV  MACRO  C_POSCH, SMER
                     590                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     591            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     592            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     593            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     594            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     595            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     596            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     597            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
                     598            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     599            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     600    ENDM
                     601    
                     602    NAJNIZSIE  MACRO
                     603            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     604            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     605            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     606    
                     607            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     608            ANLB    ACC.2, ERRF2_D  ; |
                     609            ANLB    ACC.3, ERRF2_D  ; |
                     610            ANLB    ACC.4, ERRF3_D  ; |
                     611            ;ANLB    ACC.5, ERRF3_D  ; |
                     612    
DEBUG                                                                                                         PAGE 12

                     613            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     614     ; LL1: 
                     615            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     616            clr     C               ; Inak shiftnem o 2
                     617            rlc     A               ;
                     618            clr     C               ;
                     619            rlc     A               ;
                     620            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     621    ; LL2:
                     622            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     623    ENDM
                     624    
                     625    NAJVYSSIE  MACRO
                     626            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     627            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     628            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     629            
                     630            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     631            ANLB    ACC.3, ERRF2_U  ; |
                     632            ANLB    ACC.4, ERRF3_U  ; |
                     633            ANLB    ACC.5, ERRF3_U  ; |
                     634            ;ANLB    ACC.6, ERRF4_U  ; |
                     635            
                     636            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     637     ; LL1: 
                     638            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     639            clr     C               ; Inak shiftnem o 2
                     640            rrc     A               ;
                     641            clr     C               ;
                     642            rrc     A               ;
                     643            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     644    ; LL2:
                     645            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     646            clr     C               ;
                     647            subb    A, R0           ;
                     648    ENDM
                     649    
                     650    VYSSIE_KABINA  MACRO  POSCH
                     651            mov     A, INPORTA
                     652            anl     A, #00011110b
                     653            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     654            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     655            xrl     B, #0FFH
                     656            anl     A, B
                     657            clr     C
                     658            rrc     A
                     659    ;LL1    
                     660            mov     R0, #&POSCH
                     661            clr     C
                     662            rrc     A
DEBUG                                                                                                         PAGE 13

                     663            djnz    R0, $-2;LL1
                     664    ENDM
                     665    
                     666    NIZSIE_KABINA  MACRO  POSCH
                     667            mov     A, #5
                     668            clr     C
                     669            subb    A, #&POSCH
                     670            mov     R0, A
                     671            mov     A, INPORTA
                     672            anl     A, #00011110b
                     673            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     674            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     675            xrl     B, #0FFH
                     676            anl     A, B
                     677            clr     C
                     678            rlc     A
                     679            clr     C
                     680            rlc     A
                     681            clr     C
                     682            rlc     A
                     683    ;LL1   
                     684            clr     C
                     685            rlc     A
                     686            djnz    R0, $-2;LL1
                     687    ENDM
                     688    
                     689    
                     690    
                     691    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               692    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     693                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     694                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
  0014               695    TIMER0CONST     equ     20      ; pouziva sa pri Timer0, ktory sluzi na rozblikanie LEDiek p
                                                                               ri poruche. Hodnota 20 je 1 sekunda (1=50
                                                                               ms)
                     696    ;osetrenie vektorov preruseni
0000                 697            org     0000h           ; adresa odkial startuje program po resete
0000 020033          698            ljmp    START           ; skok na zaciatok kodu programu
                     699            
000B                 700            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 0210F1          701            ljmp    INT_TIMER0      ; pre casovac T0
                     702            
0023                 703            org       0023h           ; v tejto casti pamati je vektor prerusenia
0023 0212A7          704                        ljmp          SERIAL_INT              ; seriovej linky 
                     705        
002B                 706            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 021288          707                        ljmp    INT_TIMER2      ; pre casovac T2   
                     708                  
0033                 709            org     0033h           ; od tejto adresy sa zacina kod programu
                     710            
0033                 711    START:
0033                 712    RESET:  
                     713            ; riadiace signaly do pasivnej urovne 
0033 D2B6            714            setb    WRNOT
0035 D2B7            715            setb    RDNOT
0037 753300          716            mov     STOPTIMER, #0
DEBUG                                                                                                         PAGE 14

003A 758150          717            mov     SP, #STACK
                     718    
                     719            ; pockame si na inicializaciu obvodov 8255  
003D 7900            720            mov     R1, #0 
003F 7AFF            721            mov     R2, #0ffh
0041 D9FE            722            djnz    R1, $
0043 DAFC            723            djnz    R2, $-2
                     724            
                     725            ; teraz ich mozeme nastavit
0045 75809B          726            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          727            mov     p2, #i8255INCW
004B C2B6            728            clr     WRNOT
004D 00              729            nop
004E 00              730            nop
004F 00              731            nop
0050 00              732            nop
0051 D2B6            733            setb    WRNOT
0053 758080          734            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          735            mov     p2, #i8255OUTCW
0059 C2B6            736            clr     WRNOT
005B 00              737            nop
005C 00              738            nop
005D 00              739            nop
005E 00              740            nop
005F D2B6            741            setb    WRNOT
                     742            
                     743            ; nastavenie preruseni 
0061 C28E            744            clr     TR1                 ; zastavi sa citac T1
0063 759852          745            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     746                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     747                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     748                                        ; RI=0 (prijimaci register - nebol prijaty znak)
                     749            ;mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu                    
                                                                                            <<< 
0066 758921          750            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     751                                        ; T1: mod 1 - 16 bitove pocitadlo
                     752                                        ; GATE=0 (programove riadenie casovaca)
                     753                                        ; C/T#=0 interne hodiny/12
                     754                                        ; T0: mod 1 - 16 bitove pocitadlo
                     755                                        ; GATE=0 (programove riadenie casovaca)
                     756                                        ; C/T#=0 interne hodiny/12
0069 758740          757            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006C 758B00          758            mov     TL1, #000h          ; inicializacia casovaca T1
006F 758DFA          759            mov     TH1, #0FAh          ; 
0072 758A00          760            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h            
                                                                                    <<<
0075 758C4C          761            mov     TH0, #04Ch                                      ;                           
                                                                                                                        
                                                                                   <<<
0078 75C800          762                        mov           T2CON,  #0                        ; Auto-reload mod
007B 75CA00          763                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
                                                                               592/12*1 = 0,9216 MHz
007E 75CB4C          764                        mov           RCAP2H, #4Ch;             ; (50ms)
0081 D2AD            765                        setb          ET2                                           ; Enable Tim
DEBUG                                                                                                         PAGE 15

                                                                               er2 interrupt
                     766            
                     767            
                     768            
0083 D28C            769            setb    TR0                 ;                                                       
                                                                                            <<<
0085 C2A9            770            clr     ET0
0087 D28E            771            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     772            
0089 C299            773            clr     TI
008B C298            774            clr     RI
008D D263            775            setb    TRE
008F D2AC            776            setb      ES                    ; enable serial interrupt       
0091 754500          777                        mov           MSG_PTR_REC, #0h
0094 C261            778                        clr           S_RI
                     779            
                     780    
                     781            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
0096 752800          782            mov     INPORTA, #0
0099 75211E          783            mov     INPORTB, #01eh      ; vsetky clonky pasivne
009C 752200          784            mov     INPORTC, #0
009F 75231E          785            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
00A2 7524F0          786            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
00A5 7525FF          787            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
00A8 D218            788            setb    KS
00AA C238            789            clr     STOPPED
00AC 121217          790            call    WRITEPORTS          ; zapis novu informaciu
                     791    
00AF 752300          792            mov     OUTPORTA, #0
00B2 752400          793            mov     OUTPORTB, #0
00B5 752500          794            mov     OUTPORTC, #0
00B8 121217          795            call    WRITEPORTS          ; zapis novu informaciu
                     796            
                     797            ;----------------------------------------------------
                     798            ;mov     DPTR, #STR_RESET    ; vypis info 
                     799            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     800            
                     801            ;TIMER2  200
                     802            ;jnb              T2_F, $                               ; Uz presiel cas?
                     803            
                     804            ;clr     DOWN                ; ZASTAVIME KABINU
                     805            ;clr     FAST                ; a rychlo
                     806            ;clr     SLOW                ;                           
                     807            ;clr     UP                  ;
                     808            ;lcall   WRITEPORTS          ; zapis informaciu 
                     809            ;mov     DPTR, #STR_WDT      ; vypis info 
                     810            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     811            ;mov     WDTRST, #01Eh
                     812            ;mov     WDTRST, #0E1h
                     813            
                     814            ;----------------------------------------------------
                     815    
00BB 752800          816            mov     INPORTA, #0
00BE 752100          817            mov     INPORTB, #0         
00C1 752200          818            mov     INPORTC, #0
00C4 1211B0          819            call    READPORTS           ; prvotne nacitanie udajov
                     820            
DEBUG                                                                                                         PAGE 16

00C7 752A00          821            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00CA 752B00          822            mov     ERRFLOOR_D, #0h      
                     823    
                     824            
00CD 9015AE          825            mov     DPTR, #STR_INIT         ; vypis info 
00D0 121252          826            lcall   DISPSTR                 ; o inicializacii
                     827            
                     828                   
00D3                 829    CALIB:
                     830            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     831            ;setb    TR0
00D3 1211B0          832            lcall   READPORTS                   ; precitaj, co je na portoch
00D6 300C13          833            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00D9 D221            834            setb    DOWN                        ; inak pod dole
00DB D222            835            setb    FAST                        ; a rychlo
00DD C223            836            clr     SLOW                        ;
00DF C220            837            clr     UP                
00E1 121217          838            lcall   WRITEPORTS                  ; zapis informaciu 
00E4                 839    CALIBLOOP:
00E4 1211B0          840            lcall   READPORTS                   ; 
00E7 300C02          841            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00EA 80F8            842            jmp     CALIBLOOP
00EC                 843    CALIBEND:                              
00EC C222            844            clr     FAST                        ; zastavime v tomto smere
00EE C221            845            clr     DOWN                        ;
00F0 D223            846            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00F2 D220            847            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00F4 121217          848            lcall   WRITEPORTS 
00F7                 849    CALIBEND2:
00F7 1211B0          850            lcall   READPORTS                   ; 
00FA 2009FA          851            jb      MB1, CALIBEND2              ; 
00FD C223            852            clr     SLOW                        ; A teraz sme uz naozaj spravne
00FF C220            853            clr     UP                          ; 
0101 D224            854            setb    FLED1
0103 121217          855            lcall   WRITEPORTS                  ; zapis informaciu
                     856            ;clr     TR0
                     857            ;_BP_
0106 9015AE          858            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
0109 121252          859            lcall   DISPSTR                     ;
010C                 860    MAIN:
                     861    
                     862    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     863    ; ****************************************************************************
                     864    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     865    ; ----------------------------------------------------------------------------
                     866    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     867    ; ----------------------------------------------------------------------------
                     868    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     869    ; ****************************************************************************
                     870    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                     871    ; ----------------------------------------------------------------------------
                     872    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     873    ; ----------------------------------------------------------------------------
                     874    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     875    ; ****************************************************************************
                     876    ; POSITION
DEBUG                                                                                                         PAGE 17

                     877    ; ****************************************************************************
                     878    
                     879    
                     880    
                     881            ;mov     R5, #0
                     882            ;mov     R6, #20
010C D2A9            883            setb    ET0;                                                                        
                                                                                                                        
                                                                                                           ;<<<<<<<<<<<<
                                                                               <<<<<<
                     884            
010E 754381          885            mov             MSG_PTR_R, #081h
0111 7544C1          886            mov             MSG_PTR_S, #0C1h
0114 78C0            887            mov   R0, #0C0H                          
0116 7600            888            mov   @R0, #0h
0118 754700          889            mov   PORUCHA, #0
                     890    
                     891                                                                                              
                     892            ;Inicializacia priznakov (CFCSS)
011B 753C1E          893            mov             G, #30
011E 753D00          894                        mov         D1, #0
0121 753E00          895            mov             D2, #0
0124 90177F          896            mov   DPTR, #STR_CFC_START         ; vypis info 
0127 121252          897            lcall DISPSTR         ;
                     898                          
                     899    
                     900    
                     901    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     902    
012A                 903    FLOOR1:
                     904            ;--------------------------
                     905 +1         CFCSS     29, 3, -1, -1, D1
012A 633C03          906 +1         xrl             G,  #3             
                     907 +1         IF (D1 <> -1)
012D E53D            908 +1             mov   A,  D1         
012F 623C            909 +1             xrl   G,  A          
                     910 +1         ENDIF    
0131 E53C            911 +1         mov   A,  G              
                     912 +2         LCJNE A,  #29, CFCERR     
0133 B41D03          913 +2         cjne    A, #29, $+6
0136 02013C          914 +2         jmp     $+6
0139 0210B9          915 +2         ljmp    CFCERR
013C 00              916 +2         nop
                     917 +1         IF (-1 <> -1)
                     918 +1             mov         D1, #-1     
                     919 +1         ELSE
013D 753D20          920 +1             mov         D1, #32        
                     921 +1         ENDIF                    
                     922 +1         IF (-1 <> -1)
                     923 +1             mov         D2, #-1     
                     924 +1         ELSE
0140 753E20          925 +1             mov         D2, #32        
                     926 +1         ENDIF                    
0143 741D            927 +1         mov       A, #29
0145 12129F          928 +1         lcall     PRINTCHAR        
                     930            ;--------------------------
                     931 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
DEBUG                                                                                                         PAGE 18

                                                                               ny", nechaj len aktualne poschodie)
0148 53240F          932 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
014B D224            933 +1         setb    FLED1
014D 121217          934 +1         lcall   WRITEPORTS
0150 C238            936            clr     STOPPED
                     937 +1         TIMER2  60              ; (Timer - 3s)
0152 752D3C          938 +1            mov           T2_C, #60                              
0155 C27A            939 +1                  clr       T2_F                                  
0157 D2CA            940 +1                  setb      TR2                                             
0159 C264            942            clr     FLOORTIME
                     943 +1         ROZSVIET_SMER_LED
015B D22F            944 +1         setb    LEDU            ;
015D D22E            945 +1         setb    LEDD            ;
015F 121217          946 +1         lcall   WRITEPORTS      ;
0162 754600          948            mov     POSCHODIE, #00h ; 0000 000 - posch. 1
0165 1211B0          949    F1S:    lcall   READPORTS       ; nacitanie dat
                     950 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0168 200A03          951 +1         jb      MB2, $+6
016B 02109F          952 +1         ljmp    ERRFLOOR
016E 00              953 +1         nop
                     955 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
016F 200B03          956 +1         jb      SKRH, $+6
0172 02109F          957 +1         ljmp    ERRFLOOR
0175 00              958 +1         nop
                     960 +1         ZRUS_POSCH 1
0176 C219            961 +1         clr     PKO1       
0178 C228            962 +1         clr     PO1U      
017A C228            963 +1         clr     PO1D      
017C 121217          964 +1         lcall   WRITEPORTS
                     966    
                     967 +1         LCALLB          S_RI, RCV_MESSAGE
017F 306103          968 +1         jnb     S_RI, $+6
0182 1212DC          969 +1         lcall   RCV_MESSAGE
0185 00              970 +1         nop
                     972            
0186 206403          973            jb       FLOORTIME, $+6 ; Ak uz raz presiel stanoveny cas na poschodi, nasledujucu i
                                                                               nstrukciu preskakujeme
0189 307AD9          974            jnb                T2_F, F1S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
018C D264            975            setb     FLOORTIME      ; Nastav priznak, ze uz sme cakaly 3 s, Teraz sa uz mozme po
                                                                               hnut kedykolvek
                     976            
018E 307A14          977            jnb      T2_F, F1_KEEPALIVE_CONT
                     978 +1         TIMER2  60              ; ...a neurobim to dalsie 3 sekundy
0191 752D3C          979 +1            mov           T2_C, #60                              
0194 C27A            980 +1                  clr       T2_F                                  
0196 D2CA            981 +1                  setb      TR2                                             
                     983 +1         SEND_KEEPALIVE          ; Poslanie KEEPALIVE spravy       
0198 7400            984 +1       mov     A, #0h
019A 12129F          985 +1       lcall   PRINTCHAR
019D 12129F          986 +1       lcall   PRINTCHAR 
01A0 747E            987 +1       mov     A, #7Eh 
01A2 12129F          988 +1       lcall   PRINTCHAR 
01A5                 990    F1_KEEPALIVE_CONT:
                     991            ;jmp     F1S  
                     992                           
                     993 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
DEBUG                                                                                                         PAGE 19

                                                                               bine osoba
01A5 A20D            994 +1         mov      C, DP          
01A7 720E            995 +1         orl      C, DPZK        
01A9 720F            996 +1         orl      C, DPK         
01AB 9218            997 +1         mov      KS, C          
01AD 922F            998 +1         mov      LEDU, C        
01AF 922E            999 +1         mov      LEDD, C        
01B1 121217         1000 +1         lcall   WRITEPORTS      
01B4 200FAE         1002            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
01B7 3045AB         1003            jnb     DOORCLSD, F1S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1004 +1         JE_VYBRATE_POSCHODIE F1S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
01BA A20D           1005 +1         mov      C, DP         
01BC 720E           1006 +1         orl      C, DPZK        
01BE 720F           1007 +1         orl      C, DPK         
01C0 5006           1008 +1         jnc      $+8            
01C2 E528           1009 +1         mov      A, INPORTA     
01C4 541E           1010 +1         anl      A, #00011110b  
01C6 609D           1011 +1         jz       F1S       
01C8                1013    F1C:        
01C8 E528           1014            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
01CA 852AF0         1015            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
01CD 53F00C         1016            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
01D0 63F0FF         1017            xrl     B, #0FFH        ; | |
01D3 55F0           1018            anl     A, B            ; | |
01D5 541C           1019            anl     A, #00011100b   ; |
01D7 701A           1020            jnz     F1OK            ; ak ano, podme na to
01D9 E522           1021            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
01DB 543E           1022            anl     A, #00111110b   ;
                    1023            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                    1024 +1         ANLB    ACC.2, ERRF2_U  ; |
01DD A2E2           1025 +1         mov   C, ACC.2
01DF B052           1026 +1         anl   C, /ERRF2_U
01E1 92E2           1027 +1         mov   ACC.2, C
                    1029 +1         ANLB    ACC.3, ERRF3_U  ; |
01E3 A2E3           1030 +1         mov   C, ACC.3
01E5 B053           1031 +1         anl   C, /ERRF3_U
01E7 92E3           1032 +1         mov   ACC.3, C
                    1034 +1         ANLB    ACC.4, ERRF3_U  ; |
01E9 A2E4           1035 +1         mov   C, ACC.4
01EB B053           1036 +1         anl   C, /ERRF3_U
01ED 92E4           1037 +1         mov   ACC.4, C
                    1039            ;ANLB    ACC.5, ERRF4_U  ; |
01EF 7002           1040            jnz     F1OK            ; ak ano, podme na to
01F1 2165           1041            jmp     F1S             ; Nemam sa kde hnut, opakujem
01F3 9017A5         1042    F1OK:   mov   DPTR, #COM_BUSY   ; Poslanie BUSY spravy 
01F6 121252         1043            lcall DISPSTR           ;
                    1044 +1         SET_UP                  ; rychly pohyb hore
01F9 D220           1045 +1         setb     UP
01FB C221           1046 +1         clr      DOWN
01FD D22F           1047 +1         setb     LEDU
01FF C22E           1048 +1         clr      LEDD 
                    1050 +1         SET_FAST                ; 
0201 D222           1051 +1         setb     FAST
0203 C223           1052 +1         clr      SLOW
0205 D218           1053 +1         setb     KS      
DEBUG                                                                                                         PAGE 20

0207 121217         1055            lcall   WRITEPORTS      ; 
020A 02020D         1056            jmp     UP1             ; prejdi do stavu UP1
                    1057            
                    1058            
020D                1059    UP1:
                    1060            ;--------------------------
                    1061 +1         CFCSS     20, 9, 27, -1, -1
020D 633C09         1062 +1         xrl             G,  #9             
                    1063 +1         IF (-1 <> -1)
                    1064 +1             mov   A,  -1         
                    1065 +1             xrl   G,  A          
                    1066 +1         ENDIF    
0210 E53C           1067 +1         mov   A,  G              
                    1068 +2         LCJNE A,  #20, CFCERR     
0212 B41403         1069 +2         cjne    A, #20, $+6
0215 02021B         1070 +2         jmp     $+6
0218 0210B9         1071 +2         ljmp    CFCERR
021B 00             1072 +2         nop
                    1073 +1         IF (27 <> -1)
021C 753D1B         1074 +1             mov         D1, #27     
                    1075 +1         ELSE
                    1076 +1             mov         D1, #32        
                    1077 +1         ENDIF                    
                    1078 +1         IF (-1 <> -1)
                    1079 +1             mov         D2, #-1     
                    1080 +1         ELSE
021F 753E20         1081 +1             mov         D2, #32        
                    1082 +1         ENDIF                    
0222 7414           1083 +1         mov       A, #20
0224 12129F         1084 +1         lcall     PRINTCHAR        
                    1086            ;--------------------------
                    1087 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0227 53240F         1088 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
022A D224           1089 +1         setb    FLED1
022C 121217         1090 +1         lcall   WRITEPORTS
                    1092 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
022F 121114         1093 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0232 1211B0         1094 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0235 3009FA         1095 +1         jnb     MB1, $-3  ; 
0238 121114         1096 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
023B 1211B0         1098    UP1A:   lcall   READPORTS       ; nacitanie dat
                    1099 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
023E 200B03         1100 +1         jb      SKRH, $+6
0241 02107D         1101 +1         ljmp    ERR_SKRH
0244 00             1102 +1         nop
                    1104 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1105 +1                                                                                             
                                                                                                                 
                    1106 +1                                                                                             
                                                                                                                 
                    1107 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001              1108 +1         COUNT    SET    COUNT+1                   
                    1109 +1         
0245 20091E         1110 +1         jb      MB1, ENDD0
DEBUG                                                                                                         PAGE 21

                    1111 +1         
                    1112 +1         IF (MB1 EQ MB2)
                    1113 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1114 +1         ENDIF 
                    1115 +1         IF (MB1 EQ MB1)
0248 754701         1116 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1117 +1         ENDIF 
                    1118 +1         
024B 304206         1119 +1         jnb     PKI2, $+9
024E C222           1120 +1         clr     FAST
0250 D223           1121 +1         setb    SLOW
0252 D238           1122 +1         setb    STOPPED         
0254 D252           1123 +1         setb    ERRF12_U
0256 D259           1124 +1         setb    ERRF12_D
0258 0539           1125 +1         inc     ERRF12_C
025A C21A           1126 +1                     clr     PKO2                           
025C C22A           1127 +1         clr     PO2U            
025E C229           1128 +1         clr     PO2D              
0260 121217         1129 +1                     lcall   WRITEPORTS
0263 020571         1130 +1         ljmp    UP2
0266                1131 +1 ENDD0:
0266 00             1132 +1         nop
0267 200AD1         1134            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                    1135 +1         CLR_FLOOR_ERR   ERRF12
026A C252           1136 +1         clr    ERRF12_U
026C C259           1137 +1         clr    ERRF12_D
                    1138 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
026E 00             1139 +1         nop
                    1141 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
026F 121114         1142 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0272 1211B0         1143 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0275 300AFA         1144 +1         jnb     MB2, $-3  ; 
0278 121114         1145 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1147            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
027B 121217         1148            lcall   WRITEPORTS      ;
027E 020281         1149            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                    1150            
                    1151            
0281                1152    UP1_MB2:
                    1153            ;--------------------------
                    1154 +1         CFCSS     2, 22, 13, -1, -1
0281 633C16         1155 +1         xrl             G,  #22             
                    1156 +1         IF (-1 <> -1)
                    1157 +1             mov   A,  -1         
                    1158 +1             xrl   G,  A          
                    1159 +1         ENDIF    
0284 E53C           1160 +1         mov   A,  G              
                    1161 +2         LCJNE A,  #2, CFCERR     
0286 B40203         1162 +2         cjne    A, #2, $+6
0289 02028F         1163 +2         jmp     $+6
028C 0210B9         1164 +2         ljmp    CFCERR
028F 00             1165 +2         nop
                    1166 +1         IF (13 <> -1)
0290 753D0D         1167 +1             mov         D1, #13     
                    1168 +1         ELSE
                    1169 +1             mov         D1, #32        
                    1170 +1         ENDIF                    
DEBUG                                                                                                         PAGE 22

                    1171 +1         IF (-1 <> -1)
                    1172 +1             mov         D2, #-1     
                    1173 +1         ELSE
0293 753E20         1174 +1             mov         D2, #32        
                    1175 +1         ENDIF                    
0296 7402           1176 +1         mov       A, #2
0298 12129F         1177 +1         lcall     PRINTCHAR        
                    1179            ;--------------------------
                    1180 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
029B 121114         1181 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
029E 1211B0         1182 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
02A1 300AFA         1183 +1         jnb     MB2, $-3  ; 
02A4 121114         1184 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
02A7 1211B0         1186    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                    1187 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
02AA 200B03         1188 +1         jb      SKRH, $+6
02AD 02107D         1189 +1         ljmp    ERR_SKRH
02B0 00             1190 +1         nop
                    1192 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT   ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    1193 +1                                                                                             
                                                                                                                 
                    1194 +1                                                                                             
                                                                                                                 
                    1195 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002              1196 +1         COUNT    SET    COUNT+1                   
                    1197 +1         
02B1 20091E         1198 +1         jb      MB1, ENDD1
                    1199 +1         
                    1200 +1         IF (MB1 EQ MB2)
                    1201 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1202 +1         ENDIF 
                    1203 +1         IF (MB1 EQ MB1)
02B4 754701         1204 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1205 +1         ENDIF 
                    1206 +1         
02B7 304206         1207 +1         jnb     PKI2, $+9
02BA C222           1208 +1         clr     FAST
02BC D223           1209 +1         setb    SLOW
02BE D238           1210 +1         setb    STOPPED         
02C0 D252           1211 +1         setb    ERRF12_U
02C2 D259           1212 +1         setb    ERRF12_D
02C4 0539           1213 +1         inc     ERRF12_C
02C6 C21A           1214 +1                     clr     PKO2                           
02C8 C22A           1215 +1         clr     PO2U            
02CA C229           1216 +1         clr     PO2D              
02CC 121217         1217 +1                     lcall   WRITEPORTS
02CF 020571         1218 +1         ljmp    UP2
02D2                1219 +1 ENDD1:
02D2 00             1220 +1         nop
02D3 200AD1         1222            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                    1223 +1         CLR_FLOOR_ERR   ERRF12   
02D6 C252           1224 +1         clr    ERRF12_U
02D8 C259           1225 +1         clr    ERRF12_D
                    1226 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
02DA 00             1227 +1         nop
                    1229            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
DEBUG                                                                                                         PAGE 23

02DB 121217         1230            lcall   WRITEPORTS      ;   
                    1231 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
02DE 121114         1232 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
02E1 1211B0         1233 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
02E4 300AFA         1234 +1         jnb     MB2, $-3  ; 
02E7 121114         1235 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1237    
02EA                1238    UP1_MB2_CFC:     
                    1239            ;--------------------------
                    1240 +1         CFCSS     12, 14, -1, -1, -1
02EA 633C0E         1241 +1         xrl             G,  #14             
                    1242 +1         IF (-1 <> -1)
                    1243 +1             mov   A,  -1         
                    1244 +1             xrl   G,  A          
                    1245 +1         ENDIF    
02ED E53C           1246 +1         mov   A,  G              
                    1247 +2         LCJNE A,  #12, CFCERR     
02EF B40C03         1248 +2         cjne    A, #12, $+6
02F2 0202F8         1249 +2         jmp     $+6
02F5 0210B9         1250 +2         ljmp    CFCERR
02F8 00             1251 +2         nop
                    1252 +1         IF (-1 <> -1)
                    1253 +1             mov         D1, #-1     
                    1254 +1         ELSE
02F9 753D20         1255 +1             mov         D1, #32        
                    1256 +1         ENDIF                    
                    1257 +1         IF (-1 <> -1)
                    1258 +1             mov         D2, #-1     
                    1259 +1         ELSE
02FC 753E20         1260 +1             mov         D2, #32        
                    1261 +1         ENDIF                    
02FF 740C           1262 +1         mov       A, #12
0301 12129F         1263 +1         lcall     PRINTCHAR        
                    1265            ;--------------------------
                    1266 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    1267 +1                                         
0304 C3             1268 +1         clr     C                       
0305 7400           1269 +1         mov     A, #0h                  
0307 7212           1270 +1         orl     C, PI2U      
0309 B00E           1271 +1         anl     C, /DPZK                
030B 7242           1272 +1         orl     C, PKI2          
030D B052           1273 +1         anl     C, /ERRF2_U 
030F 720F           1274 +1         orl     C, DPK                  
0311 7238           1275 +1         orl     C, STOPPED              
0313 3400           1276 +1         addc    A, #0h                  
0315 704B           1278            jnz     U1_MB2C       ;-; Ak ano, zastav
                    1279 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
0317 E522           1280 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0319 33             1281 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
031A 547E           1282 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1283 +1         
                    1284 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1285 +2         ANLB    ACC.3, ERRF2_U  ; |
DEBUG                                                                                                         PAGE 24

031C A2E3           1286 +2         mov   C, ACC.3
031E B052           1287 +2         anl   C, /ERRF2_U
0320 92E3           1288 +2         mov   ACC.3, C
                    1289 +2         ANLB    ACC.4, ERRF3_U  ; |
0322 A2E4           1290 +2         mov   C, ACC.4
0324 B053           1291 +2         anl   C, /ERRF3_U
0326 92E4           1292 +2         mov   ACC.4, C
                    1293 +2         ANLB    ACC.5, ERRF3_U  ; |
0328 A2E5           1294 +2         mov   C, ACC.5
032A B053           1295 +2         anl   C, /ERRF3_U
032C 92E5           1296 +2         mov   ACC.5, C
                    1297 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1298 +1         
032E 7805           1299 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1300 +1  ; LL1: 
0330 6006           1301 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0332 C3             1302 +1         clr     C               ; Inak shiftnem o 2
0333 13             1303 +1         rrc     A               ;
0334 C3             1304 +1         clr     C               ;
0335 13             1305 +1         rrc     A               ;
0336 D8F8           1306 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1307 +1 ; LL2:
0338 7405           1308 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
033A C3             1309 +1         clr     C               ;
033B 98             1310 +1         subb    A, R0           ;
                    1312 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
033C B40203         1313 +1         cjne    A, #2, $+6
033F 020345         1314 +1         jmp     $+6
0342 02036C         1315 +1         ljmp    UP1_MB1
0345 00             1316 +1         nop
                    1318 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0346 E528           1319 +1         mov     A, INPORTA
0348 541E           1320 +1         anl     A, #00011110b
034A 852AF0         1321 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
034D 53F00C         1322 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0350 63F0FF         1323 +1         xrl     B, #0FFH
0353 55F0           1324 +1         anl     A, B
0355 C3             1325 +1         clr     C
0356 13             1326 +1         rrc     A
                    1327 +1 ;LL1    
0357 7802           1328 +1         mov     R0, #2
0359 C3             1329 +1         clr     C
035A 13             1330 +1         rrc     A
035B D8FC           1331 +1         djnz    R0, $-2;LL1
035D 6003           1333            jz      U1_MB2C         ; |   ak neni zastavujem         
035F 02036C         1334            jmp     UP1_MB1          ; |   inak nezastavim        
0362 D223           1335    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
0364 C222           1336            clr     FAST            ; 
0366 121217         1337            lcall   WRITEPORTS      ;         
0369 0203C4         1338            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1339            
                    1340            
036C                1341    UP1_MB1:
DEBUG                                                                                                         PAGE 25

                    1342            ;--------------------------
                    1343 +1         CFCSS     6, 10, 9, 14, -1
036C 633C0A         1344 +1         xrl             G,  #10             
                    1345 +1         IF (-1 <> -1)
                    1346 +1             mov   A,  -1         
                    1347 +1             xrl   G,  A          
                    1348 +1         ENDIF    
036F E53C           1349 +1         mov   A,  G              
                    1350 +2         LCJNE A,  #6, CFCERR     
0371 B40603         1351 +2         cjne    A, #6, $+6
0374 02037A         1352 +2         jmp     $+6
0377 0210B9         1353 +2         ljmp    CFCERR
037A 00             1354 +2         nop
                    1355 +1         IF (9 <> -1)
037B 753D09         1356 +1             mov         D1, #9     
                    1357 +1         ELSE
                    1358 +1             mov         D1, #32        
                    1359 +1         ENDIF                    
                    1360 +1         IF (14 <> -1)
037E 753E0E         1361 +1             mov         D2, #14     
                    1362 +1         ELSE
                    1363 +1             mov         D2, #32        
                    1364 +1         ENDIF                    
0381 7406           1365 +1         mov       A, #6
0383 12129F         1366 +1         lcall     PRINTCHAR        
                    1368            ;--------------------------
                    1369 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0386 121114         1370 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0389 1211B0         1371 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
038C 300AFA         1372 +1         jnb     MB2, $-3  ; 
038F 121114         1373 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0392 1211B0         1375    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1376 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0395 200B03         1377 +1         jb      SKRH, $+6
0398 02107D         1378 +1         ljmp    ERR_SKRH
039B 00             1379 +1         nop
                    1381 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1382 +1                                                                                             
                                                                                                                 
                    1383 +1                                                                                             
                                                                                                                 
                    1384 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1385 +1         COUNT    SET    COUNT+1                   
                    1386 +1         
039C 200A1E         1387 +1         jb      MB2, ENDD2
                    1388 +1         
                    1389 +1         IF (MB2 EQ MB2)
039F 754703         1390 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1391 +1         ENDIF 
                    1392 +1         IF (MB2 EQ MB1)
                    1393 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1394 +1         ENDIF 
                    1395 +1         
03A2 304206         1396 +1         jnb     PKI2, $+9
03A5 C222           1397 +1         clr     FAST
03A7 D223           1398 +1         setb    SLOW
DEBUG                                                                                                         PAGE 26

03A9 D238           1399 +1         setb    STOPPED         
03AB D252           1400 +1         setb    ERRF2_U
03AD D25A           1401 +1         setb    ERRF2_D
03AF 0536           1402 +1         inc     ERRF2_C
03B1 C21A           1403 +1                     clr     PKO2                           
03B3 C22A           1404 +1         clr     PO2U            
03B5 C229           1405 +1         clr     PO2D              
03B7 121217         1406 +1                     lcall   WRITEPORTS
03BA 0205E9         1407 +1         ljmp    UP2_MB2
03BD                1408 +1 ENDD2:
03BD 00             1409 +1         nop
03BE 2009D1         1411            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
03C1 020571         1412            ljmp    UP2             ; |   inak nezastavim        
                    1413    
03C4                1414    UP1_STOP:
                    1415            ;--------------------------
                    1416 +1         CFCSS     28, 16, 9, 20, -1
03C4 633C10         1417 +1         xrl             G,  #16             
                    1418 +1         IF (-1 <> -1)
                    1419 +1             mov   A,  -1         
                    1420 +1             xrl   G,  A          
                    1421 +1         ENDIF    
03C7 E53C           1422 +1         mov   A,  G              
                    1423 +2         LCJNE A,  #28, CFCERR     
03C9 B41C03         1424 +2         cjne    A, #28, $+6
03CC 0203D2         1425 +2         jmp     $+6
03CF 0210B9         1426 +2         ljmp    CFCERR
03D2 00             1427 +2         nop
                    1428 +1         IF (9 <> -1)
03D3 753D09         1429 +1             mov         D1, #9     
                    1430 +1         ELSE
                    1431 +1             mov         D1, #32        
                    1432 +1         ENDIF                    
                    1433 +1         IF (20 <> -1)
03D6 753E14         1434 +1             mov         D2, #20     
                    1435 +1         ELSE
                    1436 +1             mov         D2, #32        
                    1437 +1         ENDIF                    
03D9 741C           1438 +1         mov       A, #28
03DB 12129F         1439 +1         lcall     PRINTCHAR        
                    1441            ;--------------------------
03DE 1211B0         1442    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1443 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
03E1 200B03         1444 +1         jb      SKRH, $+6
03E4 02107D         1445 +1         ljmp    ERR_SKRH
03E7 00             1446 +1         nop
                    1448 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1449 +1                                                                                             
                                                                                                                 
                    1450 +1                                                                                             
                                                                                                                 
                    1451 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1452 +1         COUNT    SET    COUNT+1                   
                    1453 +1         
03E8 200A1E         1454 +1         jb      MB2, ENDD3
                    1455 +1         
                    1456 +1         IF (MB2 EQ MB2)
DEBUG                                                                                                         PAGE 27

03EB 754703         1457 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1458 +1         ENDIF 
                    1459 +1         IF (MB2 EQ MB1)
                    1460 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1461 +1         ENDIF 
                    1462 +1         
03EE 304206         1463 +1         jnb     PKI2, $+9
03F1 C222           1464 +1         clr     FAST
03F3 D223           1465 +1         setb    SLOW
03F5 D238           1466 +1         setb    STOPPED         
03F7 D252           1467 +1         setb    ERRF2_U
03F9 D25A           1468 +1         setb    ERRF2_D
03FB 0536           1469 +1         inc     ERRF2_C
03FD C21A           1470 +1                     clr     PKO2                           
03FF C22A           1471 +1         clr     PO2U            
0401 C229           1472 +1         clr     PO2D              
0403 121217         1473 +1                     lcall   WRITEPORTS
0406 0205E9         1474 +1         ljmp    UP2_MB2
0409                1475 +1 ENDD3:
0409 00             1476 +1         nop
040A 2009D1         1478            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
040D C220           1479            clr     UP              ; zastav motor
040F D23A           1480            setb    UPOld           ;       (a zalohuj) 
0411 C23B           1481            clr     DOWNOld         ;       (a zalohuj)
0413 C222           1482            clr     FAST            ; 
0415 121217         1483            lcall   WRITEPORTS      ; 
0418 02041B         1484            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1485    
                    1486    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1487    
041B                1488    FLOOR2:
                    1489            ;--------------------------
                    1490 +1         CFCSS     15, 26, 0, 30, D1
041B 633C1A         1491 +1         xrl             G,  #26             
                    1492 +1         IF (D1 <> -1)
041E E53D           1493 +1             mov   A,  D1         
0420 623C           1494 +1             xrl   G,  A          
                    1495 +1         ENDIF    
0422 E53C           1496 +1         mov   A,  G              
                    1497 +2         LCJNE A,  #15, CFCERR     
0424 B40F03         1498 +2         cjne    A, #15, $+6
0427 02042D         1499 +2         jmp     $+6
042A 0210B9         1500 +2         ljmp    CFCERR
042D 00             1501 +2         nop
                    1502 +1         IF (0 <> -1)
042E 753D00         1503 +1             mov         D1, #0     
                    1504 +1         ELSE
                    1505 +1             mov         D1, #32        
                    1506 +1         ENDIF                    
                    1507 +1         IF (30 <> -1)
0431 753E1E         1508 +1             mov         D2, #30     
                    1509 +1         ELSE
                    1510 +1             mov         D2, #32        
                    1511 +1         ENDIF                    
0434 740F           1512 +1         mov       A, #15
0436 12129F         1513 +1         lcall     PRINTCHAR        
                    1515            ;--------------------------
DEBUG                                                                                                         PAGE 28

                    1516 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0439 53240F         1517 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
043C D225           1518 +1         setb    FLED2
043E 121217         1519 +1         lcall   WRITEPORTS
0441 C238           1521            clr     STOPPED
                    1522 +1         TIMER2  60              ; (Timer - 3s)
0443 752D3C         1523 +1            mov           T2_C, #60                              
0446 C27A           1524 +1                  clr       T2_F                                  
0448 D2CA           1525 +1                  setb      TR2                                             
                    1527 +1         ROZSVIET_SMER_LED
044A D22F           1528 +1         setb    LEDU            ;
044C D22E           1529 +1         setb    LEDD            ;
044E 121217         1530 +1         lcall   WRITEPORTS      ;
0451 754640         1532            mov     POSCHODIE, #40h ; 0100 0000 - posch. 2
0454 1211B0         1533    F2S:    lcall   READPORTS     ;-; nacitanie dat
                    1534 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0457 200A03         1535 +1         jb      MB2, $+6
045A 02109F         1536 +1         ljmp    ERRFLOOR
045D 00             1537 +1         nop
                    1539 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
045E 200B03         1540 +1         jb      SKRH, $+6
0461 02109F         1541 +1         ljmp    ERRFLOOR
0464 00             1542 +1         nop
                    1544 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0465 200C03         1545 +1         jb      SKRD, $+6
0468 02109F         1546 +1         ljmp    ERRFLOOR
046B 00             1547 +1         nop
                    1549 +1         ZRUS_POSCH 2
046C C21A           1550 +1         clr     PKO2       
046E C22A           1551 +1         clr     PO2U      
0470 C229           1552 +1         clr     PO2D      
0472 121217         1553 +1         lcall   WRITEPORTS
                    1555            
                    1556 +1         LCALLB          S_RI, RCV_MESSAGE
0475 306103         1557 +1         jnb     S_RI, $+6
0478 1212DC         1558 +1         lcall   RCV_MESSAGE
047B 00             1559 +1         nop
                    1561            
047C 307AD5         1562            jnb                T2_F, F2S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    1563 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
047F A20D           1564 +1         mov      C, DP          
0481 720E           1565 +1         orl      C, DPZK        
0483 720F           1566 +1         orl      C, DPK         
0485 9218           1567 +1         mov      KS, C          
0487 922F           1568 +1         mov      LEDU, C        
0489 922E           1569 +1         mov      LEDD, C        
048B 121217         1570 +1         lcall   WRITEPORTS      
048E 200FC3         1572            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0491 3045C0         1573            jnb     DOORCLSD, F2S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1574 +1         JE_VYBRATE_POSCHODIE F2S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0494 A20D           1575 +1         mov      C, DP         
0496 720E           1576 +1         orl      C, DPZK        
0498 720F           1577 +1         orl      C, DPK         
DEBUG                                                                                                         PAGE 29

049A 5006           1578 +1         jnc      $+8            
049C E528           1579 +1         mov      A, INPORTA     
049E 541E           1580 +1         anl      A, #00011110b  
04A0 60B2           1581 +1         jz       F2S       
                    1583            ;clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
                    1584            ;clr     PO2U            ;
                    1585            ;clr     PO2D            ;
                    1586            ;lcall   WRITEPORTS      ;
                    1587            ;jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1588            ;_BP_
04A2 782A           1589            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
04A4 79F8           1590            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
04A6 7AF8           1591            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
04A8 203A0A         1592            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
04AB E9             1593            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
04AC F4             1594            cpl     A               ;       |
04AD F9             1595            mov     R1, A           ;       |
04AE EA             1596            mov     A, R2           ;       A znegujeme aj masku sachty
04AF F4             1597            cpl     A               ;       |
04B0 FA             1598            mov     R2, A           ;       |  
04B1 E8             1599            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
04B2 6401           1600            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
04B4 F8             1601            mov     R0, A           ;       |  
04B5                1602    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
04B5 E528           1603            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
04B7 86F0           1604            mov     B, @R0          ;  | Maskujem chybne poschodia
04B9 53F00C         1605            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04BC 63F0FF         1606            xrl     B, #0FFH        ;  |
04BF 55F0           1607            anl     A, B            ;  |
04C1 541A           1608            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
04C3 59             1609            anl     A, R1           ;  | 
                    1610 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04C4 6003           1611 +1         jz      $+5
04C6 02053D         1612 +1         ljmp    F2
04C9 00             1613 +1         nop
                    1615                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
04CA E528           1616            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
04CC 86F0           1617            mov     B, @R0          ;  | Maskujem chybne poschodia
04CE 53F00C         1618            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04D1 63F0FF         1619            xrl     B, #0FFH        ;  | |
04D4 55F0           1620            anl     A, B            ;  | |
04D6 541A           1621            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
04D8 7021           1622            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
04DA E522           1623            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
04DC 5439           1624            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
04DE 5A             1625            anl     A, R2           ;  |   
04DF 86F0           1626            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1627            ;ANLB    ACC.0, B.1      ;  | 
                    1628 +1         ANLB    ACC.1, B.2      ;  | 
DEBUG                                                                                                         PAGE 30

04E1 A2E1           1629 +1         mov   C, ACC.1
04E3 B0F2           1630 +1         anl   C, /B.2
04E5 92E1           1631 +1         mov   ACC.1, C
                    1633 +1         ANLB    ACC.2, B.2      ;  |
04E7 A2E2           1634 +1         mov   C, ACC.2
04E9 B0F2           1635 +1         anl   C, /B.2
04EB 92E2           1636 +1         mov   ACC.2, C
                    1638 +1         ANLB    ACC.3, B.3      ;  |
04ED A2E3           1639 +1         mov   C, ACC.3
04EF B0F3           1640 +1         anl   C, /B.3
04F1 92E3           1641 +1         mov   ACC.3, C
                    1643 +1         ANLB    ACC.4, B.3      ;  |
04F3 A2E4           1644 +1         mov   C, ACC.4
04F5 B0F3           1645 +1         anl   C, /B.3
04F7 92E4           1646 +1         mov   ACC.4, C
                    1648            ;ANLB    ACC.5, B.4      ;  |
04F9 7042           1649            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1650            ; Pohyb v opacnom smere (nevieme v ktorom)
04FB E8             1651    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
04FC 6401           1652            xrl     A, #01h         ;  |
04FE F8             1653            mov     R0, A           ;  |
04FF B23A           1654            cpl     UPOld           ;  Znegujem stary posun
0501 B23B           1655            cpl     DOWNOld         ;  |
0503 E9             1656            mov     A, R1           ;  Znegujeme masky
0504 F4             1657            cpl     A               ;  |
0505 F9             1658            mov     R1, A           ;  |
0506 EA             1659            mov     A, R2           ;  |
0507 F4             1660            cpl     A               ;  |
0508 FA             1661            mov     R2, A           ;  |               
0509 E528           1662            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
050B 86F0           1663            mov     B, @R0          ;  | Maskujem chybne poschodia
050D 53F00C         1664            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0510 63F0FF         1665            xrl     B, #0FFH        ;  | |
0513 55F0           1666            anl     A, B            ;  | |
0515 541A           1667            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
0517 59             1668            anl     A, R1           ;  | 
0518 7023           1669            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
051A E522           1670            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
051C 5439           1671            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
051E 5A             1672            anl     A, R2           ;  | 
051F 86F0           1673            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1674            ;ANLB    ACC.0, B.1      ;  | 
                    1675 +1         ANLB    ACC.1, B.2      ;  | 
0521 A2E1           1676 +1         mov   C, ACC.1
0523 B0F2           1677 +1         anl   C, /B.2
0525 92E1           1678 +1         mov   ACC.1, C
                    1680 +1         ANLB    ACC.2, B.2      ;  |
0527 A2E2           1681 +1         mov   C, ACC.2
0529 B0F2           1682 +1         anl   C, /B.2
052B 92E2           1683 +1         mov   ACC.2, C
                    1685 +1         ANLB    ACC.3, B.3      ;  |
052D A2E3           1686 +1         mov   C, ACC.3
052F B0F3           1687 +1         anl   C, /B.3
0531 92E3           1688 +1         mov   ACC.3, C
DEBUG                                                                                                         PAGE 31

                    1690 +1         ANLB    ACC.4, B.3      ;  |
0533 A2E4           1691 +1         mov   C, ACC.4
0535 B0F3           1692 +1         anl   C, /B.3
0537 92E4           1693 +1         mov   ACC.4, C
                    1695            ;ANLB    ACC.5, B.4      ;  |
0539 7002           1696            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
053B 8154           1697            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
053D 9017A5         1698    F2:     mov   DPTR, #COM_BUSY   ; Poslanie BUSY spravy 
0540 121252         1699            lcall DISPSTR           ;
0543 203A03         1700            jb      UPOld, F2UP     ;   
0546 02055D         1701            jmp     F2DOWN          ;
                    1702 +1 F2UP:   SET_UP                  ; rychly pohyb hore
0549 D220           1703 +1         setb     UP
054B C221           1704 +1         clr      DOWN
054D D22F           1705 +1         setb     LEDU
054F C22E           1706 +1         clr      LEDD 
                    1708 +1         SET_FAST                ; 
0551 D222           1709 +1         setb     FAST
0553 C223           1710 +1         clr      SLOW
0555 D218           1711 +1         setb     KS      
0557 121217         1713            lcall   WRITEPORTS      ;   
055A 020571         1714            jmp     UP2           ;-; prejdi do stavu UP2    
                    1715 +1 F2DOWN: SET_DOWN                  ; rychly pohyb dole
055D C220           1716 +1         clr     UP
055F D221           1717 +1         setb    DOWN
0561 C22F           1718 +1         clr     LEDU
0563 D22E           1719 +1         setb    LEDD 
                    1721 +1         SET_FAST                ; 
0565 D222           1722 +1         setb     FAST
0567 C223           1723 +1         clr      SLOW
0569 D218           1724 +1         setb     KS      
056B 121217         1726            lcall   WRITEPORTS      ; 
056E 020787         1727            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1728            
                    1729                
0571                1730    UP2:
                    1731            ;--------------------------
                    1732 +1         CFCSS     8, 7, 18, 0, D1
0571 633C07         1733 +1         xrl             G,  #7             
                    1734 +1         IF (D1 <> -1)
0574 E53D           1735 +1             mov   A,  D1         
0576 623C           1736 +1             xrl   G,  A          
                    1737 +1         ENDIF    
0578 E53C           1738 +1         mov   A,  G              
                    1739 +2         LCJNE A,  #8, CFCERR     
057A B40803         1740 +2         cjne    A, #8, $+6
057D 020583         1741 +2         jmp     $+6
0580 0210B9         1742 +2         ljmp    CFCERR
0583 00             1743 +2         nop
                    1744 +1         IF (18 <> -1)
0584 753D12         1745 +1             mov         D1, #18     
                    1746 +1         ELSE
                    1747 +1             mov         D1, #32        
                    1748 +1         ENDIF                    
                    1749 +1         IF (0 <> -1)
0587 753E00         1750 +1             mov         D2, #0     
                    1751 +1         ELSE
                    1752 +1             mov         D2, #32        
DEBUG                                                                                                         PAGE 32

                    1753 +1         ENDIF                    
058A 7408           1754 +1         mov       A, #8
058C 12129F         1755 +1         lcall     PRINTCHAR        
                    1757            ;--------------------------
                    1758 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
058F 53240F         1759 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0592 D225           1760 +1         setb    FLED2
0594 121217         1761 +1         lcall   WRITEPORTS
                    1763 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0597 121114         1764 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
059A 1211B0         1765 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
059D 3009FA         1766 +1         jnb     MB1, $-3  ; 
05A0 121114         1767 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
05A3 1211B0         1769    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1770 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
05A6 200B03         1771 +1         jb      SKRH, $+6
05A9 02107D         1772 +1         ljmp    ERR_SKRH
05AC 00             1773 +1         nop
                    1775 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1776 +1                                                                                             
                                                                                                                 
                    1777 +1                                                                                             
                                                                                                                 
                    1778 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1779 +1         COUNT    SET    COUNT+1                   
                    1780 +1         
05AD 20091E         1781 +1         jb      MB1, ENDD4
                    1782 +1         
                    1783 +1         IF (MB1 EQ MB2)
                    1784 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1785 +1         ENDIF 
                    1786 +1         IF (MB1 EQ MB1)
05B0 754701         1787 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1788 +1         ENDIF 
                    1789 +1         
05B3 304306         1790 +1         jnb     PKI3, $+9
05B6 C222           1791 +1         clr     FAST
05B8 D223           1792 +1         setb    SLOW
05BA D238           1793 +1         setb    STOPPED         
05BC D253           1794 +1         setb    ERRF23_U
05BE D25A           1795 +1         setb    ERRF23_D
05C0 053A           1796 +1         inc     ERRF23_C
05C2 C21B           1797 +1                     clr     PKO3                           
05C4 C22C           1798 +1         clr     PO3U            
05C6 C22B           1799 +1         clr     PO3D              
05C8 121217         1800 +1                     lcall   WRITEPORTS
05CB 020A28         1801 +1         ljmp    UP3
05CE                1802 +1 ENDD4:
05CE 00             1803 +1         nop
05CF 200AD1         1805            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1806 +1         CLR_FLOOR_ERR   ERRF23
05D2 C253           1807 +1         clr    ERRF23_U
05D4 C25A           1808 +1         clr    ERRF23_D
                    1809 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
DEBUG                                                                                                         PAGE 33

05D6 00             1810 +1         nop
                    1812 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
05D7 121114         1813 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05DA 1211B0         1814 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05DD 300AFA         1815 +1         jnb     MB2, $-3  ; 
05E0 121114         1816 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1818            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
05E3 121217         1819            lcall   WRITEPORTS      ;
05E6 0205E9         1820            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1821            
                    1822            
05E9                1823    UP2_MB2:
                    1824            ;--------------------------
                    1825 +1         CFCSS     18, 26, 8, -1, D2
05E9 633C1A         1826 +1         xrl             G,  #26             
                    1827 +1         IF (D2 <> -1)
05EC E53E           1828 +1             mov   A,  D2         
05EE 623C           1829 +1             xrl   G,  A          
                    1830 +1         ENDIF    
05F0 E53C           1831 +1         mov   A,  G              
                    1832 +2         LCJNE A,  #18, CFCERR     
05F2 B41203         1833 +2         cjne    A, #18, $+6
05F5 0205FB         1834 +2         jmp     $+6
05F8 0210B9         1835 +2         ljmp    CFCERR
05FB 00             1836 +2         nop
                    1837 +1         IF (8 <> -1)
05FC 753D08         1838 +1             mov         D1, #8     
                    1839 +1         ELSE
                    1840 +1             mov         D1, #32        
                    1841 +1         ENDIF                    
                    1842 +1         IF (-1 <> -1)
                    1843 +1             mov         D2, #-1     
                    1844 +1         ELSE
05FF 753E20         1845 +1             mov         D2, #32        
                    1846 +1         ENDIF                    
0602 7412           1847 +1         mov       A, #18
0604 12129F         1848 +1         lcall     PRINTCHAR        
                    1850            ;--------------------------
                    1851 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0607 121114         1852 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
060A 1211B0         1853 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
060D 300AFA         1854 +1         jnb     MB2, $-3  ; 
0610 121114         1855 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0613 1211B0         1857    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1858 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0616 200B03         1859 +1         jb      SKRH, $+6
0619 02107D         1860 +1         ljmp    ERR_SKRH
061C 00             1861 +1         nop
                    1863 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT ; >>> CHYBA, Vypadla spomalovacia clonka
                                                                                (narazil som na zastavovaciu) <<<
                    1864 +1                                                                                             
                                                                                                                 
                    1865 +1                                                                                             
                                                                                                                 
                    1866 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1867 +1         COUNT    SET    COUNT+1                   
DEBUG                                                                                                         PAGE 34

                    1868 +1         
061D 20091E         1869 +1         jb      MB1, ENDD5
                    1870 +1         
                    1871 +1         IF (MB1 EQ MB2)
                    1872 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1873 +1         ENDIF 
                    1874 +1         IF (MB1 EQ MB1)
0620 754701         1875 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1876 +1         ENDIF 
                    1877 +1         
0623 304306         1878 +1         jnb     PKI3, $+9
0626 C222           1879 +1         clr     FAST
0628 D223           1880 +1         setb    SLOW
062A D238           1881 +1         setb    STOPPED         
062C D253           1882 +1         setb    ERRF23_U
062E D25A           1883 +1         setb    ERRF23_D
0630 053A           1884 +1         inc     ERRF23_C
0632 C21B           1885 +1                     clr     PKO3                           
0634 C22C           1886 +1         clr     PO3U            
0636 C22B           1887 +1         clr     PO3D              
0638 121217         1888 +1                     lcall   WRITEPORTS
063B 020A28         1889 +1         ljmp    UP3
063E                1890 +1 ENDD5:
063E 00             1891 +1         nop
063F 200AD1         1893            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
                    1894 +1         CLR_FLOOR_ERR   ERRF23       
0642 C253           1895 +1         clr    ERRF23_U
0644 C25A           1896 +1         clr    ERRF23_D
                    1897 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0646 00             1898 +1         nop
                    1900            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0647 121217         1901            lcall   WRITEPORTS      ;
                    1902 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
064A 121114         1903 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
064D 1211B0         1904 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0650 300AFA         1905 +1         jnb     MB2, $-3  ; 
0653 121114         1906 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1908            
0656                1909    UP2_MB2_CFC:     
                    1910            ;--------------------------
                    1911 +1         CFCSS     1, 19, -1, -1, -1
0656 633C13         1912 +1         xrl             G,  #19             
                    1913 +1         IF (-1 <> -1)
                    1914 +1             mov   A,  -1         
                    1915 +1             xrl   G,  A          
                    1916 +1         ENDIF    
0659 E53C           1917 +1         mov   A,  G              
                    1918 +2         LCJNE A,  #1, CFCERR     
065B B40103         1919 +2         cjne    A, #1, $+6
065E 020664         1920 +2         jmp     $+6
0661 0210B9         1921 +2         ljmp    CFCERR
0664 00             1922 +2         nop
                    1923 +1         IF (-1 <> -1)
                    1924 +1             mov         D1, #-1     
                    1925 +1         ELSE
0665 753D20         1926 +1             mov         D1, #32        
                    1927 +1         ENDIF                    
DEBUG                                                                                                         PAGE 35

                    1928 +1         IF (-1 <> -1)
                    1929 +1             mov         D2, #-1     
                    1930 +1         ELSE
0668 753E20         1931 +1             mov         D2, #32        
                    1932 +1         ENDIF                    
066B 7401           1933 +1         mov       A, #1
066D 12129F         1934 +1         lcall     PRINTCHAR        
                    1936            ;--------------------------        
                    1937 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1938 +1                                         
0670 C3             1939 +1         clr     C                       
0671 7400           1940 +1         mov     A, #0h                  
0673 7214           1941 +1         orl     C, PI3U      
0675 B00E           1942 +1         anl     C, /DPZK                
0677 7243           1943 +1         orl     C, PKI3          
0679 B053           1944 +1         anl     C, /ERRF3_U 
067B 720F           1945 +1         orl     C, DPK                  
067D 7238           1946 +1         orl     C, STOPPED              
067F 3400           1947 +1         addc    A, #0h                  
0681 704B           1949            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1950 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0683 E522           1951 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0685 33             1952 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0686 547E           1953 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1954 +1         
                    1955 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1956 +2         ANLB    ACC.3, ERRF2_U  ; |
0688 A2E3           1957 +2         mov   C, ACC.3
068A B052           1958 +2         anl   C, /ERRF2_U
068C 92E3           1959 +2         mov   ACC.3, C
                    1960 +2         ANLB    ACC.4, ERRF3_U  ; |
068E A2E4           1961 +2         mov   C, ACC.4
0690 B053           1962 +2         anl   C, /ERRF3_U
0692 92E4           1963 +2         mov   ACC.4, C
                    1964 +2         ANLB    ACC.5, ERRF3_U  ; |
0694 A2E5           1965 +2         mov   C, ACC.5
0696 B053           1966 +2         anl   C, /ERRF3_U
0698 92E5           1967 +2         mov   ACC.5, C
                    1968 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1969 +1         
069A 7805           1970 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1971 +1  ; LL1: 
069C 6006           1972 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
069E C3             1973 +1         clr     C               ; Inak shiftnem o 2
069F 13             1974 +1         rrc     A               ;
06A0 C3             1975 +1         clr     C               ;
06A1 13             1976 +1         rrc     A               ;
06A2 D8F8           1977 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1978 +1 ; LL2:
06A4 7405           1979 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
06A6 C3             1980 +1         clr     C               ;
DEBUG                                                                                                         PAGE 36

06A7 98             1981 +1         subb    A, R0           ;
                    1983 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
06A8 B40303         1984 +1         cjne    A, #3, $+6
06AB 0206B1         1985 +1         jmp     $+6
06AE 0206D8         1986 +1         ljmp    UP2_MB1
06B1 00             1987 +1         nop
                    1989 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
06B2 E528           1990 +1         mov     A, INPORTA
06B4 541E           1991 +1         anl     A, #00011110b
06B6 852AF0         1992 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
06B9 53F00C         1993 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
06BC 63F0FF         1994 +1         xrl     B, #0FFH
06BF 55F0           1995 +1         anl     A, B
06C1 C3             1996 +1         clr     C
06C2 13             1997 +1         rrc     A
                    1998 +1 ;LL1    
06C3 7803           1999 +1         mov     R0, #3
06C5 C3             2000 +1         clr     C
06C6 13             2001 +1         rrc     A
06C7 D8FC           2002 +1         djnz    R0, $-2;LL1
06C9 6003           2004            jz      U2_MB2C         ; |   ak neni zastavujem  
06CB 0206D8         2005            ljmp    UP2_MB1         ; |   inak nezastavim
06CE D223           2006    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
06D0 C222           2007            clr     FAST            ; 
06D2 121217         2008            lcall   WRITEPORTS      ;
06D5 020730         2009            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    2010          
06D8                2011    UP2_MB1:
                    2012            ;--------------------------
                    2013 +1         CFCSS     26, 27, 0, 17, -1
06D8 633C1B         2014 +1         xrl             G,  #27             
                    2015 +1         IF (-1 <> -1)
                    2016 +1             mov   A,  -1         
                    2017 +1             xrl   G,  A          
                    2018 +1         ENDIF    
06DB E53C           2019 +1         mov   A,  G              
                    2020 +2         LCJNE A,  #26, CFCERR     
06DD B41A03         2021 +2         cjne    A, #26, $+6
06E0 0206E6         2022 +2         jmp     $+6
06E3 0210B9         2023 +2         ljmp    CFCERR
06E6 00             2024 +2         nop
                    2025 +1         IF (0 <> -1)
06E7 753D00         2026 +1             mov         D1, #0     
                    2027 +1         ELSE
                    2028 +1             mov         D1, #32        
                    2029 +1         ENDIF                    
                    2030 +1         IF (17 <> -1)
06EA 753E11         2031 +1             mov         D2, #17     
                    2032 +1         ELSE
                    2033 +1             mov         D2, #32        
                    2034 +1         ENDIF                    
06ED 741A           2035 +1         mov       A, #26
06EF 12129F         2036 +1         lcall     PRINTCHAR        
                    2038            ;--------------------------
                    2039 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
06F2 121114         2040 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
DEBUG                                                                                                         PAGE 37

06F5 1211B0         2041 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06F8 300AFA         2042 +1         jnb     MB2, $-3  ; 
06FB 121114         2043 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
06FE 1211B0         2045    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    2046 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0701 200B03         2047 +1         jb      SKRH, $+6
0704 02107D         2048 +1         ljmp    ERR_SKRH
0707 00             2049 +1         nop
                    2051 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia cl
                                                                               onka (narazil som na spomalovaciu) <<<
                    2052 +1                                                                                             
                                                                                                                 
                    2053 +1                                                                                             
                                                                                                                 
                    2054 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              2055 +1         COUNT    SET    COUNT+1                   
                    2056 +1         
0708 200A1E         2057 +1         jb      MB2, ENDD6
                    2058 +1         
                    2059 +1         IF (MB2 EQ MB2)
070B 754703         2060 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2061 +1         ENDIF 
                    2062 +1         IF (MB2 EQ MB1)
                    2063 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2064 +1         ENDIF 
                    2065 +1         
070E 304306         2066 +1         jnb     PKI3, $+9
0711 C222           2067 +1         clr     FAST
0713 D223           2068 +1         setb    SLOW
0715 D238           2069 +1         setb    STOPPED         
0717 D253           2070 +1         setb    ERRF3_U
0719 D25B           2071 +1         setb    ERRF3_D
071B 0537           2072 +1         inc     ERRF3_C
071D C21B           2073 +1                     clr     PKO3                           
071F C22C           2074 +1         clr     PO3U            
0721 C22B           2075 +1         clr     PO3D              
0723 121217         2076 +1                     lcall   WRITEPORTS
0726 020AB3         2077 +1         ljmp    UP3_MB2
0729                2078 +1 ENDD6:
0729 00             2079 +1         nop
072A 2009D1         2081            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
072D 020A28         2082            ljmp    UP3             ; 
                    2083    
                    2084    
0730                2085    UP2_STOP:
                    2086            ;--------------------------
                    2087 +1         CFCSS     4, 5, 9, 15, -1
0730 633C05         2088 +1         xrl             G,  #5             
                    2089 +1         IF (-1 <> -1)
                    2090 +1             mov   A,  -1         
                    2091 +1             xrl   G,  A          
                    2092 +1         ENDIF    
0733 E53C           2093 +1         mov   A,  G              
                    2094 +2         LCJNE A,  #4, CFCERR     
0735 B40403         2095 +2         cjne    A, #4, $+6
0738 02073E         2096 +2         jmp     $+6
073B 0210B9         2097 +2         ljmp    CFCERR
DEBUG                                                                                                         PAGE 38

073E 00             2098 +2         nop
                    2099 +1         IF (9 <> -1)
073F 753D09         2100 +1             mov         D1, #9     
                    2101 +1         ELSE
                    2102 +1             mov         D1, #32        
                    2103 +1         ENDIF                    
                    2104 +1         IF (15 <> -1)
0742 753E0F         2105 +1             mov         D2, #15     
                    2106 +1         ELSE
                    2107 +1             mov         D2, #32        
                    2108 +1         ENDIF                    
0745 7404           2109 +1         mov       A, #4
0747 12129F         2110 +1         lcall     PRINTCHAR        
                    2112            ;--------------------------
074A                2113    UP2_STOP_C:
074A 1211B0         2114            lcall   READPORTS       ; nacitanie dat
                    2115 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
074D 200B03         2116 +1         jb      SKRH, $+6
0750 02107D         2117 +1         ljmp    ERR_SKRH
0753 00             2118 +1         nop
                    2120 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    2121 +1                                                                                             
                                                                                                                 
                    2122 +1                                                                                             
                                                                                                                 
                    2123 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              2124 +1         COUNT    SET    COUNT+1                   
                    2125 +1         
0754 200A1E         2126 +1         jb      MB2, ENDD7
                    2127 +1         
                    2128 +1         IF (MB2 EQ MB2)
0757 754703         2129 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2130 +1         ENDIF 
                    2131 +1         IF (MB2 EQ MB1)
                    2132 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2133 +1         ENDIF 
                    2134 +1         
075A 304306         2135 +1         jnb     PKI3, $+9
075D C222           2136 +1         clr     FAST
075F D223           2137 +1         setb    SLOW
0761 D238           2138 +1         setb    STOPPED         
0763 D253           2139 +1         setb    ERRF3_U
0765 D25B           2140 +1         setb    ERRF3_D
0767 0537           2141 +1         inc     ERRF3_C
0769 C21B           2142 +1                     clr     PKO3                           
076B C22C           2143 +1         clr     PO3U            
076D C22B           2144 +1         clr     PO3D              
076F 121217         2145 +1                     lcall   WRITEPORTS
0772 020AB3         2146 +1         ljmp    UP3_MB2
0775                2147 +1 ENDD7:
0775 00             2148 +1         nop
0776 2009D1         2150            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
0779 C220           2151            clr     UP              ; zastav motor
077B D23A           2152            setb    UPOld           ;       (a zalohuj)
077D C23B           2153            clr     DOWNOld         ;       (a zalohuj)
077F C222           2154            clr     FAST            ; 
0781 121217         2155            lcall   WRITEPORTS      ; 
DEBUG                                                                                                         PAGE 39

0784 0208D2         2156            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    2157            
0787                2158    DOWN2:
                    2159            ;--------------------------
                    2160 +1         CFCSS     24, 9, 6, 9, D2
0787 633C09         2161 +1         xrl             G,  #9             
                    2162 +1         IF (D2 <> -1)
078A E53E           2163 +1             mov   A,  D2         
078C 623C           2164 +1             xrl   G,  A          
                    2165 +1         ENDIF    
078E E53C           2166 +1         mov   A,  G              
                    2167 +2         LCJNE A,  #24, CFCERR     
0790 B41803         2168 +2         cjne    A, #24, $+6
0793 020799         2169 +2         jmp     $+6
0796 0210B9         2170 +2         ljmp    CFCERR
0799 00             2171 +2         nop
                    2172 +1         IF (6 <> -1)
079A 753D06         2173 +1             mov         D1, #6     
                    2174 +1         ELSE
                    2175 +1             mov         D1, #32        
                    2176 +1         ENDIF                    
                    2177 +1         IF (9 <> -1)
079D 753E09         2178 +1             mov         D2, #9     
                    2179 +1         ELSE
                    2180 +1             mov         D2, #32        
                    2181 +1         ENDIF                    
07A0 7418           2182 +1         mov       A, #24
07A2 12129F         2183 +1         lcall     PRINTCHAR        
                    2185            ;--------------------------
                    2186 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
07A5 53240F         2187 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
07A8 D225           2188 +1         setb    FLED2
07AA 121217         2189 +1         lcall   WRITEPORTS
                    2191 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
07AD 121114         2192 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07B0 1211B0         2193 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07B3 3009FA         2194 +1         jnb     MB1, $-3  ; 
07B6 121114         2195 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
07B9 1211B0         2197    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    2198 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
07BC 200C03         2199 +1         jb      SKRD, $+6
07BF 02105B         2200 +1         ljmp    ERR_SKRD
07C2 00             2201 +1         nop
                    2203 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2204 +1                                                                                             
                                                                                                                 
                    2205 +1                                                                                             
                                                                                                                 
                    2206 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              2207 +1         COUNT    SET    COUNT+1                   
                    2208 +1         
07C3 20091E         2209 +1         jb      MB1, ENDD8
                    2210 +1         
DEBUG                                                                                                         PAGE 40

                    2211 +1         IF (MB1 EQ MB2)
                    2212 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2213 +1         ENDIF 
                    2214 +1         IF (MB1 EQ MB1)
07C6 754701         2215 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2216 +1         ENDIF 
                    2217 +1         
07C9 304106         2218 +1         jnb     PKI1, $+9
07CC C222           2219 +1         clr     FAST
07CE D223           2220 +1         setb    SLOW
07D0 D238           2221 +1         setb    STOPPED         
07D2 D252           2222 +1         setb    ERRF12_U
07D4 D259           2223 +1         setb    ERRF12_D
07D6 0539           2224 +1         inc     ERRF12_C
07D8 C219           2225 +1                     clr     PKO1                           
07DA C228           2226 +1         clr     PO1U            
07DC C228           2227 +1         clr     PO1D              
07DE 121217         2228 +1                     lcall   WRITEPORTS
07E1 0207E8         2229 +1         ljmp    DOWN2ERR
07E4                2230 +1 ENDD8:
07E4 00             2231 +1         nop
07E5 0207F7         2233            jmp     DOWN2ERR_CONTINUE
07E8                2234    DOWN2ERR:
07E8 C221           2235            clr     DOWN            ; zastav motor
07EA D23B           2236            setb    DOWNOld         ;       (a zalohuj)
07EC C23A           2237            clr     UPOld           ;       (a zalohuj)
07EE C222           2238            clr     FAST            ; 
07F0 C223           2239            clr     SLOW            ;
07F2 121217         2240            lcall   WRITEPORTS      ; 
07F5 212A           2241            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
07F7                2242    DOWN2ERR_CONTINUE:
07F7 200ABF         2243            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    2244 +1         CLR_FLOOR_ERR   ERRF12
07FA C252           2245 +1         clr    ERRF12_U
07FC C259           2246 +1         clr    ERRF12_D
                    2247 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
07FE 00             2248 +1         nop
                    2250 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
07FF 121114         2251 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0802 1211B0         2252 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0805 300AFA         2253 +1         jnb     MB2, $-3  ; 
0808 121114         2254 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2256            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
080B 121217         2257            lcall   WRITEPORTS      ;
080E 020811         2258            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    2259    
                    2260    
0811                2261    DOWN2_MB2:
                    2262            ;--------------------------
                    2263 +1         CFCSS     31, 14, 1, -1, D2
0811 633C0E         2264 +1         xrl             G,  #14             
                    2265 +1         IF (D2 <> -1)
0814 E53E           2266 +1             mov   A,  D2         
0816 623C           2267 +1             xrl   G,  A          
                    2268 +1         ENDIF    
0818 E53C           2269 +1         mov   A,  G              
                    2270 +2         LCJNE A,  #31, CFCERR     
DEBUG                                                                                                         PAGE 41

081A B41F03         2271 +2         cjne    A, #31, $+6
081D 020823         2272 +2         jmp     $+6
0820 0210B9         2273 +2         ljmp    CFCERR
0823 00             2274 +2         nop
                    2275 +1         IF (1 <> -1)
0824 753D01         2276 +1             mov         D1, #1     
                    2277 +1         ELSE
                    2278 +1             mov         D1, #32        
                    2279 +1         ENDIF                    
                    2280 +1         IF (-1 <> -1)
                    2281 +1             mov         D2, #-1     
                    2282 +1         ELSE
0827 753E20         2283 +1             mov         D2, #32        
                    2284 +1         ENDIF                    
082A 741F           2285 +1         mov       A, #31
082C 12129F         2286 +1         lcall     PRINTCHAR        
                    2288            ;--------------------------
                    2289 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
082F 121114         2290 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0832 1211B0         2291 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0835 300AFA         2292 +1         jnb     MB2, $-3  ; 
0838 121114         2293 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
083B                2295    DOWN2_MB2A:
083B 1211B0         2296            lcall   READPORTS       ; nacitanie dat
                    2297 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
083E 200C03         2298 +1         jb      SKRD, $+6
0841 02105B         2299 +1         ljmp    ERR_SKRD
0844 00             2300 +1         nop
                    2302 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT ; >>> CHYBA, Vypadla spomalovac
                                                                               ia clonka (narazil som na zastavovaciu) <
                                                                               <<
                    2303 +1                                                                                             
                                                                                                                 
                    2304 +1                                                                                             
                                                                                                                 
                    2305 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              2306 +1         COUNT    SET    COUNT+1                   
                    2307 +1         
0845 20091E         2308 +1         jb      MB1, ENDD9
                    2309 +1         
                    2310 +1         IF (MB1 EQ MB2)
                    2311 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2312 +1         ENDIF 
                    2313 +1         IF (MB1 EQ MB1)
0848 754701         2314 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2315 +1         ENDIF 
                    2316 +1         
084B 304106         2317 +1         jnb     PKI1, $+9
084E C222           2318 +1         clr     FAST
0850 D223           2319 +1         setb    SLOW
0852 D238           2320 +1         setb    STOPPED         
0854 D252           2321 +1         setb    ERRF12_U
0856 D259           2322 +1         setb    ERRF12_D
0858 0539           2323 +1         inc     ERRF12_C
085A C219           2324 +1                     clr     PKO1                           
085C C228           2325 +1         clr     PO1U            
085E C228           2326 +1         clr     PO1D              
DEBUG                                                                                                         PAGE 42

0860 121217         2327 +1                     lcall   WRITEPORTS
0863 02086A         2328 +1         ljmp    DOWN2_MB2ERR
0866                2329 +1 ENDD9:
0866 00             2330 +1         nop
0867 02087A         2332            jmp     DOWN2_MB2ERR_CONTINUE
086A                2333    DOWN2_MB2ERR:
086A C221           2334            clr     DOWN            ; zastav motor
086C D23B           2335            setb    DOWNOld         ;       (a zalohuj)
086E C23A           2336            clr     UPOld           ;       (a zalohuj)
0870 C222           2337            clr     FAST            ; 
0872 C223           2338            clr     SLOW            ;
0874 121217         2339            lcall   WRITEPORTS      ; 
0877 02012A         2340            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
087A                2341    DOWN2_MB2ERR_CONTINUE:
087A 200ABE         2342            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2343 +1         CLR_FLOOR_ERR   ERRF12      
087D C252           2344 +1         clr    ERRF12_U
087F C259           2345 +1         clr    ERRF12_D
                    2346 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0881 00             2347 +1         nop
                    2349            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0882 121217         2350            lcall   WRITEPORTS      ;
                    2351 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0885 121114         2352 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0888 1211B0         2353 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
088B 300AFA         2354 +1         jnb     MB2, $-3  ; 
088E 121114         2355 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2357    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2358    ;        anl     A, #00000010b ;-;
                    2359    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
0891 D223           2360            setb    SLOW            ;       Ak ano, spomalme
0893 C222           2361            clr     FAST            ; 
0895 121217         2362            lcall   WRITEPORTS      ;
0898 02089B         2363            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
089B                2364    DOWN2_MB1:    
                    2365            ;--------------------------
                    2366 +1         CFCSS     14, 17, 16, -1, -1
089B 633C11         2367 +1         xrl             G,  #17             
                    2368 +1         IF (-1 <> -1)
                    2369 +1             mov   A,  -1         
                    2370 +1             xrl   G,  A          
                    2371 +1         ENDIF    
089E E53C           2372 +1         mov   A,  G              
                    2373 +2         LCJNE A,  #14, CFCERR     
08A0 B40E03         2374 +2         cjne    A, #14, $+6
08A3 0208A9         2375 +2         jmp     $+6
08A6 0210B9         2376 +2         ljmp    CFCERR
08A9 00             2377 +2         nop
                    2378 +1         IF (16 <> -1)
08AA 753D10         2379 +1             mov         D1, #16     
                    2380 +1         ELSE
                    2381 +1             mov         D1, #32        
                    2382 +1         ENDIF                    
                    2383 +1         IF (-1 <> -1)
                    2384 +1             mov         D2, #-1     
                    2385 +1         ELSE
08AD 753E20         2386 +1             mov         D2, #32        
DEBUG                                                                                                         PAGE 43

                    2387 +1         ENDIF                    
08B0 740E           2388 +1         mov       A, #14
08B2 12129F         2389 +1         lcall     PRINTCHAR        
                    2391            ;--------------------------
08B5 1211B0         2392    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
08B8 300907         2393            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
08BB 200CF7         2394            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
08BE D259           2395            setb    ERRF1_D
08C0 0535           2396            inc     ERRF1_C
                    2397    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
08C2 C238           2398    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
08C4 C221           2399            clr     DOWN            ; zastav motor
08C6 D23B           2400            setb    DOWNOld         ;       (a zalohuj)
08C8 C23A           2401            clr     UPOld           ;       (a zalohuj)
08CA C222           2402            clr     FAST            ; 
08CC 121217         2403            lcall   WRITEPORTS      ; 
08CF 02012A         2404            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    2405    
                    2406    
                    2407    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    2408    
08D2                2409    FLOOR3:
                    2410            ;--------------------------
                    2411 +1         CFCSS     10, 7, 16, 19, D1
08D2 633C07         2412 +1         xrl             G,  #7             
                    2413 +1         IF (D1 <> -1)
08D5 E53D           2414 +1             mov   A,  D1         
08D7 623C           2415 +1             xrl   G,  A          
                    2416 +1         ENDIF    
08D9 E53C           2417 +1         mov   A,  G              
                    2418 +2         LCJNE A,  #10, CFCERR     
08DB B40A03         2419 +2         cjne    A, #10, $+6
08DE 0208E4         2420 +2         jmp     $+6
08E1 0210B9         2421 +2         ljmp    CFCERR
08E4 00             2422 +2         nop
                    2423 +1         IF (16 <> -1)
08E5 753D10         2424 +1             mov         D1, #16     
                    2425 +1         ELSE
                    2426 +1             mov         D1, #32        
                    2427 +1         ENDIF                    
                    2428 +1         IF (19 <> -1)
08E8 753E13         2429 +1             mov         D2, #19     
                    2430 +1         ELSE
                    2431 +1             mov         D2, #32        
                    2432 +1         ENDIF                    
08EB 740A           2433 +1         mov       A, #10
08ED 12129F         2434 +1         lcall     PRINTCHAR        
                    2436            ;--------------------------
                    2437 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
08F0 53240F         2438 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
08F3 D226           2439 +1         setb    FLED3
08F5 121217         2440 +1         lcall   WRITEPORTS
08F8 C238           2442            clr     STOPPED
DEBUG                                                                                                         PAGE 44

                    2443 +1         TIMER2  60              ; (Timer - 3s)
08FA 752D3C         2444 +1            mov           T2_C, #60                              
08FD C27A           2445 +1                  clr       T2_F                                  
08FF D2CA           2446 +1                  setb      TR2                                             
                    2448 +1         ROZSVIET_SMER_LED
0901 D22F           2449 +1         setb    LEDU            ;
0903 D22E           2450 +1         setb    LEDD            ;
0905 121217         2451 +1         lcall   WRITEPORTS      ;
0908 754680         2453            mov     POSCHODIE, #80h ; 1000 0000 - posch. 3
090B 1211B0         2454    F3S:    lcall   READPORTS     ;-; nacitanie dat
                    2455 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
090E 200A03         2456 +1         jb      MB2, $+6
0911 02109F         2457 +1         ljmp    ERRFLOOR
0914 00             2458 +1         nop
                    2460 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0915 200B03         2461 +1         jb      SKRH, $+6
0918 02109F         2462 +1         ljmp    ERRFLOOR
091B 00             2463 +1         nop
                    2465 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
091C 200C03         2466 +1         jb      SKRD, $+6
091F 02109F         2467 +1         ljmp    ERRFLOOR
0922 00             2468 +1         nop
                    2470 +1         ZRUS_POSCH 3
0923 C21B           2471 +1         clr     PKO3       
0925 C22C           2472 +1         clr     PO3U      
0927 C22B           2473 +1         clr     PO3D      
0929 121217         2474 +1         lcall   WRITEPORTS
                    2476            
                    2477 +1         LCALLB          S_RI, RCV_MESSAGE
092C 306103         2478 +1         jnb     S_RI, $+6
092F 1212DC         2479 +1         lcall   RCV_MESSAGE
0932 00             2480 +1         nop
                    2482            
0933 307AD5         2483            jnb                T2_F, F3S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    2484 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0936 A20D           2485 +1         mov      C, DP          
0938 720E           2486 +1         orl      C, DPZK        
093A 720F           2487 +1         orl      C, DPK         
093C 9218           2488 +1         mov      KS, C          
093E 922F           2489 +1         mov      LEDU, C        
0940 922E           2490 +1         mov      LEDD, C        
0942 121217         2491 +1         lcall   WRITEPORTS      
0945 200FC3         2493            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0948 3045C0         2494            jnb     DOORCLSD, F3S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    2495 +1         JE_VYBRATE_POSCHODIE F3S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.          
094B A20D           2496 +1         mov      C, DP         
094D 720E           2497 +1         orl      C, DPZK        
094F 720F           2498 +1         orl      C, DPK         
0951 5006           2499 +1         jnc      $+8            
0953 E528           2500 +1         mov      A, INPORTA     
0955 541E           2501 +1         anl      A, #00011110b  
0957 60B2           2502 +1         jz       F3S       
                    2504            ;clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
                    2505            ;clr     PO3U            ;
                    2506            ;clr     PO3D            ;
DEBUG                                                                                                         PAGE 45

                    2507            ;lcall   WRITEPORTS      ;
                    2508            ;jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0959 782A           2509            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
095B 79F0           2510            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
095D 7AE0           2511            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
095F 203A0A         2512            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
0962 E9             2513            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
0963 F4             2514            cpl     A               ;       |
0964 F9             2515            mov     R1, A           ;       |
0965 EA             2516            mov     A, R2           ;       A znegujeme aj masku sachty
0966 F4             2517            cpl     A               ;       |
0967 FA             2518            mov     R2, A           ;       |     
0968 E8             2519            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
0969 6401           2520            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
096B F8             2521            mov     R0, A           ;       |    
096C                2522    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
096C E528           2523            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
096E 86F0           2524            mov     B, @R0          ;  | Maskujem chybne poschodia
0970 53F00C         2525            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
0973 63F0FF         2526            xrl     B, #0FFH        ;  | |
0976 55F0           2527            anl     A, B            ;  | |
0978 5416           2528            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
097A 59             2529            anl     A, R1           ;  | 
                    2530 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
097B 6003           2531 +1         jz      $+5
097D 0209F4         2532 +1         ljmp    F3
0980 00             2533 +1         nop
                    2535                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
0981 E528           2536            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
0983 86F0           2537            mov     B, @R0          ;  | Maskujem chybne poschodia
0985 53F00C         2538            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0988 63F0FF         2539            xrl     B, #0FFH        ;  | |
098B 55F0           2540            anl     A, B            ;  | |
098D 5416           2541            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
098F 7021           2542            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
0991 E522           2543            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
0993 5427           2544            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0995 5A             2545            anl     A, R2           ;  |   
0996 86F0           2546            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2547            ;ANLB    ACC.0, B.1      ;  | 
                    2548 +1         ANLB    ACC.1, B.2      ;  | 
0998 A2E1           2549 +1         mov   C, ACC.1
099A B0F2           2550 +1         anl   C, /B.2
099C 92E1           2551 +1         mov   ACC.1, C
                    2553 +1         ANLB    ACC.2, B.2      ;  |
099E A2E2           2554 +1         mov   C, ACC.2
09A0 B0F2           2555 +1         anl   C, /B.2
09A2 92E2           2556 +1         mov   ACC.2, C
                    2558 +1         ANLB    ACC.3, B.3      ;  |
DEBUG                                                                                                         PAGE 46

09A4 A2E3           2559 +1         mov   C, ACC.3
09A6 B0F3           2560 +1         anl   C, /B.3
09A8 92E3           2561 +1         mov   ACC.3, C
                    2563 +1         ANLB    ACC.4, B.3      ;  |
09AA A2E4           2564 +1         mov   C, ACC.4
09AC B0F3           2565 +1         anl   C, /B.3
09AE 92E4           2566 +1         mov   ACC.4, C
                    2568            ;ANLB    ACC.5, B.4      ;  |
09B0 7042           2569            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2570            ; Pohyb v opacnom smere (nevieme v ktorom)
09B2 E8             2571    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
09B3 6401           2572            xrl     A, #01h         ;  |
09B5 F8             2573            mov     R0, A           ;  |
09B6 B23A           2574            cpl     UPOld           ;  Znegujem stary posun
09B8 B23B           2575            cpl     DOWNOld         ;  |
09BA E9             2576            mov     A, R1           ;  Znegujeme masky
09BB F4             2577            cpl     A               ;  |
09BC F9             2578            mov     R1, A           ;  |
09BD EA             2579            mov     A, R2           ;  |
09BE F4             2580            cpl     A               ;  |
09BF FA             2581            mov     R2, A           ;  |               
09C0 E528           2582            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
09C2 86F0           2583            mov     B, @R0          ;  | Maskujem chybne poschodia
09C4 53F00C         2584            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
09C7 63F0FF         2585            xrl     B, #0FFH        ;  | |
09CA 55F0           2586            anl     A, B            ;  | |
09CC 5416           2587            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
09CE 59             2588            anl     A, R1           ;  | 
09CF 7023           2589            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
09D1 E522           2590            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
09D3 5427           2591            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
09D5 5A             2592            anl     A, R2           ;  | 
09D6 86F0           2593            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2594            ;ANLB    ACC.0, B.1      ;  | 
                    2595 +1         ANLB    ACC.1, B.2      ;  | 
09D8 A2E1           2596 +1         mov   C, ACC.1
09DA B0F2           2597 +1         anl   C, /B.2
09DC 92E1           2598 +1         mov   ACC.1, C
                    2600 +1         ANLB    ACC.2, B.2      ;  |
09DE A2E2           2601 +1         mov   C, ACC.2
09E0 B0F2           2602 +1         anl   C, /B.2
09E2 92E2           2603 +1         mov   ACC.2, C
                    2605 +1         ANLB    ACC.3, B.3      ;  |
09E4 A2E3           2606 +1         mov   C, ACC.3
09E6 B0F3           2607 +1         anl   C, /B.3
09E8 92E3           2608 +1         mov   ACC.3, C
                    2610 +1         ANLB    ACC.4, B.3      ;  |
09EA A2E4           2611 +1         mov   C, ACC.4
09EC B0F3           2612 +1         anl   C, /B.3
09EE 92E4           2613 +1         mov   ACC.4, C
                    2615            ;ANLB    ACC.5, B.4      ;  |
09F0 7002           2616            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
09F2 210B           2617            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
09F4 9017A5         2618    F3:     mov     DPTR, #COM_BUSY ; Poslanie BUSY spravy 
DEBUG                                                                                                         PAGE 47

09F7 121252         2619            lcall   DISPSTR         ;
09FA 203A03         2620            jb      UPOld, F3UP     ;   
09FD 020A14         2621            jmp     F3DOWN          ;
                    2622 +1 F3UP:   SET_UP                  ; rychly pohyb hore
0A00 D220           2623 +1         setb     UP
0A02 C221           2624 +1         clr      DOWN
0A04 D22F           2625 +1         setb     LEDU
0A06 C22E           2626 +1         clr      LEDD 
                    2628 +1         SET_FAST                ; 
0A08 D222           2629 +1         setb     FAST
0A0A C223           2630 +1         clr      SLOW
0A0C D218           2631 +1         setb     KS      
0A0E 121217         2633            lcall   WRITEPORTS      ; 
0A11 020A28         2634            jmp     UP3           ;-; prejdi do stavu UP2    
                    2635 +1 F3DOWN: SET_DOWN                  ; rychly pohyb dole
0A14 C220           2636 +1         clr     UP
0A16 D221           2637 +1         setb    DOWN
0A18 C22F           2638 +1         clr     LEDU
0A1A D22E           2639 +1         setb    LEDD 
                    2641 +1         SET_FAST                ; 
0A1C D222           2642 +1         setb     FAST
0A1E C223           2643 +1         clr      SLOW
0A20 D218           2644 +1         setb     KS      
0A22 121217         2646            lcall   WRITEPORTS      ; 
0A25 020B80         2647            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2648         
                    2649         
0A28                2650    UP3:
                    2651            ;--------------------------
                    2652 +1         CFCSS     11, 17, 14, 0, D1
0A28 633C11         2653 +1         xrl             G,  #17             
                    2654 +1         IF (D1 <> -1)
0A2B E53D           2655 +1             mov   A,  D1         
0A2D 623C           2656 +1             xrl   G,  A          
                    2657 +1         ENDIF    
0A2F E53C           2658 +1         mov   A,  G              
                    2659 +2         LCJNE A,  #11, CFCERR     
0A31 B40B03         2660 +2         cjne    A, #11, $+6
0A34 020A3A         2661 +2         jmp     $+6
0A37 0210B9         2662 +2         ljmp    CFCERR
0A3A 00             2663 +2         nop
                    2664 +1         IF (14 <> -1)
0A3B 753D0E         2665 +1             mov         D1, #14     
                    2666 +1         ELSE
                    2667 +1             mov         D1, #32        
                    2668 +1         ENDIF                    
                    2669 +1         IF (0 <> -1)
0A3E 753E00         2670 +1             mov         D2, #0     
                    2671 +1         ELSE
                    2672 +1             mov         D2, #32        
                    2673 +1         ENDIF                    
0A41 740B           2674 +1         mov       A, #11
0A43 12129F         2675 +1         lcall     PRINTCHAR        
                    2677            ;--------------------------
                    2678 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0A46 53240F         2679 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
DEBUG                                                                                                         PAGE 48

0A49 D226           2680 +1         setb    FLED3
0A4B 121217         2681 +1         lcall   WRITEPORTS
                    2683 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0A4E 121114         2684 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A51 1211B0         2685 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A54 3009FA         2686 +1         jnb     MB1, $-3  ; 
0A57 121114         2687 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A5A 1211B0         2689    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2690 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0A5D 200B03         2691 +1         jb      SKRH, $+6
0A60 02107D         2692 +1         ljmp    ERR_SKRH
0A63 00             2693 +1         nop
                    2695 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie 
                                                                               clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2696 +1                                                                                             
                                                                                                                 
                    2697 +1                                                                                             
                                                                                                                 
                    2698 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2699 +1         COUNT    SET    COUNT+1                   
                    2700 +1         
0A64 20091E         2701 +1         jb      MB1, ENDD10
                    2702 +1         
                    2703 +1         IF (MB1 EQ MB2)
                    2704 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2705 +1         ENDIF 
                    2706 +1         IF (MB1 EQ MB1)
0A67 754701         2707 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2708 +1         ENDIF 
                    2709 +1         
0A6A 304406         2710 +1         jnb     PKI4, $+9
0A6D C222           2711 +1         clr     FAST
0A6F D223           2712 +1         setb    SLOW
0A71 D238           2713 +1         setb    STOPPED         
0A73 D254           2714 +1         setb    ERRF34_U
0A75 D25B           2715 +1         setb    ERRF34_D
0A77 053B           2716 +1         inc     ERRF34_C
0A79 C21C           2717 +1                     clr     PKO4                           
0A7B C22D           2718 +1         clr     PO4U            
0A7D C22D           2719 +1         clr     PO4D              
0A7F 121217         2720 +1                     lcall   WRITEPORTS
0A82 020A89         2721 +1         ljmp    UP3ERR
0A85                2722 +1 ENDD10:
0A85 00             2723 +1         nop
0A86 020A99         2725            jmp     UP3ERR_CONTINUE
0A89                2726    UP3ERR:
0A89 C220           2727            clr     UP              ; zastav motor
0A8B D23A           2728            setb    UPOld           ;       (a zalohuj)
0A8D C23B           2729            clr     DOWNOld         ;       (a zalohuj)
0A8F C222           2730            clr     FAST            ;
0A91 C223           2731            clr     SLOW            ;
0A93 121217         2732            lcall   WRITEPORTS      ; 
0A96 020D8F         2733            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0A99                2734    UP3ERR_CONTINUE:
0A99 200ABE         2735            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2736 +1         CLR_FLOOR_ERR   ERRF34
DEBUG                                                                                                         PAGE 49

0A9C C254           2737 +1         clr    ERRF34_U
0A9E C25B           2738 +1         clr    ERRF34_D
                    2739 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0AA0 00             2740 +1         nop
                    2742 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0AA1 121114         2743 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AA4 1211B0         2744 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AA7 300AFA         2745 +1         jnb     MB2, $-3  ; 
0AAA 121114         2746 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2748            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0AAD 121217         2749            lcall   WRITEPORTS      ;
0AB0 020AB3         2750            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2751    
0AB3                2752    UP3_MB2:
                    2753            ;--------------------------
                    2754 +1         CFCSS     3, 8, 6, -1, D2
0AB3 633C08         2755 +1         xrl             G,  #8             
                    2756 +1         IF (D2 <> -1)
0AB6 E53E           2757 +1             mov   A,  D2         
0AB8 623C           2758 +1             xrl   G,  A          
                    2759 +1         ENDIF    
0ABA E53C           2760 +1         mov   A,  G              
                    2761 +2         LCJNE A,  #3, CFCERR     
0ABC B40303         2762 +2         cjne    A, #3, $+6
0ABF 020AC5         2763 +2         jmp     $+6
0AC2 0210B9         2764 +2         ljmp    CFCERR
0AC5 00             2765 +2         nop
                    2766 +1         IF (6 <> -1)
0AC6 753D06         2767 +1             mov         D1, #6     
                    2768 +1         ELSE
                    2769 +1             mov         D1, #32        
                    2770 +1         ENDIF                    
                    2771 +1         IF (-1 <> -1)
                    2772 +1             mov         D2, #-1     
                    2773 +1         ELSE
0AC9 753E20         2774 +1             mov         D2, #32        
                    2775 +1         ENDIF                    
0ACC 7403           2776 +1         mov       A, #3
0ACE 12129F         2777 +1         lcall     PRINTCHAR        
                    2779            ;--------------------------
                    2780 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0AD1 121114         2781 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AD4 1211B0         2782 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AD7 300AFA         2783 +1         jnb     MB2, $-3  ; 
0ADA 121114         2784 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0ADD                2786    UP3_MB2A:
0ADD 1211B0         2787            lcall   READPORTS       ; nacitanie dat
                    2788 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0AE0 200B03         2789 +1         jb      SKRH, $+6
0AE3 02107D         2790 +1         ljmp    ERR_SKRH
0AE6 00             2791 +1         nop
                    2793 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT ; >>> CHYBA, Vypadla spomalovacia
                                                                                clonka (narazil som na zastavovaciu) <<<
                                                                               
                    2794 +1                                                                                             
                                                                                                                 
DEBUG                                                                                                         PAGE 50

                    2795 +1                                                                                             
                                                                                                                 
                    2796 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2797 +1         COUNT    SET    COUNT+1                   
                    2798 +1         
0AE7 20091E         2799 +1         jb      MB1, ENDD11
                    2800 +1         
                    2801 +1         IF (MB1 EQ MB2)
                    2802 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2803 +1         ENDIF 
                    2804 +1         IF (MB1 EQ MB1)
0AEA 754701         2805 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2806 +1         ENDIF 
                    2807 +1         
0AED 304406         2808 +1         jnb     PKI4, $+9
0AF0 C222           2809 +1         clr     FAST
0AF2 D223           2810 +1         setb    SLOW
0AF4 D238           2811 +1         setb    STOPPED         
0AF6 D254           2812 +1         setb    ERRF34_U
0AF8 D25B           2813 +1         setb    ERRF34_D
0AFA 053B           2814 +1         inc     ERRF34_C
0AFC C21C           2815 +1                     clr     PKO4                           
0AFE C22D           2816 +1         clr     PO4U            
0B00 C22D           2817 +1         clr     PO4D              
0B02 121217         2818 +1                     lcall   WRITEPORTS
0B05 020B0C         2819 +1         ljmp    UP3_MB2ERR
0B08                2820 +1 ENDD11:
0B08 00             2821 +1         nop
0B09 020B1C         2823            jmp     UP3_MB2ERR_CONTINUE
0B0C                2824    UP3_MB2ERR:
0B0C C220           2825            clr     UP              ; zastav motor
0B0E D23A           2826            setb    UPOld           ;       (a zalohuj)
0B10 C23B           2827            clr     DOWNOld         ;       (a zalohuj)
0B12 C222           2828            clr     FAST            ;
0B14 C223           2829            clr     SLOW            ;
0B16 121217         2830            lcall   WRITEPORTS      ; 
0B19 020D8F         2831            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0B1C                2832    UP3_MB2ERR_CONTINUE:
0B1C 200ABE         2833            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2834 +1         CLR_FLOOR_ERR   ERRF34      
0B1F C254           2835 +1         clr    ERRF34_U
0B21 C25B           2836 +1         clr    ERRF34_D
                    2837 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0B23 00             2838 +1         nop
                    2840            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0B24 121217         2841            lcall   WRITEPORTS      ;
                    2842 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0B27 121114         2843 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B2A 1211B0         2844 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B2D 300AFA         2845 +1         jnb     MB2, $-3  ; 
0B30 121114         2846 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2848    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2849    ;        anl     A, #00010000b ;-;
                    2850    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0B33 D223           2851            setb    SLOW            ;       Ak ano, spomalme
0B35 C222           2852            clr     FAST            ; 
0B37 121217         2853            lcall   WRITEPORTS      ;
DEBUG                                                                                                         PAGE 51

0B3A 020B3D         2854            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2855    
                    2856    
0B3D                2857    UP3_MB1:
                    2858            ;--------------------------
                    2859 +1         CFCSS     5, 6, 0, -1, -1
0B3D 633C06         2860 +1         xrl             G,  #6             
                    2861 +1         IF (-1 <> -1)
                    2862 +1             mov   A,  -1         
                    2863 +1             xrl   G,  A          
                    2864 +1         ENDIF    
0B40 E53C           2865 +1         mov   A,  G              
                    2866 +2         LCJNE A,  #5, CFCERR     
0B42 B40503         2867 +2         cjne    A, #5, $+6
0B45 020B4B         2868 +2         jmp     $+6
0B48 0210B9         2869 +2         ljmp    CFCERR
0B4B 00             2870 +2         nop
                    2871 +1         IF (0 <> -1)
0B4C 753D00         2872 +1             mov         D1, #0     
                    2873 +1         ELSE
                    2874 +1             mov         D1, #32        
                    2875 +1         ENDIF                    
                    2876 +1         IF (-1 <> -1)
                    2877 +1             mov         D2, #-1     
                    2878 +1         ELSE
0B4F 753E20         2879 +1             mov         D2, #32        
                    2880 +1         ENDIF                    
0B52 7405           2881 +1         mov       A, #5
0B54 12129F         2882 +1         lcall     PRINTCHAR        
                    2884            ;--------------------------
                    2885 +1         ZAKMITC MB2
0B57 121114         2886 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B5A 1211B0         2887 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B5D 300AFA         2888 +1         jnb     MB2, $-3  ; 
0B60 121114         2889 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B63 1211B0         2891    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0B66 300907         2892            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0B69 200BF7         2893            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0B6C D254           2894            setb    ERRF4_U
0B6E 0538           2895            inc     ERRF4_C
                    2896    ;        jmp     U3_MB1C 
                    2897    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2898    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0B70 C238           2899    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0B72 C220           2900            clr     UP              ; zastav motor
0B74 D23A           2901            setb    UPOld           ;       (a zalohuj)
0B76 C23B           2902            clr     DOWNOld         ;       (a zalohuj)
0B78 C222           2903            clr     FAST            ; 
0B7A 121217         2904            lcall   WRITEPORTS      ; 
0B7D 020D8F         2905            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2906    
                    2907    
0B80                2908    DOWN3:
                    2909            ;--------------------------
DEBUG                                                                                                         PAGE 52

                    2910 +1         CFCSS     27, 2, 22, 10, D2
0B80 633C02         2911 +1         xrl             G,  #2             
                    2912 +1         IF (D2 <> -1)
0B83 E53E           2913 +1             mov   A,  D2         
0B85 623C           2914 +1             xrl   G,  A          
                    2915 +1         ENDIF    
0B87 E53C           2916 +1         mov   A,  G              
                    2917 +2         LCJNE A,  #27, CFCERR     
0B89 B41B03         2918 +2         cjne    A, #27, $+6
0B8C 020B92         2919 +2         jmp     $+6
0B8F 0210B9         2920 +2         ljmp    CFCERR
0B92 00             2921 +2         nop
                    2922 +1         IF (22 <> -1)
0B93 753D16         2923 +1             mov         D1, #22     
                    2924 +1         ELSE
                    2925 +1             mov         D1, #32        
                    2926 +1         ENDIF                    
                    2927 +1         IF (10 <> -1)
0B96 753E0A         2928 +1             mov         D2, #10     
                    2929 +1         ELSE
                    2930 +1             mov         D2, #32        
                    2931 +1         ENDIF                    
0B99 741B           2932 +1         mov       A, #27
0B9B 12129F         2933 +1         lcall     PRINTCHAR        
                    2935            ;--------------------------
                    2936 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0B9E 53240F         2937 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0BA1 D226           2938 +1         setb    FLED3
0BA3 121217         2939 +1         lcall   WRITEPORTS
                    2941 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0BA6 121114         2942 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BA9 1211B0         2943 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BAC 3009FA         2944 +1         jnb     MB1, $-3  ; 
0BAF 121114         2945 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0BB2 1211B0         2947    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2948 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0BB5 200C03         2949 +1         jb      SKRD, $+6
0BB8 02105B         2950 +1         ljmp    ERR_SKRD
0BBB 00             2951 +1         nop
                    2953 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie c
                                                                               lonky (narazil som na zastavovaciu) <<<
                    2954 +1                                                                                             
                                                                                                                 
                    2955 +1                                                                                             
                                                                                                                 
                    2956 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2957 +1         COUNT    SET    COUNT+1                   
                    2958 +1         
0BBC 20091E         2959 +1         jb      MB1, ENDD12
                    2960 +1         
                    2961 +1         IF (MB1 EQ MB2)
                    2962 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2963 +1         ENDIF 
                    2964 +1         IF (MB1 EQ MB1)
0BBF 754701         2965 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
DEBUG                                                                                                         PAGE 53

                    2966 +1         ENDIF 
                    2967 +1         
0BC2 304206         2968 +1         jnb     PKI2, $+9
0BC5 C222           2969 +1         clr     FAST
0BC7 D223           2970 +1         setb    SLOW
0BC9 D238           2971 +1         setb    STOPPED         
0BCB D253           2972 +1         setb    ERRF23_U
0BCD D25A           2973 +1         setb    ERRF23_D
0BCF 053A           2974 +1         inc     ERRF23_C
0BD1 C21A           2975 +1                     clr     PKO2                           
0BD3 C22A           2976 +1         clr     PO2U            
0BD5 C229           2977 +1         clr     PO2D              
0BD7 121217         2978 +1                     lcall   WRITEPORTS
0BDA 020787         2979 +1         ljmp    DOWN2
0BDD                2980 +1 ENDD12:
0BDD 00             2981 +1         nop
0BDE 200AD1         2983            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    2984 +1         CLR_FLOOR_ERR   ERRF23
0BE1 C253           2985 +1         clr    ERRF23_U
0BE3 C25A           2986 +1         clr    ERRF23_D
                    2987 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0BE5 00             2988 +1         nop
                    2990 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0BE6 121114         2991 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BE9 1211B0         2992 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BEC 300AFA         2993 +1         jnb     MB2, $-3  ; 
0BEF 121114         2994 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2996            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0BF2 121217         2997            lcall   WRITEPORTS      ;
0BF5 020BF8         2998            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2999    
                    3000    
0BF8                3001    DOWN3_MB2:
                    3002            ;--------------------------
                    3003 +1         CFCSS     9, 4, -1, 24, D1
0BF8 633C04         3004 +1         xrl             G,  #4             
                    3005 +1         IF (D1 <> -1)
0BFB E53D           3006 +1             mov   A,  D1         
0BFD 623C           3007 +1             xrl   G,  A          
                    3008 +1         ENDIF    
0BFF E53C           3009 +1         mov   A,  G              
                    3010 +2         LCJNE A,  #9, CFCERR     
0C01 B40903         3011 +2         cjne    A, #9, $+6
0C04 020C0A         3012 +2         jmp     $+6
0C07 0210B9         3013 +2         ljmp    CFCERR
0C0A 00             3014 +2         nop
                    3015 +1         IF (-1 <> -1)
                    3016 +1             mov         D1, #-1     
                    3017 +1         ELSE
0C0B 753D20         3018 +1             mov         D1, #32        
                    3019 +1         ENDIF                    
                    3020 +1         IF (24 <> -1)
0C0E 753E18         3021 +1             mov         D2, #24     
                    3022 +1         ELSE
                    3023 +1             mov         D2, #32        
                    3024 +1         ENDIF                    
0C11 7409           3025 +1         mov       A, #9
DEBUG                                                                                                         PAGE 54

0C13 12129F         3026 +1         lcall     PRINTCHAR        
                    3028            ;--------------------------
                    3029 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0C16 121114         3030 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0C19 1211B0         3031 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0C1C 300AFA         3032 +1         jnb     MB2, $-3  ; 
0C1F 121114         3033 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0C22                3035    DOWN3_MB2A:
0C22 1211B0         3036            lcall   READPORTS       ; nacitanie dat
                    3037 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C25 200C03         3038 +1         jb      SKRD, $+6
0C28 02105B         3039 +1         ljmp    ERR_SKRD
0C2B 00             3040 +1         nop
                    3042 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    3043 +1                                                                                             
                                                                                                                 
                    3044 +1                                                                                             
                                                                                                                 
                    3045 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              3046 +1         COUNT    SET    COUNT+1                   
                    3047 +1         
0C2C 20091E         3048 +1         jb      MB1, ENDD13
                    3049 +1         
                    3050 +1         IF (MB1 EQ MB2)
                    3051 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3052 +1         ENDIF 
                    3053 +1         IF (MB1 EQ MB1)
0C2F 754701         3054 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3055 +1         ENDIF 
                    3056 +1         
0C32 304206         3057 +1         jnb     PKI2, $+9
0C35 C222           3058 +1         clr     FAST
0C37 D223           3059 +1         setb    SLOW
0C39 D238           3060 +1         setb    STOPPED         
0C3B D253           3061 +1         setb    ERRF23_U
0C3D D25A           3062 +1         setb    ERRF23_D
0C3F 053A           3063 +1         inc     ERRF23_C
0C41 C21A           3064 +1                     clr     PKO2                           
0C43 C22A           3065 +1         clr     PO2U            
0C45 C229           3066 +1         clr     PO2D              
0C47 121217         3067 +1                     lcall   WRITEPORTS
0C4A 020787         3068 +1         ljmp    DOWN2
0C4D                3069 +1 ENDD13:
0C4D 00             3070 +1         nop
0C4E 200AD1         3072            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    3073 +1         CLR_FLOOR_ERR   ERRF23      
0C51 C253           3074 +1         clr    ERRF23_U
0C53 C25A           3075 +1         clr    ERRF23_D
                    3076 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0C55 00             3077 +1         nop
                    3079            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0C56 121217         3080            lcall   WRITEPORTS      ;
                    3081 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0C59 121114         3082 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0C5C 1211B0         3083 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0C5F 300AFA         3084 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 55

0C62 121114         3085 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3087    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3088    ;        anl     A, #00000100b ;-;
                    3089    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0C65                3090    DOWN3_MB2_CFC:
                    3091            ;--------------------------
                    3092 +1         CFCSS     16, 25, -1, -1, -1
0C65 633C19         3093 +1         xrl             G,  #25             
                    3094 +1         IF (-1 <> -1)
                    3095 +1             mov   A,  -1         
                    3096 +1             xrl   G,  A          
                    3097 +1         ENDIF    
0C68 E53C           3098 +1         mov   A,  G              
                    3099 +2         LCJNE A,  #16, CFCERR     
0C6A B41003         3100 +2         cjne    A, #16, $+6
0C6D 020C73         3101 +2         jmp     $+6
0C70 0210B9         3102 +2         ljmp    CFCERR
0C73 00             3103 +2         nop
                    3104 +1         IF (-1 <> -1)
                    3105 +1             mov         D1, #-1     
                    3106 +1         ELSE
0C74 753D20         3107 +1             mov         D1, #32        
                    3108 +1         ENDIF                    
                    3109 +1         IF (-1 <> -1)
                    3110 +1             mov         D2, #-1     
                    3111 +1         ELSE
0C77 753E20         3112 +1             mov         D2, #32        
                    3113 +1         ENDIF                    
0C7A 7410           3114 +1         mov       A, #16
0C7C 12129F         3115 +1         lcall     PRINTCHAR        
                    3117            ;--------------------------
                    3118 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    3119 +1                                         
0C7F C3             3120 +1         clr     C                       
0C80 7400           3121 +1         mov     A, #0h                  
0C82 7211           3122 +1         orl     C, PI2D      
0C84 B00E           3123 +1         anl     C, /DPZK                
0C86 7242           3124 +1         orl     C, PKI2          
0C88 B05A           3125 +1         anl     C, /ERRF2_D 
0C8A 720F           3126 +1         orl     C, DPK                  
0C8C 7238           3127 +1         orl     C, STOPPED              
0C8E 3400           3128 +1         addc    A, #0h                  
0C90 7050           3130            jnz     D3_MB2C         ; Ak ano, zastav
                    3131 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0C92 E522           3132 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0C94 33             3133 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0C95 547E           3134 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3135 +1 
                    3136 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3137 +2         ANLB    ACC.2, ERRF2_D  ; |
0C97 A2E2           3138 +2         mov   C, ACC.2
0C99 B05A           3139 +2         anl   C, /ERRF2_D
0C9B 92E2           3140 +2         mov   ACC.2, C
DEBUG                                                                                                         PAGE 56

                    3141 +2         ANLB    ACC.3, ERRF2_D  ; |
0C9D A2E3           3142 +2         mov   C, ACC.3
0C9F B05A           3143 +2         anl   C, /ERRF2_D
0CA1 92E3           3144 +2         mov   ACC.3, C
                    3145 +2         ANLB    ACC.4, ERRF3_D  ; |
0CA3 A2E4           3146 +2         mov   C, ACC.4
0CA5 B05B           3147 +2         anl   C, /ERRF3_D
0CA7 92E4           3148 +2         mov   ACC.4, C
                    3149 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3150 +1 
0CA9 7805           3151 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3152 +1  ; LL1: 
0CAB 6006           3153 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0CAD C3             3154 +1         clr     C               ; Inak shiftnem o 2
0CAE 33             3155 +1         rlc     A               ;
0CAF C3             3156 +1         clr     C               ;
0CB0 33             3157 +1         rlc     A               ;
0CB1 D8F8           3158 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3159 +1 ; LL2:
0CB3 E8             3160 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3162 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0CB4 B40203         3163 +1         cjne    A, #2, $+6
0CB7 020CBD         3164 +1         jmp     $+6
0CBA 020CEC         3165 +1         ljmp    DOWN3_MB1
0CBD 00             3166 +1         nop
                    3168 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0CBE 7405           3169 +1         mov     A, #5
0CC0 C3             3170 +1         clr     C
0CC1 9402           3171 +1         subb    A, #2
0CC3 F8             3172 +1         mov     R0, A
0CC4 E528           3173 +1         mov     A, INPORTA
0CC6 541E           3174 +1         anl     A, #00011110b
0CC8 852BF0         3175 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0CCB 53F00C         3176 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0CCE 63F0FF         3177 +1         xrl     B, #0FFH
0CD1 55F0           3178 +1         anl     A, B
0CD3 C3             3179 +1         clr     C
0CD4 33             3180 +1         rlc     A
0CD5 C3             3181 +1         clr     C
0CD6 33             3182 +1         rlc     A
0CD7 C3             3183 +1         clr     C
0CD8 33             3184 +1         rlc     A
                    3185 +1 ;LL1   
0CD9 C3             3186 +1         clr     C
0CDA 33             3187 +1         rlc     A
0CDB D8FC           3188 +1         djnz    R0, $-2;LL1
0CDD 6003           3190            jz      D3_MB2C         ; |   ak neni zastavujem                  
0CDF 020CEC         3191            ljmp    DOWN3_MB1       ;-; |        
0CE2 D223           3192    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0CE4 C222           3193            clr     FAST            ; 
0CE6 121217         3194            lcall   WRITEPORTS      ;
0CE9 020D38         3195            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    3196    
DEBUG                                                                                                         PAGE 57

                    3197    
0CEC                3198    DOWN3_MB1:    
                    3199            ;--------------------------
                    3200 +1         CFCSS     17, 1, -1, 0, -1
0CEC 633C01         3201 +1         xrl             G,  #1             
                    3202 +1         IF (-1 <> -1)
                    3203 +1             mov   A,  -1         
                    3204 +1             xrl   G,  A          
                    3205 +1         ENDIF    
0CEF E53C           3206 +1         mov   A,  G              
                    3207 +2         LCJNE A,  #17, CFCERR     
0CF1 B41103         3208 +2         cjne    A, #17, $+6
0CF4 020CFA         3209 +2         jmp     $+6
0CF7 0210B9         3210 +2         ljmp    CFCERR
0CFA 00             3211 +2         nop
                    3212 +1         IF (-1 <> -1)
                    3213 +1             mov         D1, #-1     
                    3214 +1         ELSE
0CFB 753D20         3215 +1             mov         D1, #32        
                    3216 +1         ENDIF                    
                    3217 +1         IF (0 <> -1)
0CFE 753E00         3218 +1             mov         D2, #0     
                    3219 +1         ELSE
                    3220 +1             mov         D2, #32        
                    3221 +1         ENDIF                    
0D01 7411           3222 +1         mov       A, #17
0D03 12129F         3223 +1         lcall     PRINTCHAR        
                    3225            ;--------------------------
0D06 1211B0         3226    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3227 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D09 200C03         3228 +1         jb      SKRD, $+6
0D0C 02105B         3229 +1         ljmp    ERR_SKRD
0D0F 00             3230 +1         nop
                    3232 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3233 +1                                                                                             
                                                                                                                 
                    3234 +1                                                                                             
                                                                                                                 
                    3235 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              3236 +1         COUNT    SET    COUNT+1                   
                    3237 +1         
0D10 200A1E         3238 +1         jb      MB2, ENDD14
                    3239 +1         
                    3240 +1         IF (MB2 EQ MB2)
0D13 754703         3241 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3242 +1         ENDIF 
                    3243 +1         IF (MB2 EQ MB1)
                    3244 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3245 +1         ENDIF 
                    3246 +1         
0D16 304206         3247 +1         jnb     PKI2, $+9
0D19 C222           3248 +1         clr     FAST
0D1B D223           3249 +1         setb    SLOW
0D1D D238           3250 +1         setb    STOPPED         
0D1F D252           3251 +1         setb    ERRF2_U
0D21 D25A           3252 +1         setb    ERRF2_D
DEBUG                                                                                                         PAGE 58

0D23 0536           3253 +1         inc     ERRF2_C
0D25 C21A           3254 +1                     clr     PKO2                           
0D27 C22A           3255 +1         clr     PO2U            
0D29 C229           3256 +1         clr     PO2D              
0D2B 121217         3257 +1                     lcall   WRITEPORTS
0D2E 020811         3258 +1         ljmp    DOWN2_MB2
0D31                3259 +1 ENDD14:
0D31 00             3260 +1         nop
0D32 2009D1         3262            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    3263    ;        CLR_FLOOR_ERR   ERRF2
                    3264    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3265    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    3266    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    3267    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3268    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    3269    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3270    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0D35 020787         3271            ljmp    DOWN2         ;-; |        
                    3272    ;D3_MB1C: clr     DOWN            ; zastav motor
                    3273    ;        setb    DOWNOld         ;       (a zalohuj)
                    3274    ;        clr     UPOld           ;       (a zalohuj)
                    3275    ;        clr     FAST            ; 
                    3276    ;        lcall   WRITEPORTS      ; 
                    3277    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0D38                3278    DOWN3_STOP: 
                    3279            ;--------------------------
                    3280 +1         CFCSS     21, 5, 0, 4, -1
0D38 633C05         3281 +1         xrl             G,  #5             
                    3282 +1         IF (-1 <> -1)
                    3283 +1             mov   A,  -1         
                    3284 +1             xrl   G,  A          
                    3285 +1         ENDIF    
0D3B E53C           3286 +1         mov   A,  G              
                    3287 +2         LCJNE A,  #21, CFCERR     
0D3D B41503         3288 +2         cjne    A, #21, $+6
0D40 020D46         3289 +2         jmp     $+6
0D43 0210B9         3290 +2         ljmp    CFCERR
0D46 00             3291 +2         nop
                    3292 +1         IF (0 <> -1)
0D47 753D00         3293 +1             mov         D1, #0     
                    3294 +1         ELSE
                    3295 +1             mov         D1, #32        
                    3296 +1         ENDIF                    
                    3297 +1         IF (4 <> -1)
0D4A 753E04         3298 +1             mov         D2, #4     
                    3299 +1         ELSE
                    3300 +1             mov         D2, #32        
                    3301 +1         ENDIF                    
0D4D 7415           3302 +1         mov       A, #21
0D4F 12129F         3303 +1         lcall     PRINTCHAR        
                    3305            ;--------------------------
0D52 1211B0         3306    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3307 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D55 200C03         3308 +1         jb      SKRD, $+6
DEBUG                                                                                                         PAGE 59

0D58 02105B         3309 +1         ljmp    ERR_SKRD
0D5B 00             3310 +1         nop
                    3312 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia c
                                                                               lonka (narazil som na spomalovaciu) <<<
                    3313 +1                                                                                             
                                                                                                                 
                    3314 +1                                                                                             
                                                                                                                 
                    3315 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              3316 +1         COUNT    SET    COUNT+1                   
                    3317 +1         
0D5C 200A1E         3318 +1         jb      MB2, ENDD15
                    3319 +1         
                    3320 +1         IF (MB2 EQ MB2)
0D5F 754703         3321 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3322 +1         ENDIF 
                    3323 +1         IF (MB2 EQ MB1)
                    3324 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3325 +1         ENDIF 
                    3326 +1         
0D62 304206         3327 +1         jnb     PKI2, $+9
0D65 C222           3328 +1         clr     FAST
0D67 D223           3329 +1         setb    SLOW
0D69 D238           3330 +1         setb    STOPPED         
0D6B D252           3331 +1         setb    ERRF2_U
0D6D D25A           3332 +1         setb    ERRF2_D
0D6F 0536           3333 +1         inc     ERRF2_C
0D71 C21A           3334 +1                     clr     PKO2                           
0D73 C22A           3335 +1         clr     PO2U            
0D75 C229           3336 +1         clr     PO2D              
0D77 121217         3337 +1                     lcall   WRITEPORTS
0D7A 020811         3338 +1         ljmp    DOWN2_MB2
0D7D                3339 +1 ENDD15:
0D7D 00             3340 +1         nop
0D7E 2009D1         3342            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    3343    ;        CLR_FLOOR_ERR   ERRF2     
0D81 C221           3344            clr     DOWN            ; zastav motor
0D83 D23B           3345            setb    DOWNOld         ;       (a zalohuj)
0D85 C23A           3346            clr     UPOld           ;       (a zalohuj)
0D87 C222           3347            clr     FAST            ; 
0D89 121217         3348            lcall   WRITEPORTS      ; 
0D8C 02041B         3349            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    3350    
                    3351            
                    3352    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    3353    
0D8F                3354    FLOOR4:
                    3355            ;--------------------------
                    3356 +1         CFCSS     19, 22, -1, -1, D1
0D8F 633C16         3357 +1         xrl             G,  #22             
                    3358 +1         IF (D1 <> -1)
0D92 E53D           3359 +1             mov   A,  D1         
0D94 623C           3360 +1             xrl   G,  A          
                    3361 +1         ENDIF    
0D96 E53C           3362 +1         mov   A,  G              
                    3363 +2         LCJNE A,  #19, CFCERR     
0D98 B41303         3364 +2         cjne    A, #19, $+6
DEBUG                                                                                                         PAGE 60

0D9B 020DA1         3365 +2         jmp     $+6
0D9E 0210B9         3366 +2         ljmp    CFCERR
0DA1 00             3367 +2         nop
                    3368 +1         IF (-1 <> -1)
                    3369 +1             mov         D1, #-1     
                    3370 +1         ELSE
0DA2 753D20         3371 +1             mov         D1, #32        
                    3372 +1         ENDIF                    
                    3373 +1         IF (-1 <> -1)
                    3374 +1             mov         D2, #-1     
                    3375 +1         ELSE
0DA5 753E20         3376 +1             mov         D2, #32        
                    3377 +1         ENDIF                    
0DA8 7413           3378 +1         mov       A, #19
0DAA 12129F         3379 +1         lcall     PRINTCHAR        
                    3381            ;--------------------------
                    3382 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0DAD 53240F         3383 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0DB0 D227           3384 +1         setb    FLED4
0DB2 121217         3385 +1         lcall   WRITEPORTS
0DB5 C238           3387            clr     STOPPED
                    3388 +1         TIMER2  60              ; (Timer - 3s)
0DB7 752D3C         3389 +1            mov           T2_C, #60                              
0DBA C27A           3390 +1                  clr       T2_F                                  
0DBC D2CA           3391 +1                  setb      TR2                                             
                    3393 +1         ROZSVIET_SMER_LED
0DBE D22F           3394 +1         setb    LEDU            ;
0DC0 D22E           3395 +1         setb    LEDD            ;
0DC2 121217         3396 +1         lcall   WRITEPORTS      ;
0DC5 7546C0         3398            mov     POSCHODIE, #0C0h ; 1100 0000 - posch. 4
0DC8 1211B0         3399    F4S:    lcall   READPORTS     ;-; nacitanie dat
                    3400 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0DCB 200A03         3401 +1         jb      MB2, $+6
0DCE 02109F         3402 +1         ljmp    ERRFLOOR
0DD1 00             3403 +1         nop
                    3405 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0DD2 200C03         3406 +1         jb      SKRD, $+6
0DD5 02109F         3407 +1         ljmp    ERRFLOOR
0DD8 00             3408 +1         nop
                    3410 +1         ZRUS_POSCH 4
0DD9 C21C           3411 +1         clr     PKO4       
0DDB C22D           3412 +1         clr     PO4U      
0DDD C22D           3413 +1         clr     PO4D      
0DDF 121217         3414 +1         lcall   WRITEPORTS
                    3416            
                    3417 +1         LCALLB          S_RI, RCV_MESSAGE
0DE2 306103         3418 +1         jnb     S_RI, $+6
0DE5 1212DC         3419 +1         lcall   RCV_MESSAGE
0DE8 00             3420 +1         nop
                    3422            
0DE9 307ADC         3423            jnb                T2_F, F4S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    3424 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0DEC A20D           3425 +1         mov      C, DP          
0DEE 720E           3426 +1         orl      C, DPZK        
DEBUG                                                                                                         PAGE 61

0DF0 720F           3427 +1         orl      C, DPK         
0DF2 9218           3428 +1         mov      KS, C          
0DF4 922F           3429 +1         mov      LEDU, C        
0DF6 922E           3430 +1         mov      LEDD, C        
0DF8 121217         3431 +1         lcall   WRITEPORTS      
0DFB 200FCA         3433            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0DFE 3045C7         3434            jnb     DOORCLSD, F4S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    3435 +1         JE_VYBRATE_POSCHODIE F4S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0E01 A20D           3436 +1         mov      C, DP         
0E03 720E           3437 +1         orl      C, DPZK        
0E05 720F           3438 +1         orl      C, DPK         
0E07 5006           3439 +1         jnc      $+8            
0E09 E528           3440 +1         mov      A, INPORTA     
0E0B 541E           3441 +1         anl      A, #00011110b  
0E0D 60B9           3442 +1         jz       F4S       
                    3444            ;clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
                    3445            ;clr     PO4            ;
                    3446            ;lcall   WRITEPORTS      ;
                    3447            ;jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0E0F E528           3448            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0E11 852BF0         3449            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0E14 53F00C         3450            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0E17 63F0FF         3451            xrl     B, #0FFH        ; | |
0E1A 55F0           3452            anl     A, B            ; | |
0E1C 540E           3453            anl     A, #00001110b ;-;
0E1E 701A           3454            jnz     F4OK          ;-; ak ano, ideme na to
0E20 E522           3455            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0E22 541F           3456            anl     A, #00011111b ;-;
                    3457            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    3458 +1         ANLB    ACC.1, ERRF2_D  ; |
0E24 A2E1           3459 +1         mov   C, ACC.1
0E26 B05A           3460 +1         anl   C, /ERRF2_D
0E28 92E1           3461 +1         mov   ACC.1, C
                    3463 +1         ANLB    ACC.2, ERRF2_D  ; |
0E2A A2E2           3464 +1         mov   C, ACC.2
0E2C B05A           3465 +1         anl   C, /ERRF2_D
0E2E 92E2           3466 +1         mov   ACC.2, C
                    3468 +1         ANLB    ACC.3, ERRF3_D  ; |
0E30 A2E3           3469 +1         mov   C, ACC.3
0E32 B05B           3470 +1         anl   C, /ERRF3_D
0E34 92E3           3471 +1         mov   ACC.3, C
                    3473            ;ANLB    ACC.4, ERRF3_D  ; |
0E36 7002           3474            jnz     F4OK          ;-; ak ano, ideme na to
0E38 808E           3475            jmp     F4S             ; Nemam sa kde hnut, opakujem
0E3A 9017A5         3476    F4OK:   mov   DPTR, #COM_BUSY   ; Poslanie BUSY spravy 
0E3D 121252         3477            lcall DISPSTR           ;
                    3478 +1         SET_DOWN                  ; rychly pohyb dole
0E40 C220           3479 +1         clr     UP
0E42 D221           3480 +1         setb    DOWN
0E44 C22F           3481 +1         clr     LEDU
0E46 D22E           3482 +1         setb    LEDD 
                    3484 +1         SET_FAST                ; 
0E48 D222           3485 +1         setb     FAST
0E4A C223           3486 +1         clr      SLOW
0E4C D218           3487 +1         setb     KS      
DEBUG                                                                                                         PAGE 62

0E4E 121217         3489            lcall   WRITEPORTS      ; 
0E51 020E54         3490            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
                    3491    
                    3492    
0E54                3493    DOWN4:
                    3494            ;--------------------------
                    3495 +1         CFCSS     22, 5, -1, 15, -1
0E54 633C05         3496 +1         xrl             G,  #5             
                    3497 +1         IF (-1 <> -1)
                    3498 +1             mov   A,  -1         
                    3499 +1             xrl   G,  A          
                    3500 +1         ENDIF    
0E57 E53C           3501 +1         mov   A,  G              
                    3502 +2         LCJNE A,  #22, CFCERR     
0E59 B41603         3503 +2         cjne    A, #22, $+6
0E5C 020E62         3504 +2         jmp     $+6
0E5F 0210B9         3505 +2         ljmp    CFCERR
0E62 00             3506 +2         nop
                    3507 +1         IF (-1 <> -1)
                    3508 +1             mov         D1, #-1     
                    3509 +1         ELSE
0E63 753D20         3510 +1             mov         D1, #32        
                    3511 +1         ENDIF                    
                    3512 +1         IF (15 <> -1)
0E66 753E0F         3513 +1             mov         D2, #15     
                    3514 +1         ELSE
                    3515 +1             mov         D2, #32        
                    3516 +1         ENDIF                    
0E69 7416           3517 +1         mov       A, #22
0E6B 12129F         3518 +1         lcall     PRINTCHAR        
                    3520            ;--------------------------
                    3521 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0E6E 53240F         3522 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0E71 D227           3523 +1         setb    FLED4
0E73 121217         3524 +1         lcall   WRITEPORTS
                    3526 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0E76 121114         3527 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E79 1211B0         3528 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E7C 3009FA         3529 +1         jnb     MB1, $-3  ; 
0E7F 121114         3530 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E82 1211B0         3532    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    3533 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E85 200C03         3534 +1         jb      SKRD, $+6
0E88 02105B         3535 +1         ljmp    ERR_SKRD
0E8B 00             3536 +1         nop
                    3538 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    3539 +1                                                                                             
                                                                                                                 
                    3540 +1                                                                                             
                                                                                                                 
                    3541 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              3542 +1         COUNT    SET    COUNT+1                   
                    3543 +1         
DEBUG                                                                                                         PAGE 63

0E8C 20091E         3544 +1         jb      MB1, ENDD16
                    3545 +1         
                    3546 +1         IF (MB1 EQ MB2)
                    3547 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3548 +1         ENDIF 
                    3549 +1         IF (MB1 EQ MB1)
0E8F 754701         3550 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3551 +1         ENDIF 
                    3552 +1         
0E92 304306         3553 +1         jnb     PKI3, $+9
0E95 C222           3554 +1         clr     FAST
0E97 D223           3555 +1         setb    SLOW
0E99 D238           3556 +1         setb    STOPPED         
0E9B D254           3557 +1         setb    ERRF34_U
0E9D D25B           3558 +1         setb    ERRF34_D
0E9F 053B           3559 +1         inc     ERRF34_C
0EA1 C21B           3560 +1                     clr     PKO3                           
0EA3 C22C           3561 +1         clr     PO3U            
0EA5 C22B           3562 +1         clr     PO3D              
0EA7 121217         3563 +1                     lcall   WRITEPORTS
0EAA 020B80         3564 +1         ljmp    DOWN3
0EAD                3565 +1 ENDD16:
0EAD 00             3566 +1         nop
0EAE 200AD1         3568            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    3569 +1         CLR_FLOOR_ERR   ERRF34
0EB1 C254           3570 +1         clr    ERRF34_U
0EB3 C25B           3571 +1         clr    ERRF34_D
                    3572 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0EB5 00             3573 +1         nop
                    3575 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0EB6 121114         3576 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EB9 1211B0         3577 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EBC 300AFA         3578 +1         jnb     MB2, $-3  ; 
0EBF 121114         3579 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3581            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0EC2 121217         3582            lcall   WRITEPORTS      ;
0EC5 020EC8         3583            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    3584            
                    3585            
0EC8                3586    DOWN4_MB2:
                    3587            ;--------------------------
                    3588 +1         CFCSS     23, 1, -1, 14, -1
0EC8 633C01         3589 +1         xrl             G,  #1             
                    3590 +1         IF (-1 <> -1)
                    3591 +1             mov   A,  -1         
                    3592 +1             xrl   G,  A          
                    3593 +1         ENDIF    
0ECB E53C           3594 +1         mov   A,  G              
                    3595 +2         LCJNE A,  #23, CFCERR     
0ECD B41703         3596 +2         cjne    A, #23, $+6
0ED0 020ED6         3597 +2         jmp     $+6
0ED3 0210B9         3598 +2         ljmp    CFCERR
0ED6 00             3599 +2         nop
                    3600 +1         IF (-1 <> -1)
                    3601 +1             mov         D1, #-1     
                    3602 +1         ELSE
0ED7 753D20         3603 +1             mov         D1, #32        
DEBUG                                                                                                         PAGE 64

                    3604 +1         ENDIF                    
                    3605 +1         IF (14 <> -1)
0EDA 753E0E         3606 +1             mov         D2, #14     
                    3607 +1         ELSE
                    3608 +1             mov         D2, #32        
                    3609 +1         ENDIF                    
0EDD 7417           3610 +1         mov       A, #23
0EDF 12129F         3611 +1         lcall     PRINTCHAR        
                    3613            ;--------------------------
                    3614 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0EE2 121114         3615 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EE5 1211B0         3616 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EE8 300AFA         3617 +1         jnb     MB2, $-3  ; 
0EEB 121114         3618 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0EEE                3620    DOWN4_MB2A:
0EEE 1211B0         3621            lcall   READPORTS       ; nacitanie dat
                    3622 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0EF1 200C03         3623 +1         jb      SKRD, $+6
0EF4 02105B         3624 +1         ljmp    ERR_SKRD
0EF7 00             3625 +1         nop
                    3627 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadla spomalovacia c
                                                                               lonka (narazil som na zastavovaciu) <<<
                    3628 +1                                                                                             
                                                                                                                 
                    3629 +1                                                                                             
                                                                                                                 
                    3630 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3631 +1         COUNT    SET    COUNT+1                   
                    3632 +1         
0EF8 20091E         3633 +1         jb      MB1, ENDD17
                    3634 +1         
                    3635 +1         IF (MB1 EQ MB2)
                    3636 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3637 +1         ENDIF 
                    3638 +1         IF (MB1 EQ MB1)
0EFB 754701         3639 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3640 +1         ENDIF 
                    3641 +1         
0EFE 304306         3642 +1         jnb     PKI3, $+9
0F01 C222           3643 +1         clr     FAST
0F03 D223           3644 +1         setb    SLOW
0F05 D238           3645 +1         setb    STOPPED         
0F07 D254           3646 +1         setb    ERRF34_U
0F09 D25B           3647 +1         setb    ERRF34_D
0F0B 053B           3648 +1         inc     ERRF34_C
0F0D C21B           3649 +1                     clr     PKO3                           
0F0F C22C           3650 +1         clr     PO3U            
0F11 C22B           3651 +1         clr     PO3D              
0F13 121217         3652 +1                     lcall   WRITEPORTS
0F16 020B80         3653 +1         ljmp    DOWN3
0F19                3654 +1 ENDD17:
0F19 00             3655 +1         nop
0F1A 200AD1         3657            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3658 +1         CLR_FLOOR_ERR   ERRF34       
0F1D C254           3659 +1         clr    ERRF34_U
0F1F C25B           3660 +1         clr    ERRF34_D
                    3661 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
DEBUG                                                                                                         PAGE 65

0F21 00             3662 +1         nop
                    3664            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0F22 121217         3665            lcall   WRITEPORTS      ;
                    3666 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0F25 121114         3667 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0F28 1211B0         3668 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0F2B 300AFA         3669 +1         jnb     MB2, $-3  ; 
0F2E 121114         3670 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3672    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3673    ;        anl     A, #00001000b ;-;
                    3674    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0F31                3675    DOWN4_MB2_CFC:
                    3676            ;--------------------------
                    3677 +1         CFCSS     7, 16, -1, -1, -1
0F31 633C10         3678 +1         xrl             G,  #16             
                    3679 +1         IF (-1 <> -1)
                    3680 +1             mov   A,  -1         
                    3681 +1             xrl   G,  A          
                    3682 +1         ENDIF    
0F34 E53C           3683 +1         mov   A,  G              
                    3684 +2         LCJNE A,  #7, CFCERR     
0F36 B40703         3685 +2         cjne    A, #7, $+6
0F39 020F3F         3686 +2         jmp     $+6
0F3C 0210B9         3687 +2         ljmp    CFCERR
0F3F 00             3688 +2         nop
                    3689 +1         IF (-1 <> -1)
                    3690 +1             mov         D1, #-1     
                    3691 +1         ELSE
0F40 753D20         3692 +1             mov         D1, #32        
                    3693 +1         ENDIF                    
                    3694 +1         IF (-1 <> -1)
                    3695 +1             mov         D2, #-1     
                    3696 +1         ELSE
0F43 753E20         3697 +1             mov         D2, #32        
                    3698 +1         ENDIF                    
0F46 7407           3699 +1         mov       A, #7
0F48 12129F         3700 +1         lcall     PRINTCHAR        
                    3702            ;--------------------------
                    3703 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3704 +1                                         
0F4B C3             3705 +1         clr     C                       
0F4C 7400           3706 +1         mov     A, #0h                  
0F4E 7213           3707 +1         orl     C, PI3D      
0F50 B00E           3708 +1         anl     C, /DPZK                
0F52 7243           3709 +1         orl     C, PKI3          
0F54 B05B           3710 +1         anl     C, /ERRF3_D 
0F56 720F           3711 +1         orl     C, DPK                  
0F58 7238           3712 +1         orl     C, STOPPED              
0F5A 3400           3713 +1         addc    A, #0h                  
0F5C 7050           3715            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3716 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0F5E E522           3717 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0F60 33             3718 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
DEBUG                                                                                                         PAGE 66

0F61 547E           3719 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3720 +1 
                    3721 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3722 +2         ANLB    ACC.2, ERRF2_D  ; |
0F63 A2E2           3723 +2         mov   C, ACC.2
0F65 B05A           3724 +2         anl   C, /ERRF2_D
0F67 92E2           3725 +2         mov   ACC.2, C
                    3726 +2         ANLB    ACC.3, ERRF2_D  ; |
0F69 A2E3           3727 +2         mov   C, ACC.3
0F6B B05A           3728 +2         anl   C, /ERRF2_D
0F6D 92E3           3729 +2         mov   ACC.3, C
                    3730 +2         ANLB    ACC.4, ERRF3_D  ; |
0F6F A2E4           3731 +2         mov   C, ACC.4
0F71 B05B           3732 +2         anl   C, /ERRF3_D
0F73 92E4           3733 +2         mov   ACC.4, C
                    3734 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3735 +1 
0F75 7805           3736 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3737 +1  ; LL1: 
0F77 6006           3738 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0F79 C3             3739 +1         clr     C               ; Inak shiftnem o 2
0F7A 33             3740 +1         rlc     A               ;
0F7B C3             3741 +1         clr     C               ;
0F7C 33             3742 +1         rlc     A               ;
0F7D D8F8           3743 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3744 +1 ; LL2:
0F7F E8             3745 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3747 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0F80 B40303         3748 +1         cjne    A, #3, $+6
0F83 020F89         3749 +1         jmp     $+6
0F86 020FB8         3750 +1         ljmp    DOWN4_MB1
0F89 00             3751 +1         nop
                    3753 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0F8A 7405           3754 +1         mov     A, #5
0F8C C3             3755 +1         clr     C
0F8D 9403           3756 +1         subb    A, #3
0F8F F8             3757 +1         mov     R0, A
0F90 E528           3758 +1         mov     A, INPORTA
0F92 541E           3759 +1         anl     A, #00011110b
0F94 852BF0         3760 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0F97 53F00C         3761 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0F9A 63F0FF         3762 +1         xrl     B, #0FFH
0F9D 55F0           3763 +1         anl     A, B
0F9F C3             3764 +1         clr     C
0FA0 33             3765 +1         rlc     A
0FA1 C3             3766 +1         clr     C
0FA2 33             3767 +1         rlc     A
0FA3 C3             3768 +1         clr     C
0FA4 33             3769 +1         rlc     A
                    3770 +1 ;LL1   
0FA5 C3             3771 +1         clr     C
0FA6 33             3772 +1         rlc     A
0FA7 D8FC           3773 +1         djnz    R0, $-2;LL1
DEBUG                                                                                                         PAGE 67

0FA9 6003           3775            jz      D4_MB2C         ; |   ak neni zastavujem          
0FAB 020FB8         3776            ljmp    DOWN4_MB1       ;-; |       
0FAE D223           3777    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0FB0 C222           3778            clr     FAST            ; 
0FB2 121217         3779            lcall   WRITEPORTS      ;
0FB5 021004         3780            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3781            
                    3782            
0FB8                3783    DOWN4_MB1:    
                    3784            ;--------------------------
                    3785 +1         CFCSS     25, 30, 20, 0, -1
0FB8 633C1E         3786 +1         xrl             G,  #30             
                    3787 +1         IF (-1 <> -1)
                    3788 +1             mov   A,  -1         
                    3789 +1             xrl   G,  A          
                    3790 +1         ENDIF    
0FBB E53C           3791 +1         mov   A,  G              
                    3792 +2         LCJNE A,  #25, CFCERR     
0FBD B41903         3793 +2         cjne    A, #25, $+6
0FC0 020FC6         3794 +2         jmp     $+6
0FC3 0210B9         3795 +2         ljmp    CFCERR
0FC6 00             3796 +2         nop
                    3797 +1         IF (20 <> -1)
0FC7 753D14         3798 +1             mov         D1, #20     
                    3799 +1         ELSE
                    3800 +1             mov         D1, #32        
                    3801 +1         ENDIF                    
                    3802 +1         IF (0 <> -1)
0FCA 753E00         3803 +1             mov         D2, #0     
                    3804 +1         ELSE
                    3805 +1             mov         D2, #32        
                    3806 +1         ENDIF                    
0FCD 7419           3807 +1         mov       A, #25
0FCF 12129F         3808 +1         lcall     PRINTCHAR        
                    3810            ;--------------------------
0FD2 1211B0         3811    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3812 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0FD5 200C03         3813 +1         jb      SKRD, $+6
0FD8 02105B         3814 +1         ljmp    ERR_SKRD
0FDB 00             3815 +1         nop
                    3817 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3818 +1                                                                                             
                                                                                                                 
                    3819 +1                                                                                             
                                                                                                                 
                    3820 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3821 +1         COUNT    SET    COUNT+1                   
                    3822 +1         
0FDC 200A1E         3823 +1         jb      MB2, ENDD18
                    3824 +1         
                    3825 +1         IF (MB2 EQ MB2)
0FDF 754703         3826 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3827 +1         ENDIF 
                    3828 +1         IF (MB2 EQ MB1)
                    3829 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3830 +1         ENDIF 
DEBUG                                                                                                         PAGE 68

                    3831 +1         
0FE2 304306         3832 +1         jnb     PKI3, $+9
0FE5 C222           3833 +1         clr     FAST
0FE7 D223           3834 +1         setb    SLOW
0FE9 D238           3835 +1         setb    STOPPED         
0FEB D253           3836 +1         setb    ERRF3_U
0FED D25B           3837 +1         setb    ERRF3_D
0FEF 0537           3838 +1         inc     ERRF3_C
0FF1 C21B           3839 +1                     clr     PKO3                           
0FF3 C22C           3840 +1         clr     PO3U            
0FF5 C22B           3841 +1         clr     PO3D              
0FF7 121217         3842 +1                     lcall   WRITEPORTS
0FFA 020BF8         3843 +1         ljmp    DOWN3_MB2
0FFD                3844 +1 ENDD18:
0FFD 00             3845 +1         nop
0FFE 2009D1         3847            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3848    ;        CLR_FLOOR_ERR   ERRF3
                    3849    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3850    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3851    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3852    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3853    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3854    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3855    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
1001 020B80         3856            ljmp    DOWN3         ;-; |       
                    3857    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3858    ;        setb    DOWNOld         ;       (a zalohuj)
                    3859    ;        clr     UPOld           ;       (a zalohuj)
                    3860    ;        clr     FAST            ; 
                    3861    ;        lcall   WRITEPORTS      ; 
                    3862    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3863    
                    3864                    
1004                3865    DOWN4_STOP:    
                    3866            ;--------------------------
                    3867 +1         CFCSS     13, 10, 0, -1, -1
1004 633C0A         3868 +1         xrl             G,  #10             
                    3869 +1         IF (-1 <> -1)
                    3870 +1             mov   A,  -1         
                    3871 +1             xrl   G,  A          
                    3872 +1         ENDIF    
1007 E53C           3873 +1         mov   A,  G              
                    3874 +2         LCJNE A,  #13, CFCERR     
1009 B40D03         3875 +2         cjne    A, #13, $+6
100C 021012         3876 +2         jmp     $+6
100F 0210B9         3877 +2         ljmp    CFCERR
1012 00             3878 +2         nop
                    3879 +1         IF (0 <> -1)
1013 753D00         3880 +1             mov         D1, #0     
                    3881 +1         ELSE
                    3882 +1             mov         D1, #32        
                    3883 +1         ENDIF                    
                    3884 +1         IF (-1 <> -1)
                    3885 +1             mov         D2, #-1     
DEBUG                                                                                                         PAGE 69

                    3886 +1         ELSE
1016 753E20         3887 +1             mov         D2, #32        
                    3888 +1         ENDIF                    
1019 740D           3889 +1         mov       A, #13
101B 12129F         3890 +1         lcall     PRINTCHAR        
                    3892            ;--------------------------
101E 1211B0         3893    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3894 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
1021 200C03         3895 +1         jb      SKRD, $+6
1024 02105B         3896 +1         ljmp    ERR_SKRD
1027 00             3897 +1         nop
                    3899 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3900 +1                                                                                             
                                                                                                                 
                    3901 +1                                                                                             
                                                                                                                 
                    3902 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3903 +1         COUNT    SET    COUNT+1                   
                    3904 +1         
1028 200A1E         3905 +1         jb      MB2, ENDD19
                    3906 +1         
                    3907 +1         IF (MB2 EQ MB2)
102B 754703         3908 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3909 +1         ENDIF 
                    3910 +1         IF (MB2 EQ MB1)
                    3911 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3912 +1         ENDIF 
                    3913 +1         
102E 304306         3914 +1         jnb     PKI3, $+9
1031 C222           3915 +1         clr     FAST
1033 D223           3916 +1         setb    SLOW
1035 D238           3917 +1         setb    STOPPED         
1037 D253           3918 +1         setb    ERRF3_U
1039 D25B           3919 +1         setb    ERRF3_D
103B 0537           3920 +1         inc     ERRF3_C
103D C21B           3921 +1                     clr     PKO3                           
103F C22C           3922 +1         clr     PO3U            
1041 C22B           3923 +1         clr     PO3D              
1043 121217         3924 +1                     lcall   WRITEPORTS
1046 020BF8         3925 +1         ljmp    DOWN3_MB2
1049                3926 +1 ENDD19:
1049 00             3927 +1         nop
104A 2009D1         3929            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3930    ;        CLR_FLOOR_ERR   ERRF3
104D C221           3931            clr     DOWN            ; zastav motor
104F D23B           3932            setb    DOWNOld         ;       (a zalohuj)
1051 C23A           3933            clr     UPOld           ;       (a zalohuj)
1053 C222           3934            clr     FAST            ; 
1055 121217         3935            lcall   WRITEPORTS      ; 
1058 0208D2         3936            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3937      
                    3938      
                    3939      
                    3940    
                    3941            
105B                3942    ERR_SKRD:    
DEBUG                                                                                                         PAGE 70

105B C221           3943            clr     DOWN            ; zastav motor
105D C222           3944            clr     FAST            ; 
105F 121217         3945            lcall   WRITEPORTS      ; 
1062 901712         3946            mov     DPTR, #STR_ERR_SKRD         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
1065 121252         3947            lcall   DISPSTR         ;
                    3948            
1068 754705         3949            mov     PORUCHA, #5
106B 121401         3950            lcall   MSG05
106E 12138E         3951            lcall   SND_MESSAGE
                    3952            
                    3953            ; Nastavenie spravneho priznaku G a D     
1071 753C1E         3954            mov     G, #30          ;
1074 753D00         3955            mov     D1, #0           ;
1077 753E00         3956            mov     D2, #0           ;
107A 02012A         3957            ljmp    FLOOR1    
                    3958            
107D                3959    ERR_SKRH: 
107D C222           3960            clr     FAST            ; zastav motor
107F C223           3961            clr     SLOW            ; 
1081 121217         3962            lcall   WRITEPORTS      ; 
1084 9016D7         3963            mov     DPTR, #STR_ERR_SKRH         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
1087 121252         3964            lcall   DISPSTR         ;
                    3965            
108A 754704         3966            mov     PORUCHA, #4
108D 121401         3967            lcall   MSG05
1090 12138E         3968            lcall   SND_MESSAGE
                    3969            
                    3970            ; Nastavenie spravneho priznaku G a D     
1093 753C05         3971            mov     G, #5           ;
1096 753D00         3972            mov     D1, #0           ;
1099 753E00         3973            mov     D2, #0           ;
109C 020D8F         3974            ljmp    FLOOR4 
                    3975            
109F                3976    ERRFLOOR:
109F C222           3977            clr     FAST            ; zastav motor
10A1 C223           3978            clr     SLOW            ; 
10A3 121217         3979            lcall   WRITEPORTS      ; 
10A6 90174D         3980            mov     DPTR, #STR_ERR_FLOOR         ; vypis info o neocakavanom pohnuti sa kabiny z
                                                                                poschodia
10A9 121252         3981            lcall   DISPSTR         ;
                    3982            ; rozblikaj vsetky LEDky
                    3983            ; pockaj kym vsetci vystupia
                    3984            ; pockaj este 3 sakundy
                    3985 +1         TIMER2  60
10AC 752D3C         3986 +1            mov           T2_C, #60                              
10AF C27A           3987 +1                  clr       T2_F                                  
10B1 D2CA           3988 +1                  setb      TR2                                             
10B3 307AFD         3990            jnb               T2_F, $                       ; 
                    3991            ;zresetuj
10B6 020033         3992            ljmp     START
                    3993            
                    3994    
                    3995               
10B9                3996    CFCERR:
10B9 C220           3997            clr     UP              ; zastav motor
10BB C221           3998            clr     DOWN            ; 
DEBUG                                                                                                         PAGE 71

10BD C222           3999            clr     FAST            ; 
10BF C223           4000            clr     SLOW            ; 
10C1 121217         4001            lcall   WRITEPORTS      ; 
10C4 901790         4002            mov     DPTR, #STR_ERR_CFC         ; vypis info o zisteni chyby toku programu
10C7 121252         4003            lcall   DISPSTR         ;  
10CA 121431         4004            lcall   MSG06
10CD 12138E         4005            lcall   SND_MESSAGE
                    4006                    
10D0                4007    ENDPROG:
                    4008 +1         TIMER2  20
10D0 752D14         4009 +1            mov           T2_C, #20                              
10D3 C27A           4010 +1                  clr       T2_F                                  
10D5 D2CA           4011 +1                  setb      TR2                                             
10D7 307AFD         4013            jnb     T2_F, $
10DA D218           4014            setb    KS
10DC 121217         4015            call    WRITEPORTS     
                    4016 +1         TIMER2  20
10DF 752D14         4017 +1            mov           T2_C, #20                              
10E2 C27A           4018 +1                  clr       T2_F                                  
10E4 D2CA           4019 +1                  setb      TR2                                             
10E6 307AFD         4021            jnb     T2_F, $
10E9 C218           4022            clr     KS
10EB 121217         4023            call    WRITEPORTS
10EE 80E0           4024            jmp     ENDPROG 
                    4025    
10F0 22             4026            ret
                    4027            
                    4028            
                    4029            
                    4030    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4031    ; INT_TIMER0
                    4032    ; Obsluha prerusenia timera 0
                    4033    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
10F1                4034    INT_TIMER0:
10F1 C0D0           4035            push    PSW
10F3 C0E0           4036            push    ACC
10F5 C0F0           4037            push    B
                    4038            ;push    OUTPORTC
                    4039            
10F7 E52E           4040            mov     A, T0_C ;R5
10F9 152E           4041            dec     T0_C    ;R5
10FB 6002           4042            jz      INT_TIMER0_MAIN    
10FD 800E           4043            sjmp    INT_TIMER0_END
10FF                4044    INT_TIMER0_MAIN:
10FF 752E14         4045            mov     T0_C, #TIMER0CONST ;R5, A
1102 E52A           4046            mov     A, ERRFLOOR_U
1104 452B           4047            orl     A, ERRFLOOR_D
1106 541E           4048            anl     A, #00011110b
1108 23             4049            rl      A
1109 23             4050            rl      A
110A 23             4051            rl      A    
110B 6224           4052            xrl     OUTPORTB, A     
                    4053                          
                    4054            ;clr    EA
                    4055            ;mov     p0, OUTPORTB 
                    4056            ;mov     p2, #i8255OUTB
                    4057            ;clr     WRNOT
                    4058            ;nop
DEBUG                                                                                                         PAGE 72

                    4059            ;nop
                    4060            ;nop
                    4061            ;nop
                    4062            ;setb    WRNOT
                    4063            ;setb    EA
                    4064         
110D                4065    INT_TIMER0_END:
                    4066            ;pop     OUTPORTC
110D D0F0           4067            pop     B       
110F D0E0           4068            pop     ACC
1111 D0D0           4069            pop     PSW
1113 32             4070            reti 
                    4071            
                    4072    ;INT_TIMER0:
                    4073    ;        push    ACC
                    4074    ;        mov     A, R7  
                    4075    ;        dec     R7               
                    4076    ;        jnz     INT_TIMER0_END     
                    4077    ;        mov     R7, #20h
                    4078    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    4079    ;        setb    LEDU
                    4080    ;        setb    LEDD
                    4081    ;        jmp     INT_TIMER0_WRITE
                    4082    ;INT_TIMER0_CLEAR:        
                    4083    ;        ;clr     LEDU
                    4084    ;        ;clr     LEDD
                    4085    ;INT_TIMER0_WRITE: 
                    4086    ;        lcall   WRITEPORTS
                    4087    ;INT_TIMER0_END: 
                    4088    ;        setb    LEDU
                    4089    ;        lcall   WRITEPORTS       
                    4090    ;        pop     ACC
                    4091    ;        reti
                    4092            
                    4093            
                    4094    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    4095    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    4096    ; 11.0592MHz/2000 = zdrzanie 1 ms
1114                4097    TIME10MS:
1114 C0D0           4098            push    PSW
1116 C001           4099            push    1 ;R1
1118 C002           4100            push    2 ;R2
                    4101    
                    4102    ;        mov     R1,#063h        ; 2
                    4103    ;                                ; *** 100x
                    4104    ;TIME0:  mov     R2,#0FFh        ; 2 
                    4105    ;TIME1:  djnz    R2,TIME1        ; 256*2   
                    4106    ;        mov     R2,#0FFh        ; 2       
                    4107    ;TIME2:  djnz    R2,TIME2        ; 256*2 
                    4108    ;        mov     R2,#024h        ; 2       
                    4109    ;TIME3:  djnz    R2,TIME3        ; 36*2
                    4110    ;        nop                     ; 1
                    4111    ;        djnz    R1,TIME0        ; 2
                    4112    ;                                ; ***
                    4113    ;        mov     R1,#02Ah        ; 2 
                    4114    ;TIME4:  djnz    R1,TIME4        ; 43*2
                    4115    
                    4116 +1         TIMER2  1
DEBUG                                                                                                         PAGE 73

111A 752D01         4117 +1            mov           T2_C, #1                              
111D C27A           4118 +1                  clr       T2_F                                  
111F D2CA           4119 +1                  setb      TR2                                             
1121                4121    TIME:   ;mov     WDTRST, #01Eh
                    4122            ;mov     WDTRST, #0E1h
1121 30CA03         4123            jnb     TR2, TIMEEND 
1124 307AFA         4124            jnb               T2_F, TIME                                     ;pockame, kym prejd
                                                                               e 50-100 ms. 
1127                4125    TIMEEND:          
1127 D002           4126            pop     2 ;R2
1129 D001           4127            pop     1 ;R1
112B D0D0           4128            pop     PSW
112D 22             4129            ret                     ; koniec
                    4130            
                    4131            
                    4132    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4133    ; STOP
                    4134    ; osetri stlacenie tlacidla STOP
                    4135    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
112E                4136    STOP:
112E C0D0           4137            push    PSW
1130 C0E0           4138            push    ACC
                    4139            
                    4140            
1132 D238           4141            setb    STOPPED
1134 C222           4142            clr     FAST
1136 C223           4143            clr     SLOW
1138 74E1           4144            mov     A, #11100001b
113A 5223           4145            anl     OUTPORTA, A 
113C C025           4146            push    OUTPORTC     ; ulozenie stavu smerovej signalizacie
113E D22F           4147            setb    LEDU
1140 D22E           4148            setb    LEDD
1142 121217         4149            lcall   WRITEPORTS
                    4150            
                    4151            ;lcall   WAITFORTIMER
                    4152 +1         TIMER2  40
1145 752D28         4153 +1            mov           T2_C, #40                              
1148 C27A           4154 +1                  clr       T2_F                                  
114A D2CA           4155 +1                  setb      TR2                                             
114C 12116C         4157    STOPC:  lcall   READPORTS1
114F E528           4158            mov     A, INPORTA
1151 541E           4159            anl     A, #00011110b
1153 60F7           4160            jz      STOPC
1155 307AF4         4161            jnb     T2_F, STOPC 
                    4162                 
                    4163                 
1158 C22F           4164            clr     LEDU        
115A C22E           4165            clr     LEDD     
115C D0E0           4166            pop     ACC         ; obnovenie stavu smerovej signalizacie  
115E 55C0           4167            anl     A, 0C0h
1160 4225           4168            orl     OUTPORTC, A
                    4169            
1162 D223           4170            setb    SLOW
1164 121217         4171            lcall   WRITEPORTS
                    4172            
                    4173            
1167 D0E0           4174            pop    ACC
1169 D0D0           4175            pop    PSW
DEBUG                                                                                                         PAGE 74

116B 22             4176            ret        
                    4177            
                    4178    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4179    ; READPORTS1
                    4180    ; precita nove hodnoty na portoch
                    4181    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
116C                4182    READPORTS1:
116C C0D0           4183            push    PSW
116E C2AF           4184            clr     EA                  ;Treba zakazat prerusenia
                    4185            
                    4186            ;mov     WDTRST, #01Eh
                    4187            ;mov     WDTRST, #0E1h
                    4188            
1170 75A080         4189            mov     p2, #i8255INA       ; citaj data z portu A
1173 75803F         4190            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
1176 C2B7           4191            clr     RDNOT
1178 00             4192            nop
1179 00             4193            nop
117A 00             4194            nop
117B 00             4195            nop
117C 858028         4196            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
117F D2B7           4197            setb    RDNOT
                    4198            
1181 75A081         4199            mov     p2, #i8255INB       ; citaj data z portu B
1184 7580FE         4200            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
1187 C2B7           4201            clr     RDNOT
1189 00             4202            nop
118A 00             4203            nop
118B 00             4204            nop
118C 00             4205            nop
118D 858021         4206            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1190 D2B7           4207            setb    RDNOT
                    4208    
1192 75A082         4209            mov     p2, #i8255INC       ; citaj data z portu C
1195 75803F         4210            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
1198 C2B7           4211            clr     RDNOT
119A 00             4212            nop
119B 00             4213            nop
119C 00             4214            nop
119D 00             4215            nop
119E 858022         4216            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
11A1 D2B7           4217            setb    RDNOT
11A3 00             4218            nop
11A4 00             4219            nop
11A5 00             4220            nop
11A6 00             4221            nop
11A7 00             4222            nop
11A8 00             4223            nop
11A9 00             4224            nop
11AA 00             4225            nop
11AB D2AF           4226            setb    EA                 ;znovu spustime prerusenia .
11AD D0D0           4227            pop     PSW
11AF 22             4228            ret
                    4229    
                    4230    
                    4231    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4232    ; READPORTS
DEBUG                                                                                                         PAGE 75

                    4233    ; precita nove hodnoty na portoch
                    4234    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11B0                4235    READPORTS:
11B0 C0D0           4236            push    PSW
11B2 C0E0           4237            push    ACC
                    4238    
11B4 C2AF           4239            clr     EA                  ;Treba zakazat prerusenia
                    4240            
                    4241            ;mov     WDTRST, #01Eh
                    4242            ;mov     WDTRST, #0E1h
                    4243            
11B6 75A080         4244            mov     p2, #i8255INA       ; citaj data z portu A
11B9 75803F         4245            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
11BC C2B7           4246            clr     RDNOT
11BE 00             4247            nop
11BF 00             4248            nop
11C0 00             4249            nop
11C1 00             4250            nop
11C2 858028         4251            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
11C5 D2B7           4252            setb    RDNOT
                    4253            
11C7 75A081         4254            mov     p2, #i8255INB       ; citaj data z portu B
11CA 7580FE         4255            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
11CD C2B7           4256            clr     RDNOT
11CF 00             4257            nop
11D0 00             4258            nop
11D1 00             4259            nop
11D2 00             4260            nop
11D3 858021         4261            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
11D6 D2B7           4262            setb    RDNOT
                    4263    
11D8 75A082         4264            mov     p2, #i8255INC       ; citaj data z portu C
11DB 75803F         4265            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
11DE C2B7           4266            clr     RDNOT
11E0 00             4267            nop
11E1 00             4268            nop
11E2 00             4269            nop
11E3 00             4270            nop
11E4 858022         4271            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
11E7 D2B7           4272            setb    RDNOT
11E9 00             4273            nop
11EA 00             4274            nop
11EB 00             4275            nop
11EC 00             4276            nop
11ED 00             4277            nop
11EE 00             4278            nop
11EF 00             4279            nop
11F0 00             4280            nop
11F1 D2AF           4281            setb    EA                 ;znovu spustime prerusenia
                    4282            
                    4283            
                    4284            
                    4285            
11F3 300F04         4286            jnb     DPK, READPORTS_C1
11F6 C222           4287            clr     FAST
11F8 D223           4288            setb    SLOW
11FA                4289    READPORTS_C1:         
DEBUG                                                                                                         PAGE 76

11FA 204003         4290            jb      STOPNOT, READPORTS_C
11FD 12112E         4291            lcall   STOP
1200                4292    READPORTS_C:        
1200 E528           4293            mov     A, INPORTA
1202 541E           4294            anl     A, #00011110b
1204 4223           4295            orl     OUTPORTA, A
1206 121217         4296            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
1209 E522           4297            mov     A, INPORTC
120B 543F           4298            anl     A, #00111111b
120D 4225           4299            orl     OUTPORTC, A
120F 121217         4300            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    4301            
1212 D0E0           4302            pop    ACC
1214 D0D0           4303            pop    PSW
1216 22             4304            ret
                    4305            
                    4306    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4307    ; WRITEPORTS
                    4308    ; spravi zalohu vystupnych registrov a posle data von
                    4309    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1217                4310    WRITEPORTS:
1217 C0D0           4311            push    PSW
1219 C2AF           4312            clr     EA                  ;Treba zakazat prerusenia
                    4313            
121B 852380         4314            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
121E 75A0C0         4315            mov     p2, #i8255OUTA
1221 C2B6           4316            clr     WRNOT
1223 00             4317            nop
1224 00             4318            nop
1225 00             4319            nop
1226 00             4320            nop
1227 D2B6           4321            setb    WRNOT
                    4322            
1229 852480         4323            mov     p0, OUTPORTB        ; potom port B
122C 75A0C1         4324            mov     p2, #i8255OUTB
122F C2B6           4325            clr     WRNOT
1231 00             4326            nop
1232 00             4327            nop
1233 00             4328            nop
1234 00             4329            nop
1235 D2B6           4330            setb    WRNOT
                    4331    
1237 852580         4332            mov     p0, OUTPORTC        ; a nakoniec port C
123A 75A0C2         4333            mov     p2, #i8255OUTC
123D C2B6           4334            clr     WRNOT
123F 00             4335            nop
1240 00             4336            nop
1241 00             4337            nop
1242 00             4338            nop
1243 D2B6           4339            setb    WRNOT
1245 00             4340            nop
1246 00             4341            nop
1247 00             4342            nop
1248 00             4343            nop
1249 00             4344            nop
124A 00             4345            nop
124B 00             4346            nop
124C 00             4347            nop
DEBUG                                                                                                         PAGE 77

124D D2AF           4348            setb     EA                  ;Treba zakazat prerusenia
124F D0D0           4349            pop     PSW
1251 22             4350            ret
                    4351    
                    4352    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4353    
                    4354    
                    4355    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4356    ; DISPSTR
                    4357    ; posle na seriovu linku retazec na adrese DPTR
                    4358    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1252                4359    DISPSTR:
1252 C0D0           4360            push    PSW
1254 C0E0           4361            push    ACC
1256 C083           4362            push    DPH
1258 C082           4363            push    DPL
125A                4364    DSPS_LOOP: 
                    4365            ;mov     WDTRST, #01Eh
                    4366            ;mov     WDTRST, #0E1h          
125A E4             4367            clr     A
125B 93             4368            movc    A, @A+DPTR
125C 6006           4369            jz      DSPS_END
                    4370            ;jnb     TI, $ 
                    4371            ;clr     TI
                    4372            ;mov     SBUF, A
                    4373            
125E 12129F         4374            lcall   PRINTCHAR
1261 A3             4375            inc     DPTR
1262 80F6           4376            sjmp    DSPS_LOOP
1264                4377    DSPS_END:
1264 D082           4378            pop     DPL
1266 D083           4379            pop     DPH
1268 D0E0           4380            pop     ACC
126A D0D0           4381            pop     PSW
126C 22             4382            ret
                    4383            
                    4384    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4385    ; DISPSTR - no wdt
                    4386    ; posle na seriovu linku retazec na adrese DPTR
                    4387    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
126D                4388    DISPSTRNOWDT:
126D C0D0           4389            push    PSW
126F C0E0           4390            push    ACC
1271 C083           4391            push    DPH
1273 C082           4392            push    DPL
1275                4393    DSPSNWDT_LOOP:           
1275 E4             4394            clr     A
1276 93             4395            movc    A, @A+DPTR
1277 6006           4396            jz      DSPSNWDT_END
                    4397            ;jnb     TI, $ 
                    4398            ;clr     TI
                    4399            ;mov     SBUF, A
1279 12129F         4400            lcall   PRINTCHAR
127C A3             4401            inc     DPTR
127D 80F6           4402            sjmp    DSPSNWDT_LOOP
127F                4403    DSPSNWDT_END:
127F D082           4404            pop     DPL
1281 D083           4405            pop     DPH
DEBUG                                                                                                         PAGE 78

1283 D0E0           4406            pop     ACC
1285 D0D0           4407            pop     PSW
1287 22             4408            ret
                    4409                                         
                    4410                                         
                =1  4411            $include (procLib.inc)     
                =1  4412    ;*******************************************************************************
                =1  4413    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  4414    ;-------------------------------------------------------------------------------
                =1  4415    ;
                =1  4416    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  4417    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  4418    ;     a nastavi sa priznak <T2_F>
                =1  4419    ; 
                =1  4420    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  4421    ;
                =1  4422    ;                mov             T2_C, #60                               ;3 sekundy
                =1  4423    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  4424    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  4425    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  4426    ;
                =1  4427    ;
                =1  4428    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
1288            =1  4429    INT_TIMER2:
1288 C2CF       =1  4430                        clr     TF2
128A C0E0       =1  4431            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  4432                       
128C E52D       =1  4433            mov     A, T2_C                             ;
128E 6005       =1  4434            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
1290 14         =1  4435                        dec           A                 ; dekrementovanie registra T2_C 
1291 F52D       =1  4436            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  4437                        
1293 8007       =1  4438            sjmp    INT_TIMER2_END          ;
1295            =1  4439    INT_TIMER2_MAIN:
1295 C2CA       =1  4440                        clr           TR2                                         ; zastavime po
                                                                               citadlo
1297 752D00     =1  4441            mov     T2_C, #0                            ; Resetujeme pocitadlo
129A D27A       =1  4442                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
129C            =1  4443    INT_TIMER2_END:     
129C D0E0       =1  4444            pop     ACC                                     
129E 32         =1  4445            reti 
                =1  4446            
                =1  4447            
                =1  4448    ;*******************************************************************************
                =1  4449    ;   Vypis znaku na seriovu linku
                =1  4450    ;-------------------------------------------------------------------------------
                =1  4451    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4452    ;
129F            =1  4453    PRINTCHAR:
                =1  4454        ;jnb     TI, $ 
                =1  4455        ;clr     TI
129F 106302     =1  4456    _1: JBC   TRE, _2
DEBUG                                                                                                         PAGE 79

12A2 80FB       =1  4457        JMP   _1
12A4            =1  4458    _2:  
12A4 F599       =1  4459                    mov     SBUF, A
                =1  4460        ;setb    EA
12A6 22         =1  4461        ret
                =1  4462        
                =1  4463    ;*******************************************************************************
                =1  4464    ;   Nacitanie znaku zo seriovej linky
                =1  4465    ;-------------------------------------------------------------------------------
                =1  4466    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4467    ;    
                =1  4468    ;READCHAR:
                =1  4469    ;               jnb     RI, $
                =1  4470    ;    clr     RI
                =1  4471    ;    mov     A, SBUF
                =1  4472    ;    ret
                =1  4473    
                =1  4474    
                =1  4475    
                =1  4476    ;*******************************************************************************
                =1  4477    ;   Obsluha prerusenia seriovej linky
                =1  4478    ;-------------------------------------------------------------------------------
                =1  4479    ;     Ide o prerusenie seriovej linky. Ak je k dispozicii znak, 
                =1  4480    ;     ulozi ho do buffra.
                =1  4481    ;     V pripade, ze je nacitany znak konca ramca, vynuluje 
                =1  4482    ;     ukazovatel do buffra a nastavi priznak S_RI   
                =1  4483    ;  
12A7            =1  4484    SERIAL_INT:
                =1  4485                    ;clr            EA
12A7 C0D0       =1  4486        push    PSW
12A9 C0E0       =1  4487                    push    ACC
12AB C001       =1  4488                    push    1 ;R1
                =1  4489        
                =1  4490        
12AD 30981E     =1  4491                    jnb             RI, SERIAL_INT_TI                                       ; Ak
                                                                                neslo o recieve interrupt, ideme na tran
                                                                               smit interrupt
12B0 C298       =1  4492                    clr             RI
12B2 E599       =1  4493                    mov             A, SBUF
12B4 B47E08     =1  4494                    cjne    A, #07Eh, SERIAL_INT_RCV
12B7            =1  4495    SERIAL_INT_EOF:         
12B7 754500     =1  4496                    mov             MSG_PTR_REC, #0
12BA D261       =1  4497                    setb    S_RI
12BC 0212CE     =1  4498                    jmp             SERIAL_INT_TI
12BF            =1  4499    SERIAL_INT_RCV:         
12BF 20610C     =1  4500        jb          S_RI, SERIAL_INT_TI                             ; ak sme este stale neznulov
                                                                               ali priznak prijatej spravy, nenacitavame
                                                                                dalsiu
12C2 C0E0       =1  4501                    push    ACC
12C4 7480       =1  4502                    mov             A, #80h
12C6 2545       =1  4503                    add             A, MSG_PTR_REC
12C8 F9         =1  4504                    mov             R1, A
12C9 D0E0       =1  4505                    pop     ACC
12CB F7         =1  4506                    mov             @R1, A
12CC 0545       =1  4507                    inc             MSG_PTR_REC
                =1  4508                    ;jmp            SERIAL_INT_END
12CE            =1  4509    SERIAL_INT_TI:
12CE 309904     =1  4510        jnb    TI, SERIAL_INT_END
DEBUG                                                                                                         PAGE 80

12D1 D263       =1  4511        setb  TRE        ;<------------
12D3 C299       =1  4512                    clr             TI
12D5            =1  4513    SERIAL_INT_END:
                =1  4514    
12D5 D001       =1  4515                    pop     1 ;R1
12D7 D0E0       =1  4516                    pop     ACC
12D9 D0D0       =1  4517        pop     PSW
                =1  4518                    ;setb   EA
12DB 32         =1  4519                    reti
                =1  4520        
                =1  4521                    
                =1  4522        
                =1  4523        
                =1  4524        
                =1  4525                            
                =1  4526                    ; nacitanie a odpoved na spravu
12DC            =1  4527    RCV_MESSAGE:    
12DC C0D0       =1  4528        push    PSW
12DE C0C8       =1  4529        push    T2CON
12E0 C02D       =1  4530        push    T2_C
12E2 C02F       =1  4531        push    T2
                =1  4532        
12E4            =1  4533    RCV_MESSAGE1:
                =1  4534            ;       Prijatie spravy
                =1  4535 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
12E4 752D50     =1  4536 +1            mov           T2_C, #80                              
12E7 C27A       =1  4537 +1                  clr       T2_F                                  
12E9 D2CA       =1  4538 +1                  setb      TR2                                             
12EB            =1  4540    RCV_LOOP:
12EB 207A60     =1  4541                    jb              T2_F, RCV_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
12EE 1211B0     =1  4542                    lcall   READPORTS
12F1 3061F7     =1  4543        jnb         S_RI, RCV_LOOP  
                =1  4544        
                =1  4545        ;Ak ide o busy, keepalive alebo ACK/NACK spravu, ignorujeme.
12F4 7880       =1  4546        mov     R0, #80H
12F6 E6         =1  4547        mov           A, @R0
                =1  4548 +1     cje     A, #000h, RCV_MESSAGE_END
12F7 B40003     =1  4549 +1         cjne    A, #000h, $+6
12FA 02134E     =1  4550 +1         ljmp     RCV_MESSAGE_END
12FD 00         =1  4551 +1         nop
                =1  4553 +1     cje     A, #0FDh, RCV_MESSAGE_END  
12FE B4FD03     =1  4554 +1         cjne    A, #0FDh, $+6
1301 02134E     =1  4555 +1         ljmp     RCV_MESSAGE_END
1304 00         =1  4556 +1         nop
                =1  4558 +1     cje     A, #0FEh, RCV_MESSAGE_END  
1305 B4FE03     =1  4559 +1         cjne    A, #0FEh, $+6
1308 02134E     =1  4560 +1         ljmp     RCV_MESSAGE_END
130B 00         =1  4561 +1         nop
                =1  4563 +1     cje     A, #0FFh, RCV_MESSAGE_END  
130C B4FF03     =1  4564 +1         cjne    A, #0FFh, $+6
130F 02134E     =1  4565 +1         ljmp     RCV_MESSAGE_END
1312 00         =1  4566 +1         nop
DEBUG                                                                                                         PAGE 81

                =1  4568                    
                =1  4569            ;       Vypocet CRC                                             ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
1313 7880       =1  4570                    mov     R0, #80H                                ;       Adresa prveho bajtu 
                                                                               prijatej spravy (Count)
1315 E6         =1  4571                    mov             A, @R0                                  ;
1316 75F002     =1  4572                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
1319 A4         =1  4573                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
131A 04         =1  4574                    inc     A                                               ;       
131B F542       =1  4575                    mov             MSG_LEN, A                              ;
131D AA42       =1  4576                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
131F 7880       =1  4577                    mov     R0, #80H                                ;       R2 = dlzka bloku, 
1321 12147C     =1  4578                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
                                                                                bloku                                   
                                                                                                                        
                                                                                                ;<<<<<<<<<<<<<<<<<<<
1324 B47E01     =1  4579                    cjne    A, #7Eh, RCV_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
1327 04         =1  4580                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
1328            =1  4581    RCV_CONT:       
                =1  4582            ;       Kontrola spravnosti CRC
1328 F5F0       =1  4583                    mov             B, A                                    ; Prave vypocitane C
                                                                               RC zalohujeme do B
132A E542       =1  4584                    mov             A, MSG_LEN                              ; Nacita sa prijate 
                                                                               CRC
132C 4480       =1  4585                    orl             A, #80h                                 ;       80h + MSG_LE
                                                                               N (dlzka spravy) + 1 
132E F8         =1  4586                    mov             R0, A                                   ;                   
                                                                                    
132F E6         =1  4587                    mov             A, @R0                                  ;
1330 B5F009     =1  4588                    cjne    A, B, NACK                              ; Porovnanie CRC. Ak sa nezh
                                                                               oduje, posiela sa NACK
                =1  4589    
                =1  4590            ;       Poslanie ACK
1333            =1  4591    ACK:
1333 9017A9     =1  4592            mov     DPTR, #COM_ACK          ; Posle sa predpripravena sprava ACK 
1336 121252     =1  4593            lcall   DISPSTR                 ; a pokracuje sa spracovanim prijatej spravy        
                                                                                   
1339 021346     =1  4594                    jmp             PROCESS
                =1  4595                    
                =1  4596                    
                =1  4597            ;       Poslanie NACK
133C            =1  4598    NACK:
133C 9017AD     =1  4599        mov     DPTR, #COM_NACK         ; Posle sa predpripravena sprava NACK
133F 121252     =1  4600        lcall   DISPSTR                         ; a skoci sa na zaciatok tejto rutiny pre prijat
                                                                               ie novej spravy
1342 C261       =1  4601                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
1344 809E       =1  4602                    jmp             RCV_MESSAGE1
                =1  4603    
                =1  4604            ;       Priprava odpovede
1346            =1  4605    PROCESS:
                =1  4606                    
1346 C261       =1  4607                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
DEBUG                                                                                                         PAGE 82

                                                                               ak S_RI
                =1  4608                    
                =1  4609    ;               mov             A, #08h
                =1  4610    ;               mov             R0, #0C0h
                =1  4611    ;SLOOP: mov             @R0, A
                =1  4612    ;               inc             R0
                =1  4613    ;               dec             A
                =1  4614    ;               jnz             SLOOP
                =1  4615    ;               mov             @R0, #0h
                =1  4616                    
                =1  4617                    ;mov     R0, #0C0h                  ; Odoslanie odpovede
                =1  4618                    ;lcall  DISPSTRI                            ; z vyrovnavacej pamate urcenej 
                                                                               pre odpoved D:0C0h
                =1  4619                    
                =1  4620        
1348 121359     =1  4621        lcall PREP_MESSAGE
134B 12138E     =1  4622                    lcall   SND_MESSAGE                             ;odoslanie spravy           
                                                                                                                        
                                                                                                                        
                                                                                                           <<<<<<<<<<
                =1  4623                    
                =1  4624                    
134E            =1  4625    RCV_MESSAGE_END:
134E C261       =1  4626        clr           S_RI                              ; Prijata sprava bola tym padom spracova
                                                                               na, mozme vynulovat priznak S_RI
1350 D02F       =1  4627        pop     T2
1352 D02D       =1  4628        pop     T2_C
1354 D0C8       =1  4629        pop     T2CON
1356 D0D0       =1  4630        pop     PSW
1358 22         =1  4631                    ret
                =1  4632    
                =1  4633    
                =1  4634    
                =1  4635    
                =1  4636    ;-------ODPOVED---------------------------------------------------------
                =1  4637    
1359            =1  4638    PREP_MESSAGE:
1359 C0D0       =1  4639                    push    PSW
135B C000       =1  4640        push    0 ;R0
135D C001       =1  4641        push    1 ;R1
135F C005       =1  4642        push    5 ;R5
                =1  4643    
                =1  4644    ;       ;       Priprava odpovede
                =1  4645    ;               mov             A, #08h
                =1  4646    ;               mov             R0, #0C0h
                =1  4647    ;S2LOOP:        mov             @R0, A
                =1  4648    ;               inc             R0
                =1  4649    ;               dec             A
                =1  4650    ;               jnz             S2LOOP
                =1  4651    ;               mov             @R0, #0h
                =1  4652    ;       ;       Priprava odpovede
                =1  4653                    
                =1  4654                    
                =1  4655                    ;Zistenie, o aky typ spravy ide
1361 7544C1     =1  4656                    mov             MSG_PTR_S, #0C1h
1364 78C0       =1  4657                    mov             R0, #0C0h
1366 7600       =1  4658                    mov             @R0, #0
1368 7880       =1  4659                    mov             R0, #80h
DEBUG                                                                                                         PAGE 83

136A E6         =1  4660                    mov     A,  @R0
136B F9         =1  4661                    mov             R1, A 
136C 7881       =1  4662                    mov             R0, #81h
136E 8843       =1  4663                    mov     MSG_PTR_R,  R0
1370            =1  4664    SND_DATA_LOOP:
1370 E6         =1  4665                    mov             A, @R0
                =1  4666 +1                 CLCALLE A, #0, MSG04
1371 B40003     =1  4667 +1         cjne    A, #0, $+6
1374 1213EA     =1  4668 +1         lcall   MSG04
1377 00         =1  4669 +1         nop
                =1  4671 +1                 CLCALLE A, #1, MSG05
1378 B40103     =1  4672 +1         cjne    A, #1, $+6
137B 121401     =1  4673 +1         lcall   MSG05
137E 00         =1  4674 +1         nop
137F 08         =1  4676                    inc             R0
1380 08         =1  4677                    inc             R0
1381 19         =1  4678                    dec             R1
1382 E9         =1  4679                    mov             A, R1
1383 70EB       =1  4680                    jnz             SND_DATA_LOOP
                =1  4681        
1385 D005       =1  4682        pop    5 ;R5
1387 D001       =1  4683        pop    1 ;R1
1389 D000       =1  4684        pop    0 ;R0
138B D0D0       =1  4685        pop    PSW
138D 22         =1  4686        ret
                =1  4687    
138E            =1  4688    SND_MESSAGE:
138E C0D0       =1  4689                    push    PSW
1390 C000       =1  4690        push    0 ;R0
1392 C001       =1  4691        push    1 ;R1
1394 C005       =1  4692        push    5 ;R5    
                =1  4693                    
                =1  4694                    ;       Vypocet CRC                                     ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
1396 78C0       =1  4695                    mov     R0, #0C0H                               ;       Adresa prveho bajtu 
                                                                               spravy (Count)
1398 E6         =1  4696                    mov             A, @R0                                  ;
1399 75F002     =1  4697                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
139C A4         =1  4698                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
139D 04         =1  4699                    inc     A                                               ;       
139E F542       =1  4700                    mov             MSG_LEN, A                              ;
13A0 AA42       =1  4701                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
13A2 78C0       =1  4702                    mov     R0, #0C0H                               ;       R2 = dlzka bloku, 
13A4 12147C     =1  4703                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
                                                                                bloku
13A7 B47E01     =1  4704                    cjne    A, #7Eh, SND_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
13AA 04         =1  4705                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
13AB            =1  4706    SND_CONT:                                                               ;
13AB F6         =1  4707                    mov             @R0, A                                  ; Ulozenie CRC8 do b
                                                                               uffra
                =1  4708                    
                =1  4709                    
                =1  4710                    
13AC 7D05       =1  4711                    mov             R5, #5                                  ;max. 5 pokusov o zn
                                                                               ovuodoslanie spravy
DEBUG                                                                                                         PAGE 84

13AE            =1  4712    SND:            
13AE 78C0       =1  4713                    mov     R0, #0C0h                   ; Odoslanie odpovede
13B0 12144F     =1  4714                    lcall   DISPMSG                         ; z vyrovnavacej pamate urcenej pre 
                                                                               odpoved D:0C0h
13B3 1D         =1  4715                    dec             R5                                              ; a zaznamen
                                                                               ame, ze sme poslali spravu
                =1  4716                    
                =1  4717                    ;clr            S_RI                            ; Prijata sprava bola tym pa
                                                                               dom spracovana, mozme vynulovat priznak S
                                                                               _RI
                =1  4718                    
                =1  4719 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
13B4 752D50     =1  4720 +1            mov           T2_C, #80                              
13B7 C27A       =1  4721 +1                  clr       T2_F                                  
13B9 D2CA       =1  4722 +1                  setb      TR2                                             
13BB            =1  4724    SND_LOOP:
13BB 1211B0     =1  4725        lcall   READPORTS
13BE 207A19     =1  4726                    jb              T2_F, SND_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
13C1 ED         =1  4727                    mov             A, R5
13C2 6016       =1  4728                    jz              SND_MESSAGE_END   ; Ak sme uz spravu preposielali 5. krat, k
                                                                               oncime
13C4 3061F4     =1  4729                    jnb             S_RI, SND_LOOP  
                =1  4730                    
13C7 C261       =1  4731                    clr             S_RI                                    ; Prijata sprava bol
                                                                               a tym padom spracovana, mozme vynulovat p
                                                                               riznak S_RI
                =1  4732    
13C9 7880       =1  4733                    mov             R0, #80h
13CB E6         =1  4734                    mov     A,  @R0
                =1  4735 +1                 cje             A,  #0FEh, SND_MESSAGE_END
13CC B4FE03     =1  4736 +1         cjne    A, #0FEh, $+6
13CF 0213DA     =1  4737 +1         ljmp     SND_MESSAGE_END
13D2 00         =1  4738 +1         nop
                =1  4740 +1                 cje             A,  #0FFh, SND
13D3 B4FF03     =1  4741 +1         cjne    A, #0FFh, $+6
13D6 0213AE     =1  4742 +1         ljmp     SND
13D9 00         =1  4743 +1         nop
                =1  4745    
13DA            =1  4746    SND_MESSAGE_END:
13DA 7544C1     =1  4747        mov           MSG_PTR_S, #0C1h
13DD 78C0       =1  4748        mov     R0, #0C0H                    
13DF 7600       =1  4749        mov     @R0, #0h 
                =1  4750    
13E1 D005       =1  4751        pop     5 ;R5
13E3 D001       =1  4752        pop     1 ;R1
13E5 D000       =1  4753        pop     0 ;R0
13E7 D0D0       =1  4754        pop     PSW
13E9 22         =1  4755                    ret
                =1  4756    
                =1  4757    
                =1  4758    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4759    ; Sprava #4 - odpoved na spravu #0
DEBUG                                                                                                         PAGE 85

                =1  4760    ; 
                =1  4761    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
13EA            =1  4762    MSG04:
13EA C000       =1  4763                    push    0 ;R0
13EC C0E0       =1  4764                    push    ACC
13EE A844       =1  4765                    mov             R0, MSG_PTR_S
13F0 7604       =1  4766                    mov             @R0, #4h
13F2 08         =1  4767                    inc             R0
13F3 7600       =1  4768                    mov             @R0, #00000000b
                =1  4769                    
13F5 78C0       =1  4770                    mov             R0, #0C0h
13F7 06         =1  4771                    inc             @R0
                =1  4772                    
13F8 0544       =1  4773                    inc             MSG_PTR_S
13FA 0544       =1  4774                    inc             MSG_PTR_S
                =1  4775                    
13FC D0E0       =1  4776                    pop     ACC
13FE D000       =1  4777                    pop     0 ;R0
1400 22         =1  4778                    ret
                =1  4779            
                =1  4780    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4781    ; Sprava #5 - odpoved na spravu #1
                =1  4782    ; 
                =1  4783    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
1401            =1  4784    MSG05:
1401 C000       =1  4785                    push    0 ;R0
1403 C0E0       =1  4786                    push    ACC
1405 C0F0       =1  4787        push    B
                =1  4788        
1407 A844       =1  4789                    mov             R0, MSG_PTR_S
1409 7605       =1  4790                    mov             @R0, #5h
140B 08         =1  4791                    inc             R0
                =1  4792        
140C E546       =1  4793        mov   A, POSCHODIE                  ; poschodie, na ktorom sa nachadzame
140E 4547       =1  4794        orl   A, PORUCHA                    ; posledna rozpoznana porucha
                =1  4795        
1410            =1  4796    MSG01_DP:
1410 300D02     =1  4797        jnb   DP, MSG01_DPZK
1413 4408       =1  4798        orl   A, #08h
1415            =1  4799    MSG01_DPZK:
1415 300E02     =1  4800        jnb   DPZK, MSG01_DPK
1418 4410       =1  4801        orl   A, #10h
141A            =1  4802    MSG01_DPK:     
141A 300F02     =1  4803        jnb   DPK, MSG01_CONT
141D 4418       =1  4804        orl   A, #18h
141F            =1  4805    MSG01_CONT:
                =1  4806            
141F F6         =1  4807                    mov             @R0, A
1420 754700     =1  4808        mov   PORUCHA, #0 ;porucha 000 - bez poruchy (vynulujem poruchy)
                =1  4809                    
1423 78C0       =1  4810                    mov             R0, #0C0h
1425 06         =1  4811                    inc             @R0
                =1  4812                    
1426 0544       =1  4813                    inc             MSG_PTR_S
1428 0544       =1  4814                    inc             MSG_PTR_S
                =1  4815                    
142A D0F0       =1  4816        pop     B
142C D0E0       =1  4817                    pop     ACC
DEBUG                                                                                                         PAGE 86

142E D000       =1  4818                    pop     0 ;R0
1430 22         =1  4819                    ret
                =1  4820    
                =1  4821    
                =1  4822    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4823    ; Sprava #6 - porucha KTP
                =1  4824    ; 
                =1  4825    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
1431            =1  4826    MSG06:
1431 C000       =1  4827                    push    0 ;R0
1433 C0E0       =1  4828                    push    ACC
1435 C0F0       =1  4829        push    B
                =1  4830        
1437 A844       =1  4831                    mov             R0, MSG_PTR_S
1439 7606       =1  4832                    mov             @R0, #6h
143B 08         =1  4833                    inc             R0
                =1  4834        
143C E53C       =1  4835        mov   A, G                          ; Aktualny priznak G
143E 543F       =1  4836        anl   A, #3Fh                       ; Horne dva bity musia byt vzdy 0
                =1  4837        
1440 F6         =1  4838                    mov             @R0, A
                =1  4839                    
1441 78C0       =1  4840                    mov             R0, #0C0h
1443 06         =1  4841                    inc             @R0
                =1  4842                    
1444 0544       =1  4843                    inc             MSG_PTR_S
1446 0544       =1  4844                    inc             MSG_PTR_S
                =1  4845                    
1448 D0F0       =1  4846        pop     B
144A D0E0       =1  4847                    pop     ACC
144C D000       =1  4848                    pop     0 ;R0
144E 22         =1  4849                    ret
                =1  4850    
                =1  4851    
                =1  4852    
                =1  4853    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4854    ; DISPMSG
                =1  4855    ; posle na seriovu linku retazec z buff (ROM, nepriame adresovanie)
                =1  4856    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
144F            =1  4857    DISPMSG:
144F C0D0       =1  4858        push    PSW
1451 C0E0       =1  4859        push    ACC
1453 C000       =1  4860                    push    0; R0
1455 C001       =1  4861                    push    1; R1
                =1  4862                    
1457 79C0       =1  4863                    mov             R1, #0C0h
1459 E7         =1  4864                    mov             A, @R1
145A 75F002     =1  4865                    mov             B, #2
145D A4         =1  4866                    mul             AB
145E 04         =1  4867                    inc             A
145F 04         =1  4868                    inc             A
1460 F9         =1  4869                    mov             R1, A
1461 78C0       =1  4870        mov   R0, #0C0h
                =1  4871                    
1463            =1  4872    DISPMSG_LOOP:           
1463 E9         =1  4873                    mov     A, R1
1464 6008       =1  4874        jz      DISPMSG_END
1466 E6         =1  4875                    mov     A, @R0
DEBUG                                                                                                         PAGE 87

                =1  4876                    ;jnb     TI, $
                =1  4877                    ;clr     TI
                =1  4878        ;    mov     SBUF, A
1467 12129F     =1  4879        lcall   PRINTCHAR
146A 08         =1  4880        inc     R0
146B 19         =1  4881                    dec               R1
146C 80F5       =1  4882        sjmp    DISPMSG_LOOP
146E            =1  4883    DISPMSG_END:
146E 747E       =1  4884                    mov     A, #07Eh                ; odoslanie kridlovej znacky
                =1  4885                    ;jnb     TI, $
                =1  4886                    ;clr     TI
                =1  4887        ;    mov     SBUF, A
1470 12129F     =1  4888                    lcall   PRINTCHAR
                =1  4889        
                =1  4890        
1473 D001       =1  4891                    pop     1; R1
1475 D000       =1  4892                    pop     0; R0
1477 D0E0       =1  4893        pop     ACC
1479 D0D0       =1  4894        pop     PSW
147B 22         =1  4895        ret
                =1  4896    
                =1  4897    
                =1  4898    ;****************************************************************************
                =1  4899    ;
                =1  4900    ;  Description:
                =1  4901    ;       Calculates Value In Acc Into The Running CRC In 'B', Using The Table
                =1  4902    ;       Method.  (Faster But Larger)
                =1  4903    ;
                =1  4904    ;  Entry Requirements:
                =1  4905    ;       Acc Has Value To Add To CRC
                =1  4906    ;       'B' Contains Running CRC Value
                =1  4907    ;
                =1  4908    ;  On Exit:
                =1  4909    ;       'B' Has Updated CRC Value
                =1  4910    ;
                =1  4911    ;  Affected:
                =1  4912    ;       PSW.CY, B
                =1  4913    ;
                =1  4914    ;  Stack:
                =1  4915    ;       3 Bytes, Not Including Called Routines
                =1  4916    ;
                =1  4917    ;  Comments:
                =1  4918    ;       None
                =1  4919    
                =1  4920    
                =1  4921    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4922    ; CALC_CRCX
                =1  4923    ; Vypocita CRC retazca s adresou v R0 a s dlzkou v R2
                =1  4924    ; Vysledok vrati do A
                =1  4925    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
147C            =1  4926    CALC_CRCX:
147C C0D0       =1  4927        push    PSW
147E C0F0       =1  4928                    push    B
                =1  4929                    ;mov            R0, A
                =1  4930                    
1480 75F000     =1  4931                    mov       B, #00h;
1483            =1  4932    CRCX_LOOP:      
1483 BA0003     =1  4933                    cjne      R2, #0h, CRCX_CONT
DEBUG                                                                                                         PAGE 88

1486 021492     =1  4934                    jmp               CRCX_END
1489            =1  4935    CRCX_CONT:              
1489 E4         =1  4936        clr     A
148A E6         =1  4937        mov         A, @R0  
148B 121499     =1  4938        lcall         CRC8_ADD_TABLE;
148E 08         =1  4939        inc     R0
148F 1A         =1  4940                    dec               R2
1490 80F1       =1  4941                    jmp               CRCX_LOOP
1492            =1  4942    CRCX_END:
1492 E5F0       =1  4943                    mov               A, B
                =1  4944        
1494 D0F0       =1  4945                    pop     B
1496 D0D0       =1  4946        pop     PSW
1498 22         =1  4947        ret
                =1  4948            
                =1  4949    
1499            =1  4950    CRC8_ADD_TABLE:  
1499 C083       =1  4951                    push    dph                     ; Save DPH
149B C082       =1  4952                    push    dpl                     ; Save DPL
149D C0E0       =1  4953                    push    acc                     ; Save Acc
                =1  4954    ;
149F 9014AE     =1  4955                    mov     dptr, #CRC8_DATA         ; Point To Table
14A2 65F0       =1  4956                    xrl     a,b                     ; XOR In CRC
14A4 93         =1  4957                    movc    a,@a+dptr               ; Get New CRC Byte
14A5 F5F0       =1  4958                    mov     b,a                     ; Store Back
                =1  4959    ;
14A7 D0E0       =1  4960                    pop     acc                     ; Recover Acc
14A9 D082       =1  4961                    pop     dpl                     ; Recover DPL
14AB D083       =1  4962                    pop     dph                     ; Recover DPH
14AD 22         =1  4963                    ret                             ; Return To Caller
                =1  4964                    
14AE 005EBCE2   =1  4965    CRC8_DATA:      db      000h, 05eh, 0bch, 0e2h, 061h, 03fh, 0ddh, 083h
14B2 613FDD83   
14B6 C29C7E20   =1  4966                    db      0c2h, 09ch, 07eh, 020h, 0a3h, 0fdh, 01fh, 041h
14BA A3FD1F41   
14BE 9DC3217F   =1  4967                    db      09dh, 0c3h, 021h, 07fh, 0fch, 0a2h, 040h, 01eh
14C2 FCA2401E   
14C6 5F01E3BD   =1  4968                    db      05fh, 001h, 0e3h, 0bdh, 03eh, 060h, 082h, 0dch
14CA 3E6082DC   
14CE 237D9FC1   =1  4969                    db      023h, 07dh, 09fh, 0c1h, 042h, 01ch, 0feh, 0a0h
14D2 421CFEA0   
14D6 E1BF5D03   =1  4970                    db      0e1h, 0bfh, 05dh, 003h, 080h, 0deh, 03ch, 062h
14DA 80DE3C62   
14DE BEE0025C   =1  4971                    db      0beh, 0e0h, 002h, 05ch, 0dfh, 081h, 063h, 03dh
14E2 DF81633D   
14E6 7C22C09E   =1  4972                    db      07ch, 022h, 0c0h, 09eh, 01dh, 043h, 0a1h, 0ffh
14EA 1D43A1FF   
14EE 4618FAA4   =1  4973                    db      046h, 018h, 0fah, 0a4h, 027h, 079h, 09bh, 0c5h
14F2 27799BC5   
14F6 84DA3866   =1  4974                    db      084h, 0dah, 038h, 066h, 0e5h, 0bbh, 059h, 007h
14FA E5BB5907   
14FE DB856739   =1  4975                    db      0dbh, 085h, 067h, 039h, 0bah, 0e4h, 006h, 058h
1502 BAE40658   
1506 1947A5FB   =1  4976                    db      019h, 047h, 0a5h, 0fbh, 078h, 026h, 0c4h, 09ah
150A 7826C49A   
150E 653BD987   =1  4977                    db      065h, 03bh, 0d9h, 087h, 004h, 05ah, 0b8h, 0e6h
1512 045AB8E6   
1516 A7F91B45   =1  4978                    db      0a7h, 0f9h, 01bh, 045h, 0c6h, 098h, 07ah, 024h
DEBUG                                                                                                         PAGE 89

151A C6987A24   
151E F8A6441A   =1  4979                    db      0f8h, 0a6h, 044h, 01ah, 099h, 0c7h, 025h, 07bh
1522 99C7257B   
1526 3A6486D8   =1  4980                    db      03ah, 064h, 086h, 0d8h, 05bh, 005h, 0e7h, 0b9h
152A 5B05E7B9   
152E 8CD2306E   =1  4981                    db      08ch, 0d2h, 030h, 06eh, 0edh, 0b3h, 051h, 00fh
1532 EDB3510F   
1536 4E10F2AC   =1  4982                    db      04eh, 010h, 0f2h, 0ach, 02fh, 071h, 093h, 0cdh
153A 2F7193CD   
153E 114FADF3   =1  4983                    db      011h, 04fh, 0adh, 0f3h, 070h, 02eh, 0cch, 092h
1542 702ECC92   
1546 D38D6F31   =1  4984                    db      0d3h, 08dh, 06fh, 031h, 0b2h, 0ech, 00eh, 050h
154A B2EC0E50   
154E AFF1134D   =1  4985                    db      0afh, 0f1h, 013h, 04dh, 0ceh, 090h, 072h, 02ch
1552 CE90722C   
1556 6D33D18F   =1  4986                    db      06dh, 033h, 0d1h, 08fh, 00ch, 052h, 0b0h, 0eeh
155A 0C52B0EE   
155E 326C8ED0   =1  4987                    db      032h, 06ch, 08eh, 0d0h, 053h, 00dh, 0efh, 0b1h
1562 530DEFB1   
1566 F0AE4C12   =1  4988                    db      0f0h, 0aeh, 04ch, 012h, 091h, 0cfh, 02dh, 073h
156A 91CF2D73   
156E CA947628   =1  4989                    db      0cah, 094h, 076h, 028h, 0abh, 0f5h, 017h, 049h
1572 ABF51749   
1576 0856B4EA   =1  4990                    db      008h, 056h, 0b4h, 0eah, 069h, 037h, 0d5h, 08bh
157A 6937D58B   
157E 5709EBB5   =1  4991                    db      057h, 009h, 0ebh, 0b5h, 036h, 068h, 08ah, 0d4h
1582 36688AD4   
1586 95CB2977   =1  4992                    db      095h, 0cbh, 029h, 077h, 0f4h, 0aah, 048h, 016h
158A F4AA4816   
158E E9B7550B   =1  4993                    db      0e9h, 0b7h, 055h, 00bh, 088h, 0d6h, 034h, 06ah
1592 88D6346A   
1596 2B7597C9   =1  4994                    db      02bh, 075h, 097h, 0c9h, 04ah, 014h, 0f6h, 0a8h
159A 4A14F6A8   
159E 742AC896   =1  4995                    db      074h, 02ah, 0c8h, 096h, 015h, 04bh, 0a9h, 0f7h
15A2 154BA9F7   
15A6 B6E80A54   =1  4996                    db      0b6h, 0e8h, 00ah, 054h, 0d7h, 089h, 06bh, 035h                
15AA D7896B35   
                =1  4997                    
                    4998    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4999    
15AE 0D0A5269       5000    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
15B2 61646961   
15B6 63692073   
15BA 79737465   
15BE 6D206A65   
15C2 20696E69   
15C6 6369616C   
15CA 697A6F76   
15CE 616E792E   
15D2 0D0A00     
15D5 0D0A5A61       5001    STR_WDT:          db  0dh, 0ah, 'Zapinam WDT...', 0dh, 0ah, 00h
15D9 70696E61   
15DD 6D205744   
15E1 542E2E2E   
15E5 0D0A00     
15E8 0D0A4361       5002    STR_RESET:          db  0dh, 0ah, 'Cakam 10 sekund...', 0dh, 0ah, 00h
15EC 6B616D20   
15F0 31302073   
DEBUG                                                                                                         PAGE 90

15F4 656B756E   
15F8 642E2E2E   
15FC 0D0A00     
15FF 52696164       5003    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
1603 69616369   
1607 20737973   
160B 74656D20   
160F 6A652072   
1613 65696E69   
1617 6369616C   
161B 697A6F76   
161F 616E7920   
1623 706F2073   
1627 746C6163   
162B 656E6920   
162F 746C6163   
1633 69646C61   
1637 2053544F   
163B 502E0D0A   
163F 00         
1640 4B616C69       5004    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
1644 62726163   
1648 69612076   
164C 79746168   
1650 75206A65   
1654 20756B6F   
1658 6E63656E   
165C 612E0D0A   
1660 00         
1661 43687962       5005    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
1665 61212056   
1669 79706164   
166D 6C612073   
1671 706F6D61   
1675 6C6F7661   
1679 63696120   
167D 636C6F6E   
1681 6B61210D   
1685 0A00       
1687 43687962       5006    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
168B 61212056   
168F 79706164   
1693 6C692064   
1697 76652073   
169B 706F6D61   
169F 6C6F7661   
16A3 63696520   
16A7 636C6F6E   
16AB 6B79210D   
16AF 0A00       
16B1 43687962       5007    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
16B5 61212056   
16B9 79706164   
16BD 6C61207A   
16C1 61737461   
16C5 766F7661   
16C9 63696120   
DEBUG                                                                                                         PAGE 91

16CD 636C6F6E   
16D1 6B61210D   
16D5 0A00       
16D7 43687962       5008    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
16DB 6121204E   
16DF 656F6361   
16E3 6B617661   
16E7 6E65206E   
16EB 61636974   
16EF 616E6965   
16F3 20686F72   
16F7 6E656A20   
16FB 73706F6D   
16FF 616C6F76   
1703 6163656A   
1707 20636C6F   
170B 6E6B7921   
170F 0D0A00     
1712 43687962       5009    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
1716 6121204E   
171A 656F6361   
171E 6B617661   
1722 6E65206E   
1726 61636974   
172A 616E6965   
172E 20646F6C   
1732 6E656A20   
1736 73706F6D   
173A 616C6F76   
173E 6163656A   
1742 20636C6F   
1746 6E6B7921   
174A 0D0A00     
174D 43687962       5010    STR_ERR_FLOOR:     db  'Chyba! Neocakavane pohnutie kabyny z poschodia!', 0dh, 0ah, 00h
1751 6121204E   
1755 656F6361   
1759 6B617661   
175D 6E652070   
1761 6F686E75   
1765 74696520   
1769 6B616279   
176D 6E79207A   
1771 20706F73   
1775 63686F64   
1779 6961210D   
177D 0A00       
177F 53707573       5011    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
1783 74616D20   
1787 4B54502E   
178B 2E2E0D0A   
178F 00         
1790 446F736C       5012    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
1794 6F206B20   
1798 7A6D656E   
179C 65204B54   
17A0 50210D0A   
DEBUG                                                                                                         PAGE 92

17A4 00         
                    5013    
                    5014    ;COM_KEEPALIVE:    db  000h, 00h, 7Eh, 00h
17A5 FD897E00       5015    COM_BUSY:                     db  0FDh, 89h, 7Eh, 00h
17A9 FE6B7E00       5016    COM_ACK:                      db  0FEh, 6Bh, 7Eh, 00h
17AD FF357E00       5017    COM_NACK:                     db  0FFh, 35h, 7Eh, 00h
                    5018    
                    5019    
----                5020            DSEG
0050                5021            org     50h            ;Pozor!
0050                5022    STACK:  DS      10h
                    5023    
                    5024    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 93

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
ACK. . . . . . . . . . . . . . .  C ADDR  1333H  NOT USED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALC_CRCX. . . . . . . . . . . .  C ADDR  147CH  
CALIB. . . . . . . . . . . . . .  C ADDR  00D3H  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00ECH  
CALIBEND2. . . . . . . . . . . .  C ADDR  00F7H  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00E4H  
CFCERR . . . . . . . . . . . . .  C ADDR  10B9H  
COM_ACK. . . . . . . . . . . . .  C ADDR  17A9H  
COM_BUSY . . . . . . . . . . . .  C ADDR  17A5H  
COM_NACK . . . . . . . . . . . .  C ADDR  17ADH  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CRC8_ADD_TABLE . . . . . . . . .  C ADDR  1499H  
CRC8_DATA. . . . . . . . . . . .  C ADDR  14AEH  
CRCX_CONT. . . . . . . . . . . .  C ADDR  1489H  
CRCX_END . . . . . . . . . . . .  C ADDR  1492H  
CRCX_LOOP. . . . . . . . . . . .  C ADDR  1483H  
DEBUG                                                                                                         PAGE 94

CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  08C2H  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0CE2H  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0FAEH  
DISPMSG. . . . . . . . . . . . .  C ADDR  144FH  
DISPMSG_END. . . . . . . . . . .  C ADDR  146EH  
DISPMSG_LOOP . . . . . . . . . .  C ADDR  1463H  
DISPSTR. . . . . . . . . . . . .  C ADDR  1252H  
DISPSTRNOWDT . . . . . . . . . .  C ADDR  126DH  NOT USED  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  0787H  
DOWN2ERR . . . . . . . . . . . .  C ADDR  07E8H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  07F7H  
DOWN2_C. . . . . . . . . . . . .  C ADDR  07B9H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  089BH  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  08B5H  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  0811H  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  083BH  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  086AH  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  087AH  
DOWN3. . . . . . . . . . . . . .  C ADDR  0B80H  
DOWN3A . . . . . . . . . . . . .  C ADDR  0BB2H  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0CECH  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0D06H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0BF8H  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0C22H  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0C65H  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0D38H  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0D52H  
DOWN4. . . . . . . . . . . . . .  C ADDR  0E54H  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0E82H  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0FB8H  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0FD2H  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0EC8H  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0EEEH  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0F31H  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  1004H  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  101EH  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPH. . . . . . . . . . . . . . .  D ADDR  0083H  PREDEFINED  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPL. . . . . . . . . . . . . . .  D ADDR  0082H  PREDEFINED  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPSNWDT_END . . . . . . . . . .  C ADDR  127FH  
DSPSNWDT_LOOP. . . . . . . . . .  C ADDR  1275H  
DSPS_END . . . . . . . . . . . .  C ADDR  1264H  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  125AH  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  0266H  
ENDD1. . . . . . . . . . . . . .  C ADDR  02D2H  
ENDD10 . . . . . . . . . . . . .  C ADDR  0A85H  
ENDD11 . . . . . . . . . . . . .  C ADDR  0B08H  
ENDD12 . . . . . . . . . . . . .  C ADDR  0BDDH  
DEBUG                                                                                                         PAGE 95

ENDD13 . . . . . . . . . . . . .  C ADDR  0C4DH  
ENDD14 . . . . . . . . . . . . .  C ADDR  0D31H  
ENDD15 . . . . . . . . . . . . .  C ADDR  0D7DH  
ENDD16 . . . . . . . . . . . . .  C ADDR  0EADH  
ENDD17 . . . . . . . . . . . . .  C ADDR  0F19H  
ENDD18 . . . . . . . . . . . . .  C ADDR  0FFDH  
ENDD19 . . . . . . . . . . . . .  C ADDR  1049H  
ENDD2. . . . . . . . . . . . . .  C ADDR  03BDH  
ENDD3. . . . . . . . . . . . . .  C ADDR  0409H  
ENDD4. . . . . . . . . . . . . .  C ADDR  05CEH  
ENDD5. . . . . . . . . . . . . .  C ADDR  063EH  
ENDD6. . . . . . . . . . . . . .  C ADDR  0729H  
ENDD7. . . . . . . . . . . . . .  C ADDR  0775H  
ENDD8. . . . . . . . . . . . . .  C ADDR  07E4H  
ENDD9. . . . . . . . . . . . . .  C ADDR  0866H  
ENDPROG. . . . . . . . . . . . .  C ADDR  10D0H  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR . . . . . . . . . . . .  C ADDR  109FH  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERRSIG . . . . . . . . . . . . .  D ADDR  0041H  NOT USED  
ERRSKRD_C. . . . . . . . . . . .  D ADDR  0040H  NOT USED  
ERRSKRH_C. . . . . . . . . . . .  D ADDR  003FH  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  105BH  
ERR_SKRH . . . . . . . . . . . .  C ADDR  107DH  
ES . . . . . . . . . . . . . . .  B ADDR  00ACH  PREDEFINED  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
F1C. . . . . . . . . . . . . . .  C ADDR  01C8H  NOT USED  
F1OK . . . . . . . . . . . . . .  C ADDR  01F3H  
F1S. . . . . . . . . . . . . . .  C ADDR  0165H  
F1_KEEPALIVE_CONT. . . . . . . .  C ADDR  01A5H  
F2 . . . . . . . . . . . . . . .  C ADDR  053DH  
F2DOWN . . . . . . . . . . . . .  C ADDR  055DH  
F2OK . . . . . . . . . . . . . .  C ADDR  04B5H  
F2S. . . . . . . . . . . . . . .  C ADDR  0454H  
F2SW . . . . . . . . . . . . . .  C ADDR  04FBH  
F2UP . . . . . . . . . . . . . .  C ADDR  0549H  
DEBUG                                                                                                         PAGE 96

F3 . . . . . . . . . . . . . . .  C ADDR  09F4H  
F3DOWN . . . . . . . . . . . . .  C ADDR  0A14H  
F3OK . . . . . . . . . . . . . .  C ADDR  096CH  
F3S. . . . . . . . . . . . . . .  C ADDR  090BH  
F3SW . . . . . . . . . . . . . .  C ADDR  09B2H  
F3UP . . . . . . . . . . . . . .  C ADDR  0A00H  
F4OK . . . . . . . . . . . . . .  C ADDR  0E3AH  
F4S. . . . . . . . . . . . . . .  C ADDR  0DC8H  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  012AH  
FLOOR2 . . . . . . . . . . . . .  C ADDR  041BH  
FLOOR3 . . . . . . . . . . . . .  C ADDR  08D2H  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0D8FH  
FLOORTIME. . . . . . . . . . . .  B ADDR  0064H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  10F1H  
INT_TIMER0_END . . . . . . . . .  C ADDR  110DH  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  10FFH  
INT_TIMER2 . . . . . . . . . . .  C ADDR  1288H  
INT_TIMER2_END . . . . . . . . .  C ADDR  129CH  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  1295H  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  010CH  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
MSG01_CONT . . . . . . . . . . .  C ADDR  141FH  
MSG01_DP . . . . . . . . . . . .  C ADDR  1410H  NOT USED  
MSG01_DPK. . . . . . . . . . . .  C ADDR  141AH  
MSG01_DPZK . . . . . . . . . . .  C ADDR  1415H  
MSG04. . . . . . . . . . . . . .  C ADDR  13EAH  
MSG05. . . . . . . . . . . . . .  C ADDR  1401H  
MSG06. . . . . . . . . . . . . .  C ADDR  1431H  
MSG_LEN. . . . . . . . . . . . .  D ADDR  0042H  
MSG_PTR_R. . . . . . . . . . . .  D ADDR  0043H  
MSG_PTR_REC. . . . . . . . . . .  D ADDR  0045H  
DEBUG                                                                                                         PAGE 97

MSG_PTR_S. . . . . . . . . . . .  D ADDR  0044H  
NACK . . . . . . . . . . . . . .  C ADDR  133CH  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  NOT USED  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  NOT USED  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
PORUCHA. . . . . . . . . . . . .  D ADDR  0047H  
POSCHODIE. . . . . . . . . . . .  D ADDR  0046H  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
PREP_MESSAGE . . . . . . . . . .  C ADDR  1359H  
PRINTCHAR. . . . . . . . . . . .  C ADDR  129FH  
PROCESS. . . . . . . . . . . . .  C ADDR  1346H  
PSW. . . . . . . . . . . . . . .  D ADDR  00D0H  PREDEFINED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RCV_CONT . . . . . . . . . . . .  C ADDR  1328H  
RCV_LOOP . . . . . . . . . . . .  C ADDR  12EBH  
RCV_MESSAGE. . . . . . . . . . .  C ADDR  12DCH  
RCV_MESSAGE1 . . . . . . . . . .  C ADDR  12E4H  
RCV_MESSAGE_END. . . . . . . . .  C ADDR  134EH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READPORTS. . . . . . . . . . . .  C ADDR  11B0H  
READPORTS1 . . . . . . . . . . .  C ADDR  116CH  
READPORTS_C. . . . . . . . . . .  C ADDR  1200H  
READPORTS_C1 . . . . . . . . . .  C ADDR  11FAH  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
RI . . . . . . . . . . . . . . .  B ADDR  0098H  PREDEFINED  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SERIAL_INT . . . . . . . . . . .  C ADDR  12A7H  
SERIAL_INT_END . . . . . . . . .  C ADDR  12D5H  
DEBUG                                                                                                         PAGE 98

SERIAL_INT_EOF . . . . . . . . .  C ADDR  12B7H  NOT USED  
SERIAL_INT_RCV . . . . . . . . .  C ADDR  12BFH  
SERIAL_INT_TI. . . . . . . . . .  C ADDR  12CEH  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SND. . . . . . . . . . . . . . .  C ADDR  13AEH  
SND_CONT . . . . . . . . . . . .  C ADDR  13ABH  
SND_DATA_LOOP. . . . . . . . . .  C ADDR  1370H  
SND_LOOP . . . . . . . . . . . .  C ADDR  13BBH  
SND_MESSAGE. . . . . . . . . . .  C ADDR  138EH  
SND_MESSAGE_END. . . . . . . . .  C ADDR  13DAH  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0050H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  112EH  
STOPC. . . . . . . . . . . . . .  C ADDR  114CH  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  1640H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  177FH  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  1661H  NOT USED  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  1687H  NOT USED  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  1790H  
STR_ERR_FLOOR. . . . . . . . . .  C ADDR  174DH  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  1712H  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  16D7H  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  16B1H  NOT USED  
STR_INIT . . . . . . . . . . . .  C ADDR  15AEH  
STR_RESET. . . . . . . . . . . .  C ADDR  15E8H  NOT USED  
STR_STOP . . . . . . . . . . . .  C ADDR  15FFH  NOT USED  
STR_WDT. . . . . . . . . . . . .  C ADDR  15D5H  NOT USED  
S_RI . . . . . . . . . . . . . .  B ADDR  0061H  
T0_C . . . . . . . . . . . . . .  D ADDR  002EH  
T0_F . . . . . . . . . . . . . .  B ADDR  0060H  NOT USED  
T2 . . . . . . . . . . . . . . .  D ADDR  002FH  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
T2MOD. . . . . . . . . . . . . .  D ADDR  00C9H  NOT USED  
T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  007AH  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME . . . . . . . . . . . . . .  C ADDR  1121H  
TIME10MS . . . . . . . . . . . .  C ADDR  1114H  
TIMEEND. . . . . . . . . . . . .  C ADDR  1127H  
TIMER0CONST. . . . . . . . . . .    NUMB  0014H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
DEBUG                                                                                                         PAGE 99

TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
TRE. . . . . . . . . . . . . . .  B ADDR  0063H  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  0362H  
U2_MB2C. . . . . . . . . . . . .  C ADDR  06CEH  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0B70H  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  020DH  
UP1A . . . . . . . . . . . . . .  C ADDR  023BH  
UP1_MB1. . . . . . . . . . . . .  C ADDR  036CH  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  0392H  
UP1_MB2. . . . . . . . . . . . .  C ADDR  0281H  
UP1_MB2A . . . . . . . . . . . .  C ADDR  02A7H  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  02EAH  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  03C4H  
UP1_STOP_C . . . . . . . . . . .  C ADDR  03DEH  
UP2. . . . . . . . . . . . . . .  C ADDR  0571H  
UP2A . . . . . . . . . . . . . .  C ADDR  05A3H  
UP2_MB1. . . . . . . . . . . . .  C ADDR  06D8H  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  06FEH  
UP2_MB2. . . . . . . . . . . . .  C ADDR  05E9H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  0613H  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  0656H  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  0730H  
UP2_STOP_C . . . . . . . . . . .  C ADDR  074AH  
UP3. . . . . . . . . . . . . . .  C ADDR  0A28H  
UP3A . . . . . . . . . . . . . .  C ADDR  0A5AH  
UP3ERR . . . . . . . . . . . . .  C ADDR  0A89H  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0A99H  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0B3DH  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0B63H  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0AB3H  
UP3_MB2A . . . . . . . . . . . .  C ADDR  0ADDH  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0B0CH  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0B1CH  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WDTRST . . . . . . . . . . . . .  D ADDR  00A6H  NOT USED  
WRITEPORTS . . . . . . . . . . .  C ADDR  1217H  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
_1 . . . . . . . . . . . . . . .  C ADDR  129FH  
_2 . . . . . . . . . . . . . . .  C ADDR  12A4H  
