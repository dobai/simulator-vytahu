DEBUG                                                                                                         PAGE 1

                       1    ; TODO: 
                       2    ; OK - Dorob nulovanie volieb v sachte 
                       3    ; Dorob 3UP a 2 DOWN (tam kde stojis vzdy)
                       4    ; Asi by bolo dobre premenovat PI1, PO1 a PI4 PO4 na alternativy s koncovkami U a D
                       5    ; Poriadne otestuj !!! 
                       6    ; Umozni stlacat tlacidla aj ked bezi delay
                       7    
                       8    ;Prerusenia pojdu, ale treba dat sakra pozor na zalohovanie veci!!!
                       9    
                      10    ;uvision debug: 
                      11    ;MODE COM5 4800, 0, 8, 1
                      12    ;assign COM5 < SIN > SOUT
                      13    ;
                      14    ;X:000000H
                      15    
                      16    
                      17    $MOD51
                      18    $DEBUG
                      19    
                =1    20    $include (lift.inc)
                =1    21    
                =1    22    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                =1    23    ; ****************************************************************************
                =1    24    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                =1    25    ; ----------------------------------------------------------------------------
                =1    26    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                =1    27    ; ----------------------------------------------------------------------------
                =1    28    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                =1    29    ; ****************************************************************************
                =1    30    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                =1    31    ; ----------------------------------------------------------------------------
                =1    32    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                =1    33    ; ----------------------------------------------------------------------------
                =1    34    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   |
                =1    35    ; ****************************************************************************
                =1    36    ; ERRFLOOR > |       |       |       | ErrF4 | ErrF3 | ErrF2 | ErrF1 |       |
                =1    37    ; ****************************************************************************
                =1    38    
                =1    39    
                =1    40    
                =1    41    ; adresy I/O portov, ktore pridu na port P2 89C52-ky
  0080          =1    42    i8255INA        equ     080h
  0081          =1    43    i8255INB        equ     081h
  0082          =1    44    i8255INC        equ     082h
  0083          =1    45    i8255INCW       equ     083h
  00C0          =1    46    i8255OUTA       equ     0c0h
  00C1          =1    47    i8255OUTB       equ     0c1h
  00C2          =1    48    i8255OUTC       equ     0c2h
  00C3          =1    49    i8255OUTCW      equ     0c3h
                =1    50    
                =1    51    ; bitovo adresovatelne bunky
                =1    52    ;               data    20h    ; toto vyuziva emulator
  0021          =1    53    INPORTB         data    21h    ; nutne kvoli emulatoru!!! 
  0022          =1    54    INPORTC         data    22h
  0023          =1    55    OUTPORTA        data    23h
  0024          =1    56    OUTPORTB        data    24h
  0025          =1    57    OUTPORTC        data    25h
  0026          =1    58    INPORTBold      data    26h
DEBUG                                                                                                         PAGE 2

  0027          =1    59    CTRLREG         data    27h
  0028          =1    60    INPORTA         data    28h
                =1    61    ;               data    29h
  002A          =1    62    ERRFLOOR_U      data    2Ah
  002B          =1    63    ERRFLOOR_D      data    2Bh
  002C          =1    64    T_F                       data    2Ch
  002D          =1    65    T2_C                    data      2Dh      ;toto tu nemusi byt, netreba mi bitovo adresovate
                                                                               lne
  002E          =1    66    T0_C            data      2Eh
  002F          =1    67    T2              data    2Fh  
                =1    68    ; general purpose RAM (including STACK)
  0030          =1    69    POSITION        data    30h
  0031          =1    70    LOWEST          data    31h
  0032          =1    71    HIGHEST         data    32h
  0033          =1    72    STOPTIMER       data    33h
  0034          =1    73    OUTPORTBold     data    34h
  0035          =1    74    ERRF1_C         data    35h
  0036          =1    75    ERRF2_C         data    36h
  0037          =1    76    ERRF3_C         data    37h
  0038          =1    77    ERRF4_C         data    38h
  0039          =1    78    ERRF12_C        data    39h
  003A          =1    79    ERRF23_C        data    3Ah
  003B          =1    80    ERRF34_C        data    3Bh
  003C          =1    81    G                           data    3Ch
  003D          =1    82    D1                  data    3Dh
  003E          =1    83    D2              data    3Eh
  003F          =1    84    ERRSKRH_C       data    3Fh
  0040          =1    85    ERRSKRD_C       data    40h 
  0041          =1    86    ERRSIG          data    41h
                =1    87       
  0042          =1    88    MSG_LEN                     data          42h
  0043          =1    89    MSG_PTR_R                   data          43h
  0044          =1    90    MSG_PTR_S                   data          44h
  0045          =1    91    MSG_PTR_REC               data    45h
                =1    92    
  0046          =1    93    POSCHODIE       data    46h
  0047          =1    94    PORUCHA         data    47h
                =1    95    
                =1    96                 
                =1    97    
                =1    98    
                =1    99    ;                       50h - vyssie - stack!
                =1   100    
                =1   101    
                =1   102    
  0060          =1   103    T0_F                    bit         T_F.0
  007A          =1   104    T2_F                    bit         T2.2
  0061          =1   105    S_RI                          bit                 T_F.1
  0063          =1   106    TRE             bit     T_F.3
  0064          =1   107    FLOORTIME       bit     T_F.4
                =1   108    
  0051          =1   109    ERRF1_U         bit     ERRFLOOR_U.1
  0052          =1   110    ERRF2_U         bit     ERRFLOOR_U.2
  0053          =1   111    ERRF3_U         bit     ERRFLOOR_U.3
  0054          =1   112    ERRF4_U         bit     ERRFLOOR_U.4  
                =1   113    
  0052          =1   114    ERRF12_U        bit     ERRFLOOR_U.2
  0053          =1   115    ERRF23_U        bit     ERRFLOOR_U.3
DEBUG                                                                                                         PAGE 3

  0054          =1   116    ERRF34_U        bit     ERRFLOOR_U.4   
                =1   117    
  0059          =1   118    ERRF1_D         bit     ERRFLOOR_D.1
  005A          =1   119    ERRF2_D         bit     ERRFLOOR_D.2
  005B          =1   120    ERRF3_D         bit     ERRFLOOR_D.3
  005C          =1   121    ERRF4_D         bit     ERRFLOOR_D.4   
                =1   122    
  0059          =1   123    ERRF12_D        bit     ERRFLOOR_D.1
  005A          =1   124    ERRF23_D        bit     ERRFLOOR_D.2
  005B          =1   125    ERRF34_D        bit     ERRFLOOR_D.3
                =1   126    
  0040          =1   127    STOPNOT         bit     INPORTA.0
  0041          =1   128    PKI1            bit     INPORTA.1
  0042          =1   129    PKI2            bit     INPORTA.2
  0043          =1   130    PKI3            bit     INPORTA.3
  0044          =1   131    PKI4            bit     INPORTA.4
  0045          =1   132    DOORCLSD        bit     INPORTA.5 
                =1   133    
  0009          =1   134    MB1             bit     INPORTB.1       ; clonky maju invertovanu logiku
  000A          =1   135    MB2             bit     INPORTB.2
  000B          =1   136    SKRH            bit     INPORTB.3
  000C          =1   137    SKRD            bit     INPORTB.4
  000D          =1   138    DP              bit     INPORTB.5
  000E          =1   139    DPZK            bit     INPORTB.6
  000F          =1   140    DPK             bit     INPORTB.7
                =1   141    
  0031          =1   142    MB1old          bit     INPORTBold.1
  0032          =1   143    MB2old          bit     INPORTBold.2
  0033          =1   144    SKRHold         bit     INPORTBold.3
  0034          =1   145    SKRDold         bit     INPORTBold.4
                =1   146    
  0010          =1   147    PI1             bit     INPORTC.0
  0011          =1   148    PI2D            bit     INPORTC.1
  0012          =1   149    PI2U            bit     INPORTC.2
  0013          =1   150    PI3D            bit     INPORTC.3
  0014          =1   151    PI3U            bit     INPORTC.4
  0015          =1   152    PI4             bit     INPORTC.5
                =1   153    
  0018          =1   154    KS              bit     OUTPORTA.0
  0019          =1   155    PKO1            bit     OUTPORTA.1
  001A          =1   156    PKO2            bit     OUTPORTA.2
  001B          =1   157    PKO3            bit     OUTPORTA.3
  001C          =1   158    PKO4            bit     OUTPORTA.4
                =1   159    
  0020          =1   160    UP              bit     OUTPORTB.0
  0021          =1   161    DOWN            bit     OUTPORTB.1
  0022          =1   162    FAST            bit     OUTPORTB.2
  0023          =1   163    SLOW            bit     OUTPORTB.3
  0024          =1   164    FLED1           bit     OUTPORTB.4
  0025          =1   165    FLED2           bit     OUTPORTB.5
  0026          =1   166    FLED3           bit     OUTPORTB.6
  0027          =1   167    FLED4           bit     OUTPORTB.7
                =1   168    
  0028          =1   169    PO1U            bit     OUTPORTC.0
  0028          =1   170    PO1D            bit     OUTPORTC.0
  0028          =1   171    PO1             bit     OUTPORTC.0
  0029          =1   172    PO2D            bit     OUTPORTC.1
  002A          =1   173    PO2U            bit     OUTPORTC.2
DEBUG                                                                                                         PAGE 4

  002B          =1   174    PO3D            bit     OUTPORTC.3
  002C          =1   175    PO3U            bit     OUTPORTC.4
  002D          =1   176    PO4             bit     OUTPORTC.5
  002D          =1   177    PO4U            bit     OUTPORTC.5
  002D          =1   178    PO4D            bit     OUTPORTC.5
  002E          =1   179    LEDD            bit     OUTPORTC.6
  002F          =1   180    LEDU            bit     OUTPORTC.7
                =1   181    
  0038          =1   182    STOPPED         bit     CTRLREG.0
  0039          =1   183    DOORCLSDold     bit     CTRLREG.1
  003A          =1   184    UPold           bit     CTRLREG.2
  003B          =1   185    DOWNold         bit     CTRLREG.3
  003C          =1   186    FASTold         bit     CTRLREG.4
  003D          =1   187    SLOWold         bit     CTRLREG.5
                =1   188    
  00B6          =1   189    WRNOT           bit     0B6h        ; p3.6
  00B7          =1   190    RDNOT           bit     0B7h        ; p3.7
                =1   191    
                =1   192    ; bitove masky
                =1   193    ; 8255OUT 
                =1   194    ; port A
  0001          =1   195    bmKS              equ    00000001b
  0002          =1   196    bmPKO1            equ    00000010b
  0004          =1   197    bmPKO2            equ    00000100b
  0008          =1   198    bmPKO3            equ    00001000b
  0010          =1   199    bmPKO4            equ    00010000b
                =1   200    
                =1   201    ; port B
  0001          =1   202    bmUP              equ    00000001b
  0002          =1   203    bmDOWN            equ    00000010b
  0004          =1   204    bmFAST            equ    00000100b
  0008          =1   205    bmSLOW            equ    00001000b
  0010          =1   206    bmFLED1           equ    00010000b
  0020          =1   207    bmFLED2           equ    00100000b
  0040          =1   208    bmFLED3           equ    01000000b
  0080          =1   209    bmFLED4           equ    10000000b
                =1   210    
                =1   211    ; port C
  0001          =1   212    bmPO1             equ    00000001b
  0002          =1   213    bmPO2D            equ    00000010b
  0004          =1   214    bmPO2U            equ    00000100b
  0008          =1   215    bmPO3D            equ    00001000b
  0010          =1   216    bmPO3U            equ    00010000b
  0020          =1   217    bmPO4             equ    00100000b
  0040          =1   218    bmLEDD            equ    01000000b
  0080          =1   219    bmLEDU            equ    10000000b
                =1   220    
                =1   221    ; 8255IN
                =1   222    ; port A
  0001          =1   223    bmSTOP            equ    00000001b
  0002          =1   224    bmPKI1            equ    00000010b
  0004          =1   225    bmPKI2            equ    00000100b
  0008          =1   226    bmPKI3            equ    00001000b
  0010          =1   227    bmPKI4            equ    00010000b
  0020          =1   228    bmDOORCLSD        equ    00100000b
                =1   229    
                =1   230    ; port B
  0002          =1   231    bmMB1I            equ    00000010b
DEBUG                                                                                                         PAGE 5

  0004          =1   232    bmMB2I            equ    00000100b
  0008          =1   233    bmSKRHI           equ    00001000b
  0010          =1   234    bmSKRHD           equ    00010000b
  0020          =1   235    bmDPI             equ    00100000b
  0040          =1   236    bmDPZKI           equ    01000000b
  0080          =1   237    bmDPKI            equ    10000000b
                =1   238    
                =1   239    ; port C
  0001          =1   240    bmPI1             equ    00000001b
  0002          =1   241    bmPI2D            equ    00000010b
  0004          =1   242    bmPI2U            equ    00000100b
  0008          =1   243    bmPI3D            equ    00001000b
  0010          =1   244    bmPI3U            equ    00010000b
  0020          =1   245    bmPI4             equ    00100000b
                =1   246    
                =1   247    $include (macroLib.inc)
                =1   248    ;*******************************************************************************
                =1   249    ;   Sofrverovy breakpoint
                =1   250    ;-------------------------------------------------------------------------------
                =1   251    ;     Pouzitie pri debugovani pomocou emulatora T-EMU52
                =1   252    ;     Pre spravne fungovanie musi byt parameter <Single step interrupt> 
                =1   253    ;     nastaveny na hodnotu <INT1>
                =1   254    ;
                =1   255    ;     Emulator -> Configuration -> Single step interrupt
                =1   256    ;
                =1   257    _BP_    MACRO 
                =1   258            clr     P3.3
                =1   259            setb    EX1
                =1   260            nop
                =1   261    ENDM
                =1   262    
                =1   263    
                =1   264    ;*******************************************************************************
                =1   265    ;   CFCSS - kontrolne instrukcie
                =1   266    ;-------------------------------------------------------------------------------
                =1   267    ;     Obsahuje instrukcie, ktore sa pridaju na zaciatok bloku.
                =1   268    ;     <s> predstavuje priznak prideleny aktualnemu bloku
                =1   269    ;     <d> predstavuje rozdiel (XOR) medzi predchadzajucim a aktualnym blokom
                =1   270    ;         (na zaklade tejto hodnoty sa vypocita novya hodnota <G>)
                =1   271    ;     <D1> a <D2> predstavuju priznaky pre upravu <G>, ak sa 
                =1   272    ;         nachadza v mnozine nasledovnikov aktualneho bloku aj fan-in blok    
                =1   273    ;
                =1   274    CFCSS   MACRO   s, d, D1val, D2val, Dx 
                =1   275            xrl             G,  #d             ;; Vypocitanie novej hodnoty priznaku <G>
                =1   276            IF (Dx <> -1)
                =1   277                mov   A,  Dx         ;; Uprava priznaku <G> na zaklade <Dx>
                =1   278                xrl   G,  A          ;;     (iba pri fan-in vrcholoch)
                =1   279            ENDIF    
                =1   280            mov   A,  G              ;; Porovnanie aktualnej hodnoty <G> s priznakkom <s>
                =1   281            LCJNE A,  #s, CFCERR     ;;     (ak sa priznaky nerovnaju, skoci sa na osetrenie chy
                                                                               by )
                =1   282            IF (D1val <> -1)
                =1   283                mov         D1, #D1val     ;; Nastavenie priznaku <D1>
                =1   284            ELSE
                =1   285                mov         D1, #32        ;; Nastavenie priznaku <D1> na hodnotu mimo rozsahu 
                                                                               
                =1   286            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   287            IF (D2val <> -1)
DEBUG                                                                                                         PAGE 6

                =1   288                mov         D2, #D2val     ;; Nastavenie priznaku <D2>
                =1   289            ELSE
                =1   290                mov         D2, #32        ;; Nastavenie priznaku <D2> na hodnotu mimo rozsahu 
                                                                               
                =1   291            ENDIF                    ;; (aby sa predislo maskovaniu pri nepovolenom skoku)
                =1   292            mov       A, #s
                =1   293            lcall     PRINTCHAR        ;; Vypis aktualneho <s> na seriovu linku
                =1   294    ENDM
                =1   295    
                =1   296    
                =1   297    ;*******************************************************************************
                =1   298    ;   Instrukcie pre casovace a pocitadla
                =1   299    ;-------------------------------------------------------------------------------
                =1   300    ;     Spustenie casovaca s hodnotou <VAL>. Po (<VAL>*50)ms sa nastavi 
                =1   301    ;     priznak <T2_F>    
                =1   302    ;
                =1   303    TIMER2  MACRO  VAL
                =1   304               mov           T2_C, #VAL                              ;; 3 sekundy
                =1   305                     clr       T2_F                                  ;; vynulovat priznak pretec
                                                                               enia
                =1   306                     setb      TR2                                             ;; spustit casova
                                                                               c
                =1   307    ENDM
                =1   308    
                =1   309    
                =1   310    ;*******************************************************************************
                =1   311    ;   Sprava KEEPALIVE
                =1   312    ;-------------------------------------------------------------------------------
                =1   313    ;     Odošle správu keepalive (00h, 00h, 7eh)
                =1   314    ;
                =1   315    SEND_KEEPALIVE   MACRO
                =1   316          mov     A, #0h
                =1   317          lcall   PRINTCHAR
                =1   318          lcall   PRINTCHAR 
                =1   319          mov     A, #7Eh 
                =1   320          lcall   PRINTCHAR 
                =1   321    ENDM
                =1   322    
                =1   323    ;*******************************************************************************
                =1   324    ;   Ekvivalenty podmienenych skokovych instrukcii s dlhym skokom
                =1   325    ;-------------------------------------------------------------------------------
                =1   326    ;     Nazov makra je tvoreny nazvom skokovej instrukcie a prefixom "L"   
                =1   327    ;
                =1   328    
                =1   329    ; Long jump if zero
                =1   330    LJZ     MACRO   NAVESTIE
                =1   331            jnz     $+5
                =1   332            ljmp    NAVESTIE
                =1   333            nop
                =1   334    ENDM
                =1   335    
                =1   336    ; Long jump if not zero
                =1   337    LJNZ    MACRO   NAVESTIE
                =1   338            jz      $+5
                =1   339            ljmp    NAVESTIE
                =1   340            nop
                =1   341    ENDM
                =1   342    
DEBUG                                                                                                         PAGE 7

                =1   343    ; Long jump if bit set
                =1   344    LJB     MACRO   TESTBIT, NAVESTIE
                =1   345            jnb     TESTBIT, $+6
                =1   346            ljmp    NAVESTIE
                =1   347            nop
                =1   348    ENDM
                =1   349    
                =1   350    ; Long jump if bit not set
                =1   351    LJNB    MACRO   TESTBIT, NAVESTIE
                =1   352            jb      TESTBIT, $+6
                =1   353            ljmp    NAVESTIE
                =1   354            nop
                =1   355    ENDM
                =1   356    
                =1   357    ; Compare & long jump if not equal
                =1   358    LCJNE   MACRO   OP1, OP2, NAVESTIE
                =1   359            cjne    OP1, OP2, $+6
                =1   360            jmp     $+6
                =1   361            ljmp    NAVESTIE
                =1   362            nop
                =1   363    ENDM
                =1   364    
                =1   365    ; Compare & jump if equal
                =1   366    CJE     MACRO   OP1, OP2, NAVESTIE
                =1   367            cjne    OP1, OP2, $+6
                =1   368            ljmp     NAVESTIE
                =1   369            nop
                =1   370    ENDM
                =1   371    
                =1   372    ; Long call if bit set
                =1   373    LCALLB  MACRO   TESTBIT, NAVESTIE
                =1   374            jnb     TESTBIT, $+6
                =1   375            lcall   NAVESTIE
                =1   376            nop
                =1   377    ENDM
                =1   378    
                =1   379    ; Compare & Long call if equal
                =1   380    CLCALLE MACRO   OP1, OP2, NAVESTIE
                =1   381            cjne    OP1, OP2, $+6
                =1   382            lcall   NAVESTIE
                =1   383            nop
                =1   384    ENDM
                =1   385    
                =1   386    ;*******************************************************************************
                =1   387    ;   Modifikacie instrukcii x51
                =1   388    ;-------------------------------------------------------------------------------
                =1   389    ;     Tieto makra obsahuju niektore modifikovane zakladne dostupne instrukcie x51     
                =1   390    ;
                =1   391    
                =1   392    ;Logical and (bit operands)
                =1   393    ANLB   MACRO   BIT1, BIT2
                =1   394            mov   C, BIT1
                =1   395            anl   C, /BIT2
                =1   396            mov   BIT1, C
                =1   397    ENDM
                =1   398    
                =1   399    ; Compare & long jump if equal
                =1   400    LCJE     MACRO   OP1, OP2, NAVESTIE
DEBUG                                                                                                         PAGE 8

                =1   401            cjne    OP1, OP2, $+7
                =1   402            jmp    NAVESTIE
                =1   403            nop
                =1   404    ENDM
                =1   405    
                =1   406    
                =1   407    ;*******************************************************************************
                =1   408    ;   Privolavace, signalizácia polohy a smeru kabiny
                =1   409    ;-------------------------------------------------------------------------------
                =1   410    ;
                =1   411    ;   Signalizacia polohy kabiny
                =1   412    ;
                =1   413    ;     Signalizuje polohu kabiny na signalizacnom paneli.  
                =1   414    ;     Poloha kabiny zavisi o parametra "POLOHA" 
                =1   415    ;     Vykonane zmeny sa zapisu na porty     
                =1   416    ;
                =1   417    POLOHA_LED  MACRO  POLOHA
                =1   418            anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
                =1   419            setb    FLED&POLOHA
                =1   420            lcall   WRITEPORTS
                =1   421    ENDM
                =1   422    
                =1   423    ;   Zrusenie volby vybraneho poschodia
                =1   424    ;
                =1   425    ;     Zrusi volbu vybraneho poschodia <POSCH>. Volba   
                =1   426    ;     sa zrusi v kabine ako aj v oboch smeroch na poschodi.
                =1   427    ;
                =1   428    ZRUS_POSCH  MACRO POSCH
                =1   429            clr     PKO&POSCH       ;; vynulovanie volby poschodia na ktorom stojim
                =1   430            clr     PO&POSCH&U      ;;
                =1   431            clr     PO&POSCH&D      ;;
                =1   432            lcall   WRITEPORTS
                =1   433    ENDM
                =1   434    
                =1   435    ;   Rozsvietenie kabinoveho svetla a smerovej signalizacie 
                =1   436    ;
                =1   437    ;     Rozsvieti kabinove svetlo a obe sibky smerovej
                =1   438    ;     signalizacie ak sa v kabine nachadza obsluhyschopna
                =1   439    ;     osoba. V opacnom pripade svetlo a signalizaciu
                =1   440    ;     zhasne.
                =1   441    ;
                =1   442    KABINOVE_SVETLO MACRO
                =1   443            mov      C, DP          ;; Ak je nieko v kabine,
                =1   444            orl      C, DPZK        ;;
                =1   445            orl      C, DPK         ;;
                =1   446            mov      KS, C          ;;   - v kabine zapalime svetlo. Ak nie, bude zhasnute.
                =1   447            mov      LEDU, C        ;;   - Rozsvietime signalizaciu do oboch smerov. Ak nie, zha
                                                                               sneme.
                =1   448            mov      LEDD, C        ;;
                =1   449            lcall   WRITEPORTS      ;;
                =1   450    ENDM
                =1   451    
                =1   452    ;   Rozsvieti obe smerove LED diody (signalizacia, ze kabina stoji)
                =1   453    ;
                =1   454    ROZSVIET_SMER_LED MACRO
                =1   455            setb    LEDU            ;
                =1   456            setb    LEDD            ;
DEBUG                                                                                                         PAGE 9

                =1   457            lcall   WRITEPORTS      ;
                =1   458    ENDM
                =1   459    
                =1   460    ;   Zistenie, ci obsluhyschopna osoba zvolila poschodie
                =1   461    ;      
                =1   462    ;     Zistenie, či obsluhyschopna osoba v kabine vytahu 
                =1   463    ;     stlacila niektoru z volieb poschodi v kabine.
                =1   464    ;     V pripade, ze v kabine sa nachadza obsluhyschopna 
                =1   465    ;     osoba a volba zatial nebola uskutocnena, skoci sa 
                =1   466    ;     na <NAVESTIE>      
                =1   467    ;        
                =1   468    JE_VYBRATE_POSCHODIE MACRO NAVESTIE
                =1   469            mov      C, DP         ;; Ak sa nachadza v kabine osoba, 
                =1   470            orl      C, DPZK        ;;
                =1   471            orl      C, DPK         ;;
                =1   472            jnc      $+8            ;;
                =1   473            mov      A, INPORTA     ;;
                =1   474            anl      A, #00011110b  ;; ...a nie je vybrata ziadna volba (v kabine)
                =1   475            jz       NAVESTIE       ;; skoc na navestie
                =1   476    ENDM
                =1   477    
                =1   478    
                =1   479    ;*******************************************************************************
                =1   480    ;   Rychlost a smer pohybu motora
                =1   481    ;-------------------------------------------------------------------------------
                =1   482    ;
                =1   483    ;   Nastavenie smeru pohybu motora - hore
                =1   484    SET_UP MACRO
                =1   485            setb     UP
                =1   486            clr      DOWN
                =1   487            setb     LEDU
                =1   488            clr      LEDD 
                =1   489    ENDM
                =1   490    
                =1   491    ;   Nastavenie smeru pohybu motora - dole
                =1   492    SET_DOWN MACRO
                =1   493            clr     UP
                =1   494            setb    DOWN
                =1   495            clr     LEDU
                =1   496            setb    LEDD 
                =1   497    ENDM
                =1   498    
                =1   499    ;   Nastavenie rychlosti pohybu motora - rychlo
                =1   500    SET_FAST MACRO
                =1   501            setb     FAST
                =1   502            clr      SLOW
                =1   503            setb     KS      
                =1   504    ENDM
                =1   505    
                =1   506    ;   Nastavenie smeru pohybu motora - hore
                =1   507    SET_SLOW MACRO
                =1   508            setb     SLOW
                =1   509            clr      FAST
                =1   510            setb     KS
                =1   511    ENDM
                =1   512     
                =1   513      
                     514                       
DEBUG                                                                                                         PAGE 10

                     515    
                     516    ; Definicie registrov pre Keil uVision
  00C8               517    T2CON  DATA  0C8H  ;TIMER 2 CONTROL
  00C9               518    T2MOD  DATA  0C9H  ;TIMER 2 MODE
  00CA               519    RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
  00CB               520    RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
  00CA               521    TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
  00AD               522    ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
  00CF               523    TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
  00A6               524    WDTRST DATA  0A6H  ;Watchdog timer
                     525    
                     526    
  0000               527    COUNT    SET    0
                     528    
                     529    ;*******************************************************************************
                     530    ;   Oznacenie poruchoveho poschodia 
                     531    ;-------------------------------------------------------------------------------
                     532    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     533    ;
                     534    SET_FLOOR_ERR   MACRO   TESTBIT, FLOORBIT, NAVESTIE, POSCH, LABEL    ;; nastavi dane poschod
                                                                               ie ako poruchove ak je TESTBIT rovny 0 
                     535                                                                                                
                                                                                                                        
                                                                                   ;;   FLOORBIT:   ERRF1, .. ERRF4, ERR
                                                                               F12, ERRF23, ERRF34
                     536                                                                                                
                                                                                                                        
                                                                                   ;;   TESTBIT:    MB1, MB2
                     537            ;INCREMENT SUFFIX  FOR  NEXT LABEL             
                     538            COUNT    SET    COUNT+1                   
                     539            
                     540            jb      TESTBIT, ENDD&LABEL
                     541            
                     542            IF (TESTBIT EQ MB2)
                     543                mov   PORUCHA, #3 ;porucha 011 - EZ
                     544            ENDIF 
                     545            IF (TESTBIT EQ MB1)
                     546                mov   PORUCHA, #1 ;porucha 001 - E1S
                     547            ENDIF 
                     548            
                     549            jnb     PKI&POSCH, $+9
                     550            clr     FAST
                     551            setb    SLOW
                     552            setb    STOPPED         
                     553            setb    FLOORBIT&_U
                     554            setb    FLOORBIT&_D
                     555            inc     FLOORBIT&_C
                     556                        clr     PKO&POSCH                           ;; vynulovanie volby poschod
                                                                               ia na ktorom stojim
                     557            clr     PO&POSCH&U            
                     558            clr     PO&POSCH&D              
                     559                        lcall   WRITEPORTS
                     560            ljmp    NAVESTIE
                     561    ENDD&LABEL:
                     562            nop
                     563    ENDM
                     564    
                     565    ;*******************************************************************************
DEBUG                                                                                                         PAGE 11

                     566    ;   Odstranenie oznacenia poruchoveho poschodia 
                     567    ;-------------------------------------------------------------------------------
                     568    ;     nastavi dane poschodie ako poruchove ak je TESTBIT rovny 0    
                     569    ;
                     570    CLR_FLOOR_ERR   MACRO   FLOORBIT,   ;; nastavi dane poschodie ako bezporuchove           
                     571            clr    FLOORBIT&_U
                     572            clr    FLOORBIT&_D
                     573            ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
                     574            nop
                     575    ENDM
                     576    
                     577    ;*******************************************************************************
                     578    ;   Osetrenie zakmitov clonky
                     579    ;-------------------------------------------------------------------------------
                     580    ;        
                     581    ;
                     582    ZAKMITC MACRO   TYPCLONKY
                     583            lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
                     584            lcall   READPORTS       ; Uz sme z tej clonky prec?
                     585            jnb     TYPCLONKY, $-3  ; 
                     586            lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                     587    ENDM
                     588    
                     589    ZASTAV  MACRO  C_POSCH, SMER
                     590                                            ;; Chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               
                     591            clr     C                       ;; | Idem robit cachre-machre s Carry bitom
                     592            mov     A, #0h                  ;; | Aj Acc potrebujem prazdny
                     593            orl     C, PI&C_POSCH&SMER      ;; | Mam v tomto smere stlacene tlacidlo v sachte?
                     594            anl     C, /DPZK                ;; | a mam plne zatazenu kabinu? (lebo ak ano tak an
                                                                               i za boha nestojim)
                     595            orl     C, PKI&C_POSCH          ;; | Mam v tomto smere stlacene tlacidlo v kabine? 
                                                                               
                     596            anl     C, /ERRF&C_POSCH&_&SMER ;; | a mam v tomto smere poruchu na tomto poschodi (
                                                                               Ak ano, tak nema zmysel stat)
                     597            orl     C, DPK                  ;; | a mam pretazenu kabinu? (Ak ano tak stojim urci
                                                                               te)
                     598            orl     C, STOPPED              ;; | a bolo stlacene tlacidlo STOP? (Ak ano tak stoj
                                                                               im urcite)
                     599            addc    A, #0h                  ;; Ak mi v predchadzajucich krokoch vyslo, ze mam st
                                                                               at, tak stojim nezavisle na tlacidlach ka
                                                                               biny
                     600    ENDM
                     601    
                     602    NAJNIZSIE  MACRO
                     603            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     604            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     605            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     606    
                     607            ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                     608            ANLB    ACC.2, ERRF2_D  ; |
                     609            ANLB    ACC.3, ERRF2_D  ; |
                     610            ANLB    ACC.4, ERRF3_D  ; |
                     611            ;ANLB    ACC.5, ERRF3_D  ; |
                     612    
DEBUG                                                                                                         PAGE 12

                     613            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     614     ; LL1: 
                     615            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     616            clr     C               ; Inak shiftnem o 2
                     617            rlc     A               ;
                     618            clr     C               ;
                     619            rlc     A               ;
                     620            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     621    ; LL2:
                     622            mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     623    ENDM
                     624    
                     625    NAJVYSSIE  MACRO
                     626            mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
                     627            rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
                     628            anl     A, #01111110b   ; Vynulujem nedefinovane bity
                     629            
                     630            ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                     631            ANLB    ACC.3, ERRF2_U  ; |
                     632            ANLB    ACC.4, ERRF3_U  ; |
                     633            ANLB    ACC.5, ERRF3_U  ; |
                     634            ;ANLB    ACC.6, ERRF4_U  ; |
                     635            
                     636            mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                     637     ; LL1: 
                     638            jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
                     639            clr     C               ; Inak shiftnem o 2
                     640            rrc     A               ;
                     641            clr     C               ;
                     642            rrc     A               ;
                     643            djnz    R0, $-6         ; ...a pokracujem v zistovani
                     644    ; LL2:
                     645            mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
                     646            clr     C               ;
                     647            subb    A, R0           ;
                     648    ENDM
                     649    
                     650    VYSSIE_KABINA  MACRO  POSCH
                     651            mov     A, INPORTA
                     652            anl     A, #00011110b
                     653            mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
                     654            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     655            xrl     B, #0FFH
                     656            anl     A, B
                     657            clr     C
                     658            rrc     A
                     659    ;LL1    
                     660            mov     R0, #&POSCH
                     661            clr     C
                     662            rrc     A
DEBUG                                                                                                         PAGE 13

                     663            djnz    R0, $-2;LL1
                     664    ENDM
                     665    
                     666    NIZSIE_KABINA  MACRO  POSCH
                     667            mov     A, #5
                     668            clr     C
                     669            subb    A, #&POSCH
                     670            mov     R0, A
                     671            mov     A, INPORTA
                     672            anl     A, #00011110b
                     673            mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
                     674            anl     B, #00001100b   ; na krajne poschodia dovolim ist
                     675            xrl     B, #0FFH
                     676            anl     A, B
                     677            clr     C
                     678            rlc     A
                     679            clr     C
                     680            rlc     A
                     681            clr     C
                     682            rlc     A
                     683    ;LL1   
                     684            clr     C
                     685            rlc     A
                     686            djnz    R0, $-2;LL1
                     687    ENDM
                     688    
                     689    
                     690    
                     691    ; hodiny oscilatora v emulatore treba dat na ext a nastavit 11.0592MHz (11.052900)
  00FA               692    TIMERCONST      equ     250     ; udaj pre nastavenie casovaca pre potreby seriovej komunika
                                                                               cie
                     693                                    ; hodnota 250 znamena prenosovu rychlost 4800 baud pri oscil
                                                                               atore 11.0592MHz
                     694                                    ; nastavenie terminalu je 4800 8-N-1, no flow control
  0014               695    TIMER0CONST     equ     20      ; pouziva sa pri Timer0, ktory sluzi na rozblikanie LEDiek p
                                                                               ri poruche. Hodnota 20 je 1 sekunda (1=50
                                                                               ms)
                     696    ;osetrenie vektorov preruseni
0000                 697            org     0000h           ; adresa odkial startuje program po resete
0000 020033          698            ljmp    START           ; skok na zaciatok kodu programu
                     699            
000B                 700            org     000Bh           ; v tejto casti pamati je vektor prerusenia
000B 0210D5          701            ljmp    INT_TIMER0      ; pre casovac T0
                     702            
0023                 703            org       0023h           ; v tejto casti pamati je vektor prerusenia
0023 02128B          704                        ljmp          SERIAL_INT              ; seriovej linky 
                     705        
002B                 706            org               002Bh           ; v tejto casti pamati je vektor prerusenia
002B 02126C          707                        ljmp    INT_TIMER2      ; pre casovac T2   
                     708                  
0033                 709            org     0033h           ; od tejto adresy sa zacina kod programu
                     710            
0033                 711    START:
0033                 712    RESET:  
                     713            ; riadiace signaly do pasivnej urovne 
0033 D2B6            714            setb    WRNOT
0035 D2B7            715            setb    RDNOT
0037 753300          716            mov     STOPTIMER, #0
DEBUG                                                                                                         PAGE 14

003A 758150          717            mov     SP, #STACK
                     718    
                     719            ; pockame si na inicializaciu obvodov 8255  
003D 7900            720            mov     R1, #0 
003F 7AFF            721            mov     R2, #0ffh
0041 D9FE            722            djnz    R1, $
0043 DAFC            723            djnz    R2, $-2
                     724            
                     725            ; teraz ich mozeme nastavit
0045 75809B          726            mov     p0, #10011011b      ; nastavenie i8255IN - vsetky porty dnu
0048 75A083          727            mov     p2, #i8255INCW
004B C2B6            728            clr     WRNOT
004D 00              729            nop
004E 00              730            nop
004F 00              731            nop
0050 00              732            nop
0051 D2B6            733            setb    WRNOT
0053 758080          734            mov     p0, #10000000b      ; nastavenie i8255OUT - vsetky porty von
0056 75A0C3          735            mov     p2, #i8255OUTCW
0059 C2B6            736            clr     WRNOT
005B 00              737            nop
005C 00              738            nop
005D 00              739            nop
005E 00              740            nop
005F D2B6            741            setb    WRNOT
                     742            
                     743            ; nastavenie preruseni 
0061 C28E            744            clr     TR1                 ; zastavi sa citac T1
0063 759852          745            mov     SCON,#01010010b     ; nastavenie registra SCON                              
                                                                                                                        
                                                                                   <<<<<<<<<   01010010b
                     746                                        ; mod 1 (8b UART), SM2=0 (jednoprocesorovy system)
                     747                                        ; REN=1, 0, 0, TI=1 (vysielaci register je prazdny)
                     748                                        ; RI=0 (prijimaci register - nebol prijaty znak)
                     749            ;mov     TCON,#00000001b     ; INT0 je citlive na zostupnu hranu                    
                                                                                            <<< 
0066 758921          750            mov     TMOD,#00100001b     ; nastavenie TMOD registra
                     751                                        ; T1: mod 1 - 16 bitove pocitadlo
                     752                                        ; GATE=0 (programove riadenie casovaca)
                     753                                        ; C/T#=0 interne hodiny/12
                     754                                        ; T0: mod 1 - 16 bitove pocitadlo
                     755                                        ; GATE=0 (programove riadenie casovaca)
                     756                                        ; C/T#=0 interne hodiny/12
0069 758740          757            mov     PCON,#01000000b     ; najvyssi bit musi byt 0, aby sa nezdvojnasobila prenos
                                                                               ova rychlost seriovej linky              
                                                                                    <<<<<<<<   00000000b
006C 758B00          758            mov     TL1, #000h          ; inicializacia casovaca T1
006F 758DFA          759            mov     TH1, #0FAh          ; 
0072 758A00          760            mov     TL0, #000h          ; inicializacia casovaca T0 - 57600 = 0e100h            
                                                                                    <<<
0075 758C4C          761            mov     TH0, #04Ch                                      ;                           
                                                                                                                        
                                                                                   <<<
0078 75C800          762                        mov           T2CON,  #0                        ; Auto-reload mod
007B 75CA00          763                        mov           RCAP2L, #0h;              ; 4C00h = 19456,  Timer Clk=11,0
                                                                               592/12*1 = 0,9216 MHz
007E 75CB4C          764                        mov           RCAP2H, #4Ch;             ; (50ms)
0081 D2AD            765                        setb          ET2                                           ; Enable Tim
DEBUG                                                                                                         PAGE 15

                                                                               er2 interrupt
                     766            
                     767            
                     768            
0083 D28C            769            setb    TR0                 ;                                                       
                                                                                            <<<
0085 C2A9            770            clr     ET0
0087 D28E            771            setb    TR1                 ; aktivacia T1 => spustenie seriovej linky
                     772            
0089 C299            773            clr     TI
008B C298            774            clr     RI
008D D263            775            setb    TRE
008F D2AC            776            setb      ES                    ; enable serial interrupt       
0091 754500          777                        mov           MSG_PTR_REC, #0h
0094 C261            778                        clr           S_RI
                     779            
                     780    
                     781            ; pociatocna inicializacia - vynuluj vstupne registre a rozsviet vsetky diody 
0096 752800          782            mov     INPORTA, #0
0099 75211E          783            mov     INPORTB, #01eh      ; vsetky clonky pasivne
009C 752200          784            mov     INPORTC, #0
009F 75231E          785            mov     OUTPORTA, #(bmPKO1 or bmPKO2 or bmPKO3 or bmPKO4)
00A2 7524F0          786            mov     OUTPORTB, #(bmFLED1 or bmFLED2 or bmFLED3 or bmFLED4)
00A5 7525FF          787            mov     OUTPORTC, #(bmPO1 or bmPO2D or bmPO2U or bmPO3D or bmPO3U or bmPO4 or bmLEDD
                                                                                or bmLEDU)
00A8 D218            788            setb    KS
00AA C238            789            clr     STOPPED
00AC 1211FB          790            call    WRITEPORTS          ; zapis novu informaciu
                     791    
00AF 752300          792            mov     OUTPORTA, #0
00B2 752400          793            mov     OUTPORTB, #0
00B5 752500          794            mov     OUTPORTC, #0
00B8 1211FB          795            call    WRITEPORTS          ; zapis novu informaciu
                     796            
                     797            ;----------------------------------------------------
                     798            ;mov     DPTR, #STR_RESET    ; vypis info 
                     799            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     800            
                     801            ;TIMER2  200
                     802            ;jnb              T2_F, $                               ; Uz presiel cas?
                     803            
                     804            ;clr     DOWN                ; ZASTAVIME KABINU
                     805            ;clr     FAST                ; a rychlo
                     806            ;clr     SLOW                ;                           
                     807            ;clr     UP                  ;
                     808            ;lcall   WRITEPORTS          ; zapis informaciu 
                     809            ;mov     DPTR, #STR_WDT      ; vypis info 
                     810            ;lcall   DISPSTRNOWDT        ; o zapnuti watchdog timera
                     811            ;mov     WDTRST, #01Eh
                     812            ;mov     WDTRST, #0E1h
                     813            
                     814            ;----------------------------------------------------
                     815    
00BB 752800          816            mov     INPORTA, #0
00BE 752100          817            mov     INPORTB, #0         
00C1 752200          818            mov     INPORTC, #0
00C4 121194          819            call    READPORTS           ; prvotne nacitanie udajov
                     820            
DEBUG                                                                                                         PAGE 16

00C7 752A00          821            mov     ERRFLOOR_U, #0h     ; vynuluj chybovy register
00CA 752B00          822            mov     ERRFLOOR_D, #0h      
                     823    
                     824            
00CD 901551          825            mov     DPTR, #STR_INIT         ; vypis info 
00D0 121236          826            lcall   DISPSTR                 ; o inicializacii
                     827            
                     828                   
00D3                 829    CALIB:
                     830            ;kalibracia vytahu podla dolnej porovnavacej clonky
                     831            ;setb    TR0
00D3 121194          832            lcall   READPORTS                   ; precitaj, co je na portoch
00D6 300C13          833            jnb     SKRD, CALIBEND              ; ak sme na dolnej porovnavacej clonke, tak koni
                                                                               ec
00D9 D221            834            setb    DOWN                        ; inak pod dole
00DB D222            835            setb    FAST                        ; a rychlo
00DD C223            836            clr     SLOW                        ;
00DF C220            837            clr     UP                
00E1 1211FB          838            lcall   WRITEPORTS                  ; zapis informaciu 
00E4                 839    CALIBLOOP:
00E4 121194          840            lcall   READPORTS                   ; 
00E7 300C02          841            jnb     SKRD, CALIBEND              ; ak sme dole, konci
00EA 80F8            842            jmp     CALIBLOOP
00EC                 843    CALIBEND:                              
00EC C222            844            clr     FAST                        ; zastavime v tomto smere
00EE C221            845            clr     DOWN                        ;
00F0 D223            846            setb    SLOW                        ; Este sa pohneme kusocek hore, aby sme si 
00F2 D220            847            setb    UP                          ; boli isti, ze sme spravne synchronizovani na p
                                                                               oschodi
00F4 1211FB          848            lcall   WRITEPORTS 
00F7                 849    CALIBEND2:
00F7 121194          850            lcall   READPORTS                   ; 
00FA 2009FA          851            jb      MB1, CALIBEND2              ; 
00FD C223            852            clr     SLOW                        ; A teraz sme uz naozaj spravne
00FF C220            853            clr     UP                          ; 
0101 D224            854            setb    FLED1
0103 1211FB          855            lcall   WRITEPORTS                  ; zapis informaciu
                     856            ;clr     TR0
                     857            ;_BP_
0106 901551          858            mov     DPTR, #STR_INIT             ; vypis info o kalibracii
0109 121236          859            lcall   DISPSTR                     ;
010C                 860    MAIN:
                     861    
                     862    ;            |  7    |  6    |  5    |  4    |  3    |  2    |  1    |  0    |
                     863    ; ****************************************************************************
                     864    ; INPORTA >  |       |       |DOORCLS| PKI4  | PKI3  | PKI2  | PKI1  |STOPNOT|
                     865    ; ----------------------------------------------------------------------------
                     866    ; INPORTB >  | DPK   | DPZK  | DP    | SKRD  | SKRH  | MB2   | MB1   |       |
                     867    ; ----------------------------------------------------------------------------
                     868    ; INPORTC >  |       |       | PI4   | PI3D  | PI3U  | PI2D  | PI2U  | PI1   |
                     869    ; ****************************************************************************
                     870    ; OUTPORTA > |       |       |       | PKO4  | PKO3  | PKO2  | PKO1  | KS    |
                     871    ; ----------------------------------------------------------------------------
                     872    ; OUTPORTB > | FLED4 | FLED3 | FLED2 | FLED1 | SLOW  | FAST  | DOWN  | UP    |
                     873    ; ----------------------------------------------------------------------------
                     874    ; OUTPORTC > | LEDU  | LEDD  | PO4   | PO3D  | PO3U  | PO2D  | PO2U  | PO1   | 
                     875    ; ****************************************************************************
                     876    ; POSITION
DEBUG                                                                                                         PAGE 17

                     877    ; ****************************************************************************
                     878    
                     879    
                     880    
                     881            ;mov     R5, #0
                     882            ;mov     R6, #20
010C D2A9            883            setb    ET0;                                                                        
                                                                                                                        
                                                                                                           ;<<<<<<<<<<<<
                                                                               <<<<<<
                     884            
010E 754381          885            mov             MSG_PTR_R, #081h
0111 7544C1          886            mov             MSG_PTR_S, #0C1h
0114 754700          887            mov   PORUCHA, #0
                     888    
                     889                                                                                              
                     890            ;Inicializacia priznakov (CFCSS)
0117 753C1E          891            mov             G, #30
011A 753D00          892                        mov         D1, #0
011D 753E00          893            mov             D2, #0
0120 901722          894            mov   DPTR, #STR_CFC_START         ; vypis info 
0123 121236          895            lcall DISPSTR         ;
                     896                          
                     897    
                     898    
                     899    ;------------------------------------------------------------------------------- << 1. posch
                                                                               odie >>
                     900    
0126                 901    FLOOR1:
                     902            ;--------------------------
                     903 +1         CFCSS     29, 3, -1, -1, D1
0126 633C03          904 +1         xrl             G,  #3             
                     905 +1         IF (D1 <> -1)
0129 E53D            906 +1             mov   A,  D1         
012B 623C            907 +1             xrl   G,  A          
                     908 +1         ENDIF    
012D E53C            909 +1         mov   A,  G              
                     910 +2         LCJNE A,  #29, CFCERR     
012F B41D03          911 +2         cjne    A, #29, $+6
0132 020138          912 +2         jmp     $+6
0135 0210A3          913 +2         ljmp    CFCERR
0138 00              914 +2         nop
                     915 +1         IF (-1 <> -1)
                     916 +1             mov         D1, #-1     
                     917 +1         ELSE
0139 753D20          918 +1             mov         D1, #32        
                     919 +1         ENDIF                    
                     920 +1         IF (-1 <> -1)
                     921 +1             mov         D2, #-1     
                     922 +1         ELSE
013C 753E20          923 +1             mov         D2, #32        
                     924 +1         ENDIF                    
013F 741D            925 +1         mov       A, #29
0141 121283          926 +1         lcall     PRINTCHAR        
                     928            ;--------------------------
                     929 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0144 53240F          930 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
DEBUG                                                                                                         PAGE 18

                                                                               )          
0147 D224            931 +1         setb    FLED1
0149 1211FB          932 +1         lcall   WRITEPORTS
014C C238            934            clr     STOPPED
                     935 +1         TIMER2  60              ; (Timer - 3s)
014E 752D3C          936 +1            mov           T2_C, #60                              
0151 C27A            937 +1                  clr       T2_F                                  
0153 D2CA            938 +1                  setb      TR2                                             
0155 C264            940            clr     FLOORTIME
                     941 +1         ROZSVIET_SMER_LED
0157 D22F            942 +1         setb    LEDU            ;
0159 D22E            943 +1         setb    LEDD            ;
015B 1211FB          944 +1         lcall   WRITEPORTS      ;
015E 754600          946            mov     POSCHODIE, #00h ; 0000 000 - posch. 1
0161 121194          947    F1S:    lcall   READPORTS       ; nacitanie dat
                     948 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0164 200A03          949 +1         jb      MB2, $+6
0167 021089          950 +1         ljmp    ERRFLOOR
016A 00              951 +1         nop
                     953 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
016B 200B03          954 +1         jb      SKRH, $+6
016E 021089          955 +1         ljmp    ERRFLOOR
0171 00              956 +1         nop
                     958 +1         ZRUS_POSCH 1
0172 C219            959 +1         clr     PKO1       
0174 C228            960 +1         clr     PO1U      
0176 C228            961 +1         clr     PO1D      
0178 1211FB          962 +1         lcall   WRITEPORTS
                     964    
                     965 +1         LCALLB          S_RI, RCV_MESSAGE
017B 306103          966 +1         jnb     S_RI, $+6
017E 1212C0          967 +1         lcall   RCV_MESSAGE
0181 00              968 +1         nop
                     970            
0182 206403          971            jb       FLOORTIME, $+6 ; Ak uz raz presiel stanoveny cas na poschodi, nasledujucu i
                                                                               nstrukciu preskakujeme
0185 307AD9          972            jnb                T2_F, F1S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
0188 D264            973            setb     FLOORTIME      ; Nastav priznak, ze uz sme cakaly 3 s, Teraz sa uz mozme po
                                                                               hnut kedykolvek
                     974            
018A 307A14          975            jnb      T2_F, F1_KEEPALIVE_CONT
                     976 +1         TIMER2  60              ; ...a neurobim to dalsie 3 sekundy
018D 752D3C          977 +1            mov           T2_C, #60                              
0190 C27A            978 +1                  clr       T2_F                                  
0192 D2CA            979 +1                  setb      TR2                                             
                     981 +1         SEND_KEEPALIVE          ; Poslanie KEEPALIVE spravy       
0194 7400            982 +1       mov     A, #0h
0196 121283          983 +1       lcall   PRINTCHAR
0199 121283          984 +1       lcall   PRINTCHAR 
019C 747E            985 +1       mov     A, #7Eh 
019E 121283          986 +1       lcall   PRINTCHAR 
01A1                 988    F1_KEEPALIVE_CONT:
                     989            ;jmp     F1S  
                     990                           
                     991 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
01A1 A20D            992 +1         mov      C, DP          
DEBUG                                                                                                         PAGE 19

01A3 720E            993 +1         orl      C, DPZK        
01A5 720F            994 +1         orl      C, DPK         
01A7 9218            995 +1         mov      KS, C          
01A9 922F            996 +1         mov      LEDU, C        
01AB 922E            997 +1         mov      LEDD, C        
01AD 1211FB          998 +1         lcall   WRITEPORTS      
01B0 200FAE         1000            jb      DPK, F1S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
01B3 3045AB         1001            jnb     DOORCLSD, F1S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1002 +1         JE_VYBRATE_POSCHODIE F1S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
01B6 A20D           1003 +1         mov      C, DP         
01B8 720E           1004 +1         orl      C, DPZK        
01BA 720F           1005 +1         orl      C, DPK         
01BC 5006           1006 +1         jnc      $+8            
01BE E528           1007 +1         mov      A, INPORTA     
01C0 541E           1008 +1         anl      A, #00011110b  
01C2 609D           1009 +1         jz       F1S       
01C4                1011    F1C:        
01C4 E528           1012            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Kabina)
01C6 852AF0         1013            mov     B, ERRFLOOR_U   ; | maskujem chybne poschodia
01C9 53F00C         1014            anl     B, #00001100b   ; | na krajne poschodia dovolim ist
01CC 63F0FF         1015            xrl     B, #0FFH        ; | |
01CF 55F0           1016            anl     A, B            ; | |
01D1 541C           1017            anl     A, #00011100b   ; |
01D3 701A           1018            jnz     F1OK            ; ak ano, podme na to
01D5 E522           1019            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco viac ako poschodie na kto
                                                                               rom stojim (Sachta)
01D7 543E           1020            anl     A, #00111110b   ;
                    1021            ;ANLB    ACC.1, ERRF2_U  ; maskujem chybne poschodia (v smere hore)
                    1022 +1         ANLB    ACC.2, ERRF2_U  ; |
01D9 A2E2           1023 +1         mov   C, ACC.2
01DB B052           1024 +1         anl   C, /ERRF2_U
01DD 92E2           1025 +1         mov   ACC.2, C
                    1027 +1         ANLB    ACC.3, ERRF3_U  ; |
01DF A2E3           1028 +1         mov   C, ACC.3
01E1 B053           1029 +1         anl   C, /ERRF3_U
01E3 92E3           1030 +1         mov   ACC.3, C
                    1032 +1         ANLB    ACC.4, ERRF3_U  ; |
01E5 A2E4           1033 +1         mov   C, ACC.4
01E7 B053           1034 +1         anl   C, /ERRF3_U
01E9 92E4           1035 +1         mov   ACC.4, C
                    1037            ;ANLB    ACC.5, ERRF4_U  ; |
01EB 7002           1038            jnz     F1OK            ; ak ano, podme na to
01ED 2161           1039            jmp     F1S             ; Nemam sa kde hnut, opakujem
01EF 901748         1040    F1OK:   mov   DPTR, #COM_BUSY   ; Poslanie BUSY spravy 
01F2 121236         1041            lcall DISPSTR           ;
                    1042 +1         SET_UP                  ; rychly pohyb hore
01F5 D220           1043 +1         setb     UP
01F7 C221           1044 +1         clr      DOWN
01F9 D22F           1045 +1         setb     LEDU
01FB C22E           1046 +1         clr      LEDD 
                    1048 +1         SET_FAST                ; 
01FD D222           1049 +1         setb     FAST
01FF C223           1050 +1         clr      SLOW
0201 D218           1051 +1         setb     KS      
0203 1211FB         1053            lcall   WRITEPORTS      ; 
0206 020209         1054            jmp     UP1             ; prejdi do stavu UP1
DEBUG                                                                                                         PAGE 20

                    1055            
                    1056            
0209                1057    UP1:
                    1058            ;--------------------------
                    1059 +1         CFCSS     20, 9, 27, -1, -1
0209 633C09         1060 +1         xrl             G,  #9             
                    1061 +1         IF (-1 <> -1)
                    1062 +1             mov   A,  -1         
                    1063 +1             xrl   G,  A          
                    1064 +1         ENDIF    
020C E53C           1065 +1         mov   A,  G              
                    1066 +2         LCJNE A,  #20, CFCERR     
020E B41403         1067 +2         cjne    A, #20, $+6
0211 020217         1068 +2         jmp     $+6
0214 0210A3         1069 +2         ljmp    CFCERR
0217 00             1070 +2         nop
                    1071 +1         IF (27 <> -1)
0218 753D1B         1072 +1             mov         D1, #27     
                    1073 +1         ELSE
                    1074 +1             mov         D1, #32        
                    1075 +1         ENDIF                    
                    1076 +1         IF (-1 <> -1)
                    1077 +1             mov         D2, #-1     
                    1078 +1         ELSE
021B 753E20         1079 +1             mov         D2, #32        
                    1080 +1         ENDIF                    
021E 7414           1081 +1         mov       A, #20
0220 121283         1082 +1         lcall     PRINTCHAR        
                    1084            ;--------------------------
                    1085 +1                 POLOHA_LED 1  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0223 53240F         1086 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0226 D224           1087 +1         setb    FLED1
0228 1211FB         1088 +1         lcall   WRITEPORTS
                    1090 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
022B 1210F8         1091 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
022E 121194         1092 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0231 3009FA         1093 +1         jnb     MB1, $-3  ; 
0234 1210F8         1094 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0237 121194         1096    UP1A:   lcall   READPORTS       ; nacitanie dat
                    1097 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
023A 200B03         1098 +1         jb      SKRH, $+6
023D 021070         1099 +1         ljmp    ERR_SKRH
0240 00             1100 +1         nop
                    1102 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1103 +1                                                                                             
                                                                                                                 
                    1104 +1                                                                                             
                                                                                                                 
                    1105 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0001              1106 +1         COUNT    SET    COUNT+1                   
                    1107 +1         
0241 20091E         1108 +1         jb      MB1, ENDD0
                    1109 +1         
                    1110 +1         IF (MB1 EQ MB2)
DEBUG                                                                                                         PAGE 21

                    1111 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1112 +1         ENDIF 
                    1113 +1         IF (MB1 EQ MB1)
0244 754701         1114 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1115 +1         ENDIF 
                    1116 +1         
0247 304206         1117 +1         jnb     PKI2, $+9
024A C222           1118 +1         clr     FAST
024C D223           1119 +1         setb    SLOW
024E D238           1120 +1         setb    STOPPED         
0250 D252           1121 +1         setb    ERRF12_U
0252 D259           1122 +1         setb    ERRF12_D
0254 0539           1123 +1         inc     ERRF12_C
0256 C21A           1124 +1                     clr     PKO2                           
0258 C22A           1125 +1         clr     PO2U            
025A C229           1126 +1         clr     PO2D              
025C 1211FB         1127 +1                     lcall   WRITEPORTS
025F 02056D         1128 +1         ljmp    UP2
0262                1129 +1 ENDD0:
0262 00             1130 +1         nop
0263 200AD1         1132            jb      MB2, UP1A     ;-; mame uz 1. spomalovaciu clonku?
                    1133 +1         CLR_FLOOR_ERR   ERRF12
0266 C252           1134 +1         clr    ERRF12_U
0268 C259           1135 +1         clr    ERRF12_D
                    1136 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
026A 00             1137 +1         nop
                    1139 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
026B 1210F8         1140 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
026E 121194         1141 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0271 300AFA         1142 +1         jnb     MB2, $-3  ; 
0274 1210F8         1143 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1145            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0277 1211FB         1146            lcall   WRITEPORTS      ;
027A 02027D         1147            jmp     UP1_MB2       ;-; a prejdi do stavu UP1_MB2
                    1148            
                    1149            
027D                1150    UP1_MB2:
                    1151            ;--------------------------
                    1152 +1         CFCSS     2, 22, 13, -1, -1
027D 633C16         1153 +1         xrl             G,  #22             
                    1154 +1         IF (-1 <> -1)
                    1155 +1             mov   A,  -1         
                    1156 +1             xrl   G,  A          
                    1157 +1         ENDIF    
0280 E53C           1158 +1         mov   A,  G              
                    1159 +2         LCJNE A,  #2, CFCERR     
0282 B40203         1160 +2         cjne    A, #2, $+6
0285 02028B         1161 +2         jmp     $+6
0288 0210A3         1162 +2         ljmp    CFCERR
028B 00             1163 +2         nop
                    1164 +1         IF (13 <> -1)
028C 753D0D         1165 +1             mov         D1, #13     
                    1166 +1         ELSE
                    1167 +1             mov         D1, #32        
                    1168 +1         ENDIF                    
                    1169 +1         IF (-1 <> -1)
                    1170 +1             mov         D2, #-1     
DEBUG                                                                                                         PAGE 22

                    1171 +1         ELSE
028F 753E20         1172 +1             mov         D2, #32        
                    1173 +1         ENDIF                    
0292 7402           1174 +1         mov       A, #2
0294 121283         1175 +1         lcall     PRINTCHAR        
                    1177            ;--------------------------
                    1178 +1         ZAKMITC MB2             ; Pockame, kym odideme z poschodia (Clonky MB1)
0297 1210F8         1179 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
029A 121194         1180 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
029D 300AFA         1181 +1         jnb     MB2, $-3  ; 
02A0 1210F8         1182 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
02A3 121194         1184    UP1_MB2A: lcall   READPORTS       ; nacitanie dat
                    1185 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
02A6 200B03         1186 +1         jb      SKRH, $+6
02A9 021070         1187 +1         ljmp    ERR_SKRH
02AC 00             1188 +1         nop
                    1190 +1         SET_FLOOR_ERR   MB1, ERRF12, UP2, 2, %COUNT   ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    1191 +1                                                                                             
                                                                                                                 
                    1192 +1                                                                                             
                                                                                                                 
                    1193 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0002              1194 +1         COUNT    SET    COUNT+1                   
                    1195 +1         
02AD 20091E         1196 +1         jb      MB1, ENDD1
                    1197 +1         
                    1198 +1         IF (MB1 EQ MB2)
                    1199 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1200 +1         ENDIF 
                    1201 +1         IF (MB1 EQ MB1)
02B0 754701         1202 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1203 +1         ENDIF 
                    1204 +1         
02B3 304206         1205 +1         jnb     PKI2, $+9
02B6 C222           1206 +1         clr     FAST
02B8 D223           1207 +1         setb    SLOW
02BA D238           1208 +1         setb    STOPPED         
02BC D252           1209 +1         setb    ERRF12_U
02BE D259           1210 +1         setb    ERRF12_D
02C0 0539           1211 +1         inc     ERRF12_C
02C2 C21A           1212 +1                     clr     PKO2                           
02C4 C22A           1213 +1         clr     PO2U            
02C6 C229           1214 +1         clr     PO2D              
02C8 1211FB         1215 +1                     lcall   WRITEPORTS
02CB 02056D         1216 +1         ljmp    UP2
02CE                1217 +1 ENDD1:
02CE 00             1218 +1         nop
02CF 200AD1         1220            jb      MB2, UP1_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?  
                    1221 +1         CLR_FLOOR_ERR   ERRF12   
02D2 C252           1222 +1         clr    ERRF12_U
02D4 C259           1223 +1         clr    ERRF12_D
                    1224 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
02D6 00             1225 +1         nop
                    1227            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
02D7 1211FB         1228            lcall   WRITEPORTS      ;   
                    1229 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
DEBUG                                                                                                         PAGE 23

02DA 1210F8         1230 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
02DD 121194         1231 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
02E0 300AFA         1232 +1         jnb     MB2, $-3  ; 
02E3 1210F8         1233 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1235    
02E6                1236    UP1_MB2_CFC:     
                    1237            ;--------------------------
                    1238 +1         CFCSS     12, 14, -1, -1, -1
02E6 633C0E         1239 +1         xrl             G,  #14             
                    1240 +1         IF (-1 <> -1)
                    1241 +1             mov   A,  -1         
                    1242 +1             xrl   G,  A          
                    1243 +1         ENDIF    
02E9 E53C           1244 +1         mov   A,  G              
                    1245 +2         LCJNE A,  #12, CFCERR     
02EB B40C03         1246 +2         cjne    A, #12, $+6
02EE 0202F4         1247 +2         jmp     $+6
02F1 0210A3         1248 +2         ljmp    CFCERR
02F4 00             1249 +2         nop
                    1250 +1         IF (-1 <> -1)
                    1251 +1             mov         D1, #-1     
                    1252 +1         ELSE
02F5 753D20         1253 +1             mov         D1, #32        
                    1254 +1         ENDIF                    
                    1255 +1         IF (-1 <> -1)
                    1256 +1             mov         D2, #-1     
                    1257 +1         ELSE
02F8 753E20         1258 +1             mov         D2, #32        
                    1259 +1         ENDIF                    
02FB 740C           1260 +1         mov       A, #12
02FD 121283         1261 +1         lcall     PRINTCHAR        
                    1263            ;--------------------------
                    1264 +1         ZASTAV  2, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    1265 +1                                         
0300 C3             1266 +1         clr     C                       
0301 7400           1267 +1         mov     A, #0h                  
0303 7212           1268 +1         orl     C, PI2U      
0305 B00E           1269 +1         anl     C, /DPZK                
0307 7242           1270 +1         orl     C, PKI2          
0309 B052           1271 +1         anl     C, /ERRF2_U 
030B 720F           1272 +1         orl     C, DPK                  
030D 7238           1273 +1         orl     C, STOPPED              
030F 3400           1274 +1         addc    A, #0h                  
0311 704B           1276            jnz     U1_MB2C       ;-; Ak ano, zastav
                    1277 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi? (potom stojime
                                                                                urcite)
0313 E522           1278 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0315 33             1279 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0316 547E           1280 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1281 +1         
                    1282 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1283 +2         ANLB    ACC.3, ERRF2_U  ; |
0318 A2E3           1284 +2         mov   C, ACC.3
031A B052           1285 +2         anl   C, /ERRF2_U
DEBUG                                                                                                         PAGE 24

031C 92E3           1286 +2         mov   ACC.3, C
                    1287 +2         ANLB    ACC.4, ERRF3_U  ; |
031E A2E4           1288 +2         mov   C, ACC.4
0320 B053           1289 +2         anl   C, /ERRF3_U
0322 92E4           1290 +2         mov   ACC.4, C
                    1291 +2         ANLB    ACC.5, ERRF3_U  ; |
0324 A2E5           1292 +2         mov   C, ACC.5
0326 B053           1293 +2         anl   C, /ERRF3_U
0328 92E5           1294 +2         mov   ACC.5, C
                    1295 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1296 +1         
032A 7805           1297 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1298 +1  ; LL1: 
032C 6006           1299 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
032E C3             1300 +1         clr     C               ; Inak shiftnem o 2
032F 13             1301 +1         rrc     A               ;
0330 C3             1302 +1         clr     C               ;
0331 13             1303 +1         rrc     A               ;
0332 D8F8           1304 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1305 +1 ; LL2:
0334 7405           1306 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
0336 C3             1307 +1         clr     C               ;
0337 98             1308 +1         subb    A, R0           ;
                    1310 +1         LCJNE   A, #2, UP1_MB1  ; |   ak nie, nezastavujeme 
0338 B40203         1311 +1         cjne    A, #2, $+6
033B 020341         1312 +1         jmp     $+6
033E 020368         1313 +1         ljmp    UP1_MB1
0341 00             1314 +1         nop
                    1316 +1         VYSSIE_KABINA 2         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0342 E528           1317 +1         mov     A, INPORTA
0344 541E           1318 +1         anl     A, #00011110b
0346 852AF0         1319 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
0349 53F00C         1320 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
034C 63F0FF         1321 +1         xrl     B, #0FFH
034F 55F0           1322 +1         anl     A, B
0351 C3             1323 +1         clr     C
0352 13             1324 +1         rrc     A
                    1325 +1 ;LL1    
0353 7802           1326 +1         mov     R0, #2
0355 C3             1327 +1         clr     C
0356 13             1328 +1         rrc     A
0357 D8FC           1329 +1         djnz    R0, $-2;LL1
0359 6003           1331            jz      U1_MB2C         ; |   ak neni zastavujem         
035B 020368         1332            jmp     UP1_MB1          ; |   inak nezastavim        
035E D223           1333    U1_MB2C: setb    SLOW            ;       Ak ano, spomalme
0360 C222           1334            clr     FAST            ; 
0362 1211FB         1335            lcall   WRITEPORTS      ;         
0365 0203C0         1336            jmp     UP1_STOP       ;-; a prejdi do stavu UP1_STOP 
                    1337            
                    1338            
0368                1339    UP1_MB1:
                    1340            ;--------------------------
                    1341 +1         CFCSS     6, 10, 9, 14, -1
DEBUG                                                                                                         PAGE 25

0368 633C0A         1342 +1         xrl             G,  #10             
                    1343 +1         IF (-1 <> -1)
                    1344 +1             mov   A,  -1         
                    1345 +1             xrl   G,  A          
                    1346 +1         ENDIF    
036B E53C           1347 +1         mov   A,  G              
                    1348 +2         LCJNE A,  #6, CFCERR     
036D B40603         1349 +2         cjne    A, #6, $+6
0370 020376         1350 +2         jmp     $+6
0373 0210A3         1351 +2         ljmp    CFCERR
0376 00             1352 +2         nop
                    1353 +1         IF (9 <> -1)
0377 753D09         1354 +1             mov         D1, #9     
                    1355 +1         ELSE
                    1356 +1             mov         D1, #32        
                    1357 +1         ENDIF                    
                    1358 +1         IF (14 <> -1)
037A 753E0E         1359 +1             mov         D2, #14     
                    1360 +1         ELSE
                    1361 +1             mov         D2, #32        
                    1362 +1         ENDIF                    
037D 7406           1363 +1         mov       A, #6
037F 121283         1364 +1         lcall     PRINTCHAR        
                    1366            ;--------------------------
                    1367 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0382 1210F8         1368 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0385 121194         1369 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0388 300AFA         1370 +1         jnb     MB2, $-3  ; 
038B 1210F8         1371 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
038E 121194         1373    UP1_MB1_C:        lcall   READPORTS       ; nacitanie dat
                    1374 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0391 200B03         1375 +1         jb      SKRH, $+6
0394 021070         1376 +1         ljmp    ERR_SKRH
0397 00             1377 +1         nop
                    1379 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1380 +1                                                                                             
                                                                                                                 
                    1381 +1                                                                                             
                                                                                                                 
                    1382 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0003              1383 +1         COUNT    SET    COUNT+1                   
                    1384 +1         
0398 200A1E         1385 +1         jb      MB2, ENDD2
                    1386 +1         
                    1387 +1         IF (MB2 EQ MB2)
039B 754703         1388 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1389 +1         ENDIF 
                    1390 +1         IF (MB2 EQ MB1)
                    1391 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1392 +1         ENDIF 
                    1393 +1         
039E 304206         1394 +1         jnb     PKI2, $+9
03A1 C222           1395 +1         clr     FAST
03A3 D223           1396 +1         setb    SLOW
03A5 D238           1397 +1         setb    STOPPED         
03A7 D252           1398 +1         setb    ERRF2_U
DEBUG                                                                                                         PAGE 26

03A9 D25A           1399 +1         setb    ERRF2_D
03AB 0536           1400 +1         inc     ERRF2_C
03AD C21A           1401 +1                     clr     PKO2                           
03AF C22A           1402 +1         clr     PO2U            
03B1 C229           1403 +1         clr     PO2D              
03B3 1211FB         1404 +1                     lcall   WRITEPORTS
03B6 0205E5         1405 +1         ljmp    UP2_MB2
03B9                1406 +1 ENDD2:
03B9 00             1407 +1         nop
03BA 2009D1         1409            jb      MB1, UP1_MB1_C  ;-; Sme na zastavovacej clonke?
03BD 02056D         1410            ljmp    UP2             ; |   inak nezastavim        
                    1411    
03C0                1412    UP1_STOP:
                    1413            ;--------------------------
                    1414 +1         CFCSS     28, 16, 9, 20, -1
03C0 633C10         1415 +1         xrl             G,  #16             
                    1416 +1         IF (-1 <> -1)
                    1417 +1             mov   A,  -1         
                    1418 +1             xrl   G,  A          
                    1419 +1         ENDIF    
03C3 E53C           1420 +1         mov   A,  G              
                    1421 +2         LCJNE A,  #28, CFCERR     
03C5 B41C03         1422 +2         cjne    A, #28, $+6
03C8 0203CE         1423 +2         jmp     $+6
03CB 0210A3         1424 +2         ljmp    CFCERR
03CE 00             1425 +2         nop
                    1426 +1         IF (9 <> -1)
03CF 753D09         1427 +1             mov         D1, #9     
                    1428 +1         ELSE
                    1429 +1             mov         D1, #32        
                    1430 +1         ENDIF                    
                    1431 +1         IF (20 <> -1)
03D2 753E14         1432 +1             mov         D2, #20     
                    1433 +1         ELSE
                    1434 +1             mov         D2, #32        
                    1435 +1         ENDIF                    
03D5 741C           1436 +1         mov       A, #28
03D7 121283         1437 +1         lcall     PRINTCHAR        
                    1439            ;--------------------------
03DA 121194         1440    UP1_STOP_C: lcall   READPORTS       ; nacitanie dat
                    1441 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
03DD 200B03         1442 +1         jb      SKRH, $+6
03E0 021070         1443 +1         ljmp    ERR_SKRH
03E3 00             1444 +1         nop
                    1446 +1         SET_FLOOR_ERR   MB2, ERRF2, UP2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    1447 +1                                                                                             
                                                                                                                 
                    1448 +1                                                                                             
                                                                                                                 
                    1449 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0004              1450 +1         COUNT    SET    COUNT+1                   
                    1451 +1         
03E4 200A1E         1452 +1         jb      MB2, ENDD3
                    1453 +1         
                    1454 +1         IF (MB2 EQ MB2)
03E7 754703         1455 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1456 +1         ENDIF 
DEBUG                                                                                                         PAGE 27

                    1457 +1         IF (MB2 EQ MB1)
                    1458 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1459 +1         ENDIF 
                    1460 +1         
03EA 304206         1461 +1         jnb     PKI2, $+9
03ED C222           1462 +1         clr     FAST
03EF D223           1463 +1         setb    SLOW
03F1 D238           1464 +1         setb    STOPPED         
03F3 D252           1465 +1         setb    ERRF2_U
03F5 D25A           1466 +1         setb    ERRF2_D
03F7 0536           1467 +1         inc     ERRF2_C
03F9 C21A           1468 +1                     clr     PKO2                           
03FB C22A           1469 +1         clr     PO2U            
03FD C229           1470 +1         clr     PO2D              
03FF 1211FB         1471 +1                     lcall   WRITEPORTS
0402 0205E5         1472 +1         ljmp    UP2_MB2
0405                1473 +1 ENDD3:
0405 00             1474 +1         nop
0406 2009D1         1476            jb      MB1, UP1_STOP_C  ;-; Sme na zastavovacej clonke?      
0409 C220           1477            clr     UP              ; zastav motor
040B D23A           1478            setb    UPOld           ;       (a zalohuj) 
040D C23B           1479            clr     DOWNOld         ;       (a zalohuj)
040F C222           1480            clr     FAST            ; 
0411 1211FB         1481            lcall   WRITEPORTS      ; 
0414 020417         1482            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2   
                    1483    
                    1484    ;------------------------------------------------------------------------------- << 2. posch
                                                                               odie >>
                    1485    
0417                1486    FLOOR2:
                    1487            ;--------------------------
                    1488 +1         CFCSS     15, 26, 0, 30, D1
0417 633C1A         1489 +1         xrl             G,  #26             
                    1490 +1         IF (D1 <> -1)
041A E53D           1491 +1             mov   A,  D1         
041C 623C           1492 +1             xrl   G,  A          
                    1493 +1         ENDIF    
041E E53C           1494 +1         mov   A,  G              
                    1495 +2         LCJNE A,  #15, CFCERR     
0420 B40F03         1496 +2         cjne    A, #15, $+6
0423 020429         1497 +2         jmp     $+6
0426 0210A3         1498 +2         ljmp    CFCERR
0429 00             1499 +2         nop
                    1500 +1         IF (0 <> -1)
042A 753D00         1501 +1             mov         D1, #0     
                    1502 +1         ELSE
                    1503 +1             mov         D1, #32        
                    1504 +1         ENDIF                    
                    1505 +1         IF (30 <> -1)
042D 753E1E         1506 +1             mov         D2, #30     
                    1507 +1         ELSE
                    1508 +1             mov         D2, #32        
                    1509 +1         ENDIF                    
0430 740F           1510 +1         mov       A, #15
0432 121283         1511 +1         lcall     PRINTCHAR        
                    1513            ;--------------------------
                    1514 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
DEBUG                                                                                                         PAGE 28

0435 53240F         1515 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0438 D225           1516 +1         setb    FLED2
043A 1211FB         1517 +1         lcall   WRITEPORTS
043D C238           1519            clr     STOPPED
                    1520 +1         TIMER2  60              ; (Timer - 3s)
043F 752D3C         1521 +1            mov           T2_C, #60                              
0442 C27A           1522 +1                  clr       T2_F                                  
0444 D2CA           1523 +1                  setb      TR2                                             
                    1525 +1         ROZSVIET_SMER_LED
0446 D22F           1526 +1         setb    LEDU            ;
0448 D22E           1527 +1         setb    LEDD            ;
044A 1211FB         1528 +1         lcall   WRITEPORTS      ;
044D 754640         1530            mov     POSCHODIE, #40h ; 0100 0000 - posch. 2
0450 121194         1531    F2S:    lcall   READPORTS     ;-; nacitanie dat
                    1532 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0453 200A03         1533 +1         jb      MB2, $+6
0456 021089         1534 +1         ljmp    ERRFLOOR
0459 00             1535 +1         nop
                    1537 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
045A 200B03         1538 +1         jb      SKRH, $+6
045D 021089         1539 +1         ljmp    ERRFLOOR
0460 00             1540 +1         nop
                    1542 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0461 200C03         1543 +1         jb      SKRD, $+6
0464 021089         1544 +1         ljmp    ERRFLOOR
0467 00             1545 +1         nop
                    1547 +1         ZRUS_POSCH 2
0468 C21A           1548 +1         clr     PKO2       
046A C22A           1549 +1         clr     PO2U      
046C C229           1550 +1         clr     PO2D      
046E 1211FB         1551 +1         lcall   WRITEPORTS
                    1553            
                    1554 +1         LCALLB          S_RI, RCV_MESSAGE
0471 306103         1555 +1         jnb     S_RI, $+6
0474 1212C0         1556 +1         lcall   RCV_MESSAGE
0477 00             1557 +1         nop
                    1559            
0478 307AD5         1560            jnb                T2_F, F2S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    1561 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
047B A20D           1562 +1         mov      C, DP          
047D 720E           1563 +1         orl      C, DPZK        
047F 720F           1564 +1         orl      C, DPK         
0481 9218           1565 +1         mov      KS, C          
0483 922F           1566 +1         mov      LEDU, C        
0485 922E           1567 +1         mov      LEDD, C        
0487 1211FB         1568 +1         lcall   WRITEPORTS      
048A 200FC3         1570            jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
048D 3045C0         1571            jnb     DOORCLSD, F2S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    1572 +1         JE_VYBRATE_POSCHODIE F2S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0490 A20D           1573 +1         mov      C, DP         
0492 720E           1574 +1         orl      C, DPZK        
0494 720F           1575 +1         orl      C, DPK         
0496 5006           1576 +1         jnc      $+8            
0498 E528           1577 +1         mov      A, INPORTA     
DEBUG                                                                                                         PAGE 29

049A 541E           1578 +1         anl      A, #00011110b  
049C 60B2           1579 +1         jz       F2S       
                    1581            ;clr     PKO2          ;-; vynulovanie volby poschodia na ktorom stojim
                    1582            ;clr     PO2U            ;
                    1583            ;clr     PO2D            ;
                    1584            ;lcall   WRITEPORTS      ;
                    1585            ;jb      DPK, F2S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
                    1586            ;_BP_
049E 782A           1587            mov     R0, #ERRFLOOR_U ;   Default predpokladam, ze mam namierene hore (pozeram por
                                                                               uchy poschodia smerom hore)
04A0 79F8           1588            mov     R1, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                kabina
04A2 7AF8           1589            mov     R2, #11111000b  ;-; Default predpokladam, ze mam namierene hore (na 3. a 4.)
                                                                                sachta
04A4 203A0A         1590            jb      UPOld, F2OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
04A7 E9             1591            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
04A8 F4             1592            cpl     A               ;       |
04A9 F9             1593            mov     R1, A           ;       |
04AA EA             1594            mov     A, R2           ;       A znegujeme aj masku sachty
04AB F4             1595            cpl     A               ;       |
04AC FA             1596            mov     R2, A           ;       |  
04AD E8             1597            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
04AE 6401           1598            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
04B0 F8             1599            mov     R0, A           ;       |  
04B1                1600    F2OK:   ; Pohyb v jednom smere (nevieme v ktorom)
04B1 E528           1601            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
04B3 86F0           1602            mov     B, @R0          ;  | Maskujem chybne poschodia
04B5 53F00C         1603            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04B8 63F0FF         1604            xrl     B, #0FFH        ;  |
04BB 55F0           1605            anl     A, B            ;  |
04BD 541A           1606            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
04BF 59             1607            anl     A, R1           ;  | 
                    1608 +1         ljnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
04C0 6003           1609 +1         jz      $+5
04C2 020539         1610 +1         ljmp    F2
04C5 00             1611 +1         nop
                    1613                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
04C6 E528           1614            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
04C8 86F0           1615            mov     B, @R0          ;  | Maskujem chybne poschodia
04CA 53F00C         1616            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
04CD 63F0FF         1617            xrl     B, #0FFH        ;  | |
04D0 55F0           1618            anl     A, B            ;  | |
04D2 541A           1619            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               ) 
04D4 7021           1620            jnz     F2SW            ;  | Ak ano, idem rovno zistovat opacny smer.
04D6 E522           1621            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
04D8 5439           1622            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
04DA 5A             1623            anl     A, R2           ;  |   
04DB 86F0           1624            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1625            ;ANLB    ACC.0, B.1      ;  | 
                    1626 +1         ANLB    ACC.1, B.2      ;  | 
04DD A2E1           1627 +1         mov   C, ACC.1
04DF B0F2           1628 +1         anl   C, /B.2
DEBUG                                                                                                         PAGE 30

04E1 92E1           1629 +1         mov   ACC.1, C
                    1631 +1         ANLB    ACC.2, B.2      ;  |
04E3 A2E2           1632 +1         mov   C, ACC.2
04E5 B0F2           1633 +1         anl   C, /B.2
04E7 92E2           1634 +1         mov   ACC.2, C
                    1636 +1         ANLB    ACC.3, B.3      ;  |
04E9 A2E3           1637 +1         mov   C, ACC.3
04EB B0F3           1638 +1         anl   C, /B.3
04ED 92E3           1639 +1         mov   ACC.3, C
                    1641 +1         ANLB    ACC.4, B.3      ;  |
04EF A2E4           1642 +1         mov   C, ACC.4
04F1 B0F3           1643 +1         anl   C, /B.3
04F3 92E4           1644 +1         mov   ACC.4, C
                    1646            ;ANLB    ACC.5, B.4      ;  |
04F5 7042           1647            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
                    1648            ; Pohyb v opacnom smere (nevieme v ktorom)
04F7 E8             1649    F2SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
04F8 6401           1650            xrl     A, #01h         ;  |
04FA F8             1651            mov     R0, A           ;  |
04FB B23A           1652            cpl     UPOld           ;  Znegujem stary posun
04FD B23B           1653            cpl     DOWNOld         ;  |
04FF E9             1654            mov     A, R1           ;  Znegujeme masky
0500 F4             1655            cpl     A               ;  |
0501 F9             1656            mov     R1, A           ;  |
0502 EA             1657            mov     A, R2           ;  |
0503 F4             1658            cpl     A               ;  |
0504 FA             1659            mov     R2, A           ;  |               
0505 E528           1660            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
0507 86F0           1661            mov     B, @R0          ;  | Maskujem chybne poschodia
0509 53F00C         1662            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
050C 63F0FF         1663            xrl     B, #0FFH        ;  | |
050F 55F0           1664            anl     A, B            ;  | |
0511 541A           1665            anl     A, #00011010b   ;  | Beriem iba bity predstavujuce tlacidla poschodi   
0513 59             1666            anl     A, R1           ;  | 
0514 7023           1667            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0516 E522           1668            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
0518 5439           1669            anl     A, #00111001b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
051A 5A             1670            anl     A, R2           ;  | 
051B 86F0           1671            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    1672            ;ANLB    ACC.0, B.1      ;  | 
                    1673 +1         ANLB    ACC.1, B.2      ;  | 
051D A2E1           1674 +1         mov   C, ACC.1
051F B0F2           1675 +1         anl   C, /B.2
0521 92E1           1676 +1         mov   ACC.1, C
                    1678 +1         ANLB    ACC.2, B.2      ;  |
0523 A2E2           1679 +1         mov   C, ACC.2
0525 B0F2           1680 +1         anl   C, /B.2
0527 92E2           1681 +1         mov   ACC.2, C
                    1683 +1         ANLB    ACC.3, B.3      ;  |
0529 A2E3           1684 +1         mov   C, ACC.3
052B B0F3           1685 +1         anl   C, /B.3
052D 92E3           1686 +1         mov   ACC.3, C
                    1688 +1         ANLB    ACC.4, B.3      ;  |
052F A2E4           1689 +1         mov   C, ACC.4
DEBUG                                                                                                         PAGE 31

0531 B0F3           1690 +1         anl   C, /B.3
0533 92E4           1691 +1         mov   ACC.4, C
                    1693            ;ANLB    ACC.5, B.4      ;  |
0535 7002           1694            jnz     F2              ; nasli sme poschodie v tomto smere, mozme ist
0537 8150           1695            jmp     F2S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
0539 901748         1696    F2:     mov   DPTR, #COM_BUSY   ; Poslanie BUSY spravy 
053C 121236         1697            lcall DISPSTR           ;
053F 203A03         1698            jb      UPOld, F2UP     ;   
0542 020559         1699            jmp     F2DOWN          ;
                    1700 +1 F2UP:   SET_UP                  ; rychly pohyb hore
0545 D220           1701 +1         setb     UP
0547 C221           1702 +1         clr      DOWN
0549 D22F           1703 +1         setb     LEDU
054B C22E           1704 +1         clr      LEDD 
                    1706 +1         SET_FAST                ; 
054D D222           1707 +1         setb     FAST
054F C223           1708 +1         clr      SLOW
0551 D218           1709 +1         setb     KS      
0553 1211FB         1711            lcall   WRITEPORTS      ;   
0556 02056D         1712            jmp     UP2           ;-; prejdi do stavu UP2    
                    1713 +1 F2DOWN: SET_DOWN                  ; rychly pohyb dole
0559 C220           1714 +1         clr     UP
055B D221           1715 +1         setb    DOWN
055D C22F           1716 +1         clr     LEDU
055F D22E           1717 +1         setb    LEDD 
                    1719 +1         SET_FAST                ; 
0561 D222           1720 +1         setb     FAST
0563 C223           1721 +1         clr      SLOW
0565 D218           1722 +1         setb     KS      
0567 1211FB         1724            lcall   WRITEPORTS      ; 
056A 020783         1725            jmp     DOWN2         ;-; prejdi do stavu DOWN2    
                    1726            
                    1727                
056D                1728    UP2:
                    1729            ;--------------------------
                    1730 +1         CFCSS     8, 7, 18, 0, D1
056D 633C07         1731 +1         xrl             G,  #7             
                    1732 +1         IF (D1 <> -1)
0570 E53D           1733 +1             mov   A,  D1         
0572 623C           1734 +1             xrl   G,  A          
                    1735 +1         ENDIF    
0574 E53C           1736 +1         mov   A,  G              
                    1737 +2         LCJNE A,  #8, CFCERR     
0576 B40803         1738 +2         cjne    A, #8, $+6
0579 02057F         1739 +2         jmp     $+6
057C 0210A3         1740 +2         ljmp    CFCERR
057F 00             1741 +2         nop
                    1742 +1         IF (18 <> -1)
0580 753D12         1743 +1             mov         D1, #18     
                    1744 +1         ELSE
                    1745 +1             mov         D1, #32        
                    1746 +1         ENDIF                    
                    1747 +1         IF (0 <> -1)
0583 753E00         1748 +1             mov         D2, #0     
                    1749 +1         ELSE
                    1750 +1             mov         D2, #32        
                    1751 +1         ENDIF                    
0586 7408           1752 +1         mov       A, #8
DEBUG                                                                                                         PAGE 32

0588 121283         1753 +1         lcall     PRINTCHAR        
                    1755            ;--------------------------
                    1756 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
058B 53240F         1757 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
058E D225           1758 +1         setb    FLED2
0590 1211FB         1759 +1         lcall   WRITEPORTS
                    1761 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0593 1210F8         1762 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0596 121194         1763 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0599 3009FA         1764 +1         jnb     MB1, $-3  ; 
059C 1210F8         1765 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
059F 121194         1767    UP2A:   lcall   READPORTS       ; nacitanie dat
                    1768 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
05A2 200B03         1769 +1         jb      SKRH, $+6
05A5 021070         1770 +1         ljmp    ERR_SKRH
05A8 00             1771 +1         nop
                    1773 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie clo
                                                                               nky (narazil som na zastavovaciu) <<<
                    1774 +1                                                                                             
                                                                                                                 
                    1775 +1                                                                                             
                                                                                                                 
                    1776 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0005              1777 +1         COUNT    SET    COUNT+1                   
                    1778 +1         
05A9 20091E         1779 +1         jb      MB1, ENDD4
                    1780 +1         
                    1781 +1         IF (MB1 EQ MB2)
                    1782 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1783 +1         ENDIF 
                    1784 +1         IF (MB1 EQ MB1)
05AC 754701         1785 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1786 +1         ENDIF 
                    1787 +1         
05AF 304306         1788 +1         jnb     PKI3, $+9
05B2 C222           1789 +1         clr     FAST
05B4 D223           1790 +1         setb    SLOW
05B6 D238           1791 +1         setb    STOPPED         
05B8 D253           1792 +1         setb    ERRF23_U
05BA D25A           1793 +1         setb    ERRF23_D
05BC 053A           1794 +1         inc     ERRF23_C
05BE C21B           1795 +1                     clr     PKO3                           
05C0 C22C           1796 +1         clr     PO3U            
05C2 C22B           1797 +1         clr     PO3D              
05C4 1211FB         1798 +1                     lcall   WRITEPORTS
05C7 020A24         1799 +1         ljmp    UP3
05CA                1800 +1 ENDD4:
05CA 00             1801 +1         nop
05CB 200AD1         1803            jb      MB2, UP2A     ;-; mame uz 1. spomalovaciu clonku?
                    1804 +1         CLR_FLOOR_ERR   ERRF23
05CE C253           1805 +1         clr    ERRF23_U
05D0 C25A           1806 +1         clr    ERRF23_D
                    1807 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
05D2 00             1808 +1         nop
                    1810 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
DEBUG                                                                                                         PAGE 33

05D3 1210F8         1811 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
05D6 121194         1812 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
05D9 300AFA         1813 +1         jnb     MB2, $-3  ; 
05DC 1210F8         1814 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1816            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
05DF 1211FB         1817            lcall   WRITEPORTS      ;
05E2 0205E5         1818            jmp     UP2_MB2       ;-; a prejdi do stavu UP2_MB2
                    1819            
                    1820            
05E5                1821    UP2_MB2:
                    1822            ;--------------------------
                    1823 +1         CFCSS     18, 26, 8, -1, D2
05E5 633C1A         1824 +1         xrl             G,  #26             
                    1825 +1         IF (D2 <> -1)
05E8 E53E           1826 +1             mov   A,  D2         
05EA 623C           1827 +1             xrl   G,  A          
                    1828 +1         ENDIF    
05EC E53C           1829 +1         mov   A,  G              
                    1830 +2         LCJNE A,  #18, CFCERR     
05EE B41203         1831 +2         cjne    A, #18, $+6
05F1 0205F7         1832 +2         jmp     $+6
05F4 0210A3         1833 +2         ljmp    CFCERR
05F7 00             1834 +2         nop
                    1835 +1         IF (8 <> -1)
05F8 753D08         1836 +1             mov         D1, #8     
                    1837 +1         ELSE
                    1838 +1             mov         D1, #32        
                    1839 +1         ENDIF                    
                    1840 +1         IF (-1 <> -1)
                    1841 +1             mov         D2, #-1     
                    1842 +1         ELSE
05FB 753E20         1843 +1             mov         D2, #32        
                    1844 +1         ENDIF                    
05FE 7412           1845 +1         mov       A, #18
0600 121283         1846 +1         lcall     PRINTCHAR        
                    1848            ;--------------------------
                    1849 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0603 1210F8         1850 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0606 121194         1851 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0609 300AFA         1852 +1         jnb     MB2, $-3  ; 
060C 1210F8         1853 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
060F 121194         1855    UP2_MB2A: lcall   READPORTS       ; nacitanie dat
                    1856 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0612 200B03         1857 +1         jb      SKRH, $+6
0615 021070         1858 +1         ljmp    ERR_SKRH
0618 00             1859 +1         nop
                    1861 +1         SET_FLOOR_ERR   MB1, ERRF23, UP3, 3, %COUNT ; >>> CHYBA, Vypadla spomalovacia clonka
                                                                                (narazil som na zastavovaciu) <<<
                    1862 +1                                                                                             
                                                                                                                 
                    1863 +1                                                                                             
                                                                                                                 
                    1864 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0006              1865 +1         COUNT    SET    COUNT+1                   
                    1866 +1         
0619 20091E         1867 +1         jb      MB1, ENDD5
DEBUG                                                                                                         PAGE 34

                    1868 +1         
                    1869 +1         IF (MB1 EQ MB2)
                    1870 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    1871 +1         ENDIF 
                    1872 +1         IF (MB1 EQ MB1)
061C 754701         1873 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    1874 +1         ENDIF 
                    1875 +1         
061F 304306         1876 +1         jnb     PKI3, $+9
0622 C222           1877 +1         clr     FAST
0624 D223           1878 +1         setb    SLOW
0626 D238           1879 +1         setb    STOPPED         
0628 D253           1880 +1         setb    ERRF23_U
062A D25A           1881 +1         setb    ERRF23_D
062C 053A           1882 +1         inc     ERRF23_C
062E C21B           1883 +1                     clr     PKO3                           
0630 C22C           1884 +1         clr     PO3U            
0632 C22B           1885 +1         clr     PO3D              
0634 1211FB         1886 +1                     lcall   WRITEPORTS
0637 020A24         1887 +1         ljmp    UP3
063A                1888 +1 ENDD5:
063A 00             1889 +1         nop
063B 200AD1         1891            jb      MB2, UP2_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?   
                    1892 +1         CLR_FLOOR_ERR   ERRF23       
063E C253           1893 +1         clr    ERRF23_U
0640 C25A           1894 +1         clr    ERRF23_D
                    1895 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0642 00             1896 +1         nop
                    1898            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0643 1211FB         1899            lcall   WRITEPORTS      ;
                    1900 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0646 1210F8         1901 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0649 121194         1902 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
064C 300AFA         1903 +1         jnb     MB2, $-3  ; 
064F 1210F8         1904 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    1906            
0652                1907    UP2_MB2_CFC:     
                    1908            ;--------------------------
                    1909 +1         CFCSS     1, 19, -1, -1, -1
0652 633C13         1910 +1         xrl             G,  #19             
                    1911 +1         IF (-1 <> -1)
                    1912 +1             mov   A,  -1         
                    1913 +1             xrl   G,  A          
                    1914 +1         ENDIF    
0655 E53C           1915 +1         mov   A,  G              
                    1916 +2         LCJNE A,  #1, CFCERR     
0657 B40103         1917 +2         cjne    A, #1, $+6
065A 020660         1918 +2         jmp     $+6
065D 0210A3         1919 +2         ljmp    CFCERR
0660 00             1920 +2         nop
                    1921 +1         IF (-1 <> -1)
                    1922 +1             mov         D1, #-1     
                    1923 +1         ELSE
0661 753D20         1924 +1             mov         D1, #32        
                    1925 +1         ENDIF                    
                    1926 +1         IF (-1 <> -1)
                    1927 +1             mov         D2, #-1     
DEBUG                                                                                                         PAGE 35

                    1928 +1         ELSE
0664 753E20         1929 +1             mov         D2, #32        
                    1930 +1         ENDIF                    
0667 7401           1931 +1         mov       A, #1
0669 121283         1932 +1         lcall     PRINTCHAR        
                    1934            ;--------------------------        
                    1935 +1         ZASTAV  3, U            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    1936 +1                                         
066C C3             1937 +1         clr     C                       
066D 7400           1938 +1         mov     A, #0h                  
066F 7214           1939 +1         orl     C, PI3U      
0671 B00E           1940 +1         anl     C, /DPZK                
0673 7243           1941 +1         orl     C, PKI3          
0675 B053           1942 +1         anl     C, /ERRF3_U 
0677 720F           1943 +1         orl     C, DPK                  
0679 7238           1944 +1         orl     C, STOPPED              
067B 3400           1945 +1         addc    A, #0h                  
067D 704B           1947            jnz     U2_MB2C       ;-; Ak ano, zastav
                    1948 +1         NAJVYSSIE               ; | ..a sme na najvyssom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
067F E522           1949 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0681 33             1950 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0682 547E           1951 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    1952 +1         
                    1953 +1         ;ANLB    ACC.2, ERRF2_U  ; maskujem chybne poschodia
                    1954 +2         ANLB    ACC.3, ERRF2_U  ; |
0684 A2E3           1955 +2         mov   C, ACC.3
0686 B052           1956 +2         anl   C, /ERRF2_U
0688 92E3           1957 +2         mov   ACC.3, C
                    1958 +2         ANLB    ACC.4, ERRF3_U  ; |
068A A2E4           1959 +2         mov   C, ACC.4
068C B053           1960 +2         anl   C, /ERRF3_U
068E 92E4           1961 +2         mov   ACC.4, C
                    1962 +2         ANLB    ACC.5, ERRF3_U  ; |
0690 A2E5           1963 +2         mov   C, ACC.5
0692 B053           1964 +2         anl   C, /ERRF3_U
0694 92E5           1965 +2         mov   ACC.5, C
                    1966 +1         ;ANLB    ACC.6, ERRF4_U  ; |
                    1967 +1         
0696 7805           1968 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    1969 +1  ; LL1: 
0698 6006           1970 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
069A C3             1971 +1         clr     C               ; Inak shiftnem o 2
069B 13             1972 +1         rrc     A               ;
069C C3             1973 +1         clr     C               ;
069D 13             1974 +1         rrc     A               ;
069E D8F8           1975 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    1976 +1 ; LL2:
06A0 7405           1977 +1         mov     A, #5           ; vysledne (najnizsie zvolene) poschodie je index v R0
06A2 C3             1978 +1         clr     C               ;
06A3 98             1979 +1         subb    A, R0           ;
                    1981 +1         LCJNE   A, #3, UP2_MB1  ; |   ak nie, nezastavujeme  
DEBUG                                                                                                         PAGE 36

06A4 B40303         1982 +1         cjne    A, #3, $+6
06A7 0206AD         1983 +1         jmp     $+6
06AA 0206D4         1984 +1         ljmp    UP2_MB1
06AD 00             1985 +1         nop
                    1987 +1         VYSSIE_KABINA 3         ; | ..ok, sme na najvyssom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
06AE E528           1988 +1         mov     A, INPORTA
06B0 541E           1989 +1         anl     A, #00011110b
06B2 852AF0         1990 +1         mov     B, ERRFLOOR_U   ; maskujem chybne poschodia
06B5 53F00C         1991 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
06B8 63F0FF         1992 +1         xrl     B, #0FFH
06BB 55F0           1993 +1         anl     A, B
06BD C3             1994 +1         clr     C
06BE 13             1995 +1         rrc     A
                    1996 +1 ;LL1    
06BF 7803           1997 +1         mov     R0, #3
06C1 C3             1998 +1         clr     C
06C2 13             1999 +1         rrc     A
06C3 D8FC           2000 +1         djnz    R0, $-2;LL1
06C5 6003           2002            jz      U2_MB2C         ; |   ak neni zastavujem  
06C7 0206D4         2003            ljmp    UP2_MB1         ; |   inak nezastavim
06CA D223           2004    U2_MB2C: setb    SLOW            ;       Ak ano, spomalme
06CC C222           2005            clr     FAST            ; 
06CE 1211FB         2006            lcall   WRITEPORTS      ;
06D1 02072C         2007            jmp     UP2_STOP       ;-; a prejdi do stavu UP2_STOP 
                    2008          
06D4                2009    UP2_MB1:
                    2010            ;--------------------------
                    2011 +1         CFCSS     26, 27, 0, 17, -1
06D4 633C1B         2012 +1         xrl             G,  #27             
                    2013 +1         IF (-1 <> -1)
                    2014 +1             mov   A,  -1         
                    2015 +1             xrl   G,  A          
                    2016 +1         ENDIF    
06D7 E53C           2017 +1         mov   A,  G              
                    2018 +2         LCJNE A,  #26, CFCERR     
06D9 B41A03         2019 +2         cjne    A, #26, $+6
06DC 0206E2         2020 +2         jmp     $+6
06DF 0210A3         2021 +2         ljmp    CFCERR
06E2 00             2022 +2         nop
                    2023 +1         IF (0 <> -1)
06E3 753D00         2024 +1             mov         D1, #0     
                    2025 +1         ELSE
                    2026 +1             mov         D1, #32        
                    2027 +1         ENDIF                    
                    2028 +1         IF (17 <> -1)
06E6 753E11         2029 +1             mov         D2, #17     
                    2030 +1         ELSE
                    2031 +1             mov         D2, #32        
                    2032 +1         ENDIF                    
06E9 741A           2033 +1         mov       A, #26
06EB 121283         2034 +1         lcall     PRINTCHAR        
                    2036            ;--------------------------
                    2037 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
06EE 1210F8         2038 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
06F1 121194         2039 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
06F4 300AFA         2040 +1         jnb     MB2, $-3  ; 
DEBUG                                                                                                         PAGE 37

06F7 1210F8         2041 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
06FA 121194         2043    UP2_MB1_C: lcall   READPORTS       ; nacitanie dat
                    2044 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
06FD 200B03         2045 +1         jb      SKRH, $+6
0700 021070         2046 +1         ljmp    ERR_SKRH
0703 00             2047 +1         nop
                    2049 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia cl
                                                                               onka (narazil som na spomalovaciu) <<<
                    2050 +1                                                                                             
                                                                                                                 
                    2051 +1                                                                                             
                                                                                                                 
                    2052 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0007              2053 +1         COUNT    SET    COUNT+1                   
                    2054 +1         
0704 200A1E         2055 +1         jb      MB2, ENDD6
                    2056 +1         
                    2057 +1         IF (MB2 EQ MB2)
0707 754703         2058 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2059 +1         ENDIF 
                    2060 +1         IF (MB2 EQ MB1)
                    2061 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2062 +1         ENDIF 
                    2063 +1         
070A 304306         2064 +1         jnb     PKI3, $+9
070D C222           2065 +1         clr     FAST
070F D223           2066 +1         setb    SLOW
0711 D238           2067 +1         setb    STOPPED         
0713 D253           2068 +1         setb    ERRF3_U
0715 D25B           2069 +1         setb    ERRF3_D
0717 0537           2070 +1         inc     ERRF3_C
0719 C21B           2071 +1                     clr     PKO3                           
071B C22C           2072 +1         clr     PO3U            
071D C22B           2073 +1         clr     PO3D              
071F 1211FB         2074 +1                     lcall   WRITEPORTS
0722 020AAF         2075 +1         ljmp    UP3_MB2
0725                2076 +1 ENDD6:
0725 00             2077 +1         nop
0726 2009D1         2079            jb      MB1, UP2_MB1_C  ;-; Sme na zastavovacej clonke?
0729 020A24         2080            ljmp    UP3             ; 
                    2081    
                    2082    
072C                2083    UP2_STOP:
                    2084            ;--------------------------
                    2085 +1         CFCSS     4, 5, 9, 15, -1
072C 633C05         2086 +1         xrl             G,  #5             
                    2087 +1         IF (-1 <> -1)
                    2088 +1             mov   A,  -1         
                    2089 +1             xrl   G,  A          
                    2090 +1         ENDIF    
072F E53C           2091 +1         mov   A,  G              
                    2092 +2         LCJNE A,  #4, CFCERR     
0731 B40403         2093 +2         cjne    A, #4, $+6
0734 02073A         2094 +2         jmp     $+6
0737 0210A3         2095 +2         ljmp    CFCERR
073A 00             2096 +2         nop
                    2097 +1         IF (9 <> -1)
DEBUG                                                                                                         PAGE 38

073B 753D09         2098 +1             mov         D1, #9     
                    2099 +1         ELSE
                    2100 +1             mov         D1, #32        
                    2101 +1         ENDIF                    
                    2102 +1         IF (15 <> -1)
073E 753E0F         2103 +1             mov         D2, #15     
                    2104 +1         ELSE
                    2105 +1             mov         D2, #32        
                    2106 +1         ENDIF                    
0741 7404           2107 +1         mov       A, #4
0743 121283         2108 +1         lcall     PRINTCHAR        
                    2110            ;--------------------------
0746                2111    UP2_STOP_C:
0746 121194         2112            lcall   READPORTS       ; nacitanie dat
                    2113 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0749 200B03         2114 +1         jb      SKRH, $+6
074C 021070         2115 +1         ljmp    ERR_SKRH
074F 00             2116 +1         nop
                    2118 +1         SET_FLOOR_ERR   MB2, ERRF3, UP3_MB2, 3, %COUNT ; >>> CHYBA, Vypadla zastavovacia clo
                                                                               nka (narazil som na spomalovaciu) <<<
                    2119 +1                                                                                             
                                                                                                                 
                    2120 +1                                                                                             
                                                                                                                 
                    2121 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0008              2122 +1         COUNT    SET    COUNT+1                   
                    2123 +1         
0750 200A1E         2124 +1         jb      MB2, ENDD7
                    2125 +1         
                    2126 +1         IF (MB2 EQ MB2)
0753 754703         2127 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2128 +1         ENDIF 
                    2129 +1         IF (MB2 EQ MB1)
                    2130 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2131 +1         ENDIF 
                    2132 +1         
0756 304306         2133 +1         jnb     PKI3, $+9
0759 C222           2134 +1         clr     FAST
075B D223           2135 +1         setb    SLOW
075D D238           2136 +1         setb    STOPPED         
075F D253           2137 +1         setb    ERRF3_U
0761 D25B           2138 +1         setb    ERRF3_D
0763 0537           2139 +1         inc     ERRF3_C
0765 C21B           2140 +1                     clr     PKO3                           
0767 C22C           2141 +1         clr     PO3U            
0769 C22B           2142 +1         clr     PO3D              
076B 1211FB         2143 +1                     lcall   WRITEPORTS
076E 020AAF         2144 +1         ljmp    UP3_MB2
0771                2145 +1 ENDD7:
0771 00             2146 +1         nop
0772 2009D1         2148            jb      MB1, UP2_STOP_C  ;-; Sme na zastavovacej clonke?     
0775 C220           2149            clr     UP              ; zastav motor
0777 D23A           2150            setb    UPOld           ;       (a zalohuj)
0779 C23B           2151            clr     DOWNOld         ;       (a zalohuj)
077B C222           2152            clr     FAST            ; 
077D 1211FB         2153            lcall   WRITEPORTS      ; 
0780 0208CE         2154            jmp     FLOOR3        ;-; a prejdi do stavu FLOO
                    2155            
DEBUG                                                                                                         PAGE 39

0783                2156    DOWN2:
                    2157            ;--------------------------
                    2158 +1         CFCSS     24, 9, 6, 9, D2
0783 633C09         2159 +1         xrl             G,  #9             
                    2160 +1         IF (D2 <> -1)
0786 E53E           2161 +1             mov   A,  D2         
0788 623C           2162 +1             xrl   G,  A          
                    2163 +1         ENDIF    
078A E53C           2164 +1         mov   A,  G              
                    2165 +2         LCJNE A,  #24, CFCERR     
078C B41803         2166 +2         cjne    A, #24, $+6
078F 020795         2167 +2         jmp     $+6
0792 0210A3         2168 +2         ljmp    CFCERR
0795 00             2169 +2         nop
                    2170 +1         IF (6 <> -1)
0796 753D06         2171 +1             mov         D1, #6     
                    2172 +1         ELSE
                    2173 +1             mov         D1, #32        
                    2174 +1         ENDIF                    
                    2175 +1         IF (9 <> -1)
0799 753E09         2176 +1             mov         D2, #9     
                    2177 +1         ELSE
                    2178 +1             mov         D2, #32        
                    2179 +1         ENDIF                    
079C 7418           2180 +1         mov       A, #24
079E 121283         2181 +1         lcall     PRINTCHAR        
                    2183            ;--------------------------
                    2184 +1                 POLOHA_LED 2  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
07A1 53240F         2185 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
07A4 D225           2186 +1         setb    FLED2
07A6 1211FB         2187 +1         lcall   WRITEPORTS
                    2189 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
07A9 1210F8         2190 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07AC 121194         2191 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
07AF 3009FA         2192 +1         jnb     MB1, $-3  ; 
07B2 1210F8         2193 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
07B5 121194         2195    DOWN2_C: lcall   READPORTS       ; nacitanie dat
                    2196 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
07B8 200C03         2197 +1         jb      SKRD, $+6
07BB 021057         2198 +1         ljmp    ERR_SKRD
07BE 00             2199 +1         nop
                    2201 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2ERR, 1, %COUNT ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2202 +1                                                                                             
                                                                                                                 
                    2203 +1                                                                                             
                                                                                                                 
                    2204 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0009              2205 +1         COUNT    SET    COUNT+1                   
                    2206 +1         
07BF 20091E         2207 +1         jb      MB1, ENDD8
                    2208 +1         
                    2209 +1         IF (MB1 EQ MB2)
                    2210 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
DEBUG                                                                                                         PAGE 40

                    2211 +1         ENDIF 
                    2212 +1         IF (MB1 EQ MB1)
07C2 754701         2213 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2214 +1         ENDIF 
                    2215 +1         
07C5 304106         2216 +1         jnb     PKI1, $+9
07C8 C222           2217 +1         clr     FAST
07CA D223           2218 +1         setb    SLOW
07CC D238           2219 +1         setb    STOPPED         
07CE D252           2220 +1         setb    ERRF12_U
07D0 D259           2221 +1         setb    ERRF12_D
07D2 0539           2222 +1         inc     ERRF12_C
07D4 C219           2223 +1                     clr     PKO1                           
07D6 C228           2224 +1         clr     PO1U            
07D8 C228           2225 +1         clr     PO1D              
07DA 1211FB         2226 +1                     lcall   WRITEPORTS
07DD 0207E4         2227 +1         ljmp    DOWN2ERR
07E0                2228 +1 ENDD8:
07E0 00             2229 +1         nop
07E1 0207F3         2231            jmp     DOWN2ERR_CONTINUE
07E4                2232    DOWN2ERR:
07E4 C221           2233            clr     DOWN            ; zastav motor
07E6 D23B           2234            setb    DOWNOld         ;       (a zalohuj)
07E8 C23A           2235            clr     UPOld           ;       (a zalohuj)
07EA C222           2236            clr     FAST            ; 
07EC C223           2237            clr     SLOW            ;
07EE 1211FB         2238            lcall   WRITEPORTS      ; 
07F1 2126           2239            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
07F3                2240    DOWN2ERR_CONTINUE:
07F3 200ABF         2241            jb      MB2, DOWN2_C    ;-; mame uz 1. spomalovaciu clonku?
                    2242 +1         CLR_FLOOR_ERR   ERRF12
07F6 C252           2243 +1         clr    ERRF12_U
07F8 C259           2244 +1         clr    ERRF12_D
                    2245 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
07FA 00             2246 +1         nop
                    2248 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
07FB 1210F8         2249 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
07FE 121194         2250 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0801 300AFA         2251 +1         jnb     MB2, $-3  ; 
0804 1210F8         2252 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2254            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0807 1211FB         2255            lcall   WRITEPORTS      ;
080A 02080D         2256            jmp     DOWN2_MB2     ;-; a prejdi do stavu DOWN2_MB2
                    2257    
                    2258    
080D                2259    DOWN2_MB2:
                    2260            ;--------------------------
                    2261 +1         CFCSS     31, 14, 1, -1, D2
080D 633C0E         2262 +1         xrl             G,  #14             
                    2263 +1         IF (D2 <> -1)
0810 E53E           2264 +1             mov   A,  D2         
0812 623C           2265 +1             xrl   G,  A          
                    2266 +1         ENDIF    
0814 E53C           2267 +1         mov   A,  G              
                    2268 +2         LCJNE A,  #31, CFCERR     
0816 B41F03         2269 +2         cjne    A, #31, $+6
0819 02081F         2270 +2         jmp     $+6
DEBUG                                                                                                         PAGE 41

081C 0210A3         2271 +2         ljmp    CFCERR
081F 00             2272 +2         nop
                    2273 +1         IF (1 <> -1)
0820 753D01         2274 +1             mov         D1, #1     
                    2275 +1         ELSE
                    2276 +1             mov         D1, #32        
                    2277 +1         ENDIF                    
                    2278 +1         IF (-1 <> -1)
                    2279 +1             mov         D2, #-1     
                    2280 +1         ELSE
0823 753E20         2281 +1             mov         D2, #32        
                    2282 +1         ENDIF                    
0826 741F           2283 +1         mov       A, #31
0828 121283         2284 +1         lcall     PRINTCHAR        
                    2286            ;--------------------------
                    2287 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
082B 1210F8         2288 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
082E 121194         2289 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0831 300AFA         2290 +1         jnb     MB2, $-3  ; 
0834 1210F8         2291 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0837                2293    DOWN2_MB2A:
0837 121194         2294            lcall   READPORTS       ; nacitanie dat
                    2295 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
083A 200C03         2296 +1         jb      SKRD, $+6
083D 021057         2297 +1         ljmp    ERR_SKRD
0840 00             2298 +1         nop
                    2300 +1         SET_FLOOR_ERR   MB1, ERRF12, DOWN2_MB2ERR, 1, %COUNT ; >>> CHYBA, Vypadla spomalovac
                                                                               ia clonka (narazil som na zastavovaciu) <
                                                                               <<
                    2301 +1                                                                                             
                                                                                                                 
                    2302 +1                                                                                             
                                                                                                                 
                    2303 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000A              2304 +1         COUNT    SET    COUNT+1                   
                    2305 +1         
0841 20091E         2306 +1         jb      MB1, ENDD9
                    2307 +1         
                    2308 +1         IF (MB1 EQ MB2)
                    2309 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2310 +1         ENDIF 
                    2311 +1         IF (MB1 EQ MB1)
0844 754701         2312 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2313 +1         ENDIF 
                    2314 +1         
0847 304106         2315 +1         jnb     PKI1, $+9
084A C222           2316 +1         clr     FAST
084C D223           2317 +1         setb    SLOW
084E D238           2318 +1         setb    STOPPED         
0850 D252           2319 +1         setb    ERRF12_U
0852 D259           2320 +1         setb    ERRF12_D
0854 0539           2321 +1         inc     ERRF12_C
0856 C219           2322 +1                     clr     PKO1                           
0858 C228           2323 +1         clr     PO1U            
085A C228           2324 +1         clr     PO1D              
085C 1211FB         2325 +1                     lcall   WRITEPORTS
085F 020866         2326 +1         ljmp    DOWN2_MB2ERR
DEBUG                                                                                                         PAGE 42

0862                2327 +1 ENDD9:
0862 00             2328 +1         nop
0863 020876         2330            jmp     DOWN2_MB2ERR_CONTINUE
0866                2331    DOWN2_MB2ERR:
0866 C221           2332            clr     DOWN            ; zastav motor
0868 D23B           2333            setb    DOWNOld         ;       (a zalohuj)
086A C23A           2334            clr     UPOld           ;       (a zalohuj)
086C C222           2335            clr     FAST            ; 
086E C223           2336            clr     SLOW            ;
0870 1211FB         2337            lcall   WRITEPORTS      ; 
0873 020126         2338            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR1 
0876                2339    DOWN2_MB2ERR_CONTINUE:
0876 200ABE         2340            jb      MB2, DOWN2_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    2341 +1         CLR_FLOOR_ERR   ERRF12      
0879 C252           2342 +1         clr    ERRF12_U
087B C259           2343 +1         clr    ERRF12_D
                    2344 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
087D 00             2345 +1         nop
                    2347            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
087E 1211FB         2348            lcall   WRITEPORTS      ;
                    2349 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0881 1210F8         2350 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0884 121194         2351 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0887 300AFA         2352 +1         jnb     MB2, $-3  ; 
088A 1210F8         2353 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2355    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2356    ;        anl     A, #00000010b ;-;
                    2357    ;        jz      DOWN2_MB1     ;-;       Ak nie, chod do stavu DOWN2_MB1
088D D223           2358            setb    SLOW            ;       Ak ano, spomalme
088F C222           2359            clr     FAST            ; 
0891 1211FB         2360            lcall   WRITEPORTS      ;
0894 020897         2361            jmp     DOWN2_MB1     ;-; a prejdi do stavu DOWN2_MB1
0897                2362    DOWN2_MB1:    
                    2363            ;--------------------------
                    2364 +1         CFCSS     14, 17, 16, -1, -1
0897 633C11         2365 +1         xrl             G,  #17             
                    2366 +1         IF (-1 <> -1)
                    2367 +1             mov   A,  -1         
                    2368 +1             xrl   G,  A          
                    2369 +1         ENDIF    
089A E53C           2370 +1         mov   A,  G              
                    2371 +2         LCJNE A,  #14, CFCERR     
089C B40E03         2372 +2         cjne    A, #14, $+6
089F 0208A5         2373 +2         jmp     $+6
08A2 0210A3         2374 +2         ljmp    CFCERR
08A5 00             2375 +2         nop
                    2376 +1         IF (16 <> -1)
08A6 753D10         2377 +1             mov         D1, #16     
                    2378 +1         ELSE
                    2379 +1             mov         D1, #32        
                    2380 +1         ENDIF                    
                    2381 +1         IF (-1 <> -1)
                    2382 +1             mov         D2, #-1     
                    2383 +1         ELSE
08A9 753E20         2384 +1             mov         D2, #32        
                    2385 +1         ENDIF                    
08AC 740E           2386 +1         mov       A, #14
DEBUG                                                                                                         PAGE 43

08AE 121283         2387 +1         lcall     PRINTCHAR        
                    2389            ;--------------------------
08B1 121194         2390    DOWN2_MB1_C: lcall   READPORTS       ; nacitanie dat
08B4 300907         2391            jnb     MB1, D2_MB1C  ;-; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
08B7 200CF7         2392            jb      SKRD, DOWN2_MB1_C   ; Sme na hornej porovnavacej clonke? (tu zastavujeme v k
                                                                               azdom pripade)
08BA D259           2393            setb    ERRF1_D
08BC 0535           2394            inc     ERRF1_C
                    2395    ;        jmp     DOWN2_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme
08BE C238           2396    D2_MB1C: clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
08C0 C221           2397            clr     DOWN            ; zastav motor
08C2 D23B           2398            setb    DOWNOld         ;       (a zalohuj)
08C4 C23A           2399            clr     UPOld           ;       (a zalohuj)
08C6 C222           2400            clr     FAST            ; 
08C8 1211FB         2401            lcall   WRITEPORTS      ; 
08CB 020126         2402            jmp     FLOOR1        ;-; a prejdi do stavu FLOOR2      
                    2403    
                    2404    
                    2405    ;------------------------------------------------------------------------------- << 3. posch
                                                                               odie >>
                    2406    
08CE                2407    FLOOR3:
                    2408            ;--------------------------
                    2409 +1         CFCSS     10, 7, 16, 19, D1
08CE 633C07         2410 +1         xrl             G,  #7             
                    2411 +1         IF (D1 <> -1)
08D1 E53D           2412 +1             mov   A,  D1         
08D3 623C           2413 +1             xrl   G,  A          
                    2414 +1         ENDIF    
08D5 E53C           2415 +1         mov   A,  G              
                    2416 +2         LCJNE A,  #10, CFCERR     
08D7 B40A03         2417 +2         cjne    A, #10, $+6
08DA 0208E0         2418 +2         jmp     $+6
08DD 0210A3         2419 +2         ljmp    CFCERR
08E0 00             2420 +2         nop
                    2421 +1         IF (16 <> -1)
08E1 753D10         2422 +1             mov         D1, #16     
                    2423 +1         ELSE
                    2424 +1             mov         D1, #32        
                    2425 +1         ENDIF                    
                    2426 +1         IF (19 <> -1)
08E4 753E13         2427 +1             mov         D2, #19     
                    2428 +1         ELSE
                    2429 +1             mov         D2, #32        
                    2430 +1         ENDIF                    
08E7 740A           2431 +1         mov       A, #10
08E9 121283         2432 +1         lcall     PRINTCHAR        
                    2434            ;--------------------------
                    2435 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
08EC 53240F         2436 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
08EF D226           2437 +1         setb    FLED3
08F1 1211FB         2438 +1         lcall   WRITEPORTS
08F4 C238           2440            clr     STOPPED
                    2441 +1         TIMER2  60              ; (Timer - 3s)
08F6 752D3C         2442 +1            mov           T2_C, #60                              
DEBUG                                                                                                         PAGE 44

08F9 C27A           2443 +1                  clr       T2_F                                  
08FB D2CA           2444 +1                  setb      TR2                                             
                    2446 +1         ROZSVIET_SMER_LED
08FD D22F           2447 +1         setb    LEDU            ;
08FF D22E           2448 +1         setb    LEDD            ;
0901 1211FB         2449 +1         lcall   WRITEPORTS      ;
0904 754680         2451            mov     POSCHODIE, #80h ; 1000 0000 - posch. 3
0907 121194         2452    F3S:    lcall   READPORTS     ;-; nacitanie dat
                    2453 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
090A 200A03         2454 +1         jb      MB2, $+6
090D 021089         2455 +1         ljmp    ERRFLOOR
0910 00             2456 +1         nop
                    2458 +1         ljnb    SKRH, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0911 200B03         2459 +1         jb      SKRH, $+6
0914 021089         2460 +1         ljmp    ERRFLOOR
0917 00             2461 +1         nop
                    2463 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0918 200C03         2464 +1         jb      SKRD, $+6
091B 021089         2465 +1         ljmp    ERRFLOOR
091E 00             2466 +1         nop
                    2468 +1         ZRUS_POSCH 3
091F C21B           2469 +1         clr     PKO3       
0921 C22C           2470 +1         clr     PO3U      
0923 C22B           2471 +1         clr     PO3D      
0925 1211FB         2472 +1         lcall   WRITEPORTS
                    2474            
                    2475 +1         LCALLB          S_RI, RCV_MESSAGE
0928 306103         2476 +1         jnb     S_RI, $+6
092B 1212C0         2477 +1         lcall   RCV_MESSAGE
092E 00             2478 +1         nop
                    2480            
092F 307AD5         2481            jnb                T2_F, F3S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    2482 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0932 A20D           2483 +1         mov      C, DP          
0934 720E           2484 +1         orl      C, DPZK        
0936 720F           2485 +1         orl      C, DPK         
0938 9218           2486 +1         mov      KS, C          
093A 922F           2487 +1         mov      LEDU, C        
093C 922E           2488 +1         mov      LEDD, C        
093E 1211FB         2489 +1         lcall   WRITEPORTS      
0941 200FC3         2491            jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0944 3045C0         2492            jnb     DOORCLSD, F3S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    2493 +1         JE_VYBRATE_POSCHODIE F3S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.          
0947 A20D           2494 +1         mov      C, DP         
0949 720E           2495 +1         orl      C, DPZK        
094B 720F           2496 +1         orl      C, DPK         
094D 5006           2497 +1         jnc      $+8            
094F E528           2498 +1         mov      A, INPORTA     
0951 541E           2499 +1         anl      A, #00011110b  
0953 60B2           2500 +1         jz       F3S       
                    2502            ;clr     PKO3          ;-; vynulovanie volby poschodia na ktorom stojim
                    2503            ;clr     PO3U            ;
                    2504            ;clr     PO3D            ;
                    2505            ;lcall   WRITEPORTS      ;
                    2506            ;jb      DPK, F3S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
DEBUG                                                                                                         PAGE 45

0955 782A           2507            mov     R0, #ERRFLOOR_U ; Default predpokladam, ze mam namierene hore (pozeram poruc
                                                                               hy poschodia smerom hore)
0957 79F0           2508            mov     R1, #11110000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) k
                                                                               abina
0959 7AE0           2509            mov     R2, #11100000b;-; Default predpokladam, ze mam namierene hore (na 3. a 4.) s
                                                                               achta
095B 203A0A         2510            jb      UPOld, F3OK     ;   Je to pravda? Naozaj som doteraz isiel hore?
095E E9             2511            mov     A, R1           ;       Ak nie, znegujeme masku kabiny
095F F4             2512            cpl     A               ;       |
0960 F9             2513            mov     R1, A           ;       |
0961 EA             2514            mov     A, R2           ;       A znegujeme aj masku sachty
0962 F4             2515            cpl     A               ;       |
0963 FA             2516            mov     R2, A           ;       |     
0964 E8             2517            mov     A, R0           ;       A budeme pozerat poruchy poschodi smerom DOLE (ERRFL
                                                                               OOR_U+1 = ERRFLOOR_D)
0965 6401           2518            xrl     A, #01h         ;       | Znegujem posledny bit adresy registra s poruchovym
                                                                               i poschodiami (ERRFLOOR_U na ERRFLOOR_D a
                                                                                naopak)
0967 F8             2519            mov     R0, A           ;       |    
0968                2520    F3OK:   ; Pohyb v jednom smere (nevieme v ktorom)
0968 E528           2521            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Kabina)
096A 86F0           2522            mov     B, @R0          ;  | Maskujem chybne poschodia
096C 53F00C         2523            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist 
096F 63F0FF         2524            xrl     B, #0FFH        ;  | |
0972 55F0           2525            anl     A, B            ;  | |
0974 5416           2526            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
0976 59             2527            anl     A, R1           ;  | 
                    2528 +1         ljnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
0977 6003           2529 +1         jz      $+5
0979 0209F0         2530 +1         ljmp    F3
097C 00             2531 +1         nop
                    2533                                    ; zistenie, ci bolo stlacene nieco viac (menej) ako poschodi
                                                                               e na ktorom stojim (Sachta)
097D E528           2534            mov     A, INPORTA      ; Mam v kabine nieco stlacene?
097F 86F0           2535            mov     B, @R0          ;  | Maskujem chybne poschodia
0981 53F00C         2536            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0984 63F0FF         2537            xrl     B, #0FFH        ;  | |
0987 55F0           2538            anl     A, B            ;  | |
0989 5416           2539            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi (kabina
                                                                               )
098B 7021           2540            jnz     F3SW            ;  | Ak ano, idem rovno zistovat opacny smer.
098D E522           2541            mov     A, INPORTC      ; Mam stlacene nieco v sachte (mojim smerom)?    
098F 5427           2542            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla privolavacov
0991 5A             2543            anl     A, R2           ;  |   
0992 86F0           2544            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2545            ;ANLB    ACC.0, B.1      ;  | 
                    2546 +1         ANLB    ACC.1, B.2      ;  | 
0994 A2E1           2547 +1         mov   C, ACC.1
0996 B0F2           2548 +1         anl   C, /B.2
0998 92E1           2549 +1         mov   ACC.1, C
                    2551 +1         ANLB    ACC.2, B.2      ;  |
099A A2E2           2552 +1         mov   C, ACC.2
099C B0F2           2553 +1         anl   C, /B.2
099E 92E2           2554 +1         mov   ACC.2, C
                    2556 +1         ANLB    ACC.3, B.3      ;  |
09A0 A2E3           2557 +1         mov   C, ACC.3
09A2 B0F3           2558 +1         anl   C, /B.3
DEBUG                                                                                                         PAGE 46

09A4 92E3           2559 +1         mov   ACC.3, C
                    2561 +1         ANLB    ACC.4, B.3      ;  |
09A6 A2E4           2562 +1         mov   C, ACC.4
09A8 B0F3           2563 +1         anl   C, /B.3
09AA 92E4           2564 +1         mov   ACC.4, C
                    2566            ;ANLB    ACC.5, B.4      ;  |
09AC 7042           2567            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
                    2568            ; Pohyb v opacnom smere (nevieme v ktorom)
09AE E8             2569    F3SW:   mov     A, R0           ;  Znegujem posledny bit adresy registra s poruchovymi posch
                                                                               odiami (ERRFLOOR_U na ERRFLOOR_D a naopak
                                                                               )
09AF 6401           2570            xrl     A, #01h         ;  |
09B1 F8             2571            mov     R0, A           ;  |
09B2 B23A           2572            cpl     UPOld           ;  Znegujem stary posun
09B4 B23B           2573            cpl     DOWNOld         ;  |
09B6 E9             2574            mov     A, R1           ;  Znegujeme masky
09B7 F4             2575            cpl     A               ;  |
09B8 F9             2576            mov     R1, A           ;  |
09B9 EA             2577            mov     A, R2           ;  |
09BA F4             2578            cpl     A               ;  |
09BB FA             2579            mov     R2, A           ;  |               
09BC E528           2580            mov     A, INPORTA      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Kabina)
09BE 86F0           2581            mov     B, @R0          ;  | Maskujem chybne poschodia
09C0 53F00C         2582            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
09C3 63F0FF         2583            xrl     B, #0FFH        ;  | |
09C6 55F0           2584            anl     A, B            ;  | |
09C8 5416           2585            anl     A, #00010110b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
09CA 59             2586            anl     A, R1           ;  | 
09CB 7023           2587            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
09CD E522           2588            mov     A, INPORTC      ; zistenie, cibolo stlacene nieco viac ako poschodie na ktor
                                                                               om stojim (Sachta)
09CF 5427           2589            anl     A, #00100111b   ;  | Beriem iba bity predstavujuce tlacidla poschodi
09D1 5A             2590            anl     A, R2           ;  | 
09D2 86F0           2591            mov     B, @R0          ;  | Maskujem chybne poschodia (v smere hore)   ???   
                    2592            ;ANLB    ACC.0, B.1      ;  | 
                    2593 +1         ANLB    ACC.1, B.2      ;  | 
09D4 A2E1           2594 +1         mov   C, ACC.1
09D6 B0F2           2595 +1         anl   C, /B.2
09D8 92E1           2596 +1         mov   ACC.1, C
                    2598 +1         ANLB    ACC.2, B.2      ;  |
09DA A2E2           2599 +1         mov   C, ACC.2
09DC B0F2           2600 +1         anl   C, /B.2
09DE 92E2           2601 +1         mov   ACC.2, C
                    2603 +1         ANLB    ACC.3, B.3      ;  |
09E0 A2E3           2604 +1         mov   C, ACC.3
09E2 B0F3           2605 +1         anl   C, /B.3
09E4 92E3           2606 +1         mov   ACC.3, C
                    2608 +1         ANLB    ACC.4, B.3      ;  |
09E6 A2E4           2609 +1         mov   C, ACC.4
09E8 B0F3           2610 +1         anl   C, /B.3
09EA 92E4           2611 +1         mov   ACC.4, C
                    2613            ;ANLB    ACC.5, B.4      ;  |
09EC 7002           2614            jnz     F3              ; nasli sme poschodie v tomto smere, mozme ist
09EE 2107           2615            jmp     F3S           ;-; nemame sa kde hybat, tak opakujeme zistovanie
09F0 901748         2616    F3:     mov     DPTR, #COM_BUSY ; Poslanie BUSY spravy 
09F3 121236         2617            lcall   DISPSTR         ;
09F6 203A03         2618            jb      UPOld, F3UP     ;   
DEBUG                                                                                                         PAGE 47

09F9 020A10         2619            jmp     F3DOWN          ;
                    2620 +1 F3UP:   SET_UP                  ; rychly pohyb hore
09FC D220           2621 +1         setb     UP
09FE C221           2622 +1         clr      DOWN
0A00 D22F           2623 +1         setb     LEDU
0A02 C22E           2624 +1         clr      LEDD 
                    2626 +1         SET_FAST                ; 
0A04 D222           2627 +1         setb     FAST
0A06 C223           2628 +1         clr      SLOW
0A08 D218           2629 +1         setb     KS      
0A0A 1211FB         2631            lcall   WRITEPORTS      ; 
0A0D 020A24         2632            jmp     UP3           ;-; prejdi do stavu UP2    
                    2633 +1 F3DOWN: SET_DOWN                  ; rychly pohyb dole
0A10 C220           2634 +1         clr     UP
0A12 D221           2635 +1         setb    DOWN
0A14 C22F           2636 +1         clr     LEDU
0A16 D22E           2637 +1         setb    LEDD 
                    2639 +1         SET_FAST                ; 
0A18 D222           2640 +1         setb     FAST
0A1A C223           2641 +1         clr      SLOW
0A1C D218           2642 +1         setb     KS      
0A1E 1211FB         2644            lcall   WRITEPORTS      ; 
0A21 020B7C         2645            jmp     DOWN3         ;-; prejdi do stavu UP2    
                    2646         
                    2647         
0A24                2648    UP3:
                    2649            ;--------------------------
                    2650 +1         CFCSS     11, 17, 14, 0, D1
0A24 633C11         2651 +1         xrl             G,  #17             
                    2652 +1         IF (D1 <> -1)
0A27 E53D           2653 +1             mov   A,  D1         
0A29 623C           2654 +1             xrl   G,  A          
                    2655 +1         ENDIF    
0A2B E53C           2656 +1         mov   A,  G              
                    2657 +2         LCJNE A,  #11, CFCERR     
0A2D B40B03         2658 +2         cjne    A, #11, $+6
0A30 020A36         2659 +2         jmp     $+6
0A33 0210A3         2660 +2         ljmp    CFCERR
0A36 00             2661 +2         nop
                    2662 +1         IF (14 <> -1)
0A37 753D0E         2663 +1             mov         D1, #14     
                    2664 +1         ELSE
                    2665 +1             mov         D1, #32        
                    2666 +1         ENDIF                    
                    2667 +1         IF (0 <> -1)
0A3A 753E00         2668 +1             mov         D2, #0     
                    2669 +1         ELSE
                    2670 +1             mov         D2, #32        
                    2671 +1         ENDIF                    
0A3D 740B           2672 +1         mov       A, #11
0A3F 121283         2673 +1         lcall     PRINTCHAR        
                    2675            ;--------------------------
                    2676 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0A42 53240F         2677 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0A45 D226           2678 +1         setb    FLED3
0A47 1211FB         2679 +1         lcall   WRITEPORTS
DEBUG                                                                                                         PAGE 48

                    2681 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0A4A 1210F8         2682 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0A4D 121194         2683 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0A50 3009FA         2684 +1         jnb     MB1, $-3  ; 
0A53 1210F8         2685 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0A56 121194         2687    UP3A:   lcall   READPORTS       ; nacitanie dat
                    2688 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0A59 200B03         2689 +1         jb      SKRH, $+6
0A5C 021070         2690 +1         ljmp    ERR_SKRH
0A5F 00             2691 +1         nop
                    2693 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3ERR, 4, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie 
                                                                               clonky (narazil som na zastavovaciu) <<<
                                                                               
                    2694 +1                                                                                             
                                                                                                                 
                    2695 +1                                                                                             
                                                                                                                 
                    2696 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000B              2697 +1         COUNT    SET    COUNT+1                   
                    2698 +1         
0A60 20091E         2699 +1         jb      MB1, ENDD10
                    2700 +1         
                    2701 +1         IF (MB1 EQ MB2)
                    2702 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2703 +1         ENDIF 
                    2704 +1         IF (MB1 EQ MB1)
0A63 754701         2705 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2706 +1         ENDIF 
                    2707 +1         
0A66 304406         2708 +1         jnb     PKI4, $+9
0A69 C222           2709 +1         clr     FAST
0A6B D223           2710 +1         setb    SLOW
0A6D D238           2711 +1         setb    STOPPED         
0A6F D254           2712 +1         setb    ERRF34_U
0A71 D25B           2713 +1         setb    ERRF34_D
0A73 053B           2714 +1         inc     ERRF34_C
0A75 C21C           2715 +1                     clr     PKO4                           
0A77 C22D           2716 +1         clr     PO4U            
0A79 C22D           2717 +1         clr     PO4D              
0A7B 1211FB         2718 +1                     lcall   WRITEPORTS
0A7E 020A85         2719 +1         ljmp    UP3ERR
0A81                2720 +1 ENDD10:
0A81 00             2721 +1         nop
0A82 020A95         2723            jmp     UP3ERR_CONTINUE
0A85                2724    UP3ERR:
0A85 C220           2725            clr     UP              ; zastav motor
0A87 D23A           2726            setb    UPOld           ;       (a zalohuj)
0A89 C23B           2727            clr     DOWNOld         ;       (a zalohuj)
0A8B C222           2728            clr     FAST            ;
0A8D C223           2729            clr     SLOW            ;
0A8F 1211FB         2730            lcall   WRITEPORTS      ; 
0A92 020D8B         2731            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4 
0A95                2732    UP3ERR_CONTINUE:
0A95 200ABE         2733            jb      MB2, UP3A     ;-; mame uz 1. spomalovaciu clonku?
                    2734 +1         CLR_FLOOR_ERR   ERRF34
0A98 C254           2735 +1         clr    ERRF34_U
0A9A C25B           2736 +1         clr    ERRF34_D
DEBUG                                                                                                         PAGE 49

                    2737 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0A9C 00             2738 +1         nop
                    2740 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0A9D 1210F8         2741 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AA0 121194         2742 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AA3 300AFA         2743 +1         jnb     MB2, $-3  ; 
0AA6 1210F8         2744 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2746            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0AA9 1211FB         2747            lcall   WRITEPORTS      ;
0AAC 020AAF         2748            jmp     UP3_MB2       ;-; a prejdi do stavu UP3_MB2
                    2749    
0AAF                2750    UP3_MB2:
                    2751            ;--------------------------
                    2752 +1         CFCSS     3, 8, 6, -1, D2
0AAF 633C08         2753 +1         xrl             G,  #8             
                    2754 +1         IF (D2 <> -1)
0AB2 E53E           2755 +1             mov   A,  D2         
0AB4 623C           2756 +1             xrl   G,  A          
                    2757 +1         ENDIF    
0AB6 E53C           2758 +1         mov   A,  G              
                    2759 +2         LCJNE A,  #3, CFCERR     
0AB8 B40303         2760 +2         cjne    A, #3, $+6
0ABB 020AC1         2761 +2         jmp     $+6
0ABE 0210A3         2762 +2         ljmp    CFCERR
0AC1 00             2763 +2         nop
                    2764 +1         IF (6 <> -1)
0AC2 753D06         2765 +1             mov         D1, #6     
                    2766 +1         ELSE
                    2767 +1             mov         D1, #32        
                    2768 +1         ENDIF                    
                    2769 +1         IF (-1 <> -1)
                    2770 +1             mov         D2, #-1     
                    2771 +1         ELSE
0AC5 753E20         2772 +1             mov         D2, #32        
                    2773 +1         ENDIF                    
0AC8 7403           2774 +1         mov       A, #3
0ACA 121283         2775 +1         lcall     PRINTCHAR        
                    2777            ;--------------------------
                    2778 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0ACD 1210F8         2779 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0AD0 121194         2780 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0AD3 300AFA         2781 +1         jnb     MB2, $-3  ; 
0AD6 1210F8         2782 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0AD9                2784    UP3_MB2A:
0AD9 121194         2785            lcall   READPORTS       ; nacitanie dat
                    2786 +1         ljnb    SKRH, ERR_SKRH  ; >>> CHYBA, Horna porovnavacia clonka <<<
0ADC 200B03         2787 +1         jb      SKRH, $+6
0ADF 021070         2788 +1         ljmp    ERR_SKRH
0AE2 00             2789 +1         nop
                    2791 +1         SET_FLOOR_ERR   MB1, ERRF34, UP3_MB2ERR, 4, %COUNT ; >>> CHYBA, Vypadla spomalovacia
                                                                                clonka (narazil som na zastavovaciu) <<<
                                                                               
                    2792 +1                                                                                             
                                                                                                                 
                    2793 +1                                                                                             
                                                                                                                 
DEBUG                                                                                                         PAGE 50

                    2794 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000C              2795 +1         COUNT    SET    COUNT+1                   
                    2796 +1         
0AE3 20091E         2797 +1         jb      MB1, ENDD11
                    2798 +1         
                    2799 +1         IF (MB1 EQ MB2)
                    2800 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2801 +1         ENDIF 
                    2802 +1         IF (MB1 EQ MB1)
0AE6 754701         2803 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2804 +1         ENDIF 
                    2805 +1         
0AE9 304406         2806 +1         jnb     PKI4, $+9
0AEC C222           2807 +1         clr     FAST
0AEE D223           2808 +1         setb    SLOW
0AF0 D238           2809 +1         setb    STOPPED         
0AF2 D254           2810 +1         setb    ERRF34_U
0AF4 D25B           2811 +1         setb    ERRF34_D
0AF6 053B           2812 +1         inc     ERRF34_C
0AF8 C21C           2813 +1                     clr     PKO4                           
0AFA C22D           2814 +1         clr     PO4U            
0AFC C22D           2815 +1         clr     PO4D              
0AFE 1211FB         2816 +1                     lcall   WRITEPORTS
0B01 020B08         2817 +1         ljmp    UP3_MB2ERR
0B04                2818 +1 ENDD11:
0B04 00             2819 +1         nop
0B05 020B18         2821            jmp     UP3_MB2ERR_CONTINUE
0B08                2822    UP3_MB2ERR:
0B08 C220           2823            clr     UP              ; zastav motor
0B0A D23A           2824            setb    UPOld           ;       (a zalohuj)
0B0C C23B           2825            clr     DOWNOld         ;       (a zalohuj)
0B0E C222           2826            clr     FAST            ;
0B10 C223           2827            clr     SLOW            ;
0B12 1211FB         2828            lcall   WRITEPORTS      ; 
0B15 020D8B         2829            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4
0B18                2830    UP3_MB2ERR_CONTINUE:
0B18 200ABE         2831            jb      MB2, UP3_MB2A  ;-; mame uz aj druhu spomalovaciu clonku?    
                    2832 +1         CLR_FLOOR_ERR   ERRF34      
0B1B C254           2833 +1         clr    ERRF34_U
0B1D C25B           2834 +1         clr    ERRF34_D
                    2835 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0B1F 00             2836 +1         nop
                    2838            ;setb    LEDU            ; Rozsviet LEDku, ze mame druhu MB2
0B20 1211FB         2839            lcall   WRITEPORTS      ;
                    2840 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme 
0B23 1210F8         2841 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B26 121194         2842 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B29 300AFA         2843 +1         jnb     MB2, $-3  ; 
0B2C 1210F8         2844 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2846    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    2847    ;        anl     A, #00010000b ;-;
                    2848    ;        jz      UP3_MB1       ;-;       Ak nie, chod do stavu UP3_MB1
0B2F D223           2849            setb    SLOW            ;       Ak ano, spomalme
0B31 C222           2850            clr     FAST            ; 
0B33 1211FB         2851            lcall   WRITEPORTS      ;
0B36 020B39         2852            jmp     UP3_MB1       ;-; a prejdi do stavu UP3_MB1 
                    2853    
DEBUG                                                                                                         PAGE 51

                    2854    
0B39                2855    UP3_MB1:
                    2856            ;--------------------------
                    2857 +1         CFCSS     5, 6, 0, -1, -1
0B39 633C06         2858 +1         xrl             G,  #6             
                    2859 +1         IF (-1 <> -1)
                    2860 +1             mov   A,  -1         
                    2861 +1             xrl   G,  A          
                    2862 +1         ENDIF    
0B3C E53C           2863 +1         mov   A,  G              
                    2864 +2         LCJNE A,  #5, CFCERR     
0B3E B40503         2865 +2         cjne    A, #5, $+6
0B41 020B47         2866 +2         jmp     $+6
0B44 0210A3         2867 +2         ljmp    CFCERR
0B47 00             2868 +2         nop
                    2869 +1         IF (0 <> -1)
0B48 753D00         2870 +1             mov         D1, #0     
                    2871 +1         ELSE
                    2872 +1             mov         D1, #32        
                    2873 +1         ENDIF                    
                    2874 +1         IF (-1 <> -1)
                    2875 +1             mov         D2, #-1     
                    2876 +1         ELSE
0B4B 753E20         2877 +1             mov         D2, #32        
                    2878 +1         ENDIF                    
0B4E 7405           2879 +1         mov       A, #5
0B50 121283         2880 +1         lcall     PRINTCHAR        
                    2882            ;--------------------------
                    2883 +1         ZAKMITC MB2
0B53 1210F8         2884 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0B56 121194         2885 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0B59 300AFA         2886 +1         jnb     MB2, $-3  ; 
0B5C 1210F8         2887 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0B5F 121194         2889    UP3_MB1_C: lcall   READPORTS    ; nacitanie dat
0B62 300907         2890            jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom pripa
                                                                               de)
0B65 200BF7         2891            jb      SKRH, UP3_MB1_C ; Sme na hornej porovnavacej clonke? (tu zastavujeme v kazdo
                                                                               m pripade) 
0B68 D254           2892            setb    ERRF4_U
0B6A 0538           2893            inc     ERRF4_C
                    2894    ;        jmp     U3_MB1C 
                    2895    ;U3_NE:  jnb     MB1, U3_MB1C    ; Sme na zastavovacej clonke? (tu zastavujeme v kazdom prip
                                                                               ade)
                    2896    ;        jmp     UP3_MB1_C       ; Ak sme nechytili ani jednu clonku, opakujeme. 
0B6C C238           2897    U3_MB1C: clr     STOPPED        ; Priznak STOPPED vynulujem, uz som ho osetril
0B6E C220           2898            clr     UP              ; zastav motor
0B70 D23A           2899            setb    UPOld           ;       (a zalohuj)
0B72 C23B           2900            clr     DOWNOld         ;       (a zalohuj)
0B74 C222           2901            clr     FAST            ; 
0B76 1211FB         2902            lcall   WRITEPORTS      ; 
0B79 020D8B         2903            jmp     FLOOR4        ;-; a prejdi do stavu FLOOR4   
                    2904    
                    2905    
0B7C                2906    DOWN3:
                    2907            ;--------------------------
                    2908 +1         CFCSS     27, 2, 22, 10, D2
0B7C 633C02         2909 +1         xrl             G,  #2             
DEBUG                                                                                                         PAGE 52

                    2910 +1         IF (D2 <> -1)
0B7F E53E           2911 +1             mov   A,  D2         
0B81 623C           2912 +1             xrl   G,  A          
                    2913 +1         ENDIF    
0B83 E53C           2914 +1         mov   A,  G              
                    2915 +2         LCJNE A,  #27, CFCERR     
0B85 B41B03         2916 +2         cjne    A, #27, $+6
0B88 020B8E         2917 +2         jmp     $+6
0B8B 0210A3         2918 +2         ljmp    CFCERR
0B8E 00             2919 +2         nop
                    2920 +1         IF (22 <> -1)
0B8F 753D16         2921 +1             mov         D1, #22     
                    2922 +1         ELSE
                    2923 +1             mov         D1, #32        
                    2924 +1         ENDIF                    
                    2925 +1         IF (10 <> -1)
0B92 753E0A         2926 +1             mov         D2, #10     
                    2927 +1         ELSE
                    2928 +1             mov         D2, #32        
                    2929 +1         ENDIF                    
0B95 741B           2930 +1         mov       A, #27
0B97 121283         2931 +1         lcall     PRINTCHAR        
                    2933            ;--------------------------
                    2934 +1                 POLOHA_LED 3  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0B9A 53240F         2935 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0B9D D226           2936 +1         setb    FLED3
0B9F 1211FB         2937 +1         lcall   WRITEPORTS
                    2939 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0BA2 1210F8         2940 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BA5 121194         2941 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BA8 3009FA         2942 +1         jnb     MB1, $-3  ; 
0BAB 1210F8         2943 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0BAE 121194         2945    DOWN3A: lcall   READPORTS       ; nacitanie dat
                    2946 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0BB1 200C03         2947 +1         jb      SKRD, $+6
0BB4 021057         2948 +1         ljmp    ERR_SKRD
0BB7 00             2949 +1         nop
                    2951 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT  ; >>> CHYBA, Vypadli 2 spomalovacie c
                                                                               lonky (narazil som na zastavovaciu) <<<
                    2952 +1                                                                                             
                                                                                                                 
                    2953 +1                                                                                             
                                                                                                                 
                    2954 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000D              2955 +1         COUNT    SET    COUNT+1                   
                    2956 +1         
0BB8 20091E         2957 +1         jb      MB1, ENDD12
                    2958 +1         
                    2959 +1         IF (MB1 EQ MB2)
                    2960 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    2961 +1         ENDIF 
                    2962 +1         IF (MB1 EQ MB1)
0BBB 754701         2963 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    2964 +1         ENDIF 
                    2965 +1         
DEBUG                                                                                                         PAGE 53

0BBE 304206         2966 +1         jnb     PKI2, $+9
0BC1 C222           2967 +1         clr     FAST
0BC3 D223           2968 +1         setb    SLOW
0BC5 D238           2969 +1         setb    STOPPED         
0BC7 D253           2970 +1         setb    ERRF23_U
0BC9 D25A           2971 +1         setb    ERRF23_D
0BCB 053A           2972 +1         inc     ERRF23_C
0BCD C21A           2973 +1                     clr     PKO2                           
0BCF C22A           2974 +1         clr     PO2U            
0BD1 C229           2975 +1         clr     PO2D              
0BD3 1211FB         2976 +1                     lcall   WRITEPORTS
0BD6 020783         2977 +1         ljmp    DOWN2
0BD9                2978 +1 ENDD12:
0BD9 00             2979 +1         nop
0BDA 200AD1         2981            jb      MB2, DOWN3A   ;-; mame uz 1. spomalovaciu clonku?
                    2982 +1         CLR_FLOOR_ERR   ERRF23
0BDD C253           2983 +1         clr    ERRF23_U
0BDF C25A           2984 +1         clr    ERRF23_D
                    2985 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0BE1 00             2986 +1         nop
                    2988 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme   
0BE2 1210F8         2989 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0BE5 121194         2990 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0BE8 300AFA         2991 +1         jnb     MB2, $-3  ; 
0BEB 1210F8         2992 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    2994            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0BEE 1211FB         2995            lcall   WRITEPORTS      ;
0BF1 020BF4         2996            jmp     DOWN3_MB2     ;-; a prejdi do stavu DOWN3_MB2
                    2997    
                    2998    
0BF4                2999    DOWN3_MB2:
                    3000            ;--------------------------
                    3001 +1         CFCSS     9, 4, -1, 24, D1
0BF4 633C04         3002 +1         xrl             G,  #4             
                    3003 +1         IF (D1 <> -1)
0BF7 E53D           3004 +1             mov   A,  D1         
0BF9 623C           3005 +1             xrl   G,  A          
                    3006 +1         ENDIF    
0BFB E53C           3007 +1         mov   A,  G              
                    3008 +2         LCJNE A,  #9, CFCERR     
0BFD B40903         3009 +2         cjne    A, #9, $+6
0C00 020C06         3010 +2         jmp     $+6
0C03 0210A3         3011 +2         ljmp    CFCERR
0C06 00             3012 +2         nop
                    3013 +1         IF (-1 <> -1)
                    3014 +1             mov         D1, #-1     
                    3015 +1         ELSE
0C07 753D20         3016 +1             mov         D1, #32        
                    3017 +1         ENDIF                    
                    3018 +1         IF (24 <> -1)
0C0A 753E18         3019 +1             mov         D2, #24     
                    3020 +1         ELSE
                    3021 +1             mov         D2, #32        
                    3022 +1         ENDIF                    
0C0D 7409           3023 +1         mov       A, #9
0C0F 121283         3024 +1         lcall     PRINTCHAR        
                    3026            ;--------------------------
DEBUG                                                                                                         PAGE 54

                    3027 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0C12 1210F8         3028 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0C15 121194         3029 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0C18 300AFA         3030 +1         jnb     MB2, $-3  ; 
0C1B 1210F8         3031 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0C1E                3033    DOWN3_MB2A:
0C1E 121194         3034            lcall   READPORTS       ; nacitanie dat
                    3035 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0C21 200C03         3036 +1         jb      SKRD, $+6
0C24 021057         3037 +1         ljmp    ERR_SKRD
0C27 00             3038 +1         nop
                    3040 +1         SET_FLOOR_ERR   MB1, ERRF23, DOWN2, 2, %COUNT ; >>> CHYBA, Vypadla spomalovacia clon
                                                                               ka (narazil som na zastavovaciu) <<<
                    3041 +1                                                                                             
                                                                                                                 
                    3042 +1                                                                                             
                                                                                                                 
                    3043 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000E              3044 +1         COUNT    SET    COUNT+1                   
                    3045 +1         
0C28 20091E         3046 +1         jb      MB1, ENDD13
                    3047 +1         
                    3048 +1         IF (MB1 EQ MB2)
                    3049 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3050 +1         ENDIF 
                    3051 +1         IF (MB1 EQ MB1)
0C2B 754701         3052 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3053 +1         ENDIF 
                    3054 +1         
0C2E 304206         3055 +1         jnb     PKI2, $+9
0C31 C222           3056 +1         clr     FAST
0C33 D223           3057 +1         setb    SLOW
0C35 D238           3058 +1         setb    STOPPED         
0C37 D253           3059 +1         setb    ERRF23_U
0C39 D25A           3060 +1         setb    ERRF23_D
0C3B 053A           3061 +1         inc     ERRF23_C
0C3D C21A           3062 +1                     clr     PKO2                           
0C3F C22A           3063 +1         clr     PO2U            
0C41 C229           3064 +1         clr     PO2D              
0C43 1211FB         3065 +1                     lcall   WRITEPORTS
0C46 020783         3066 +1         ljmp    DOWN2
0C49                3067 +1 ENDD13:
0C49 00             3068 +1         nop
0C4A 200AD1         3070            jb      MB2, DOWN3_MB2A ;-; mame uz aj druhu spomalovaciu clonku?    
                    3071 +1         CLR_FLOOR_ERR   ERRF23      
0C4D C253           3072 +1         clr    ERRF23_U
0C4F C25A           3073 +1         clr    ERRF23_D
                    3074 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0C51 00             3075 +1         nop
                    3077            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
0C52 1211FB         3078            lcall   WRITEPORTS      ;
                    3079 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0C55 1210F8         3080 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0C58 121194         3081 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0C5B 300AFA         3082 +1         jnb     MB2, $-3  ; 
0C5E 1210F8         3083 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
DEBUG                                                                                                         PAGE 55

                    3085    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3086    ;        anl     A, #00000100b ;-;
                    3087    ;        jz      DOWN3_MB1     ;-;       Ak nie, chod do stavu DOWN3_MB1
0C61                3088    DOWN3_MB2_CFC:
                    3089            ;--------------------------
                    3090 +1         CFCSS     16, 25, -1, -1, -1
0C61 633C19         3091 +1         xrl             G,  #25             
                    3092 +1         IF (-1 <> -1)
                    3093 +1             mov   A,  -1         
                    3094 +1             xrl   G,  A          
                    3095 +1         ENDIF    
0C64 E53C           3096 +1         mov   A,  G              
                    3097 +2         LCJNE A,  #16, CFCERR     
0C66 B41003         3098 +2         cjne    A, #16, $+6
0C69 020C6F         3099 +2         jmp     $+6
0C6C 0210A3         3100 +2         ljmp    CFCERR
0C6F 00             3101 +2         nop
                    3102 +1         IF (-1 <> -1)
                    3103 +1             mov         D1, #-1     
                    3104 +1         ELSE
0C70 753D20         3105 +1             mov         D1, #32        
                    3106 +1         ENDIF                    
                    3107 +1         IF (-1 <> -1)
                    3108 +1             mov         D2, #-1     
                    3109 +1         ELSE
0C73 753E20         3110 +1             mov         D2, #32        
                    3111 +1         ENDIF                    
0C76 7410           3112 +1         mov       A, #16
0C78 121283         3113 +1         lcall     PRINTCHAR        
                    3115            ;--------------------------
                    3116 +1         ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0)
                    3117 +1                                         
0C7B C3             3118 +1         clr     C                       
0C7C 7400           3119 +1         mov     A, #0h                  
0C7E 7211           3120 +1         orl     C, PI2D      
0C80 B00E           3121 +1         anl     C, /DPZK                
0C82 7242           3122 +1         orl     C, PKI2          
0C84 B05A           3123 +1         anl     C, /ERRF2_D 
0C86 720F           3124 +1         orl     C, DPK                  
0C88 7238           3125 +1         orl     C, STOPPED              
0C8A 3400           3126 +1         addc    A, #0h                  
0C8C 7050           3128            jnz     D3_MB2C         ; Ak ano, zastav
                    3129 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0C8E E522           3130 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0C90 33             3131 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0C91 547E           3132 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3133 +1 
                    3134 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3135 +2         ANLB    ACC.2, ERRF2_D  ; |
0C93 A2E2           3136 +2         mov   C, ACC.2
0C95 B05A           3137 +2         anl   C, /ERRF2_D
0C97 92E2           3138 +2         mov   ACC.2, C
                    3139 +2         ANLB    ACC.3, ERRF2_D  ; |
0C99 A2E3           3140 +2         mov   C, ACC.3
DEBUG                                                                                                         PAGE 56

0C9B B05A           3141 +2         anl   C, /ERRF2_D
0C9D 92E3           3142 +2         mov   ACC.3, C
                    3143 +2         ANLB    ACC.4, ERRF3_D  ; |
0C9F A2E4           3144 +2         mov   C, ACC.4
0CA1 B05B           3145 +2         anl   C, /ERRF3_D
0CA3 92E4           3146 +2         mov   ACC.4, C
                    3147 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3148 +1 
0CA5 7805           3149 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3150 +1  ; LL1: 
0CA7 6006           3151 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0CA9 C3             3152 +1         clr     C               ; Inak shiftnem o 2
0CAA 33             3153 +1         rlc     A               ;
0CAB C3             3154 +1         clr     C               ;
0CAC 33             3155 +1         rlc     A               ;
0CAD D8F8           3156 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3157 +1 ; LL2:
0CAF E8             3158 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3160 +1         LCJNE   A, #2, DOWN3_MB1; |   ak nie, nezastavujeme  
0CB0 B40203         3161 +1         cjne    A, #2, $+6
0CB3 020CB9         3162 +1         jmp     $+6
0CB6 020CE8         3163 +1         ljmp    DOWN3_MB1
0CB9 00             3164 +1         nop
                    3166 +1         NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0CBA 7405           3167 +1         mov     A, #5
0CBC C3             3168 +1         clr     C
0CBD 9402           3169 +1         subb    A, #2
0CBF F8             3170 +1         mov     R0, A
0CC0 E528           3171 +1         mov     A, INPORTA
0CC2 541E           3172 +1         anl     A, #00011110b
0CC4 852BF0         3173 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0CC7 53F00C         3174 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0CCA 63F0FF         3175 +1         xrl     B, #0FFH
0CCD 55F0           3176 +1         anl     A, B
0CCF C3             3177 +1         clr     C
0CD0 33             3178 +1         rlc     A
0CD1 C3             3179 +1         clr     C
0CD2 33             3180 +1         rlc     A
0CD3 C3             3181 +1         clr     C
0CD4 33             3182 +1         rlc     A
                    3183 +1 ;LL1   
0CD5 C3             3184 +1         clr     C
0CD6 33             3185 +1         rlc     A
0CD7 D8FC           3186 +1         djnz    R0, $-2;LL1
0CD9 6003           3188            jz      D3_MB2C         ; |   ak neni zastavujem                  
0CDB 020CE8         3189            ljmp    DOWN3_MB1       ;-; |        
0CDE D223           3190    D3_MB2C: setb    SLOW            ;       Ak ano, spomalme
0CE0 C222           3191            clr     FAST            ; 
0CE2 1211FB         3192            lcall   WRITEPORTS      ;
0CE5 020D34         3193            jmp     DOWN3_STOP     ;-; a prejdi do stavu DOWN3_STOP
                    3194    
                    3195    
0CE8                3196    DOWN3_MB1:    
DEBUG                                                                                                         PAGE 57

                    3197            ;--------------------------
                    3198 +1         CFCSS     17, 1, -1, 0, -1
0CE8 633C01         3199 +1         xrl             G,  #1             
                    3200 +1         IF (-1 <> -1)
                    3201 +1             mov   A,  -1         
                    3202 +1             xrl   G,  A          
                    3203 +1         ENDIF    
0CEB E53C           3204 +1         mov   A,  G              
                    3205 +2         LCJNE A,  #17, CFCERR     
0CED B41103         3206 +2         cjne    A, #17, $+6
0CF0 020CF6         3207 +2         jmp     $+6
0CF3 0210A3         3208 +2         ljmp    CFCERR
0CF6 00             3209 +2         nop
                    3210 +1         IF (-1 <> -1)
                    3211 +1             mov         D1, #-1     
                    3212 +1         ELSE
0CF7 753D20         3213 +1             mov         D1, #32        
                    3214 +1         ENDIF                    
                    3215 +1         IF (0 <> -1)
0CFA 753E00         3216 +1             mov         D2, #0     
                    3217 +1         ELSE
                    3218 +1             mov         D2, #32        
                    3219 +1         ENDIF                    
0CFD 7411           3220 +1         mov       A, #17
0CFF 121283         3221 +1         lcall     PRINTCHAR        
                    3223            ;--------------------------
0D02 121194         3224    DOWN3_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3225 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D05 200C03         3226 +1         jb      SKRD, $+6
0D08 021057         3227 +1         ljmp    ERR_SKRD
0D0B 00             3228 +1         nop
                    3230 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3231 +1                                                                                             
                                                                                                                 
                    3232 +1                                                                                             
                                                                                                                 
                    3233 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  000F              3234 +1         COUNT    SET    COUNT+1                   
                    3235 +1         
0D0C 200A1E         3236 +1         jb      MB2, ENDD14
                    3237 +1         
                    3238 +1         IF (MB2 EQ MB2)
0D0F 754703         3239 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3240 +1         ENDIF 
                    3241 +1         IF (MB2 EQ MB1)
                    3242 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3243 +1         ENDIF 
                    3244 +1         
0D12 304206         3245 +1         jnb     PKI2, $+9
0D15 C222           3246 +1         clr     FAST
0D17 D223           3247 +1         setb    SLOW
0D19 D238           3248 +1         setb    STOPPED         
0D1B D252           3249 +1         setb    ERRF2_U
0D1D D25A           3250 +1         setb    ERRF2_D
0D1F 0536           3251 +1         inc     ERRF2_C
0D21 C21A           3252 +1                     clr     PKO2                           
DEBUG                                                                                                         PAGE 58

0D23 C22A           3253 +1         clr     PO2U            
0D25 C229           3254 +1         clr     PO2D              
0D27 1211FB         3255 +1                     lcall   WRITEPORTS
0D2A 02080D         3256 +1         ljmp    DOWN2_MB2
0D2D                3257 +1 ENDD14:
0D2D 00             3258 +1         nop
0D2E 2009D1         3260            jb      MB1, DOWN3_MB1_C;-; Sme na zastavovacej clonke?
                    3261    ;        CLR_FLOOR_ERR   ERRF2
                    3262    ;        ZASTAV  2, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3263    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril
                    3264    ;        jnz     D3_MB1C         ; Ak ano, zastav
                    3265    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3266    ;        LCJNE   A, #2, DOWN2    ; |   ak nie, nezastavujeme  
                    3267    ;        NIZSIE_KABINA 2         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3268    ;        jz      D3_MB1C         ; |   ak neni zastavujem                  
0D31 020783         3269            ljmp    DOWN2         ;-; |        
                    3270    ;D3_MB1C: clr     DOWN            ; zastav motor
                    3271    ;        setb    DOWNOld         ;       (a zalohuj)
                    3272    ;        clr     UPOld           ;       (a zalohuj)
                    3273    ;        clr     FAST            ; 
                    3274    ;        lcall   WRITEPORTS      ; 
                    3275    ;        jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2 
0D34                3276    DOWN3_STOP: 
                    3277            ;--------------------------
                    3278 +1         CFCSS     21, 5, 0, 4, -1
0D34 633C05         3279 +1         xrl             G,  #5             
                    3280 +1         IF (-1 <> -1)
                    3281 +1             mov   A,  -1         
                    3282 +1             xrl   G,  A          
                    3283 +1         ENDIF    
0D37 E53C           3284 +1         mov   A,  G              
                    3285 +2         LCJNE A,  #21, CFCERR     
0D39 B41503         3286 +2         cjne    A, #21, $+6
0D3C 020D42         3287 +2         jmp     $+6
0D3F 0210A3         3288 +2         ljmp    CFCERR
0D42 00             3289 +2         nop
                    3290 +1         IF (0 <> -1)
0D43 753D00         3291 +1             mov         D1, #0     
                    3292 +1         ELSE
                    3293 +1             mov         D1, #32        
                    3294 +1         ENDIF                    
                    3295 +1         IF (4 <> -1)
0D46 753E04         3296 +1             mov         D2, #4     
                    3297 +1         ELSE
                    3298 +1             mov         D2, #32        
                    3299 +1         ENDIF                    
0D49 7415           3300 +1         mov       A, #21
0D4B 121283         3301 +1         lcall     PRINTCHAR        
                    3303            ;--------------------------
0D4E 121194         3304    DOWN3_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3305 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0D51 200C03         3306 +1         jb      SKRD, $+6
0D54 021057         3307 +1         ljmp    ERR_SKRD
0D57 00             3308 +1         nop
DEBUG                                                                                                         PAGE 59

                    3310 +1         SET_FLOOR_ERR   MB2, ERRF2, DOWN2_MB2, 2, %COUNT ; >>> CHYBA, Vypadla zastavovacia c
                                                                               lonka (narazil som na spomalovaciu) <<<
                    3311 +1                                                                                             
                                                                                                                 
                    3312 +1                                                                                             
                                                                                                                 
                    3313 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0010              3314 +1         COUNT    SET    COUNT+1                   
                    3315 +1         
0D58 200A1E         3316 +1         jb      MB2, ENDD15
                    3317 +1         
                    3318 +1         IF (MB2 EQ MB2)
0D5B 754703         3319 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3320 +1         ENDIF 
                    3321 +1         IF (MB2 EQ MB1)
                    3322 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3323 +1         ENDIF 
                    3324 +1         
0D5E 304206         3325 +1         jnb     PKI2, $+9
0D61 C222           3326 +1         clr     FAST
0D63 D223           3327 +1         setb    SLOW
0D65 D238           3328 +1         setb    STOPPED         
0D67 D252           3329 +1         setb    ERRF2_U
0D69 D25A           3330 +1         setb    ERRF2_D
0D6B 0536           3331 +1         inc     ERRF2_C
0D6D C21A           3332 +1                     clr     PKO2                           
0D6F C22A           3333 +1         clr     PO2U            
0D71 C229           3334 +1         clr     PO2D              
0D73 1211FB         3335 +1                     lcall   WRITEPORTS
0D76 02080D         3336 +1         ljmp    DOWN2_MB2
0D79                3337 +1 ENDD15:
0D79 00             3338 +1         nop
0D7A 2009D1         3340            jb      MB1, DOWN3_STOP_C;-; Sme na zastavovacej clonke?  
                    3341    ;        CLR_FLOOR_ERR   ERRF2     
0D7D C221           3342            clr     DOWN            ; zastav motor
0D7F D23B           3343            setb    DOWNOld         ;       (a zalohuj)
0D81 C23A           3344            clr     UPOld           ;       (a zalohuj)
0D83 C222           3345            clr     FAST            ; 
0D85 1211FB         3346            lcall   WRITEPORTS      ; 
0D88 020417         3347            jmp     FLOOR2        ;-; a prejdi do stavu FLOOR2         
                    3348    
                    3349            
                    3350    ;------------------------------------------------------------------------------- << 4. posch
                                                                               odie >>
                    3351    
0D8B                3352    FLOOR4:
                    3353            ;--------------------------
                    3354 +1         CFCSS     19, 22, -1, -1, D1
0D8B 633C16         3355 +1         xrl             G,  #22             
                    3356 +1         IF (D1 <> -1)
0D8E E53D           3357 +1             mov   A,  D1         
0D90 623C           3358 +1             xrl   G,  A          
                    3359 +1         ENDIF    
0D92 E53C           3360 +1         mov   A,  G              
                    3361 +2         LCJNE A,  #19, CFCERR     
0D94 B41303         3362 +2         cjne    A, #19, $+6
0D97 020D9D         3363 +2         jmp     $+6
0D9A 0210A3         3364 +2         ljmp    CFCERR
DEBUG                                                                                                         PAGE 60

0D9D 00             3365 +2         nop
                    3366 +1         IF (-1 <> -1)
                    3367 +1             mov         D1, #-1     
                    3368 +1         ELSE
0D9E 753D20         3369 +1             mov         D1, #32        
                    3370 +1         ENDIF                    
                    3371 +1         IF (-1 <> -1)
                    3372 +1             mov         D2, #-1     
                    3373 +1         ELSE
0DA1 753E20         3374 +1             mov         D2, #32        
                    3375 +1         ENDIF                    
0DA4 7413           3376 +1         mov       A, #19
0DA6 121283         3377 +1         lcall     PRINTCHAR        
                    3379            ;--------------------------
                    3380 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0DA9 53240F         3381 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0DAC D227           3382 +1         setb    FLED4
0DAE 1211FB         3383 +1         lcall   WRITEPORTS
0DB1 C238           3385            clr     STOPPED
                    3386 +1         TIMER2  60              ; (Timer - 3s)
0DB3 752D3C         3387 +1            mov           T2_C, #60                              
0DB6 C27A           3388 +1                  clr       T2_F                                  
0DB8 D2CA           3389 +1                  setb      TR2                                             
                    3391 +1         ROZSVIET_SMER_LED
0DBA D22F           3392 +1         setb    LEDU            ;
0DBC D22E           3393 +1         setb    LEDD            ;
0DBE 1211FB         3394 +1         lcall   WRITEPORTS      ;
0DC1 7546C0         3396            mov     POSCHODIE, #0C0h ; 1100 0000 - posch. 4
0DC4 121194         3397    F4S:    lcall   READPORTS     ;-; nacitanie dat
                    3398 +1         ljnb    MB2, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0DC7 200A03         3399 +1         jb      MB2, $+6
0DCA 021089         3400 +1         ljmp    ERRFLOOR
0DCD 00             3401 +1         nop
                    3403 +1         ljnb    SKRD, ERRFLOOR   ; chyba, kabina sa pohla, ked sa nemala!
0DCE 200C03         3404 +1         jb      SKRD, $+6
0DD1 021089         3405 +1         ljmp    ERRFLOOR
0DD4 00             3406 +1         nop
                    3408 +1         ZRUS_POSCH 4
0DD5 C21C           3409 +1         clr     PKO4       
0DD7 C22D           3410 +1         clr     PO4U      
0DD9 C22D           3411 +1         clr     PO4D      
0DDB 1211FB         3412 +1         lcall   WRITEPORTS
                    3414            
                    3415 +1         LCALLB          S_RI, RCV_MESSAGE
0DDE 306103         3416 +1         jnb     S_RI, $+6
0DE1 1212C0         3417 +1         lcall   RCV_MESSAGE
0DE4 00             3418 +1         nop
                    3420            
0DE5 307ADC         3421            jnb                T2_F, F4S                    ; Uz presiel minimalny cas na poscho
                                                                               di? Ak nie, nejdeme dalej
                    3422 +1         KABINOVE_SVETLO         ; Rozsviet kabinove svetlo a smerovu signalizaciu ak je v ka
                                                                               bine osoba
0DE8 A20D           3423 +1         mov      C, DP          
0DEA 720E           3424 +1         orl      C, DPZK        
0DEC 720F           3425 +1         orl      C, DPK         
0DEE 9218           3426 +1         mov      KS, C          
DEBUG                                                                                                         PAGE 61

0DF0 922F           3427 +1         mov      LEDU, C        
0DF2 922E           3428 +1         mov      LEDD, C        
0DF4 1211FB         3429 +1         lcall   WRITEPORTS      
0DF7 200FCA         3431            jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0DFA 3045C7         3432            jnb     DOORCLSD, F4S   ; Su otvorene dvere? Ak ano, tak nejdem dalej.
                    3433 +1         JE_VYBRATE_POSCHODIE F4S; Je v kabine osoba, ktora este nevybrala poschodie? Ak ano,
                                                                                nejdeme dalej.
0DFD A20D           3434 +1         mov      C, DP         
0DFF 720E           3435 +1         orl      C, DPZK        
0E01 720F           3436 +1         orl      C, DPK         
0E03 5006           3437 +1         jnc      $+8            
0E05 E528           3438 +1         mov      A, INPORTA     
0E07 541E           3439 +1         anl      A, #00011110b  
0E09 60B9           3440 +1         jz       F4S       
                    3442            ;clr     PKO4          ;-; vynulovanie volby poschodia na ktorom stojim
                    3443            ;clr     PO4            ;
                    3444            ;lcall   WRITEPORTS      ;
                    3445            ;jb      DPK, F4S        ; Mam pretazenu kabinu? (Ak ano, tak sa nepohnem)
0E0B E528           3446            mov     A, INPORTA      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Kabina)
0E0D 852BF0         3447            mov     B, ERRFLOOR_D   ; | maskujem chybne poschodia
0E10 53F00C         3448            anl     B, #00001100b   ;  | na krajne poschodia dovolim ist
0E13 63F0FF         3449            xrl     B, #0FFH        ; | |
0E16 55F0           3450            anl     A, B            ; | |
0E18 540E           3451            anl     A, #00001110b ;-;
0E1A 701A           3452            jnz     F4OK          ;-; ak ano, ideme na to
0E1C E522           3453            mov     A, INPORTC      ; zistenie, ci bolo stlacene nieco menej ako poschodie na kt
                                                                               orom stojim (Sachta)
0E1E 541F           3454            anl     A, #00011111b ;-;
                    3455            ;ANLB    ACC.0, ERRF1_D  ; maskujem chybne poschodia (v smere hore)
                    3456 +1         ANLB    ACC.1, ERRF2_D  ; |
0E20 A2E1           3457 +1         mov   C, ACC.1
0E22 B05A           3458 +1         anl   C, /ERRF2_D
0E24 92E1           3459 +1         mov   ACC.1, C
                    3461 +1         ANLB    ACC.2, ERRF2_D  ; |
0E26 A2E2           3462 +1         mov   C, ACC.2
0E28 B05A           3463 +1         anl   C, /ERRF2_D
0E2A 92E2           3464 +1         mov   ACC.2, C
                    3466 +1         ANLB    ACC.3, ERRF3_D  ; |
0E2C A2E3           3467 +1         mov   C, ACC.3
0E2E B05B           3468 +1         anl   C, /ERRF3_D
0E30 92E3           3469 +1         mov   ACC.3, C
                    3471            ;ANLB    ACC.4, ERRF3_D  ; |
0E32 7002           3472            jnz     F4OK          ;-; ak ano, ideme na to
0E34 808E           3473            jmp     F4S             ; Nemam sa kde hnut, opakujem
0E36 901748         3474    F4OK:   mov   DPTR, #COM_BUSY   ; Poslanie BUSY spravy 
0E39 121236         3475            lcall DISPSTR           ;
                    3476 +1         SET_DOWN                  ; rychly pohyb dole
0E3C C220           3477 +1         clr     UP
0E3E D221           3478 +1         setb    DOWN
0E40 C22F           3479 +1         clr     LEDU
0E42 D22E           3480 +1         setb    LEDD 
                    3482 +1         SET_FAST                ; 
0E44 D222           3483 +1         setb     FAST
0E46 C223           3484 +1         clr      SLOW
0E48 D218           3485 +1         setb     KS      
0E4A 1211FB         3487            lcall   WRITEPORTS      ; 
0E4D 020E50         3488            jmp     DOWN4         ;-; prejdi do stavu DOWN4 
DEBUG                                                                                                         PAGE 62

                    3489    
                    3490    
0E50                3491    DOWN4:
                    3492            ;--------------------------
                    3493 +1         CFCSS     22, 5, -1, 15, -1
0E50 633C05         3494 +1         xrl             G,  #5             
                    3495 +1         IF (-1 <> -1)
                    3496 +1             mov   A,  -1         
                    3497 +1             xrl   G,  A          
                    3498 +1         ENDIF    
0E53 E53C           3499 +1         mov   A,  G              
                    3500 +2         LCJNE A,  #22, CFCERR     
0E55 B41603         3501 +2         cjne    A, #22, $+6
0E58 020E5E         3502 +2         jmp     $+6
0E5B 0210A3         3503 +2         ljmp    CFCERR
0E5E 00             3504 +2         nop
                    3505 +1         IF (-1 <> -1)
                    3506 +1             mov         D1, #-1     
                    3507 +1         ELSE
0E5F 753D20         3508 +1             mov         D1, #32        
                    3509 +1         ENDIF                    
                    3510 +1         IF (15 <> -1)
0E62 753E0F         3511 +1             mov         D2, #15     
                    3512 +1         ELSE
                    3513 +1             mov         D2, #32        
                    3514 +1         ENDIF                    
0E65 7416           3515 +1         mov       A, #22
0E67 121283         3516 +1         lcall     PRINTCHAR        
                    3518            ;--------------------------
                    3519 +1                 POLOHA_LED 4  ;-; Zhasni LEDKY,uz sme na poschodi (aj na paneli "Poloha kabi
                                                                               ny", nechaj len aktualne poschodie)
0E6A 53240F         3520 +1         anl     OUTPORTB, #((not bmFLED1) and(not bmFLED2) and(not bmFLED3) and(not bmFLED4)
                                                                               )          
0E6D D227           3521 +1         setb    FLED4
0E6F 1211FB         3522 +1         lcall   WRITEPORTS
                    3524 +1         ZAKMITC MB1             ; Pockame, kym odideme z poschodia (Clonky MB1)
0E72 1210F8         3525 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0E75 121194         3526 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0E78 3009FA         3527 +1         jnb     MB1, $-3  ; 
0E7B 1210F8         3528 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0E7E 121194         3530    DOWN4_C: lcall   READPORTS       ; nacitanie dat
                    3531 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0E81 200C03         3532 +1         jb      SKRD, $+6
0E84 021057         3533 +1         ljmp    ERR_SKRD
0E87 00             3534 +1         nop
                    3536 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadli 2 spomalovacie
                                                                                clonky (narazil som na zastavovaciu) <<<
                                                                               
                    3537 +1                                                                                             
                                                                                                                 
                    3538 +1                                                                                             
                                                                                                                 
                    3539 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0011              3540 +1         COUNT    SET    COUNT+1                   
                    3541 +1         
0E88 20091E         3542 +1         jb      MB1, ENDD16
                    3543 +1         
DEBUG                                                                                                         PAGE 63

                    3544 +1         IF (MB1 EQ MB2)
                    3545 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3546 +1         ENDIF 
                    3547 +1         IF (MB1 EQ MB1)
0E8B 754701         3548 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3549 +1         ENDIF 
                    3550 +1         
0E8E 304306         3551 +1         jnb     PKI3, $+9
0E91 C222           3552 +1         clr     FAST
0E93 D223           3553 +1         setb    SLOW
0E95 D238           3554 +1         setb    STOPPED         
0E97 D254           3555 +1         setb    ERRF34_U
0E99 D25B           3556 +1         setb    ERRF34_D
0E9B 053B           3557 +1         inc     ERRF34_C
0E9D C21B           3558 +1                     clr     PKO3                           
0E9F C22C           3559 +1         clr     PO3U            
0EA1 C22B           3560 +1         clr     PO3D              
0EA3 1211FB         3561 +1                     lcall   WRITEPORTS
0EA6 020B7C         3562 +1         ljmp    DOWN3
0EA9                3563 +1 ENDD16:
0EA9 00             3564 +1         nop
0EAA 200AD1         3566            jb      MB2, DOWN4_C    ;-; mame uz 1. spomalovaciu clonku?
                    3567 +1         CLR_FLOOR_ERR   ERRF34
0EAD C254           3568 +1         clr    ERRF34_U
0EAF C25B           3569 +1         clr    ERRF34_D
                    3570 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0EB1 00             3571 +1         nop
                    3573 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme      
0EB2 1210F8         3574 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EB5 121194         3575 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EB8 300AFA         3576 +1         jnb     MB2, $-3  ; 
0EBB 1210F8         3577 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3579            ;setb    LEDU            ; Ak ano, rozsviet LEDku, ze mame prvu MB2 mame za sebou
0EBE 1211FB         3580            lcall   WRITEPORTS      ;
0EC1 020EC4         3581            jmp     DOWN4_MB2     ;-; a prejdi do stavu DOWN4_MB2
                    3582            
                    3583            
0EC4                3584    DOWN4_MB2:
                    3585            ;--------------------------
                    3586 +1         CFCSS     23, 1, -1, 14, -1
0EC4 633C01         3587 +1         xrl             G,  #1             
                    3588 +1         IF (-1 <> -1)
                    3589 +1             mov   A,  -1         
                    3590 +1             xrl   G,  A          
                    3591 +1         ENDIF    
0EC7 E53C           3592 +1         mov   A,  G              
                    3593 +2         LCJNE A,  #23, CFCERR     
0EC9 B41703         3594 +2         cjne    A, #23, $+6
0ECC 020ED2         3595 +2         jmp     $+6
0ECF 0210A3         3596 +2         ljmp    CFCERR
0ED2 00             3597 +2         nop
                    3598 +1         IF (-1 <> -1)
                    3599 +1             mov         D1, #-1     
                    3600 +1         ELSE
0ED3 753D20         3601 +1             mov         D1, #32        
                    3602 +1         ENDIF                    
                    3603 +1         IF (14 <> -1)
DEBUG                                                                                                         PAGE 64

0ED6 753E0E         3604 +1             mov         D2, #14     
                    3605 +1         ELSE
                    3606 +1             mov         D2, #32        
                    3607 +1         ENDIF                    
0ED9 7417           3608 +1         mov       A, #23
0EDB 121283         3609 +1         lcall     PRINTCHAR        
                    3611            ;--------------------------
                    3612 +1         ZAKMITC MB2             ; Pockame, kym odideme z predchadzajucej clonky       
0EDE 1210F8         3613 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0EE1 121194         3614 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0EE4 300AFA         3615 +1         jnb     MB2, $-3  ; 
0EE7 1210F8         3616 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
0EEA                3618    DOWN4_MB2A:
0EEA 121194         3619            lcall   READPORTS       ; nacitanie dat
                    3620 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0EED 200C03         3621 +1         jb      SKRD, $+6
0EF0 021057         3622 +1         ljmp    ERR_SKRD
0EF3 00             3623 +1         nop
                    3625 +1         SET_FLOOR_ERR   MB1, ERRF34, DOWN3, 3, %COUNT    ; >>> CHYBA, Vypadla spomalovacia c
                                                                               lonka (narazil som na zastavovaciu) <<<
                    3626 +1                                                                                             
                                                                                                                 
                    3627 +1                                                                                             
                                                                                                                 
                    3628 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0012              3629 +1         COUNT    SET    COUNT+1                   
                    3630 +1         
0EF4 20091E         3631 +1         jb      MB1, ENDD17
                    3632 +1         
                    3633 +1         IF (MB1 EQ MB2)
                    3634 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3635 +1         ENDIF 
                    3636 +1         IF (MB1 EQ MB1)
0EF7 754701         3637 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3638 +1         ENDIF 
                    3639 +1         
0EFA 304306         3640 +1         jnb     PKI3, $+9
0EFD C222           3641 +1         clr     FAST
0EFF D223           3642 +1         setb    SLOW
0F01 D238           3643 +1         setb    STOPPED         
0F03 D254           3644 +1         setb    ERRF34_U
0F05 D25B           3645 +1         setb    ERRF34_D
0F07 053B           3646 +1         inc     ERRF34_C
0F09 C21B           3647 +1                     clr     PKO3                           
0F0B C22C           3648 +1         clr     PO3U            
0F0D C22B           3649 +1         clr     PO3D              
0F0F 1211FB         3650 +1                     lcall   WRITEPORTS
0F12 020B7C         3651 +1         ljmp    DOWN3
0F15                3652 +1 ENDD17:
0F15 00             3653 +1         nop
0F16 200AD1         3655            jb      MB2, DOWN4_MB2A ;-; mame uz aj druhu spomalovaciu clonku?   
                    3656 +1         CLR_FLOOR_ERR   ERRF34       
0F19 C254           3657 +1         clr    ERRF34_U
0F1B C25B           3658 +1         clr    ERRF34_D
                    3659 +1         ;mov    PORUCHA, #0 ;porucha 000 - bez poruchy
0F1D 00             3660 +1         nop
                    3662            ;setb    LEDD            ; Ak ano, rozsviet LEDku, ze mame druhu MB2
DEBUG                                                                                                         PAGE 65

0F1E 1211FB         3663            lcall   WRITEPORTS      ;
                    3664 +1         ZAKMITC MB2             ; Pockame, kym z nej odideme
0F21 1210F8         3665 +1         lcall   TIME10MS        ; pockame 10 ms kym sa hodnota ustali (ze som na clonke)
0F24 121194         3666 +1         lcall   READPORTS       ; Uz sme z tej clonky prec?
0F27 300AFA         3667 +1         jnb     MB2, $-3  ; 
0F2A 1210F8         3668 +1         lcall   TIME10MS        ; pockame 10 ms  kym sa hodnota ustali (ze sme z nej naozaj 
                                                                               zliezli)
                    3670    ;        mov     A, INPORTA      ; Chceme tu spomalit? - je najblizsie poschodie zvolene?
                    3671    ;        anl     A, #00001000b ;-;
                    3672    ;        jz      DOWN4_MB1     ;-;       Ak nie, chod do stavu DOWN4_MB1
0F2D                3673    DOWN4_MB2_CFC:
                    3674            ;--------------------------
                    3675 +1         CFCSS     7, 16, -1, -1, -1
0F2D 633C10         3676 +1         xrl             G,  #16             
                    3677 +1         IF (-1 <> -1)
                    3678 +1             mov   A,  -1         
                    3679 +1             xrl   G,  A          
                    3680 +1         ENDIF    
0F30 E53C           3681 +1         mov   A,  G              
                    3682 +2         LCJNE A,  #7, CFCERR     
0F32 B40703         3683 +2         cjne    A, #7, $+6
0F35 020F3B         3684 +2         jmp     $+6
0F38 0210A3         3685 +2         ljmp    CFCERR
0F3B 00             3686 +2         nop
                    3687 +1         IF (-1 <> -1)
                    3688 +1             mov         D1, #-1     
                    3689 +1         ELSE
0F3C 753D20         3690 +1             mov         D1, #32        
                    3691 +1         ENDIF                    
                    3692 +1         IF (-1 <> -1)
                    3693 +1             mov         D2, #-1     
                    3694 +1         ELSE
0F3F 753E20         3695 +1             mov         D2, #32        
                    3696 +1         ENDIF                    
0F42 7407           3697 +1         mov       A, #7
0F44 121283         3698 +1         lcall     PRINTCHAR        
                    3700            ;--------------------------
                    3701 +1         ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? (
                                                                               Vrati do A 1 ak ano, inak 0) 
                    3702 +1                                         
0F47 C3             3703 +1         clr     C                       
0F48 7400           3704 +1         mov     A, #0h                  
0F4A 7213           3705 +1         orl     C, PI3D      
0F4C B00E           3706 +1         anl     C, /DPZK                
0F4E 7243           3707 +1         orl     C, PKI3          
0F50 B05B           3708 +1         anl     C, /ERRF3_D 
0F52 720F           3709 +1         orl     C, DPK                  
0F54 7238           3710 +1         orl     C, STOPPED              
0F56 3400           3711 +1         addc    A, #0h                  
0F58 7050           3713            jnz     D4_MB2C       ;-; Ak ano, zastav
                    3714 +1         NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (poto
                                                                               m stojime urcite)
0F5A E522           3715 +1         mov     A, INPORTC      ; INPORTC - vektor "privolavace zo sachty"               
0F5C 33             3716 +1         rlc     A               ; SHIFT LEFT - shiftnem si tak, aby som mal kazde poschodie 
                                                                               dvojicu bitov | X  4 | 3U 3D | 2U 2D | 1 
                                                                                X | 
0F5D 547E           3717 +1         anl     A, #01111110b   ; Vynulujem nedefinovane bity
                    3718 +1 
DEBUG                                                                                                         PAGE 66

                    3719 +1         ;ANLB    ACC.1, ERRF1_D  ; maskujem chybne poschodia
                    3720 +2         ANLB    ACC.2, ERRF2_D  ; |
0F5F A2E2           3721 +2         mov   C, ACC.2
0F61 B05A           3722 +2         anl   C, /ERRF2_D
0F63 92E2           3723 +2         mov   ACC.2, C
                    3724 +2         ANLB    ACC.3, ERRF2_D  ; |
0F65 A2E3           3725 +2         mov   C, ACC.3
0F67 B05A           3726 +2         anl   C, /ERRF2_D
0F69 92E3           3727 +2         mov   ACC.3, C
                    3728 +2         ANLB    ACC.4, ERRF3_D  ; |
0F6B A2E4           3729 +2         mov   C, ACC.4
0F6D B05B           3730 +2         anl   C, /ERRF3_D
0F6F 92E4           3731 +2         mov   ACC.4, C
                    3732 +1         ;ANLB    ACC.5, ERRF3_D  ; |
                    3733 +1 
0F71 7805           3734 +1         mov     R0, #05         ; Budem opakovat max. 4x (ale chcem mat index o jeden viac, 
                                                                               aby som mal na konci rovno cislo poschodi
                                                                               a)
                    3735 +1  ; LL1: 
0F73 6006           3736 +1         jz      $+8;LL2         ; Ak mam 0 - ziadne dalsie poschodia ne su pritomne, skocim 
                                                                               na LL2
0F75 C3             3737 +1         clr     C               ; Inak shiftnem o 2
0F76 33             3738 +1         rlc     A               ;
0F77 C3             3739 +1         clr     C               ;
0F78 33             3740 +1         rlc     A               ;
0F79 D8F8           3741 +1         djnz    R0, $-6         ; ...a pokracujem v zistovani
                    3742 +1 ; LL2:
0F7B E8             3743 +1         mov     A, R0           ; vysledne (najnizsie zvolene) poschodie je index v R0
                    3745 +1         LCJNE   A, #3, DOWN4_MB1; |   ak nie, nezastavujeme  
0F7C B40303         3746 +1         cjne    A, #3, $+6
0F7F 020F85         3747 +1         jmp     $+6
0F82 020FB4         3748 +1         ljmp    DOWN4_MB1
0F85 00             3749 +1         nop
                    3751 +1         NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale 
                                                                               neni nad nami uz nic v kabine stlacene? 
                                                                               
0F86 7405           3752 +1         mov     A, #5
0F88 C3             3753 +1         clr     C
0F89 9403           3754 +1         subb    A, #3
0F8B F8             3755 +1         mov     R0, A
0F8C E528           3756 +1         mov     A, INPORTA
0F8E 541E           3757 +1         anl     A, #00011110b
0F90 852BF0         3758 +1         mov     B, ERRFLOOR_D   ; maskujem chybne poschodia
0F93 53F00C         3759 +1         anl     B, #00001100b   ; na krajne poschodia dovolim ist
0F96 63F0FF         3760 +1         xrl     B, #0FFH
0F99 55F0           3761 +1         anl     A, B
0F9B C3             3762 +1         clr     C
0F9C 33             3763 +1         rlc     A
0F9D C3             3764 +1         clr     C
0F9E 33             3765 +1         rlc     A
0F9F C3             3766 +1         clr     C
0FA0 33             3767 +1         rlc     A
                    3768 +1 ;LL1   
0FA1 C3             3769 +1         clr     C
0FA2 33             3770 +1         rlc     A
0FA3 D8FC           3771 +1         djnz    R0, $-2;LL1
0FA5 6003           3773            jz      D4_MB2C         ; |   ak neni zastavujem          
0FA7 020FB4         3774            ljmp    DOWN4_MB1       ;-; |       
DEBUG                                                                                                         PAGE 67

0FAA D223           3775    D4_MB2C: setb    SLOW            ;       Ak ano, spomalme
0FAC C222           3776            clr     FAST            ; 
0FAE 1211FB         3777            lcall   WRITEPORTS      ;
0FB1 021000         3778            jmp     DOWN4_STOP     ;-; a prejdi do stavu DOWN4_STOP
                    3779            
                    3780            
0FB4                3781    DOWN4_MB1:    
                    3782            ;--------------------------
                    3783 +1         CFCSS     25, 30, 20, 0, -1
0FB4 633C1E         3784 +1         xrl             G,  #30             
                    3785 +1         IF (-1 <> -1)
                    3786 +1             mov   A,  -1         
                    3787 +1             xrl   G,  A          
                    3788 +1         ENDIF    
0FB7 E53C           3789 +1         mov   A,  G              
                    3790 +2         LCJNE A,  #25, CFCERR     
0FB9 B41903         3791 +2         cjne    A, #25, $+6
0FBC 020FC2         3792 +2         jmp     $+6
0FBF 0210A3         3793 +2         ljmp    CFCERR
0FC2 00             3794 +2         nop
                    3795 +1         IF (20 <> -1)
0FC3 753D14         3796 +1             mov         D1, #20     
                    3797 +1         ELSE
                    3798 +1             mov         D1, #32        
                    3799 +1         ENDIF                    
                    3800 +1         IF (0 <> -1)
0FC6 753E00         3801 +1             mov         D2, #0     
                    3802 +1         ELSE
                    3803 +1             mov         D2, #32        
                    3804 +1         ENDIF                    
0FC9 7419           3805 +1         mov       A, #25
0FCB 121283         3806 +1         lcall     PRINTCHAR        
                    3808            ;--------------------------
0FCE 121194         3809    DOWN4_MB1_C: lcall   READPORTS       ; nacitanie dat
                    3810 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
0FD1 200C03         3811 +1         jb      SKRD, $+6
0FD4 021057         3812 +1         ljmp    ERR_SKRD
0FD7 00             3813 +1         nop
                    3815 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3816 +1                                                                                             
                                                                                                                 
                    3817 +1                                                                                             
                                                                                                                 
                    3818 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0013              3819 +1         COUNT    SET    COUNT+1                   
                    3820 +1         
0FD8 200A1E         3821 +1         jb      MB2, ENDD18
                    3822 +1         
                    3823 +1         IF (MB2 EQ MB2)
0FDB 754703         3824 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3825 +1         ENDIF 
                    3826 +1         IF (MB2 EQ MB1)
                    3827 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3828 +1         ENDIF 
                    3829 +1         
0FDE 304306         3830 +1         jnb     PKI3, $+9
DEBUG                                                                                                         PAGE 68

0FE1 C222           3831 +1         clr     FAST
0FE3 D223           3832 +1         setb    SLOW
0FE5 D238           3833 +1         setb    STOPPED         
0FE7 D253           3834 +1         setb    ERRF3_U
0FE9 D25B           3835 +1         setb    ERRF3_D
0FEB 0537           3836 +1         inc     ERRF3_C
0FED C21B           3837 +1                     clr     PKO3                           
0FEF C22C           3838 +1         clr     PO3U            
0FF1 C22B           3839 +1         clr     PO3D              
0FF3 1211FB         3840 +1                     lcall   WRITEPORTS
0FF6 020BF4         3841 +1         ljmp    DOWN3_MB2
0FF9                3842 +1 ENDD18:
0FF9 00             3843 +1         nop
0FFA 2009D1         3845            jb      MB1, DOWN4_MB1_C ;-; Sme na zastavovacej clonke?
                    3846    ;        CLR_FLOOR_ERR   ERRF3
                    3847    ;        ZASTAV  3, D            ; Ak ano, chceme tu zastavit? - je toto poschodie zvolene? 
                                                                               (Vrati do A 1 ak ano, inak 0)
                    3848    ;        clr     STOPPED         ; Priznak STOPPED vynulujem, uz som ho osetril 
                    3849    ;        jnz     D4_MB1C       ;-; Ak ano, zastav
                    3850    ;        NAJNIZSIE               ; | ..a sme na najnizsom privolanom poschodi z kabiny? (pot
                                                                               om stojime urcite)
                    3851    ;        LCJNE   A, #3, DOWN3    ; |   ak nie, nezastavujeme  
                    3852    ;        NIZSIE_KABINA 3         ; | ..ok, sme na najnizsom privolanom poschodi z kabiny ale
                                                                                neni nad nami uz nic v kabine stlacene? 
                                                                               
                    3853    ;        jz      D4_MB1C         ; |   ak neni zastavujem          
0FFD 020B7C         3854            ljmp    DOWN3         ;-; |       
                    3855    ;D4_MB1C: clr     DOWN            ; zastav motor
                    3856    ;        setb    DOWNOld         ;       (a zalohuj)
                    3857    ;        clr     UPOld           ;       (a zalohuj)
                    3858    ;        clr     FAST            ; 
                    3859    ;        lcall   WRITEPORTS      ; 
                    3860    ;        jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3 
                    3861    
                    3862                    
1000                3863    DOWN4_STOP:    
                    3864            ;--------------------------
                    3865 +1         CFCSS     13, 10, 0, -1, -1
1000 633C0A         3866 +1         xrl             G,  #10             
                    3867 +1         IF (-1 <> -1)
                    3868 +1             mov   A,  -1         
                    3869 +1             xrl   G,  A          
                    3870 +1         ENDIF    
1003 E53C           3871 +1         mov   A,  G              
                    3872 +2         LCJNE A,  #13, CFCERR     
1005 B40D03         3873 +2         cjne    A, #13, $+6
1008 02100E         3874 +2         jmp     $+6
100B 0210A3         3875 +2         ljmp    CFCERR
100E 00             3876 +2         nop
                    3877 +1         IF (0 <> -1)
100F 753D00         3878 +1             mov         D1, #0     
                    3879 +1         ELSE
                    3880 +1             mov         D1, #32        
                    3881 +1         ENDIF                    
                    3882 +1         IF (-1 <> -1)
                    3883 +1             mov         D2, #-1     
                    3884 +1         ELSE
1012 753E20         3885 +1             mov         D2, #32        
DEBUG                                                                                                         PAGE 69

                    3886 +1         ENDIF                    
1015 740D           3887 +1         mov       A, #13
1017 121283         3888 +1         lcall     PRINTCHAR        
                    3890            ;--------------------------
101A 121194         3891    DOWN4_STOP_C: lcall   READPORTS       ; nacitanie dat
                    3892 +1         ljnb    SKRD, ERR_SKRD  ; >>> CHYBA, Dolna porovnavacia clonka <<<
101D 200C03         3893 +1         jb      SKRD, $+6
1020 021057         3894 +1         ljmp    ERR_SKRD
1023 00             3895 +1         nop
                    3897 +1         SET_FLOOR_ERR   MB2, ERRF3, DOWN3_MB2, 3, %COUNT  ; >>> CHYBA, Vypadla zastavovacia 
                                                                               clonka (narazil som na spomalovaciu) <<<
                                                                               
                    3898 +1                                                                                             
                                                                                                                 
                    3899 +1                                                                                             
                                                                                                                 
                    3900 +1         ;INCREMENT SUFFIX  FOR  NEXT LABEL             
  0014              3901 +1         COUNT    SET    COUNT+1                   
                    3902 +1         
1024 200A1E         3903 +1         jb      MB2, ENDD19
                    3904 +1         
                    3905 +1         IF (MB2 EQ MB2)
1027 754703         3906 +1             mov   PORUCHA, #3 ;porucha 011 - EZ
                    3907 +1         ENDIF 
                    3908 +1         IF (MB2 EQ MB1)
                    3909 +1             mov   PORUCHA, #1 ;porucha 001 - E1S
                    3910 +1         ENDIF 
                    3911 +1         
102A 304306         3912 +1         jnb     PKI3, $+9
102D C222           3913 +1         clr     FAST
102F D223           3914 +1         setb    SLOW
1031 D238           3915 +1         setb    STOPPED         
1033 D253           3916 +1         setb    ERRF3_U
1035 D25B           3917 +1         setb    ERRF3_D
1037 0537           3918 +1         inc     ERRF3_C
1039 C21B           3919 +1                     clr     PKO3                           
103B C22C           3920 +1         clr     PO3U            
103D C22B           3921 +1         clr     PO3D              
103F 1211FB         3922 +1                     lcall   WRITEPORTS
1042 020BF4         3923 +1         ljmp    DOWN3_MB2
1045                3924 +1 ENDD19:
1045 00             3925 +1         nop
1046 2009D1         3927            jb      MB1, DOWN4_STOP_C ;-; Sme na zastavovacej clonke?
                    3928    ;        CLR_FLOOR_ERR   ERRF3
1049 C221           3929            clr     DOWN            ; zastav motor
104B D23B           3930            setb    DOWNOld         ;       (a zalohuj)
104D C23A           3931            clr     UPOld           ;       (a zalohuj)
104F C222           3932            clr     FAST            ; 
1051 1211FB         3933            lcall   WRITEPORTS      ; 
1054 0208CE         3934            jmp     FLOOR3        ;-; a prejdi do stavu FLOOR3                   
                    3935      
                    3936      
                    3937      
                    3938    
                    3939            
1057                3940    ERR_SKRD:    
1057 C221           3941            clr     DOWN            ; zastav motor
1059 C222           3942            clr     FAST            ; 
DEBUG                                                                                                         PAGE 70

105B 1211FB         3943            lcall   WRITEPORTS      ; 
105E 9016B5         3944            mov     DPTR, #STR_ERR_SKRD         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
1061 121236         3945            lcall   DISPSTR         ;
                    3946            ; Nastavenie spravneho priznaku G a D     
1064 753C1E         3947            mov     G, #30          ;
1067 753D00         3948            mov     D1, #0           ;
106A 753E00         3949            mov     D2, #0           ;
106D 020126         3950            ljmp    FLOOR1    
                    3951            
1070                3952    ERR_SKRH: 
1070 C222           3953            clr     FAST            ; zastav motor
1072 C223           3954            clr     SLOW            ; 
1074 1211FB         3955            lcall   WRITEPORTS      ; 
1077 90167A         3956            mov     DPTR, #STR_ERR_SKRH         ; vypis info o neocakavanom nacitani synchroniza
                                                                               cnej clonky
107A 121236         3957            lcall   DISPSTR         ;
                    3958            ; Nastavenie spravneho priznaku G a D     
107D 753C05         3959            mov     G, #5           ;
1080 753D00         3960            mov     D1, #0           ;
1083 753E00         3961            mov     D2, #0           ;
1086 020D8B         3962            ljmp    FLOOR4 
                    3963            
1089                3964    ERRFLOOR:
1089 C222           3965            clr     FAST            ; zastav motor
108B C223           3966            clr     SLOW            ; 
108D 1211FB         3967            lcall   WRITEPORTS      ; 
1090 9016F0         3968            mov     DPTR, #STR_ERR_FLOOR         ; vypis info o neocakavanom pohnuti sa kabiny z
                                                                                poschodia
1093 121236         3969            lcall   DISPSTR         ;
                    3970            ; rozblikaj vsetky LEDky
                    3971            ; pockaj kym vsetci vystupia
                    3972            ; pockaj este 3 sakundy
                    3973 +1         TIMER2  60
1096 752D3C         3974 +1            mov           T2_C, #60                              
1099 C27A           3975 +1                  clr       T2_F                                  
109B D2CA           3976 +1                  setb      TR2                                             
109D 307AFD         3978            jnb               T2_F, $                       ; 
                    3979            ;zresetuj
10A0 020033         3980            ljmp     START
                    3981            
                    3982    
                    3983               
10A3                3984    CFCERR:
10A3 C220           3985            clr     UP              ; zastav motor
10A5 C221           3986            clr     DOWN            ; 
10A7 C222           3987            clr     FAST            ; 
10A9 C223           3988            clr     SLOW            ; 
10AB 1211FB         3989            lcall   WRITEPORTS      ; 
10AE 901733         3990            mov     DPTR, #STR_ERR_CFC         ; vypis info o zisteni chyby toku programu
10B1 121236         3991            lcall   DISPSTR         ;
                    3992                    
10B4                3993    ENDPROG:
                    3994 +1         TIMER2  20
10B4 752D14         3995 +1            mov           T2_C, #20                              
10B7 C27A           3996 +1                  clr       T2_F                                  
10B9 D2CA           3997 +1                  setb      TR2                                             
10BB 307AFD         3999            jnb     T2_F, $
DEBUG                                                                                                         PAGE 71

10BE D218           4000            setb    KS
10C0 1211FB         4001            call    WRITEPORTS     
                    4002 +1         TIMER2  20
10C3 752D14         4003 +1            mov           T2_C, #20                              
10C6 C27A           4004 +1                  clr       T2_F                                  
10C8 D2CA           4005 +1                  setb      TR2                                             
10CA 307AFD         4007            jnb     T2_F, $
10CD C218           4008            clr     KS
10CF 1211FB         4009            call    WRITEPORTS
10D2 80E0           4010            jmp     ENDPROG 
                    4011    
10D4 22             4012            ret
                    4013            
                    4014            
                    4015            
                    4016    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4017    ; INT_TIMER0
                    4018    ; Obsluha prerusenia timera 0
                    4019    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
10D5                4020    INT_TIMER0:
10D5 C0D0           4021            push    PSW
10D7 C0E0           4022            push    ACC
10D9 C0F0           4023            push    B
                    4024            ;push    OUTPORTC
                    4025            
10DB E52E           4026            mov     A, T0_C ;R5
10DD 152E           4027            dec     T0_C    ;R5
10DF 6002           4028            jz      INT_TIMER0_MAIN    
10E1 800E           4029            sjmp    INT_TIMER0_END
10E3                4030    INT_TIMER0_MAIN:
10E3 752E14         4031            mov     T0_C, #TIMER0CONST ;R5, A
10E6 E52A           4032            mov     A, ERRFLOOR_U
10E8 452B           4033            orl     A, ERRFLOOR_D
10EA 541E           4034            anl     A, #00011110b
10EC 23             4035            rl      A
10ED 23             4036            rl      A
10EE 23             4037            rl      A    
10EF 6224           4038            xrl     OUTPORTB, A     
                    4039                          
                    4040            ;clr    EA
                    4041            ;mov     p0, OUTPORTB 
                    4042            ;mov     p2, #i8255OUTB
                    4043            ;clr     WRNOT
                    4044            ;nop
                    4045            ;nop
                    4046            ;nop
                    4047            ;nop
                    4048            ;setb    WRNOT
                    4049            ;setb    EA
                    4050         
10F1                4051    INT_TIMER0_END:
                    4052            ;pop     OUTPORTC
10F1 D0F0           4053            pop     B       
10F3 D0E0           4054            pop     ACC
10F5 D0D0           4055            pop     PSW
10F7 32             4056            reti 
                    4057            
                    4058    ;INT_TIMER0:
DEBUG                                                                                                         PAGE 72

                    4059    ;        push    ACC
                    4060    ;        mov     A, R7  
                    4061    ;        dec     R7               
                    4062    ;        jnz     INT_TIMER0_END     
                    4063    ;        mov     R7, #20h
                    4064    ;        jb      LEDU, INT_TIMER0_CLEAR       
                    4065    ;        setb    LEDU
                    4066    ;        setb    LEDD
                    4067    ;        jmp     INT_TIMER0_WRITE
                    4068    ;INT_TIMER0_CLEAR:        
                    4069    ;        ;clr     LEDU
                    4070    ;        ;clr     LEDD
                    4071    ;INT_TIMER0_WRITE: 
                    4072    ;        lcall   WRITEPORTS
                    4073    ;INT_TIMER0_END: 
                    4074    ;        setb    LEDU
                    4075    ;        lcall   WRITEPORTS       
                    4076    ;        pop     ACC
                    4077    ;        reti
                    4078            
                    4079            
                    4080    ; rutina time delay 1 ms pre oscilator s frekvenciou 11.0592 MHz
                    4081    ; 1 instrukcia 2 takty? => 11.0592/2 = pocet instrukcii potrebnych na 1 sekundu
                    4082    ; 11.0592MHz/2000 = zdrzanie 1 ms
10F8                4083    TIME10MS:
10F8 C0D0           4084            push    PSW
10FA C001           4085            push    1 ;R1
10FC C002           4086            push    2 ;R2
                    4087    
                    4088    ;        mov     R1,#063h        ; 2
                    4089    ;                                ; *** 100x
                    4090    ;TIME0:  mov     R2,#0FFh        ; 2 
                    4091    ;TIME1:  djnz    R2,TIME1        ; 256*2   
                    4092    ;        mov     R2,#0FFh        ; 2       
                    4093    ;TIME2:  djnz    R2,TIME2        ; 256*2 
                    4094    ;        mov     R2,#024h        ; 2       
                    4095    ;TIME3:  djnz    R2,TIME3        ; 36*2
                    4096    ;        nop                     ; 1
                    4097    ;        djnz    R1,TIME0        ; 2
                    4098    ;                                ; ***
                    4099    ;        mov     R1,#02Ah        ; 2 
                    4100    ;TIME4:  djnz    R1,TIME4        ; 43*2
                    4101    
                    4102 +1         TIMER2  1
10FE 752D01         4103 +1            mov           T2_C, #1                              
1101 C27A           4104 +1                  clr       T2_F                                  
1103 D2CA           4105 +1                  setb      TR2                                             
1105                4107    TIME:   ;mov     WDTRST, #01Eh
                    4108            ;mov     WDTRST, #0E1h
1105 30CA03         4109            jnb     TR2, TIMEEND 
1108 307AFA         4110            jnb               T2_F, TIME                                     ;pockame, kym prejd
                                                                               e 50-100 ms. 
110B                4111    TIMEEND:          
110B D002           4112            pop     2 ;R2
110D D001           4113            pop     1 ;R1
110F D0D0           4114            pop     PSW
1111 22             4115            ret                     ; koniec
                    4116            
DEBUG                                                                                                         PAGE 73

                    4117            
                    4118    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4119    ; STOP
                    4120    ; osetri stlacenie tlacidla STOP
                    4121    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1112                4122    STOP:
1112 C0D0           4123            push    PSW
1114 C0E0           4124            push    ACC
                    4125            
                    4126            
1116 D238           4127            setb    STOPPED
1118 C222           4128            clr     FAST
111A C223           4129            clr     SLOW
111C 74E1           4130            mov     A, #11100001b
111E 5223           4131            anl     OUTPORTA, A 
1120 C025           4132            push    OUTPORTC     ; ulozenie stavu smerovej signalizacie
1122 D22F           4133            setb    LEDU
1124 D22E           4134            setb    LEDD
1126 1211FB         4135            lcall   WRITEPORTS
                    4136            
                    4137            ;lcall   WAITFORTIMER
                    4138 +1         TIMER2  40
1129 752D28         4139 +1            mov           T2_C, #40                              
112C C27A           4140 +1                  clr       T2_F                                  
112E D2CA           4141 +1                  setb      TR2                                             
1130 121150         4143    STOPC:  lcall   READPORTS1
1133 E528           4144            mov     A, INPORTA
1135 541E           4145            anl     A, #00011110b
1137 60F7           4146            jz      STOPC
1139 307AF4         4147            jnb     T2_F, STOPC 
                    4148                 
                    4149                 
113C C22F           4150            clr     LEDU        
113E C22E           4151            clr     LEDD     
1140 D0E0           4152            pop     ACC         ; obnovenie stavu smerovej signalizacie  
1142 55C0           4153            anl     A, 0C0h
1144 4225           4154            orl     OUTPORTC, A
                    4155            
1146 D223           4156            setb    SLOW
1148 1211FB         4157            lcall   WRITEPORTS
                    4158            
                    4159            
114B D0E0           4160            pop    ACC
114D D0D0           4161            pop    PSW
114F 22             4162            ret        
                    4163            
                    4164    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4165    ; READPORTS1
                    4166    ; precita nove hodnoty na portoch
                    4167    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1150                4168    READPORTS1:
1150 C0D0           4169            push    PSW
1152 C2AF           4170            clr     EA                  ;Treba zakazat prerusenia
                    4171            
                    4172            ;mov     WDTRST, #01Eh
                    4173            ;mov     WDTRST, #0E1h
                    4174            
1154 75A080         4175            mov     p2, #i8255INA       ; citaj data z portu A
DEBUG                                                                                                         PAGE 74

1157 75803F         4176            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
115A C2B7           4177            clr     RDNOT
115C 00             4178            nop
115D 00             4179            nop
115E 00             4180            nop
115F 00             4181            nop
1160 858028         4182            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
1163 D2B7           4183            setb    RDNOT
                    4184            
1165 75A081         4185            mov     p2, #i8255INB       ; citaj data z portu B
1168 7580FE         4186            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
116B C2B7           4187            clr     RDNOT
116D 00             4188            nop
116E 00             4189            nop
116F 00             4190            nop
1170 00             4191            nop
1171 858021         4192            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
1174 D2B7           4193            setb    RDNOT
                    4194    
1176 75A082         4195            mov     p2, #i8255INC       ; citaj data z portu C
1179 75803F         4196            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
117C C2B7           4197            clr     RDNOT
117E 00             4198            nop
117F 00             4199            nop
1180 00             4200            nop
1181 00             4201            nop
1182 858022         4202            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
1185 D2B7           4203            setb    RDNOT
1187 00             4204            nop
1188 00             4205            nop
1189 00             4206            nop
118A 00             4207            nop
118B 00             4208            nop
118C 00             4209            nop
118D 00             4210            nop
118E 00             4211            nop
118F D2AF           4212            setb    EA                 ;znovu spustime prerusenia .
1191 D0D0           4213            pop     PSW
1193 22             4214            ret
                    4215    
                    4216    
                    4217    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4218    ; READPORTS
                    4219    ; precita nove hodnoty na portoch
                    4220    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1194                4221    READPORTS:
1194 C0D0           4222            push    PSW
1196 C0E0           4223            push    ACC
                    4224    
1198 C2AF           4225            clr     EA                  ;Treba zakazat prerusenia
                    4226            
                    4227            ;mov     WDTRST, #01Eh
                    4228            ;mov     WDTRST, #0E1h
                    4229            
119A 75A080         4230            mov     p2, #i8255INA       ; citaj data z portu A
119D 75803F         4231            mov     p0, #(bmSTOP or bmPKI1 or bmPKI2 or bmPKI3 or bmPKI4 or bmDOORCLSD)
11A0 C2B7           4232            clr     RDNOT
DEBUG                                                                                                         PAGE 75

11A2 00             4233            nop
11A3 00             4234            nop
11A4 00             4235            nop
11A5 00             4236            nop
11A6 858028         4237            mov     INPORTA, p0         ; uloz informaciu z datovej zbernice 
11A9 D2B7           4238            setb    RDNOT
                    4239            
11AB 75A081         4240            mov     p2, #i8255INB       ; citaj data z portu B
11AE 7580FE         4241            mov     p0, #(bmMB1I or bmMB2I or bmSKRHI or bmSKRHD or bmDPI or bmDPKI or bmDPZKI)
                                                                               
11B1 C2B7           4242            clr     RDNOT
11B3 00             4243            nop
11B4 00             4244            nop
11B5 00             4245            nop
11B6 00             4246            nop
11B7 858021         4247            mov     INPORTB, p0         ; uloz informaciu z datovej zbernice 
11BA D2B7           4248            setb    RDNOT
                    4249    
11BC 75A082         4250            mov     p2, #i8255INC       ; citaj data z portu C
11BF 75803F         4251            mov     p0, #(bmPI1 or bmPI2D or bmPI2U or bmPI3D or bmPI3U or bmPI4)
11C2 C2B7           4252            clr     RDNOT
11C4 00             4253            nop
11C5 00             4254            nop
11C6 00             4255            nop
11C7 00             4256            nop
11C8 858022         4257            mov     INPORTC, p0         ; uloz informaciu z datovej zbernice 
11CB D2B7           4258            setb    RDNOT
11CD 00             4259            nop
11CE 00             4260            nop
11CF 00             4261            nop
11D0 00             4262            nop
11D1 00             4263            nop
11D2 00             4264            nop
11D3 00             4265            nop
11D4 00             4266            nop
11D5 D2AF           4267            setb    EA                 ;znovu spustime prerusenia
                    4268            
                    4269            
                    4270            
                    4271            
11D7 300F04         4272            jnb     DPK, READPORTS_C1
11DA C222           4273            clr     FAST
11DC D223           4274            setb    SLOW
11DE                4275    READPORTS_C1:         
11DE 204003         4276            jb      STOPNOT, READPORTS_C
11E1 121112         4277            lcall   STOP
11E4                4278    READPORTS_C:        
11E4 E528           4279            mov     A, INPORTA
11E6 541E           4280            anl     A, #00011110b
11E8 4223           4281            orl     OUTPORTA, A
11EA 1211FB         4282            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
11ED E522           4283            mov     A, INPORTC
11EF 543F           4284            anl     A, #00111111b
11F1 4225           4285            orl     OUTPORTC, A
11F3 1211FB         4286            call    WRITEPORTS              ; aktualizuj signalizaciu na ovladacom paneli
                    4287            
11F6 D0E0           4288            pop    ACC
11F8 D0D0           4289            pop    PSW
DEBUG                                                                                                         PAGE 76

11FA 22             4290            ret
                    4291            
                    4292    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4293    ; WRITEPORTS
                    4294    ; spravi zalohu vystupnych registrov a posle data von
                    4295    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11FB                4296    WRITEPORTS:
11FB C0D0           4297            push    PSW
11FD C2AF           4298            clr     EA                  ;Treba zakazat prerusenia
                    4299            
11FF 852380         4300            mov     p0, OUTPORTA        ; teraz postupne posli data najprv na port A,
1202 75A0C0         4301            mov     p2, #i8255OUTA
1205 C2B6           4302            clr     WRNOT
1207 00             4303            nop
1208 00             4304            nop
1209 00             4305            nop
120A 00             4306            nop
120B D2B6           4307            setb    WRNOT
                    4308            
120D 852480         4309            mov     p0, OUTPORTB        ; potom port B
1210 75A0C1         4310            mov     p2, #i8255OUTB
1213 C2B6           4311            clr     WRNOT
1215 00             4312            nop
1216 00             4313            nop
1217 00             4314            nop
1218 00             4315            nop
1219 D2B6           4316            setb    WRNOT
                    4317    
121B 852580         4318            mov     p0, OUTPORTC        ; a nakoniec port C
121E 75A0C2         4319            mov     p2, #i8255OUTC
1221 C2B6           4320            clr     WRNOT
1223 00             4321            nop
1224 00             4322            nop
1225 00             4323            nop
1226 00             4324            nop
1227 D2B6           4325            setb    WRNOT
1229 00             4326            nop
122A 00             4327            nop
122B 00             4328            nop
122C 00             4329            nop
122D 00             4330            nop
122E 00             4331            nop
122F 00             4332            nop
1230 00             4333            nop
1231 D2AF           4334            setb     EA                  ;Treba zakazat prerusenia
1233 D0D0           4335            pop     PSW
1235 22             4336            ret
                    4337    
                    4338    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4339    
                    4340    
                    4341    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4342    ; DISPSTR
                    4343    ; posle na seriovu linku retazec na adrese DPTR
                    4344    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1236                4345    DISPSTR:
1236 C0D0           4346            push    PSW
1238 C0E0           4347            push    ACC
DEBUG                                                                                                         PAGE 77

123A C083           4348            push    DPH
123C C082           4349            push    DPL
123E                4350    DSPS_LOOP: 
                    4351            ;mov     WDTRST, #01Eh
                    4352            ;mov     WDTRST, #0E1h          
123E E4             4353            clr     A
123F 93             4354            movc    A, @A+DPTR
1240 6006           4355            jz      DSPS_END
                    4356            ;jnb     TI, $ 
                    4357            ;clr     TI
                    4358            ;mov     SBUF, A
                    4359            
1242 121283         4360            lcall   PRINTCHAR
1245 A3             4361            inc     DPTR
1246 80F6           4362            sjmp    DSPS_LOOP
1248                4363    DSPS_END:
1248 D082           4364            pop     DPL
124A D083           4365            pop     DPH
124C D0E0           4366            pop     ACC
124E D0D0           4367            pop     PSW
1250 22             4368            ret
                    4369            
                    4370    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4371    ; DISPSTR - no wdt
                    4372    ; posle na seriovu linku retazec na adrese DPTR
                    4373    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1251                4374    DISPSTRNOWDT:
1251 C0D0           4375            push    PSW
1253 C0E0           4376            push    ACC
1255 C083           4377            push    DPH
1257 C082           4378            push    DPL
1259                4379    DSPSNWDT_LOOP:           
1259 E4             4380            clr     A
125A 93             4381            movc    A, @A+DPTR
125B 6006           4382            jz      DSPSNWDT_END
                    4383            ;jnb     TI, $ 
                    4384            ;clr     TI
                    4385            ;mov     SBUF, A
125D 121283         4386            lcall   PRINTCHAR
1260 A3             4387            inc     DPTR
1261 80F6           4388            sjmp    DSPSNWDT_LOOP
1263                4389    DSPSNWDT_END:
1263 D082           4390            pop     DPL
1265 D083           4391            pop     DPH
1267 D0E0           4392            pop     ACC
1269 D0D0           4393            pop     PSW
126B 22             4394            ret
                    4395                                         
                    4396                                         
                =1  4397            $include (procLib.inc)     
                =1  4398    ;*******************************************************************************
                =1  4399    ; Obsluha prerusenia casovaca 2 (Pretecenie coasovaca zaberie 50ms)
                =1  4400    ;-------------------------------------------------------------------------------
                =1  4401    ;
                =1  4402    ;     Po kazdom preteceni sa dekrementuje register <T2_C> 
                =1  4403    ;     Ked register dosiahne hodnotu 0, pocitaclo sa zastavi 
                =1  4404    ;     a nastavi sa priznak <T2_F>
                =1  4405    ; 
DEBUG                                                                                                         PAGE 78

                =1  4406    ;     Priklad implementacie oneskorenia 3 sekundy:
                =1  4407    ;
                =1  4408    ;                mov             T2_C, #60                               ;3 sekundy
                =1  4409    ;                      clr         T2_F;, #0                             ;vynulovat priznak 
                                                                               pretecenia
                =1  4410    ;                      setb        TR2                                             ;spustit 
                                                                               casovac
                =1  4411    ;                      jnb               T2_F, $                                         ;po
                                                                               ckame, kym prejdu 3 sec. 
                =1  4412    ;
                =1  4413    ;
                =1  4414    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;        
126C            =1  4415    INT_TIMER2:
126C C2CF       =1  4416                        clr     TF2
126E C0E0       =1  4417            push    ACC                                           ; zaloha pouzivanych registrov
                                                                                       
                =1  4418                       
1270 E52D       =1  4419            mov     A, T2_C                             ;
1272 6005       =1  4420            jz      INT_TIMER2_MAIN         ; Ak je hodnota T2_C nula, zastavi sa poitadlo a nas
                                                                               tavi sa priznak T2_F   
1274 14         =1  4421                        dec           A                 ; dekrementovanie registra T2_C 
1275 F52D       =1  4422            mov               T2_C, A           ;(vyhradene pre pocitadlo)
                =1  4423                        
1277 8007       =1  4424            sjmp    INT_TIMER2_END          ;
1279            =1  4425    INT_TIMER2_MAIN:
1279 C2CA       =1  4426                        clr           TR2                                         ; zastavime po
                                                                               citadlo
127B 752D00     =1  4427            mov     T2_C, #0                            ; Resetujeme pocitadlo
127E D27A       =1  4428                        setb          T2_F                            ; nastavime priznak pretec
                                                                               enia 
1280            =1  4429    INT_TIMER2_END:     
1280 D0E0       =1  4430            pop     ACC                                     
1282 32         =1  4431            reti 
                =1  4432            
                =1  4433            
                =1  4434    ;*******************************************************************************
                =1  4435    ;   Vypis znaku na seriovu linku
                =1  4436    ;-------------------------------------------------------------------------------
                =1  4437    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4438    ;
1283            =1  4439    PRINTCHAR:
                =1  4440        ;jnb     TI, $ 
                =1  4441        ;clr     TI
1283 106302     =1  4442    _1: JBC   TRE, _2
1286 80FB       =1  4443        JMP   _1
1288            =1  4444    _2:  
1288 F599       =1  4445                    mov     SBUF, A
                =1  4446        ;setb    EA
128A 22         =1  4447        ret
                =1  4448        
                =1  4449    ;*******************************************************************************
                =1  4450    ;   Nacitanie znaku zo seriovej linky
                =1  4451    ;-------------------------------------------------------------------------------
                =1  4452    ;     Vypise jeden znak v <A> na seriovu linku.   
                =1  4453    ;    
                =1  4454    ;READCHAR:
                =1  4455    ;               jnb     RI, $
                =1  4456    ;    clr     RI
DEBUG                                                                                                         PAGE 79

                =1  4457    ;    mov     A, SBUF
                =1  4458    ;    ret
                =1  4459    
                =1  4460    
                =1  4461    
                =1  4462    ;*******************************************************************************
                =1  4463    ;   Obsluha prerusenia seriovej linky
                =1  4464    ;-------------------------------------------------------------------------------
                =1  4465    ;     Ide o prerusenie seriovej linky. Ak je k dispozicii znak, 
                =1  4466    ;     ulozi ho do buffra.
                =1  4467    ;     V pripade, ze je nacitany znak konca ramca, vynuluje 
                =1  4468    ;     ukazovatel do buffra a nastavi priznak S_RI   
                =1  4469    ;  
128B            =1  4470    SERIAL_INT:
                =1  4471                    ;clr            EA
128B C0D0       =1  4472        push    PSW
128D C0E0       =1  4473                    push    ACC
128F C001       =1  4474                    push    1 ;R1
                =1  4475        
                =1  4476        
1291 30981E     =1  4477                    jnb             RI, SERIAL_INT_TI                                       ; Ak
                                                                                neslo o recieve interrupt, ideme na tran
                                                                               smit interrupt
1294 C298       =1  4478                    clr             RI
1296 E599       =1  4479                    mov             A, SBUF
1298 B47E08     =1  4480                    cjne    A, #07Eh, SERIAL_INT_RCV
129B            =1  4481    SERIAL_INT_EOF:         
129B 754500     =1  4482                    mov             MSG_PTR_REC, #0
129E D261       =1  4483                    setb    S_RI
12A0 0212B2     =1  4484                    jmp             SERIAL_INT_TI
12A3            =1  4485    SERIAL_INT_RCV:         
12A3 20610C     =1  4486        jb          S_RI, SERIAL_INT_TI                             ; ak sme este stale neznulov
                                                                               ali priznak prijatej spravy, nenacitavame
                                                                                dalsiu
12A6 C0E0       =1  4487                    push    ACC
12A8 7480       =1  4488                    mov             A, #80h
12AA 2545       =1  4489                    add             A, MSG_PTR_REC
12AC F9         =1  4490                    mov             R1, A
12AD D0E0       =1  4491                    pop     ACC
12AF F7         =1  4492                    mov             @R1, A
12B0 0545       =1  4493                    inc             MSG_PTR_REC
                =1  4494                    ;jmp            SERIAL_INT_END
12B2            =1  4495    SERIAL_INT_TI:
12B2 309904     =1  4496        jnb    TI, SERIAL_INT_END
12B5 D263       =1  4497        setb  TRE        ;<------------
12B7 C299       =1  4498                    clr             TI
12B9            =1  4499    SERIAL_INT_END:
                =1  4500    
12B9 D001       =1  4501                    pop     1 ;R1
12BB D0E0       =1  4502                    pop     ACC
12BD D0D0       =1  4503        pop     PSW
                =1  4504                    ;setb   EA
12BF 32         =1  4505                    reti
                =1  4506        
                =1  4507                    
                =1  4508        
                =1  4509        
                =1  4510        
DEBUG                                                                                                         PAGE 80

                =1  4511                            
                =1  4512                    ; nacitanie a odpoved na spravu
12C0            =1  4513    RCV_MESSAGE:    
12C0 C0D0       =1  4514        push    PSW
12C2 C0C8       =1  4515        push    T2CON
12C4 C02D       =1  4516        push    T2_C
12C6 C02F       =1  4517        push    T2
                =1  4518        
12C8            =1  4519    RCV_MESSAGE1:
                =1  4520            ;       Prijatie spravy
                =1  4521 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
12C8 752D50     =1  4522 +1            mov           T2_C, #80                              
12CB C27A       =1  4523 +1                  clr       T2_F                                  
12CD D2CA       =1  4524 +1                  setb      TR2                                             
12CF            =1  4526    RCV_LOOP:
12CF 207A49     =1  4527                    jb              T2_F, RCV_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
12D2 121194     =1  4528                    lcall   READPORTS
12D5 3061F7     =1  4529        jnb         S_RI, RCV_LOOP  
                =1  4530    
                =1  4531                    
                =1  4532                    
                =1  4533            ;       Vypocet CRC                                             ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
12D8 7880       =1  4534                    mov     R0, #80H                                ;       Adresa prveho bajtu 
                                                                               prijatej spravy (Count)
12DA E6         =1  4535                    mov             A, @R0                                  ;
12DB 75F002     =1  4536                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
12DE A4         =1  4537                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
12DF 04         =1  4538                    inc     A                                               ;       
12E0 F542       =1  4539                    mov             MSG_LEN, A                              ;
12E2 AA42       =1  4540                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
12E4 7880       =1  4541                    mov     R0, #80H                                ;       R2 = dlzka bloku, 
12E6 12141F     =1  4542                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
                                                                                bloku                                   
                                                                                                                        
                                                                                                ;<<<<<<<<<<<<<<<<<<<
12E9 B47E01     =1  4543                    cjne    A, #7Eh, RCV_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
12EC 04         =1  4544                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
12ED            =1  4545    RCV_CONT:       
                =1  4546            ;       Kontrola spravnosti CRC
12ED F5F0       =1  4547                    mov             B, A                                    ; Prave vypocitane C
                                                                               RC zalohujeme do B
12EF E542       =1  4548                    mov             A, MSG_LEN                              ; Nacita sa prijate 
                                                                               CRC
12F1 4480       =1  4549                    orl             A, #80h                                 ;       80h + MSG_LE
                                                                               N (dlzka spravy) + 1 
12F3 F8         =1  4550                    mov             R0, A                                   ;                   
                                                                                    
12F4 E6         =1  4551                    mov             A, @R0                                  ;
DEBUG                                                                                                         PAGE 81

12F5 B5F009     =1  4552                    cjne    A, B, NACK                              ; Porovnanie CRC. Ak sa nezh
                                                                               oduje, posiela sa NACK
                =1  4553    
                =1  4554            ;       Poslanie ACK
12F8            =1  4555    ACK:
12F8 90174C     =1  4556            mov     DPTR, #COM_ACK          ; Posle sa predpripravena sprava ACK 
12FB 121236     =1  4557            lcall   DISPSTR                 ; a pokracuje sa spracovanim prijatej spravy        
                                                                                   
12FE 02130B     =1  4558                    jmp             PROCESS
                =1  4559                    
                =1  4560                    
                =1  4561            ;       Poslanie NACK
1301            =1  4562    NACK:
1301 901750     =1  4563        mov     DPTR, #COM_NACK         ; Posle sa predpripravena sprava NACK
1304 121236     =1  4564        lcall   DISPSTR                         ; a skoci sa na zaciatok tejto rutiny pre prijat
                                                                               ie novej spravy
1307 C261       =1  4565                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
1309 80BD       =1  4566                    jmp             RCV_MESSAGE1
                =1  4567    
                =1  4568            ;       Priprava odpovede
130B            =1  4569    PROCESS:
                =1  4570                    
130B C261       =1  4571                    clr             S_RI                                ; Prijata sprava bola ty
                                                                               m padom spracovana, mozme vynulovat prizn
                                                                               ak S_RI
                =1  4572                    
130D 7408       =1  4573                    mov             A, #08h
130F 78C0       =1  4574                    mov             R0, #0C0h
1311 F6         =1  4575    SLOOP:  mov             @R0, A
1312 08         =1  4576                    inc             R0
1313 14         =1  4577                    dec             A
1314 70FB       =1  4578                    jnz             SLOOP
1316 7600       =1  4579                    mov             @R0, #0h
                =1  4580                    
                =1  4581                    ;mov     R0, #0C0h                  ; Odoslanie odpovede
                =1  4582                    ;lcall  DISPSTRI                            ; z vyrovnavacej pamate urcenej 
                                                                               pre odpoved D:0C0h
                =1  4583                    
1318 121324     =1  4584                    lcall   SND_MESSAGE                             ;odoslanie spravy           
                                                                                                                        
                                                                                                                        
                                                                                                           <<<<<<<<<<
                =1  4585                    
                =1  4586                    
131B            =1  4587    RCV_MESSAGE_END:
                =1  4588    
131B D02F       =1  4589        pop     T2
131D D02D       =1  4590        pop     T2_C
131F D0C8       =1  4591        pop     T2CON
1321 D0D0       =1  4592        pop     PSW
1323 22         =1  4593                    ret
                =1  4594    
                =1  4595    
                =1  4596    
                =1  4597    
                =1  4598    ;-------ODPOVED---------------------------------------------------------
DEBUG                                                                                                         PAGE 82

                =1  4599    
1324            =1  4600    SND_MESSAGE:
1324 C0D0       =1  4601                    push    PSW
1326 C000       =1  4602        push    0 ;R0
1328 C001       =1  4603        push    1 ;R1
132A C005       =1  4604        push    5 ;R5
                =1  4605    
                =1  4606            ;       Priprava odpovede
132C 7408       =1  4607                    mov             A, #08h
132E 78C0       =1  4608                    mov             R0, #0C0h
1330 F6         =1  4609    S2LOOP: mov             @R0, A
1331 08         =1  4610                    inc             R0
1332 14         =1  4611                    dec             A
1333 70FB       =1  4612                    jnz             S2LOOP
1335 7600       =1  4613                    mov             @R0, #0h
                =1  4614            ;       Priprava odpovede
                =1  4615                    
                =1  4616                    
                =1  4617                    ;Zistenie, o aky typ spravy ide
1337 7544C1     =1  4618                    mov             MSG_PTR_S, #0C1h
133A 78C0       =1  4619                    mov             R0, #0C0h
133C 7600       =1  4620                    mov             @R0, #0
133E 7880       =1  4621                    mov             R0, #80h
1340 E6         =1  4622                    mov     A,  @R0
1341 F9         =1  4623                    mov             R1, A 
1342 7881       =1  4624                    mov             R0, #81h
1344 8843       =1  4625                    mov     MSG_PTR_R,  R0
1346            =1  4626    SND_DATA_LOOP:
1346 E6         =1  4627                    mov             A, @R0
                =1  4628 +1                 CLCALLE A, #0, MSG00
1347 B40003     =1  4629 +1         cjne    A, #0, $+6
134A 1213AB     =1  4630 +1         lcall   MSG00
134D 00         =1  4631 +1         nop
                =1  4633 +1                 CLCALLE A, #1, MSG01
134E B40103     =1  4634 +1         cjne    A, #1, $+6
1351 1213C2     =1  4635 +1         lcall   MSG01
1354 00         =1  4636 +1         nop
1355 08         =1  4638                    inc             R0
1356 08         =1  4639                    inc             R0
1357 19         =1  4640                    dec             R1
1358 E9         =1  4641                    mov             A, R1
1359 70EB       =1  4642                    jnz             SND_DATA_LOOP
                =1  4643                    
                =1  4644                    ;       Vypocet CRC                                     ; Vypocita sa pre ko
                                                                               lko bajtov treba spocitat CRC
135B 78C0       =1  4645                    mov     R0, #0C0H                               ;       Adresa prveho bajtu 
                                                                               spravy (Count)
135D E6         =1  4646                    mov             A, @R0                                  ;
135E 75F002     =1  4647                    mov             B, #2                                   ;       (Count * 2) 
                                                                               + 1, lebo datove bloky su dvojbajtove
1361 A4         =1  4648                    mul             AB                                              ;        a c
                                                                               isluje sa od 1.
1362 04         =1  4649                    inc     A                                               ;       
1363 F542       =1  4650                    mov             MSG_LEN, A                              ;
1365 AA42       =1  4651                    mov             R2, MSG_LEN                             ; Vypocet CRC:  
1367 78C0       =1  4652                    mov     R0, #0C0H                               ;       R2 = dlzka bloku, 
1369 12141F     =1  4653                    lcall   CALC_CRCX                               ;       R0 = adresa zaciatku
                                                                                bloku
DEBUG                                                                                                         PAGE 83

136C B47E01     =1  4654                    cjne    A, #7Eh, SND_CONT               ; Ak vyslo CRC 0x7E, pripocitame 1
136F 04         =1  4655                    inc             A                                               ;       (jed
                                                                               na sa totiz o kridlovu znacku)
1370            =1  4656    SND_CONT:                                                               ;
1370 F6         =1  4657                    mov             @R0, A                                  ; Ulozenie CRC8 do b
                                                                               uffra
                =1  4658                    
                =1  4659                    
                =1  4660                    
1371 7D05       =1  4661                    mov             R5, #5                                  ;max. 5 pokusov o zn
                                                                               ovuodoslanie spravy
1373            =1  4662    SND:            
1373 78C0       =1  4663                    mov     R0, #0C0h                   ; Odoslanie odpovede
1375 1213F2     =1  4664                    lcall   DISPMSG                         ; z vyrovnavacej pamate urcenej pre 
                                                                               odpoved D:0C0h
1378 1D         =1  4665                    dec             R5                                              ; a zaznamen
                                                                               ame, ze sme poslali spravu
                =1  4666                    
                =1  4667                    ;clr            S_RI                            ; Prijata sprava bola tym pa
                                                                               dom spracovana, mozme vynulovat priznak S
                                                                               _RI
                =1  4668                    
                =1  4669 +1                 TIMER2  80                                              ; Nastavi sa casovac
                                                                                na 4 sekundy. Ak za tento cas nepride sp
                                                                               rava, rutina sa skonci
1379 752D50     =1  4670 +1            mov           T2_C, #80                              
137C C27A       =1  4671 +1                  clr       T2_F                                  
137E D2CA       =1  4672 +1                  setb      TR2                                             
1380            =1  4674    SND_LOOP:
1380 121194     =1  4675        lcall   READPORTS
1383 207A19     =1  4676                    jb              T2_F, SND_MESSAGE_END   ; Caka sa na prijatie spravy spravu 
                                                                               - malo by to byt hned, lebo sme sem skoci
                                                                               li, ked bolo S_RI rovne jednej, ale ked j
                                                                               e NACK, tak skaceme sem (a cakame na rese
                                                                               nd)
1386 ED         =1  4677                    mov             A, R5
1387 6016       =1  4678                    jz              SND_MESSAGE_END   ; Ak sme uz spravu preposielali 5. krat, k
                                                                               oncime
1389 3061F4     =1  4679                    jnb             S_RI, SND_LOOP  
                =1  4680                    
138C C261       =1  4681                    clr             S_RI                                    ; Prijata sprava bol
                                                                               a tym padom spracovana, mozme vynulovat p
                                                                               riznak S_RI
                =1  4682    
138E 7880       =1  4683                    mov             R0, #80h
1390 E6         =1  4684                    mov     A,  @R0
                =1  4685 +1                 cje             A,  #0FEh, SND_MESSAGE_END
1391 B4FE03     =1  4686 +1         cjne    A, #0FEh, $+6
1394 02139F     =1  4687 +1         ljmp     SND_MESSAGE_END
1397 00         =1  4688 +1         nop
                =1  4690 +1                 cje             A,  #0FFh, SND
1398 B4FF03     =1  4691 +1         cjne    A, #0FFh, $+6
139B 021373     =1  4692 +1         ljmp     SND
139E 00         =1  4693 +1         nop
                =1  4695    
139F            =1  4696    SND_MESSAGE_END:
139F 7544C1     =1  4697        mov         MSG_PTR_S, #0C1h
                =1  4698    
DEBUG                                                                                                         PAGE 84

13A2 D005       =1  4699        pop     5 ;R5
13A4 D001       =1  4700        pop     1 ;R1
13A6 D000       =1  4701        pop     0 ;R0
13A8 D0D0       =1  4702        pop     PSW
13AA 22         =1  4703                    ret
                =1  4704    
                =1  4705    
                =1  4706    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4707    ; Sprava 0
                =1  4708    ; 
                =1  4709    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
13AB            =1  4710    MSG00:
13AB C000       =1  4711                    push    0 ;R0
13AD C0E0       =1  4712                    push    ACC
13AF A844       =1  4713                    mov             R0, MSG_PTR_S
13B1 7604       =1  4714                    mov             @R0, #4h
13B3 08         =1  4715                    inc             R0
13B4 7600       =1  4716                    mov             @R0, #00000000b
                =1  4717                    
13B6 78C0       =1  4718                    mov             R0, #0C0h
13B8 06         =1  4719                    inc             @R0
                =1  4720                    
13B9 0544       =1  4721                    inc             MSG_PTR_S
13BB 0544       =1  4722                    inc             MSG_PTR_S
                =1  4723                    
13BD D0E0       =1  4724                    pop     ACC
13BF D000       =1  4725                    pop     0 ;R0
13C1 22         =1  4726                    ret
                =1  4727            
                =1  4728    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4729    ; Sprava 1
                =1  4730    ; 
                =1  4731    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;         
13C2            =1  4732    MSG01:
13C2 C000       =1  4733                    push    0 ;R0
13C4 C0E0       =1  4734                    push    ACC
13C6 C0F0       =1  4735        push    B
                =1  4736        
13C8 A844       =1  4737                    mov             R0, MSG_PTR_S
13CA 7605       =1  4738                    mov             @R0, #5h
13CC 08         =1  4739                    inc             R0
                =1  4740        
13CD E546       =1  4741        mov   A, POSCHODIE                  ; poschodie, na ktorom sa nachadzame
13CF 4547       =1  4742        orl   A, PORUCHA                    ; posledna rozpoznana porucha
                =1  4743        
13D1            =1  4744    MSG01_DP:
13D1 300D02     =1  4745        jnb   DP, MSG01_DPZK
13D4 4408       =1  4746        orl   A, #08h
13D6            =1  4747    MSG01_DPZK:
13D6 300E02     =1  4748        jnb   DPZK, MSG01_DPK
13D9 4410       =1  4749        orl   A, #10h
13DB            =1  4750    MSG01_DPK:     
13DB 300F02     =1  4751        jnb   DPK, MSG01_CONT
13DE 4418       =1  4752        orl   A, #18h
13E0            =1  4753    MSG01_CONT:
                =1  4754            
13E0 F6         =1  4755                    mov             @R0, A
13E1 754700     =1  4756        mov   PORUCHA, #0 ;porucha 000 - bez poruchy (vynulujem poruchy)
DEBUG                                                                                                         PAGE 85

                =1  4757                    
13E4 78C0       =1  4758                    mov             R0, #0C0h
13E6 06         =1  4759                    inc             @R0
                =1  4760                    
13E7 0544       =1  4761                    inc             MSG_PTR_S
13E9 0544       =1  4762                    inc             MSG_PTR_S
                =1  4763                    
13EB D0F0       =1  4764        pop     B
13ED D0E0       =1  4765                    pop     ACC
13EF D000       =1  4766                    pop     0 ;R0
13F1 22         =1  4767                    ret
                =1  4768    
                =1  4769    
                =1  4770    
                =1  4771    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4772    ; DISPMSG
                =1  4773    ; posle na seriovu linku retazec z buff (ROM, nepriame adresovanie)
                =1  4774    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
13F2            =1  4775    DISPMSG:
13F2 C0D0       =1  4776        push    PSW
13F4 C0E0       =1  4777        push    ACC
13F6 C000       =1  4778                    push    0; R0
13F8 C001       =1  4779                    push    1; R1
                =1  4780                    
13FA 79C0       =1  4781                    mov             R1, #0C0h
13FC E7         =1  4782                    mov             A, @R1
13FD 75F002     =1  4783                    mov             B, #2
1400 A4         =1  4784                    mul             AB
1401 04         =1  4785                    inc             A
1402 04         =1  4786                    inc             A
1403 F9         =1  4787                    mov             R1, A
1404 78C0       =1  4788        mov   R0, #0C0h
                =1  4789                    
1406            =1  4790    DISPMSG_LOOP:           
1406 E9         =1  4791                    mov     A, R1
1407 6008       =1  4792        jz      DISPMSG_END
1409 E6         =1  4793                    mov     A, @R0
                =1  4794                    ;jnb     TI, $
                =1  4795                    ;clr     TI
                =1  4796        ;    mov     SBUF, A
140A 121283     =1  4797        lcall   PRINTCHAR
140D 08         =1  4798        inc     R0
140E 19         =1  4799                    dec               R1
140F 80F5       =1  4800        sjmp    DISPMSG_LOOP
1411            =1  4801    DISPMSG_END:
1411 747E       =1  4802                    mov     A, #07Eh                ; odoslanie kridlovej znacky
                =1  4803                    ;jnb     TI, $
                =1  4804                    ;clr     TI
                =1  4805        ;    mov     SBUF, A
1413 121283     =1  4806                    lcall   PRINTCHAR
                =1  4807        
                =1  4808        
1416 D001       =1  4809                    pop     1; R1
1418 D000       =1  4810                    pop     0; R0
141A D0E0       =1  4811        pop     ACC
141C D0D0       =1  4812        pop     PSW
141E 22         =1  4813        ret
                =1  4814    
DEBUG                                                                                                         PAGE 86

                =1  4815    
                =1  4816    ;****************************************************************************
                =1  4817    ;
                =1  4818    ;  Description:
                =1  4819    ;       Calculates Value In Acc Into The Running CRC In 'B', Using The Table
                =1  4820    ;       Method.  (Faster But Larger)
                =1  4821    ;
                =1  4822    ;  Entry Requirements:
                =1  4823    ;       Acc Has Value To Add To CRC
                =1  4824    ;       'B' Contains Running CRC Value
                =1  4825    ;
                =1  4826    ;  On Exit:
                =1  4827    ;       'B' Has Updated CRC Value
                =1  4828    ;
                =1  4829    ;  Affected:
                =1  4830    ;       PSW.CY, B
                =1  4831    ;
                =1  4832    ;  Stack:
                =1  4833    ;       3 Bytes, Not Including Called Routines
                =1  4834    ;
                =1  4835    ;  Comments:
                =1  4836    ;       None
                =1  4837    
                =1  4838    
                =1  4839    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                =1  4840    ; CALC_CRCX
                =1  4841    ; Vypocita CRC retazca s adresou v R0 a s dlzkou v R2
                =1  4842    ; Vysledok vrati do A
                =1  4843    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
141F            =1  4844    CALC_CRCX:
141F C0D0       =1  4845        push    PSW
1421 C0F0       =1  4846                    push    B
                =1  4847                    ;mov            R0, A
                =1  4848                    
1423 75F000     =1  4849                    mov       B, #00h;
1426            =1  4850    CRCX_LOOP:      
1426 BA0003     =1  4851                    cjne      R2, #0h, CRCX_CONT
1429 021435     =1  4852                    jmp               CRCX_END
142C            =1  4853    CRCX_CONT:              
142C E4         =1  4854        clr     A
142D E6         =1  4855        mov         A, @R0  
142E 12143C     =1  4856        lcall         CRC8_ADD_TABLE;
1431 08         =1  4857        inc     R0
1432 1A         =1  4858                    dec               R2
1433 80F1       =1  4859                    jmp               CRCX_LOOP
1435            =1  4860    CRCX_END:
1435 E5F0       =1  4861                    mov               A, B
                =1  4862        
1437 D0F0       =1  4863                    pop     B
1439 D0D0       =1  4864        pop     PSW
143B 22         =1  4865        ret
                =1  4866            
                =1  4867    
143C            =1  4868    CRC8_ADD_TABLE:  
143C C083       =1  4869                    push    dph                     ; Save DPH
143E C082       =1  4870                    push    dpl                     ; Save DPL
1440 C0E0       =1  4871                    push    acc                     ; Save Acc
                =1  4872    ;
DEBUG                                                                                                         PAGE 87

1442 901451     =1  4873                    mov     dptr, #CRC8_DATA         ; Point To Table
1445 65F0       =1  4874                    xrl     a,b                     ; XOR In CRC
1447 93         =1  4875                    movc    a,@a+dptr               ; Get New CRC Byte
1448 F5F0       =1  4876                    mov     b,a                     ; Store Back
                =1  4877    ;
144A D0E0       =1  4878                    pop     acc                     ; Recover Acc
144C D082       =1  4879                    pop     dpl                     ; Recover DPL
144E D083       =1  4880                    pop     dph                     ; Recover DPH
1450 22         =1  4881                    ret                             ; Return To Caller
                =1  4882                    
1451 005EBCE2   =1  4883    CRC8_DATA:      db      000h, 05eh, 0bch, 0e2h, 061h, 03fh, 0ddh, 083h
1455 613FDD83   
1459 C29C7E20   =1  4884                    db      0c2h, 09ch, 07eh, 020h, 0a3h, 0fdh, 01fh, 041h
145D A3FD1F41   
1461 9DC3217F   =1  4885                    db      09dh, 0c3h, 021h, 07fh, 0fch, 0a2h, 040h, 01eh
1465 FCA2401E   
1469 5F01E3BD   =1  4886                    db      05fh, 001h, 0e3h, 0bdh, 03eh, 060h, 082h, 0dch
146D 3E6082DC   
1471 237D9FC1   =1  4887                    db      023h, 07dh, 09fh, 0c1h, 042h, 01ch, 0feh, 0a0h
1475 421CFEA0   
1479 E1BF5D03   =1  4888                    db      0e1h, 0bfh, 05dh, 003h, 080h, 0deh, 03ch, 062h
147D 80DE3C62   
1481 BEE0025C   =1  4889                    db      0beh, 0e0h, 002h, 05ch, 0dfh, 081h, 063h, 03dh
1485 DF81633D   
1489 7C22C09E   =1  4890                    db      07ch, 022h, 0c0h, 09eh, 01dh, 043h, 0a1h, 0ffh
148D 1D43A1FF   
1491 4618FAA4   =1  4891                    db      046h, 018h, 0fah, 0a4h, 027h, 079h, 09bh, 0c5h
1495 27799BC5   
1499 84DA3866   =1  4892                    db      084h, 0dah, 038h, 066h, 0e5h, 0bbh, 059h, 007h
149D E5BB5907   
14A1 DB856739   =1  4893                    db      0dbh, 085h, 067h, 039h, 0bah, 0e4h, 006h, 058h
14A5 BAE40658   
14A9 1947A5FB   =1  4894                    db      019h, 047h, 0a5h, 0fbh, 078h, 026h, 0c4h, 09ah
14AD 7826C49A   
14B1 653BD987   =1  4895                    db      065h, 03bh, 0d9h, 087h, 004h, 05ah, 0b8h, 0e6h
14B5 045AB8E6   
14B9 A7F91B45   =1  4896                    db      0a7h, 0f9h, 01bh, 045h, 0c6h, 098h, 07ah, 024h
14BD C6987A24   
14C1 F8A6441A   =1  4897                    db      0f8h, 0a6h, 044h, 01ah, 099h, 0c7h, 025h, 07bh
14C5 99C7257B   
14C9 3A6486D8   =1  4898                    db      03ah, 064h, 086h, 0d8h, 05bh, 005h, 0e7h, 0b9h
14CD 5B05E7B9   
14D1 8CD2306E   =1  4899                    db      08ch, 0d2h, 030h, 06eh, 0edh, 0b3h, 051h, 00fh
14D5 EDB3510F   
14D9 4E10F2AC   =1  4900                    db      04eh, 010h, 0f2h, 0ach, 02fh, 071h, 093h, 0cdh
14DD 2F7193CD   
14E1 114FADF3   =1  4901                    db      011h, 04fh, 0adh, 0f3h, 070h, 02eh, 0cch, 092h
14E5 702ECC92   
14E9 D38D6F31   =1  4902                    db      0d3h, 08dh, 06fh, 031h, 0b2h, 0ech, 00eh, 050h
14ED B2EC0E50   
14F1 AFF1134D   =1  4903                    db      0afh, 0f1h, 013h, 04dh, 0ceh, 090h, 072h, 02ch
14F5 CE90722C   
14F9 6D33D18F   =1  4904                    db      06dh, 033h, 0d1h, 08fh, 00ch, 052h, 0b0h, 0eeh
14FD 0C52B0EE   
1501 326C8ED0   =1  4905                    db      032h, 06ch, 08eh, 0d0h, 053h, 00dh, 0efh, 0b1h
1505 530DEFB1   
1509 F0AE4C12   =1  4906                    db      0f0h, 0aeh, 04ch, 012h, 091h, 0cfh, 02dh, 073h
150D 91CF2D73   
DEBUG                                                                                                         PAGE 88

1511 CA947628   =1  4907                    db      0cah, 094h, 076h, 028h, 0abh, 0f5h, 017h, 049h
1515 ABF51749   
1519 0856B4EA   =1  4908                    db      008h, 056h, 0b4h, 0eah, 069h, 037h, 0d5h, 08bh
151D 6937D58B   
1521 5709EBB5   =1  4909                    db      057h, 009h, 0ebh, 0b5h, 036h, 068h, 08ah, 0d4h
1525 36688AD4   
1529 95CB2977   =1  4910                    db      095h, 0cbh, 029h, 077h, 0f4h, 0aah, 048h, 016h
152D F4AA4816   
1531 E9B7550B   =1  4911                    db      0e9h, 0b7h, 055h, 00bh, 088h, 0d6h, 034h, 06ah
1535 88D6346A   
1539 2B7597C9   =1  4912                    db      02bh, 075h, 097h, 0c9h, 04ah, 014h, 0f6h, 0a8h
153D 4A14F6A8   
1541 742AC896   =1  4913                    db      074h, 02ah, 0c8h, 096h, 015h, 04bh, 0a9h, 0f7h
1545 154BA9F7   
1549 B6E80A54   =1  4914                    db      0b6h, 0e8h, 00ah, 054h, 0d7h, 089h, 06bh, 035h                
154D D7896B35   
                =1  4915                    
                    4916    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                    4917    
1551 0D0A5269       4918    STR_INIT:         db  0dh, 0ah, 'Riadiaci system je inicializovany.', 0dh, 0ah, 00h
1555 61646961   
1559 63692073   
155D 79737465   
1561 6D206A65   
1565 20696E69   
1569 6369616C   
156D 697A6F76   
1571 616E792E   
1575 0D0A00     
1578 0D0A5A61       4919    STR_WDT:          db  0dh, 0ah, 'Zapinam WDT...', 0dh, 0ah, 00h
157C 70696E61   
1580 6D205744   
1584 542E2E2E   
1588 0D0A00     
158B 0D0A4361       4920    STR_RESET:          db  0dh, 0ah, 'Cakam 10 sekund...', 0dh, 0ah, 00h
158F 6B616D20   
1593 31302073   
1597 656B756E   
159B 642E2E2E   
159F 0D0A00     
15A2 52696164       4921    STR_STOP:         db  'Riadiaci system je reinicializovany po stlaceni tlacidla STOP.', 0dh,
                                                                                0ah, 00h
15A6 69616369   
15AA 20737973   
15AE 74656D20   
15B2 6A652072   
15B6 65696E69   
15BA 6369616C   
15BE 697A6F76   
15C2 616E7920   
15C6 706F2073   
15CA 746C6163   
15CE 656E6920   
15D2 746C6163   
15D6 69646C61   
15DA 2053544F   
15DE 502E0D0A   
15E2 00         
DEBUG                                                                                                         PAGE 89

15E3 4B616C69       4922    STR_CALIB:        db  'Kalibracia vytahu je ukoncena.', 0dh, 0ah, 00h
15E7 62726163   
15EB 69612076   
15EF 79746168   
15F3 75206A65   
15F7 20756B6F   
15FB 6E63656E   
15FF 612E0D0A   
1603 00         
1604 43687962       4923    STR_ERR_1SPOM_C:  db  'Chyba! Vypadla spomalovacia clonka!', 0dh, 0ah, 00h
1608 61212056   
160C 79706164   
1610 6C612073   
1614 706F6D61   
1618 6C6F7661   
161C 63696120   
1620 636C6F6E   
1624 6B61210D   
1628 0A00       
162A 43687962       4924    STR_ERR_2SPOM_C:  db  'Chyba! Vypadli dve spomalovacie clonky!', 0dh, 0ah, 00h
162E 61212056   
1632 79706164   
1636 6C692064   
163A 76652073   
163E 706F6D61   
1642 6C6F7661   
1646 63696520   
164A 636C6F6E   
164E 6B79210D   
1652 0A00       
1654 43687962       4925    STR_ERR_ZAST_C:   db  'Chyba! Vypadla zastavovacia clonka!', 0dh, 0ah, 00h
1658 61212056   
165C 79706164   
1660 6C61207A   
1664 61737461   
1668 766F7661   
166C 63696120   
1670 636C6F6E   
1674 6B61210D   
1678 0A00       
167A 43687962       4926    STR_ERR_SKRH:     db  'Chyba! Neocakavane nacitanie hornej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
167E 6121204E   
1682 656F6361   
1686 6B617661   
168A 6E65206E   
168E 61636974   
1692 616E6965   
1696 20686F72   
169A 6E656A20   
169E 73706F6D   
16A2 616C6F76   
16A6 6163656A   
16AA 20636C6F   
16AE 6E6B7921   
16B2 0D0A00     
16B5 43687962       4927    STR_ERR_SKRD:     db  'Chyba! Neocakavane nacitanie dolnej spomalovacej clonky!', 0dh, 0ah, 
                                                                               00h
DEBUG                                                                                                         PAGE 90

16B9 6121204E   
16BD 656F6361   
16C1 6B617661   
16C5 6E65206E   
16C9 61636974   
16CD 616E6965   
16D1 20646F6C   
16D5 6E656A20   
16D9 73706F6D   
16DD 616C6F76   
16E1 6163656A   
16E5 20636C6F   
16E9 6E6B7921   
16ED 0D0A00     
16F0 43687962       4928    STR_ERR_FLOOR:     db  'Chyba! Neocakavane pohnutie kabyny z poschodia!', 0dh, 0ah, 00h
16F4 6121204E   
16F8 656F6361   
16FC 6B617661   
1700 6E652070   
1704 6F686E75   
1708 74696520   
170C 6B616279   
1710 6E79207A   
1714 20706F73   
1718 63686F64   
171C 6961210D   
1720 0A00       
1722 53707573       4929    STR_CFC_START:    db  'Spustam KTP...', 0dh, 0ah, 00h
1726 74616D20   
172A 4B54502E   
172E 2E2E0D0A   
1732 00         
1733 446F736C       4930    STR_ERR_CFC:      db  'Doslo k zmene KTP!', 0dh, 0ah, 00h
1737 6F206B20   
173B 7A6D656E   
173F 65204B54   
1743 50210D0A   
1747 00         
                    4931    
                    4932    ;COM_KEEPALIVE:    db  000h, 00h, 7Eh, 00h
1748 FD897E00       4933    COM_BUSY:                     db  0FDh, 89h, 7Eh, 00h
174C FE6B7E00       4934    COM_ACK:                      db  0FEh, 6Bh, 7Eh, 00h
1750 FF357E00       4935    COM_NACK:                     db  0FFh, 35h, 7Eh, 00h
                    4936    
                    4937    
----                4938            DSEG
0050                4939            org     50h            ;Pozor!
0050                4940    STACK:  DS      10h
                    4941    
                    4942    end

VERSION 1.2h ASSEMBLY COMPLETE, 0 ERRORS FOUND
DEBUG                                                                                                         PAGE 91

ACC. . . . . . . . . . . . . . .  D ADDR  00E0H  PREDEFINED  
ACK. . . . . . . . . . . . . . .  C ADDR  12F8H  NOT USED  
B. . . . . . . . . . . . . . . .  D ADDR  00F0H  PREDEFINED  
BMDOORCLSD . . . . . . . . . . .    NUMB  0020H  
BMDOWN . . . . . . . . . . . . .    NUMB  0002H  NOT USED  
BMDPI. . . . . . . . . . . . . .    NUMB  0020H  
BMDPKI . . . . . . . . . . . . .    NUMB  0080H  
BMDPZKI. . . . . . . . . . . . .    NUMB  0040H  
BMFAST . . . . . . . . . . . . .    NUMB  0004H  NOT USED  
BMFLED1. . . . . . . . . . . . .    NUMB  0010H  
BMFLED2. . . . . . . . . . . . .    NUMB  0020H  
BMFLED3. . . . . . . . . . . . .    NUMB  0040H  
BMFLED4. . . . . . . . . . . . .    NUMB  0080H  
BMKS . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
BMLEDD . . . . . . . . . . . . .    NUMB  0040H  
BMLEDU . . . . . . . . . . . . .    NUMB  0080H  
BMMB1I . . . . . . . . . . . . .    NUMB  0002H  
BMMB2I . . . . . . . . . . . . .    NUMB  0004H  
BMPI1. . . . . . . . . . . . . .    NUMB  0001H  
BMPI2D . . . . . . . . . . . . .    NUMB  0002H  
BMPI2U . . . . . . . . . . . . .    NUMB  0004H  
BMPI3D . . . . . . . . . . . . .    NUMB  0008H  
BMPI3U . . . . . . . . . . . . .    NUMB  0010H  
BMPI4. . . . . . . . . . . . . .    NUMB  0020H  
BMPKI1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKI2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKI3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKI4 . . . . . . . . . . . . .    NUMB  0010H  
BMPKO1 . . . . . . . . . . . . .    NUMB  0002H  
BMPKO2 . . . . . . . . . . . . .    NUMB  0004H  
BMPKO3 . . . . . . . . . . . . .    NUMB  0008H  
BMPKO4 . . . . . . . . . . . . .    NUMB  0010H  
BMPO1. . . . . . . . . . . . . .    NUMB  0001H  
BMPO2D . . . . . . . . . . . . .    NUMB  0002H  
BMPO2U . . . . . . . . . . . . .    NUMB  0004H  
BMPO3D . . . . . . . . . . . . .    NUMB  0008H  
BMPO3U . . . . . . . . . . . . .    NUMB  0010H  
BMPO4. . . . . . . . . . . . . .    NUMB  0020H  
BMSKRHD. . . . . . . . . . . . .    NUMB  0010H  
BMSKRHI. . . . . . . . . . . . .    NUMB  0008H  
BMSLOW . . . . . . . . . . . . .    NUMB  0008H  NOT USED  
BMSTOP . . . . . . . . . . . . .    NUMB  0001H  
BMUP . . . . . . . . . . . . . .    NUMB  0001H  NOT USED  
CALC_CRCX. . . . . . . . . . . .  C ADDR  141FH  
CALIB. . . . . . . . . . . . . .  C ADDR  00D3H  NOT USED  
CALIBEND . . . . . . . . . . . .  C ADDR  00ECH  
CALIBEND2. . . . . . . . . . . .  C ADDR  00F7H  
CALIBLOOP. . . . . . . . . . . .  C ADDR  00E4H  
CFCERR . . . . . . . . . . . . .  C ADDR  10A3H  
COM_ACK. . . . . . . . . . . . .  C ADDR  174CH  
COM_BUSY . . . . . . . . . . . .  C ADDR  1748H  
COM_NACK . . . . . . . . . . . .  C ADDR  1750H  
COUNT. . . . . . . . . . . . . .    NUMB  0014H  REDEFINABLE  
CRC8_ADD_TABLE . . . . . . . . .  C ADDR  143CH  
CRC8_DATA. . . . . . . . . . . .  C ADDR  1451H  
CRCX_CONT. . . . . . . . . . . .  C ADDR  142CH  
CRCX_END . . . . . . . . . . . .  C ADDR  1435H  
CRCX_LOOP. . . . . . . . . . . .  C ADDR  1426H  
DEBUG                                                                                                         PAGE 92

CTRLREG. . . . . . . . . . . . .  D ADDR  0027H  
D1 . . . . . . . . . . . . . . .  D ADDR  003DH  
D2 . . . . . . . . . . . . . . .  D ADDR  003EH  
D2_MB1C. . . . . . . . . . . . .  C ADDR  08BEH  
D3_MB2C. . . . . . . . . . . . .  C ADDR  0CDEH  
D4_MB2C. . . . . . . . . . . . .  C ADDR  0FAAH  
DISPMSG. . . . . . . . . . . . .  C ADDR  13F2H  
DISPMSG_END. . . . . . . . . . .  C ADDR  1411H  
DISPMSG_LOOP . . . . . . . . . .  C ADDR  1406H  
DISPSTR. . . . . . . . . . . . .  C ADDR  1236H  
DISPSTRNOWDT . . . . . . . . . .  C ADDR  1251H  NOT USED  
DOORCLSD . . . . . . . . . . . .  B ADDR  0045H  
DOORCLSDOLD. . . . . . . . . . .  B ADDR  0039H  NOT USED  
DOWN . . . . . . . . . . . . . .  B ADDR  0021H  
DOWN2. . . . . . . . . . . . . .  C ADDR  0783H  
DOWN2ERR . . . . . . . . . . . .  C ADDR  07E4H  
DOWN2ERR_CONTINUE. . . . . . . .  C ADDR  07F3H  
DOWN2_C. . . . . . . . . . . . .  C ADDR  07B5H  
DOWN2_MB1. . . . . . . . . . . .  C ADDR  0897H  
DOWN2_MB1_C. . . . . . . . . . .  C ADDR  08B1H  
DOWN2_MB2. . . . . . . . . . . .  C ADDR  080DH  
DOWN2_MB2A . . . . . . . . . . .  C ADDR  0837H  
DOWN2_MB2ERR . . . . . . . . . .  C ADDR  0866H  
DOWN2_MB2ERR_CONTINUE. . . . . .  C ADDR  0876H  
DOWN3. . . . . . . . . . . . . .  C ADDR  0B7CH  
DOWN3A . . . . . . . . . . . . .  C ADDR  0BAEH  
DOWN3_MB1. . . . . . . . . . . .  C ADDR  0CE8H  
DOWN3_MB1_C. . . . . . . . . . .  C ADDR  0D02H  
DOWN3_MB2. . . . . . . . . . . .  C ADDR  0BF4H  
DOWN3_MB2A . . . . . . . . . . .  C ADDR  0C1EH  
DOWN3_MB2_CFC. . . . . . . . . .  C ADDR  0C61H  NOT USED  
DOWN3_STOP . . . . . . . . . . .  C ADDR  0D34H  
DOWN3_STOP_C . . . . . . . . . .  C ADDR  0D4EH  
DOWN4. . . . . . . . . . . . . .  C ADDR  0E50H  
DOWN4_C. . . . . . . . . . . . .  C ADDR  0E7EH  
DOWN4_MB1. . . . . . . . . . . .  C ADDR  0FB4H  
DOWN4_MB1_C. . . . . . . . . . .  C ADDR  0FCEH  
DOWN4_MB2. . . . . . . . . . . .  C ADDR  0EC4H  
DOWN4_MB2A . . . . . . . . . . .  C ADDR  0EEAH  
DOWN4_MB2_CFC. . . . . . . . . .  C ADDR  0F2DH  NOT USED  
DOWN4_STOP . . . . . . . . . . .  C ADDR  1000H  
DOWN4_STOP_C . . . . . . . . . .  C ADDR  101AH  
DOWNOLD. . . . . . . . . . . . .  B ADDR  003BH  
DP . . . . . . . . . . . . . . .  B ADDR  000DH  
DPH. . . . . . . . . . . . . . .  D ADDR  0083H  PREDEFINED  
DPK. . . . . . . . . . . . . . .  B ADDR  000FH  
DPL. . . . . . . . . . . . . . .  D ADDR  0082H  PREDEFINED  
DPZK . . . . . . . . . . . . . .  B ADDR  000EH  
DSPSNWDT_END . . . . . . . . . .  C ADDR  1263H  
DSPSNWDT_LOOP. . . . . . . . . .  C ADDR  1259H  
DSPS_END . . . . . . . . . . . .  C ADDR  1248H  
DSPS_LOOP. . . . . . . . . . . .  C ADDR  123EH  
EA . . . . . . . . . . . . . . .  B ADDR  00AFH  PREDEFINED  
ENDD0. . . . . . . . . . . . . .  C ADDR  0262H  
ENDD1. . . . . . . . . . . . . .  C ADDR  02CEH  
ENDD10 . . . . . . . . . . . . .  C ADDR  0A81H  
ENDD11 . . . . . . . . . . . . .  C ADDR  0B04H  
ENDD12 . . . . . . . . . . . . .  C ADDR  0BD9H  
DEBUG                                                                                                         PAGE 93

ENDD13 . . . . . . . . . . . . .  C ADDR  0C49H  
ENDD14 . . . . . . . . . . . . .  C ADDR  0D2DH  
ENDD15 . . . . . . . . . . . . .  C ADDR  0D79H  
ENDD16 . . . . . . . . . . . . .  C ADDR  0EA9H  
ENDD17 . . . . . . . . . . . . .  C ADDR  0F15H  
ENDD18 . . . . . . . . . . . . .  C ADDR  0FF9H  
ENDD19 . . . . . . . . . . . . .  C ADDR  1045H  
ENDD2. . . . . . . . . . . . . .  C ADDR  03B9H  
ENDD3. . . . . . . . . . . . . .  C ADDR  0405H  
ENDD4. . . . . . . . . . . . . .  C ADDR  05CAH  
ENDD5. . . . . . . . . . . . . .  C ADDR  063AH  
ENDD6. . . . . . . . . . . . . .  C ADDR  0725H  
ENDD7. . . . . . . . . . . . . .  C ADDR  0771H  
ENDD8. . . . . . . . . . . . . .  C ADDR  07E0H  
ENDD9. . . . . . . . . . . . . .  C ADDR  0862H  
ENDPROG. . . . . . . . . . . . .  C ADDR  10B4H  
ERRF12_C . . . . . . . . . . . .  D ADDR  0039H  
ERRF12_D . . . . . . . . . . . .  B ADDR  0059H  
ERRF12_U . . . . . . . . . . . .  B ADDR  0052H  
ERRF1_C. . . . . . . . . . . . .  D ADDR  0035H  
ERRF1_D. . . . . . . . . . . . .  B ADDR  0059H  
ERRF1_U. . . . . . . . . . . . .  B ADDR  0051H  NOT USED  
ERRF23_C . . . . . . . . . . . .  D ADDR  003AH  
ERRF23_D . . . . . . . . . . . .  B ADDR  005AH  
ERRF23_U . . . . . . . . . . . .  B ADDR  0053H  
ERRF2_C. . . . . . . . . . . . .  D ADDR  0036H  
ERRF2_D. . . . . . . . . . . . .  B ADDR  005AH  
ERRF2_U. . . . . . . . . . . . .  B ADDR  0052H  
ERRF34_C . . . . . . . . . . . .  D ADDR  003BH  
ERRF34_D . . . . . . . . . . . .  B ADDR  005BH  
ERRF34_U . . . . . . . . . . . .  B ADDR  0054H  
ERRF3_C. . . . . . . . . . . . .  D ADDR  0037H  
ERRF3_D. . . . . . . . . . . . .  B ADDR  005BH  
ERRF3_U. . . . . . . . . . . . .  B ADDR  0053H  
ERRF4_C. . . . . . . . . . . . .  D ADDR  0038H  
ERRF4_D. . . . . . . . . . . . .  B ADDR  005CH  NOT USED  
ERRF4_U. . . . . . . . . . . . .  B ADDR  0054H  
ERRFLOOR . . . . . . . . . . . .  C ADDR  1089H  
ERRFLOOR_D . . . . . . . . . . .  D ADDR  002BH  
ERRFLOOR_U . . . . . . . . . . .  D ADDR  002AH  
ERRSIG . . . . . . . . . . . . .  D ADDR  0041H  NOT USED  
ERRSKRD_C. . . . . . . . . . . .  D ADDR  0040H  NOT USED  
ERRSKRH_C. . . . . . . . . . . .  D ADDR  003FH  NOT USED  
ERR_SKRD . . . . . . . . . . . .  C ADDR  1057H  
ERR_SKRH . . . . . . . . . . . .  C ADDR  1070H  
ES . . . . . . . . . . . . . . .  B ADDR  00ACH  PREDEFINED  
ET0. . . . . . . . . . . . . . .  B ADDR  00A9H  PREDEFINED  
ET2. . . . . . . . . . . . . . .  B ADDR  00ADH  
F1C. . . . . . . . . . . . . . .  C ADDR  01C4H  NOT USED  
F1OK . . . . . . . . . . . . . .  C ADDR  01EFH  
F1S. . . . . . . . . . . . . . .  C ADDR  0161H  
F1_KEEPALIVE_CONT. . . . . . . .  C ADDR  01A1H  
F2 . . . . . . . . . . . . . . .  C ADDR  0539H  
F2DOWN . . . . . . . . . . . . .  C ADDR  0559H  
F2OK . . . . . . . . . . . . . .  C ADDR  04B1H  
F2S. . . . . . . . . . . . . . .  C ADDR  0450H  
F2SW . . . . . . . . . . . . . .  C ADDR  04F7H  
F2UP . . . . . . . . . . . . . .  C ADDR  0545H  
DEBUG                                                                                                         PAGE 94

F3 . . . . . . . . . . . . . . .  C ADDR  09F0H  
F3DOWN . . . . . . . . . . . . .  C ADDR  0A10H  
F3OK . . . . . . . . . . . . . .  C ADDR  0968H  
F3S. . . . . . . . . . . . . . .  C ADDR  0907H  
F3SW . . . . . . . . . . . . . .  C ADDR  09AEH  
F3UP . . . . . . . . . . . . . .  C ADDR  09FCH  
F4OK . . . . . . . . . . . . . .  C ADDR  0E36H  
F4S. . . . . . . . . . . . . . .  C ADDR  0DC4H  
FAST . . . . . . . . . . . . . .  B ADDR  0022H  
FASTOLD. . . . . . . . . . . . .  B ADDR  003CH  NOT USED  
FLED1. . . . . . . . . . . . . .  B ADDR  0024H  
FLED2. . . . . . . . . . . . . .  B ADDR  0025H  
FLED3. . . . . . . . . . . . . .  B ADDR  0026H  
FLED4. . . . . . . . . . . . . .  B ADDR  0027H  
FLOOR1 . . . . . . . . . . . . .  C ADDR  0126H  
FLOOR2 . . . . . . . . . . . . .  C ADDR  0417H  
FLOOR3 . . . . . . . . . . . . .  C ADDR  08CEH  
FLOOR4 . . . . . . . . . . . . .  C ADDR  0D8BH  
FLOORTIME. . . . . . . . . . . .  B ADDR  0064H  
G. . . . . . . . . . . . . . . .  D ADDR  003CH  
HIGHEST. . . . . . . . . . . . .  D ADDR  0032H  NOT USED  
I8255INA . . . . . . . . . . . .    NUMB  0080H  
I8255INB . . . . . . . . . . . .    NUMB  0081H  
I8255INC . . . . . . . . . . . .    NUMB  0082H  
I8255INCW. . . . . . . . . . . .    NUMB  0083H  
I8255OUTA. . . . . . . . . . . .    NUMB  00C0H  
I8255OUTB. . . . . . . . . . . .    NUMB  00C1H  
I8255OUTC. . . . . . . . . . . .    NUMB  00C2H  
I8255OUTCW . . . . . . . . . . .    NUMB  00C3H  
INPORTA. . . . . . . . . . . . .  D ADDR  0028H  
INPORTB. . . . . . . . . . . . .  D ADDR  0021H  
INPORTBOLD . . . . . . . . . . .  D ADDR  0026H  
INPORTC. . . . . . . . . . . . .  D ADDR  0022H  
INT_TIMER0 . . . . . . . . . . .  C ADDR  10D5H  
INT_TIMER0_END . . . . . . . . .  C ADDR  10F1H  
INT_TIMER0_MAIN. . . . . . . . .  C ADDR  10E3H  
INT_TIMER2 . . . . . . . . . . .  C ADDR  126CH  
INT_TIMER2_END . . . . . . . . .  C ADDR  1280H  
INT_TIMER2_MAIN. . . . . . . . .  C ADDR  1279H  
KS . . . . . . . . . . . . . . .  B ADDR  0018H  
LEDD . . . . . . . . . . . . . .  B ADDR  002EH  
LEDU . . . . . . . . . . . . . .  B ADDR  002FH  
LOWEST . . . . . . . . . . . . .  D ADDR  0031H  NOT USED  
MAIN . . . . . . . . . . . . . .  C ADDR  010CH  NOT USED  
MB1. . . . . . . . . . . . . . .  B ADDR  0009H  
MB1OLD . . . . . . . . . . . . .  B ADDR  0031H  NOT USED  
MB2. . . . . . . . . . . . . . .  B ADDR  000AH  
MB2OLD . . . . . . . . . . . . .  B ADDR  0032H  NOT USED  
MSG00. . . . . . . . . . . . . .  C ADDR  13ABH  
MSG01. . . . . . . . . . . . . .  C ADDR  13C2H  
MSG01_CONT . . . . . . . . . . .  C ADDR  13E0H  
MSG01_DP . . . . . . . . . . . .  C ADDR  13D1H  NOT USED  
MSG01_DPK. . . . . . . . . . . .  C ADDR  13DBH  
MSG01_DPZK . . . . . . . . . . .  C ADDR  13D6H  
MSG_LEN. . . . . . . . . . . . .  D ADDR  0042H  
MSG_PTR_R. . . . . . . . . . . .  D ADDR  0043H  
MSG_PTR_REC. . . . . . . . . . .  D ADDR  0045H  
MSG_PTR_S. . . . . . . . . . . .  D ADDR  0044H  
DEBUG                                                                                                         PAGE 95

NACK . . . . . . . . . . . . . .  C ADDR  1301H  
OUTPORTA . . . . . . . . . . . .  D ADDR  0023H  
OUTPORTB . . . . . . . . . . . .  D ADDR  0024H  
OUTPORTBOLD. . . . . . . . . . .  D ADDR  0034H  NOT USED  
OUTPORTC . . . . . . . . . . . .  D ADDR  0025H  
P0 . . . . . . . . . . . . . . .  D ADDR  0080H  PREDEFINED  
P2 . . . . . . . . . . . . . . .  D ADDR  00A0H  PREDEFINED  
PCON . . . . . . . . . . . . . .  D ADDR  0087H  PREDEFINED  
PI1. . . . . . . . . . . . . . .  B ADDR  0010H  NOT USED  
PI2D . . . . . . . . . . . . . .  B ADDR  0011H  
PI2U . . . . . . . . . . . . . .  B ADDR  0012H  
PI3D . . . . . . . . . . . . . .  B ADDR  0013H  
PI3U . . . . . . . . . . . . . .  B ADDR  0014H  
PI4. . . . . . . . . . . . . . .  B ADDR  0015H  NOT USED  
PKI1 . . . . . . . . . . . . . .  B ADDR  0041H  
PKI2 . . . . . . . . . . . . . .  B ADDR  0042H  
PKI3 . . . . . . . . . . . . . .  B ADDR  0043H  
PKI4 . . . . . . . . . . . . . .  B ADDR  0044H  
PKO1 . . . . . . . . . . . . . .  B ADDR  0019H  
PKO2 . . . . . . . . . . . . . .  B ADDR  001AH  
PKO3 . . . . . . . . . . . . . .  B ADDR  001BH  
PKO4 . . . . . . . . . . . . . .  B ADDR  001CH  
PO1. . . . . . . . . . . . . . .  B ADDR  0028H  NOT USED  
PO1D . . . . . . . . . . . . . .  B ADDR  0028H  
PO1U . . . . . . . . . . . . . .  B ADDR  0028H  
PO2D . . . . . . . . . . . . . .  B ADDR  0029H  
PO2U . . . . . . . . . . . . . .  B ADDR  002AH  
PO3D . . . . . . . . . . . . . .  B ADDR  002BH  
PO3U . . . . . . . . . . . . . .  B ADDR  002CH  
PO4. . . . . . . . . . . . . . .  B ADDR  002DH  NOT USED  
PO4D . . . . . . . . . . . . . .  B ADDR  002DH  
PO4U . . . . . . . . . . . . . .  B ADDR  002DH  
PORUCHA. . . . . . . . . . . . .  D ADDR  0047H  
POSCHODIE. . . . . . . . . . . .  D ADDR  0046H  
POSITION . . . . . . . . . . . .  D ADDR  0030H  NOT USED  
PRINTCHAR. . . . . . . . . . . .  C ADDR  1283H  
PROCESS. . . . . . . . . . . . .  C ADDR  130BH  
PSW. . . . . . . . . . . . . . .  D ADDR  00D0H  PREDEFINED  
RCAP2H . . . . . . . . . . . . .  D ADDR  00CBH  
RCAP2L . . . . . . . . . . . . .  D ADDR  00CAH  
RCV_CONT . . . . . . . . . . . .  C ADDR  12EDH  
RCV_LOOP . . . . . . . . . . . .  C ADDR  12CFH  
RCV_MESSAGE. . . . . . . . . . .  C ADDR  12C0H  
RCV_MESSAGE1 . . . . . . . . . .  C ADDR  12C8H  
RCV_MESSAGE_END. . . . . . . . .  C ADDR  131BH  
RDNOT. . . . . . . . . . . . . .  B ADDR  00B7H  
READPORTS. . . . . . . . . . . .  C ADDR  1194H  
READPORTS1 . . . . . . . . . . .  C ADDR  1150H  
READPORTS_C. . . . . . . . . . .  C ADDR  11E4H  
READPORTS_C1 . . . . . . . . . .  C ADDR  11DEH  
RESET. . . . . . . . . . . . . .  C ADDR  0033H  NOT USED  
RI . . . . . . . . . . . . . . .  B ADDR  0098H  PREDEFINED  
S2LOOP . . . . . . . . . . . . .  C ADDR  1330H  
SBUF . . . . . . . . . . . . . .  D ADDR  0099H  PREDEFINED  
SCON . . . . . . . . . . . . . .  D ADDR  0098H  PREDEFINED  
SERIAL_INT . . . . . . . . . . .  C ADDR  128BH  
SERIAL_INT_END . . . . . . . . .  C ADDR  12B9H  
SERIAL_INT_EOF . . . . . . . . .  C ADDR  129BH  NOT USED  
DEBUG                                                                                                         PAGE 96

SERIAL_INT_RCV . . . . . . . . .  C ADDR  12A3H  
SERIAL_INT_TI. . . . . . . . . .  C ADDR  12B2H  
SKRD . . . . . . . . . . . . . .  B ADDR  000CH  
SKRDOLD. . . . . . . . . . . . .  B ADDR  0034H  NOT USED  
SKRH . . . . . . . . . . . . . .  B ADDR  000BH  
SKRHOLD. . . . . . . . . . . . .  B ADDR  0033H  NOT USED  
SLOOP. . . . . . . . . . . . . .  C ADDR  1311H  
SLOW . . . . . . . . . . . . . .  B ADDR  0023H  
SLOWOLD. . . . . . . . . . . . .  B ADDR  003DH  NOT USED  
SND. . . . . . . . . . . . . . .  C ADDR  1373H  
SND_CONT . . . . . . . . . . . .  C ADDR  1370H  
SND_DATA_LOOP. . . . . . . . . .  C ADDR  1346H  
SND_LOOP . . . . . . . . . . . .  C ADDR  1380H  
SND_MESSAGE. . . . . . . . . . .  C ADDR  1324H  
SND_MESSAGE_END. . . . . . . . .  C ADDR  139FH  
SP . . . . . . . . . . . . . . .  D ADDR  0081H  PREDEFINED  
STACK. . . . . . . . . . . . . .  D ADDR  0050H  
START. . . . . . . . . . . . . .  C ADDR  0033H  
STOP . . . . . . . . . . . . . .  C ADDR  1112H  
STOPC. . . . . . . . . . . . . .  C ADDR  1130H  
STOPNOT. . . . . . . . . . . . .  B ADDR  0040H  
STOPPED. . . . . . . . . . . . .  B ADDR  0038H  
STOPTIMER. . . . . . . . . . . .  D ADDR  0033H  
STR_CALIB. . . . . . . . . . . .  C ADDR  15E3H  NOT USED  
STR_CFC_START. . . . . . . . . .  C ADDR  1722H  
STR_ERR_1SPOM_C. . . . . . . . .  C ADDR  1604H  NOT USED  
STR_ERR_2SPOM_C. . . . . . . . .  C ADDR  162AH  NOT USED  
STR_ERR_CFC. . . . . . . . . . .  C ADDR  1733H  
STR_ERR_FLOOR. . . . . . . . . .  C ADDR  16F0H  
STR_ERR_SKRD . . . . . . . . . .  C ADDR  16B5H  
STR_ERR_SKRH . . . . . . . . . .  C ADDR  167AH  
STR_ERR_ZAST_C . . . . . . . . .  C ADDR  1654H  NOT USED  
STR_INIT . . . . . . . . . . . .  C ADDR  1551H  
STR_RESET. . . . . . . . . . . .  C ADDR  158BH  NOT USED  
STR_STOP . . . . . . . . . . . .  C ADDR  15A2H  NOT USED  
STR_WDT. . . . . . . . . . . . .  C ADDR  1578H  NOT USED  
S_RI . . . . . . . . . . . . . .  B ADDR  0061H  
T0_C . . . . . . . . . . . . . .  D ADDR  002EH  
T0_F . . . . . . . . . . . . . .  B ADDR  0060H  NOT USED  
T2 . . . . . . . . . . . . . . .  D ADDR  002FH  
T2CON. . . . . . . . . . . . . .  D ADDR  00C8H  
T2MOD. . . . . . . . . . . . . .  D ADDR  00C9H  NOT USED  
T2_C . . . . . . . . . . . . . .  D ADDR  002DH  
T2_F . . . . . . . . . . . . . .  B ADDR  007AH  
TF2. . . . . . . . . . . . . . .  B ADDR  00CFH  
TH0. . . . . . . . . . . . . . .  D ADDR  008CH  PREDEFINED  
TH1. . . . . . . . . . . . . . .  D ADDR  008DH  PREDEFINED  
TI . . . . . . . . . . . . . . .  B ADDR  0099H  PREDEFINED  
TIME . . . . . . . . . . . . . .  C ADDR  1105H  
TIME10MS . . . . . . . . . . . .  C ADDR  10F8H  
TIMEEND. . . . . . . . . . . . .  C ADDR  110BH  
TIMER0CONST. . . . . . . . . . .    NUMB  0014H  
TIMERCONST . . . . . . . . . . .    NUMB  00FAH  NOT USED  
TL0. . . . . . . . . . . . . . .  D ADDR  008AH  PREDEFINED  
TL1. . . . . . . . . . . . . . .  D ADDR  008BH  PREDEFINED  
TMOD . . . . . . . . . . . . . .  D ADDR  0089H  PREDEFINED  
TR0. . . . . . . . . . . . . . .  B ADDR  008CH  PREDEFINED  
TR1. . . . . . . . . . . . . . .  B ADDR  008EH  PREDEFINED  
DEBUG                                                                                                         PAGE 97

TR2. . . . . . . . . . . . . . .  B ADDR  00CAH  
TRE. . . . . . . . . . . . . . .  B ADDR  0063H  
T_F. . . . . . . . . . . . . . .  D ADDR  002CH  
U1_MB2C. . . . . . . . . . . . .  C ADDR  035EH  
U2_MB2C. . . . . . . . . . . . .  C ADDR  06CAH  
U3_MB1C. . . . . . . . . . . . .  C ADDR  0B6CH  
UP . . . . . . . . . . . . . . .  B ADDR  0020H  
UP1. . . . . . . . . . . . . . .  C ADDR  0209H  
UP1A . . . . . . . . . . . . . .  C ADDR  0237H  
UP1_MB1. . . . . . . . . . . . .  C ADDR  0368H  
UP1_MB1_C. . . . . . . . . . . .  C ADDR  038EH  
UP1_MB2. . . . . . . . . . . . .  C ADDR  027DH  
UP1_MB2A . . . . . . . . . . . .  C ADDR  02A3H  
UP1_MB2_CFC. . . . . . . . . . .  C ADDR  02E6H  NOT USED  
UP1_STOP . . . . . . . . . . . .  C ADDR  03C0H  
UP1_STOP_C . . . . . . . . . . .  C ADDR  03DAH  
UP2. . . . . . . . . . . . . . .  C ADDR  056DH  
UP2A . . . . . . . . . . . . . .  C ADDR  059FH  
UP2_MB1. . . . . . . . . . . . .  C ADDR  06D4H  
UP2_MB1_C. . . . . . . . . . . .  C ADDR  06FAH  
UP2_MB2. . . . . . . . . . . . .  C ADDR  05E5H  
UP2_MB2A . . . . . . . . . . . .  C ADDR  060FH  
UP2_MB2_CFC. . . . . . . . . . .  C ADDR  0652H  NOT USED  
UP2_STOP . . . . . . . . . . . .  C ADDR  072CH  
UP2_STOP_C . . . . . . . . . . .  C ADDR  0746H  
UP3. . . . . . . . . . . . . . .  C ADDR  0A24H  
UP3A . . . . . . . . . . . . . .  C ADDR  0A56H  
UP3ERR . . . . . . . . . . . . .  C ADDR  0A85H  
UP3ERR_CONTINUE. . . . . . . . .  C ADDR  0A95H  
UP3_MB1. . . . . . . . . . . . .  C ADDR  0B39H  
UP3_MB1_C. . . . . . . . . . . .  C ADDR  0B5FH  
UP3_MB2. . . . . . . . . . . . .  C ADDR  0AAFH  
UP3_MB2A . . . . . . . . . . . .  C ADDR  0AD9H  
UP3_MB2ERR . . . . . . . . . . .  C ADDR  0B08H  
UP3_MB2ERR_CONTINUE. . . . . . .  C ADDR  0B18H  
UPOLD. . . . . . . . . . . . . .  B ADDR  003AH  
WDTRST . . . . . . . . . . . . .  D ADDR  00A6H  NOT USED  
WRITEPORTS . . . . . . . . . . .  C ADDR  11FBH  
WRNOT. . . . . . . . . . . . . .  B ADDR  00B6H  
_1 . . . . . . . . . . . . . . .  C ADDR  1283H  
_2 . . . . . . . . . . . . . . .  C ADDR  1288H  
